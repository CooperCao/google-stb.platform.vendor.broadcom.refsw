#!/usr/bin/env perl
#  Copyright (C) 2013-2016 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
#
#  This program is the proprietary software of Broadcom and/or its licensors,
#  and may only be used, duplicated, modified or distributed pursuant to the terms and
#  conditions of a separate, written license agreement executed between you and Broadcom
#  (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
#  no license (express or implied), right to use, or waiver of any kind with respect to the
#  Software, and Broadcom expressly reserves all rights in and to the Software and all
#  intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
#  HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
#  NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
#  Except as expressly set forth in the Authorized License,
#
#  1.     This program, including its structure, sequence and organization, constitutes the valuable trade
#  secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
#  and to use this information only in connection with your use of Broadcom integrated circuit products.
#
#  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
#  AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
#  WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
#  THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
#  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
#  LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
#  OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
#  USE OR PERFORMANCE OF THE SOFTWARE.
#
#  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
#  LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
#  EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
#  USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
#  ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
#  LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
#  ANY LIMITED REMEDY.
#
#############################################################################
use strict;
use warnings;

sub usage {
    print "Usage\n";
    print "$0 <src_global_map> <src_chip_table> <dest_chip_map> [IO]\n";
    print "\nWhere:\n";
    print "\t<src_global map> - path to bchp_memc_clients_chip_map_all.h \n";
    print "\t<src_chip_table> - path to chip-specific bchp_memc_clients_chip.h \n";
    print "\t<dest_chip_map> - name of _existing_ file to be populated with a client map, only the file header would get preserved\n";
    exit(1);
}

usage () if(scalar @ARGV<3);
my $global_map_file = $ARGV[0];
my $chip_table_file = $ARGV[1];
my $chip_map_file = $ARGV[2];
my $mode = exists $ARGV[3] ? $ARGV[3] : 'MEMC';
print "Processing '$global_map_file'  and '$chip_table_file' into  '$chip_map_file' \n";
my $fin;

if( not open($fin, '<', $global_map_file)) {
    print "Can't open $global_map_file for read\n"; usage ();
}
my %map;
while(<$fin>) {
    if(/^\s*BCHP_P_${mode}_DEFINE_CLIENT_MAP\(\s*(\w+)\s*,\s*([^)]+)\)/) {
        if(exists($map{$1})) {
            my $old = $map{$1};
            die "duplicate mapping $1->$2 ,$1->$old already exist";
        }
        $map{$1} = $2;
    }
}
close($fin);

if( not open($fin, '<', $chip_map_file)) {
    print "Can't open $chip_map_file for read\n"; usage ();
}

my @header;
my $autogenerated;
while(<$fin>) {
    push @header,$_;
    if(/THIS FILE IS AUTOGENERATED/) {
        $autogenerated=1;
        last;
    }
}
die "$chip_map_file is not autogenerated" unless defined $autogenerated;
close $fin;

if( not open($fin, '<', $chip_table_file)) {
    print "Can't open $chip_table_file\n"; usage ();
}

my $fout;
if( not open($fout, '>', $chip_map_file)) {
    print "Can't open $chip_map_file for write\n"; usage ();
}

print $fout @header;
print $fout "/*****\n";
print $fout "GENERATED by:\n";
print $fout "perl $0 " . join(' ',@ARGV) . "\n";
print $fout "*******/\n";
print $fout "\n\n";

print $fout "#if defined(BCHP_P_${mode}_DEFINE_CLIENT_MAP)\n";
my @clients;
while(<$fin>) {
    if(/^\s*BCHP_P_${mode}_DEFINE_CLIENT\(\s*([^ ,]+)(.*)$/) {
        if(exists $map{$1}) {
            push @clients, $1;
            print $fout "BCHP_P_${mode}_DEFINE_CLIENT_MAP($1,$map{$1})\n";
        } else {
            my $hw = $1;
            my $rest  = $2;
            my $block = $hw;
            if($hw =~ /^([^_]+)/) {
                $block=$1;
            }
            $rest =~ s/\*\// * \//g;
            $rest =~ s/\/\*/ \/ */g;
            my $svp = ",NOT_MAP";
            $svp = '' if $mode eq 'IO';
            print $fout "#error \"not mapped $hw\" /* BCHP_P_${mode}_DEFINE_CLIENT_MAP($hw,$block${svp}) */ /* $rest */\n";
        }
    }
}
print $fout "\n";
print $fout "#else /* #if defined(BCHP_P_${mode}_DEFINE_CLIENT_MAP) */\n";
print $fout "\n";
for(@clients) {
    print $fout "#define BCHP_P_${mode}_CLIENT_EXISTS_$_ 1\n";
}
print $fout "#endif /* #else #if defined(BCHP_P_${mode}_DEFINE_CLIENT_MAP) */\n";

close($fout);
print "Done\n";


