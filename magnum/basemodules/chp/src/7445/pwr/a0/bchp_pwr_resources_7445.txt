#
# 7425 power resources
#

# SHVD0 (AVD0), HVD0 (AVD1) and HVD1 (AVD2)
AVD -> {AVD0, AVD1, AVD2}
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> {HW_SHVD0_CORE_CLK, HW_SHVD0_CPU_CLK, HW_SHVD0_SCB_GISB_54_CLK}
AVD0_PWR -> HW_SHVD0_SRAM      # SHVD0 SRAM
AVD1 -> {AVD1_CLK, AVD1_PWR}
AVD1_CLK -> {HW_HVD0_CORE_CLK, HW_HVD0_CPU_CLK, HW_HVD0_54_CLK, HW_HVD0_SCB_GISB}
AVD1_PWR -> HW_HVD0_SRAM       # HVD0 SRAM
AVD2 -> {AVD2_CLK, AVD2_PWR}
AVD2_CLK -> {HW_HVD1_CORE_CLK, HW_HVD1_CPU_CLK, HW_HVD1_SCB_GISB_54_CLK}
AVD2_PWR -> HW_HVD1_SRAM       # HVD0 SRAM

# VICE
VICE -> {VICE0, VICE1}
VICE0 -> {VICE0_CLK, VICE0_PWR}
VICE0_CLK -> {HW_VICE0_CLK, HW_VICE0_GISB_CLK}
VICE0_PWR -> HW_VICE0_SRAM
VICE1 -> {VICE1_CLK, VICE1_PWR}
VICE1_CLK -> {HW_VICE1_CLK, HW_VICE1_GISB_CLK}
VICE1_PWR -> HW_VICE1_SRAM

# Audio
AUD_AIO -> {RAAGA, RAAGA_SRAM, HW_AIO, HW_AIO_SRAM}
HW_AIO -> HW_VEC_108

# RAAGA
RAAGA  -> {RAAGA0, RAAGA1}
RAAGA0 -> {HW_RAAGA0, HW_RAAGA0_SRAM}
RAAGA1 -> {HW_RAAGA1, HW_RAAGA1_SRAM}
RAAGA_SRAM -> {HW_RAAGA0_SRAM, HW_RAAGA1_SRAM}                      


# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, VDC_656_OUT, VDC_STG}             # entire BVN and VEC blocks
VDC -> {HW_BVN_BVB_GISB, HW_HDMI_TX_108M, HW_HDMI_RX0_108M}      # Required for register writes
BVN -> {HW_BVN, HW_BVN_SRAM}                                     # entire BVN block.
VDC_DAC -> HW_VDC_DAC                                   # DAC clocks
VDC_VEC -> {HW_VEC, HW_VEC_SRAM}                        # VEC BVB, GISB, SCB clocks.
HW_VEC -> HW_VEC_108	                                # VEC 108 clock
VDC_656_OUT -> HW_VDC_656_OUT                           # 656 output clock
VDC_STG -> {HW_VICE0_GISB_CLK , HW_VICE1_GISB_CLK}                # Required only for video encoder

#
# Transport
#
XPT -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}             # entire XPT block

XPT_PARSER    -> {HW_XPT_108M, HW_XPT_XMEMIF}               # input parsers
XPT_PLAYBACK  -> {HW_XPT_108M, HW_XPT_XMEMIF}               # playback channels
XPT_RAVE      -> {HW_XPT_108M, HW_XPT_XMEMIF}               # RAVE contexts
XPT_PACKETSUB -> {HW_XPT_108M, HW_XPT_XMEMIF}               # packet substitution channels
XPT_REMUX     -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}   # remux

# 108M clock is actually GISB clock. But keep the naming convention for backward compatibility
XPT_108M   -> {HW_XPT_108M, HW_XPT_SRAM}                    
XPT_XMEMIF -> HW_XPT_XMEMIF
XPT_SRAM   -> HW_XPT_SRAM
XPT_WAKEUP -> HW_XPT_WAKEUP

# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_CEC}           # entire HDMI block
HDMI_TX_CLK      -> {HW_HDMI_TX_CLK, HW_HDMI_TX_SRAM}    # HDMI Clocks
HW_HDMI_TX_CLK   -> {HW_HDMI_TX_108M, HW_BVN_BVB_GISB}   # 108M clock for register R/W
HDMI_TX_CEC      -> {HW_HDMI_TX_CEC}                     

# HDMI RX
HDMI_RX -> HDMI_RX0                                                # HDMI Rx block
HDMI_RX0 -> {HDMI_RX0_FE, HDMI_RX0_108M, HDMI_RX0_CEC_HOTPLUG}     # 216M is really 108M, keeping the name for backward compatibility
HDMI_RX0_FE -> {HW_HDMI_RX0_FE, HW_HDMI_RX0_SRAM}
HDMI_RX0_CEC_HOTPLUG -> HW_HDMI_RX0_CEC_HOTPLUG
{HDMI_RX0_FE, HDMI_RX0_108M, HDMI_RX0_CEC_HOTPLUG} -> HW_HDMI_RX0_108M
HW_HDMI_RX0_108M -> HW_BVN_BVB_GISB


# Graphics 2D
M2MC -> {M2MC0, M2MC1}                      # Graphics2D
M2MC0 -> HW_M2MC0                   
M2MC1 -> HW_M2MC1
M2MC_SRAM ->{M2MC0_SRAM, M2MC1_SRAM}        # Graphics 2D SRAM
M2MC0_SRAM  -> HW_M2MC0_SRAM                
M2MC1_SRAM -> HW_M2MC1_SRAM

# Graphics 3D
GRAPHICS3D -> HW_V3D                         # Graphics3D
GRAPHICS3D_SRAM -> HW_V3D_SRAM               # Graphics 3D SRAM
#{HW_M2MC0, HW_M2MC1, HW_V3D} -> HW_GFX_108M  # Graphics 2D and V3D both depend on 108M and SCB clock

# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> {HW_XPT_108M, HW_XPT_XMEMIF}

# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}        # Smartcard
SMARTCARD0 -> HW_SCD0     
SMARTCARD1 -> HW_SCD1

#AVS -> HW_AVS

# Picture Decoder
SID    -> HW_SID
HW_SID -> HW_HVD0_SCB_GISB  # SID depends on HVD0_GISB
SID_SRAM -> HW_SID_SRAM

#
# Top Level PLLs and VCXOs
#

# AVD PLLs
{HW_HVD0_CORE_CLK, HW_HVD1_CORE_CLK} -> HW_PLL_HVD_CH0
{HW_HVD0_CPU_CLK, HW_HVD1_CPU_CLK}  -> HW_PLL_HVD_CH1
HW_SHVD0_CORE_CLK -> HW_PLL_HVD_CH2
HW_SHVD0_CPU_CLK  -> HW_PLL_HVD_CH3
{HW_PLL_HVD_CH0, HW_PLL_HVD_CH1, HW_PLL_HVD_CH2, HW_PLL_HVD_CH3} -> HW_PLL_HVD

# AUD PLL
HW_AIO  -> {HW_AUD_PLL0, HW_AUD_PLL1, HW_AUD_PLL2}

# VCXO PLL0
{HW_VEC, HW_AIO, HW_VDC_656_OUT} -> HW_PLL_VCXO_PLL0_CH0
{HW_AUD_PLL0, HW_AUD_PLL1, HW_AUD_PLL2} -> HW_PLL_VCXO_PLL0_CH2
{HW_PLL_VCXO_PLL0_CH0, HW_PLL_VCXO_PLL0_CH2} -> HW_PLL_VCXO_PLL0

# VCXO PLL1
{HW_VEC, HW_AIO, HW_VDC_656_OUT} -> HW_PLL_VCXO_PLL1_CH0
{HW_AUD_PLL0, HW_AUD_PLL1, HW_AUD_PLL2} -> HW_PLL_VCXO_PLL1_CH2
{HW_PLL_VCXO_PLL1_CH0, HW_PLL_VCXO_PLL1_CH2} -> HW_PLL_VCXO_PLL1

# VCXO PLL2
{HW_VEC, HW_AIO, HW_VDC_656_OUT} -> HW_PLL_VCXO_PLL2_CH0
{HW_AUD_PLL0, HW_AUD_PLL1, HW_AUD_PLL2} -> HW_PLL_VCXO_PLL2_CH2
{HW_PLL_VCXO_PLL2_CH0, HW_PLL_VCXO_PLL2_CH2} -> HW_PLL_VCXO_PLL2

# MOCA Pll Chx
HW_V3D -> HW_PLL_MOCA_CH3
{HW_M2MC0, HW_M2MC1} -> HW_PLL_MOCA_CH4

# SCD PLL
HW_SCD0 -> HW_PLL_SCD0_CH0
HW_PLL_SCD0_CH0 -> HW_PLL_SCD0
HW_SCD1 -> HW_PLL_SCD1_CH0
HW_PLL_SCD1_CH0 -> HW_PLL_SCD1

# RAAGA PLL
HW_RAAGA0 -> HW_PLL_RAAGA_PLL_CH0
HW_RAAGA1 -> HW_PLL_RAAGA_PLL_CH1
HW_VICE0_CLK -> HW_PLL_RAAGA_PLL_CH3
HW_VICE1_CLK -> HW_PLL_RAAGA_PLL_CH2
{HW_PLL_RAAGA_PLL_CH0, HW_PLL_RAAGA_PLL_CH1, HW_PLL_RAAGA_PLL_CH2, HW_PLL_RAAGA_PLL_CH3} -> HW_PLL_RAAGA



# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out.
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {AVD, RAAGA, AUD_AIO, VDC, XPT, HDMI_TX, HDMI_RX, M2MC, VICE, GRAPHICS3D}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, VICE, AUD_AIO, RAAGA, VDC, XPT, HDMI_TX, HDMI_RX, SMARTCARD, DMA} 
