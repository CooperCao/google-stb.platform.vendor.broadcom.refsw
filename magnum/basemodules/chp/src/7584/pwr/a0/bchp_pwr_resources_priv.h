/***************************************************************************
 * Copyright (C) 2017 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
 *
 * This program is the proprietary software of Broadcom and/or its licensors,
 * and may only be used, duplicated, modified or distributed pursuant to the terms and
 * conditions of a separate, written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
 * no license (express or implied), right to use, or waiver of any kind with respect to the
 * Software, and Broadcom expressly reserves all rights in and to the Software and all
 * intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
 * HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
 * NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
 *
 * Except as expressly set forth in the Authorized License,
 *
 * 1.     This program, including its structure, sequence and organization, constitutes the valuable trade
 * secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of Broadcom integrated circuit products.
 *
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
 * AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
 * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
 * THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
 * OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
 * LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
 * OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
 * USE OR PERFORMANCE OF THE SOFTWARE.
 *
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
 * LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
 * EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
 * USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
 * ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
 * LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
 * ANY LIMITED REMEDY.
 *
* Module Description:
*
***************************************************************************/
/***************************************************************
*
* This file is auto-generated by generate_chp_pwr.pl, based on
* bchp_pwr_resources.txt.
*
* This file contains a list of private power resource IDs that
* represent HW clocks, and function prototypes for controlling
* them.
*
***************************************************************/

#ifndef BCHP_PWR_RESOURCES_PRIV_H__
#define BCHP_PWR_RESOURCES_PRIV_H__

#include "bchp_pwr.h"

/* Private power resource IDs */
#define BCHP_PWR_HW_AVD0_CORE_CLK     0xff000001
#define BCHP_PWR_HW_AVD0_CPU_CLK      0xff000002
#define BCHP_PWR_HW_AVD0_SCB_CLK      0xff000003
#define BCHP_PWR_HW_AVD0_108_CLK      0xff000004
#define BCHP_PWR_HW_AVD0_PWR          0xff000005
#define BCHP_PWR_HW_AIO               0xff000006
#define BCHP_PWR_HW_RAAGA0_108_CLK    0xff000007
#define BCHP_PWR_HW_RAAGA0_DSP_CLK    0xff000008
#define BCHP_PWR_HW_AIO_SRAM          0xff000009
#define BCHP_PWR_HW_RAAGA0_SCB_CLK    0xff00000a
#define BCHP_PWR_HW_RAAGA0_SRAM       0xff00000b
#define BCHP_PWR_HW_BVN               0xff00000c
#define BCHP_PWR_HW_BVN_108M          0xff00000d
#define BCHP_PWR_HW_BVN_SRAM          0xff00000e
#define BCHP_PWR_HW_VDC_DAC           0xff00000f
#define BCHP_PWR_HW_VEC               0xff000010
#define BCHP_PWR_HW_VEC_SRAM          0xff000011
#define BCHP_PWR_HW_VDC_656_OUT       0xff000012
#define BCHP_PWR_HW_HDMI_TX_PHY       0xff000013
#define BCHP_PWR_HW_XPT_108M          0xff000014
#define BCHP_PWR_HW_XPT_XMEMIF        0xff000015
#define BCHP_PWR_HW_XPT_RMX           0xff000016
#define BCHP_PWR_HW_XPT_SRAM          0xff000017
#define BCHP_PWR_HW_XPT_WAKEUP        0xff000018
#define BCHP_PWR_HW_HDMI_TX_CLK       0xff000019
#define BCHP_PWR_HW_HDMI_TX_SRAM      0xff00001a
#define BCHP_PWR_HW_M2MC0             0xff00001b
#define BCHP_PWR_HW_GFX_108M          0xff00001c
#define BCHP_PWR_HW_M2MC0_SRAM        0xff00001d
#define BCHP_PWR_HW_V3D               0xff00001e
#define BCHP_PWR_HW_V3D_SRAM          0xff00001f
#define BCHP_PWR_HW_DMA               0xff000020
#define BCHP_PWR_HW_SCD0              0xff000021
#define BCHP_PWR_HW_SCD1              0xff000022
#define BCHP_PWR_HW_SID               0xff000023
#define BCHP_PWR_HW_RFM               0xff000024
#define BCHP_PWR_HW_RFM_SRAM          0xff000025
#define BCHP_PWR_HW_PLL_AVD_CH0       0xff000026
#define BCHP_PWR_HW_PLL_AVD_CH1       0xff000027
#define BCHP_PWR_HW_PLL_AVD_CH2       0xff000028
#define BCHP_PWR_HW_PLL_AVD_CH3       0xff000029
#define BCHP_PWR_HW_PLL_AVD_CH4       0xff00002a
#define BCHP_PWR_HW_PLL_AVD           0xff00002b
#define BCHP_PWR_HW_AUD_PLL0          0xff00002c
#define BCHP_PWR_HW_AUD_PLL1          0xff00002d
#define BCHP_PWR_HW_PLL_SCD_CH0       0xff00002e
#define BCHP_PWR_HW_PLL_SCD_CH1       0xff00002f
#define BCHP_PWR_HW_PLL_SCD           0xff000030
#define BCHP_PWR_HW_PLL_VCXO_CH0      0xff000031
#define BCHP_PWR_HW_PLL_VCXO_CH1      0xff000032
#define BCHP_PWR_HW_PLL_VCXO_CH2      0xff000033
#define BCHP_PWR_HW_PLL_VCXO          0xff000034
#define BCHP_PWR_DV_PLL_AVD_CH0       0xff000035
#define BCHP_PWR_DV_PLL_AVD_CH1       0xff000036
#define BCHP_PWR_DV_PLL_AVD_CH2       0xff000037
#define BCHP_PWR_DV_PLL_AVD_CH3       0xff000038
#define BCHP_PWR_DV_PLL_AVD_CH4       0xff000039

/* This is the link between the public and private interface */
void BCHP_PWR_P_HW_Control(BCHP_Handle handle, const BCHP_PWR_P_Resource *resource, bool activate);
void BCHP_PWR_P_HW_ControlId(BCHP_Handle handle, unsigned id, bool activate);
void BCHP_PWR_P_MUX_Control(BCHP_Handle handle, const BCHP_PWR_P_Resource *resource, unsigned *mux, bool set);
void BCHP_PWR_P_DIV_Control(BCHP_Handle handle, const BCHP_PWR_P_Resource *resource, unsigned *mult, unsigned *prediv, unsigned *postdiv, bool set);

#define BCHP_PWR_P_NUM_NONLEAFS     48
#define BCHP_PWR_P_NUM_NONLEAFSHW   24
#define BCHP_PWR_P_NUM_LEAFS        28
#define BCHP_PWR_P_NUM_MUXES        0
#define BCHP_PWR_P_NUM_DIVS         5
#define BCHP_PWR_P_NUM_ALLNODES     105
#define BCHP_PWR_NUM_P_PMAPSETTINGS 5

#endif
