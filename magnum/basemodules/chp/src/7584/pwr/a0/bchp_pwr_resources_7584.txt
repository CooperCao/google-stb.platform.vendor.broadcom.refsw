#
# 7584 power resources
#

# AVD
AVD -> AVD0
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> {HW_AVD0_CORE_CLK, HW_AVD0_CPU_CLK, HW_AVD0_SCB_CLK, HW_AVD0_108_CLK}
AVD0_PWR -> HW_AVD0_PWR     # AVD0 SRAM

# AIO
AUD_AIO -> {AIO_CLK, AIO_SRAM}
AIO_CLK -> {HW_AIO, HW_RAAGA0_108_CLK, HW_RAAGA0_DSP_CLK}
AIO_SRAM -> {HW_AIO_SRAM}

# RAAGA
RAAGA0_CLK  -> {HW_RAAGA0_SCB_CLK, HW_RAAGA0_108_CLK}
RAAGA0_DSP  -> HW_RAAGA0_DSP_CLK
RAAGA0_SRAM -> HW_RAAGA0_SRAM

# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, VDC_656_OUT}  # entire BVN and VEC blocks
BVN -> {HW_BVN, HW_BVN_108M, HW_BVN_SRAM}    # entire BVN block
VDC_DAC -> HW_VDC_DAC                        # DAC clocks
VDC_VEC -> {HW_VEC, HW_VEC_SRAM}             # VEC_AIO 108M, 216M and SCB clocks
VDC_656_OUT -> HW_VDC_656_OUT                # 656 output clock
VDC_HDMI_TX_PHY0 -> HW_HDMI_TX_PHY

# Transport
XPT -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX} # entire XPT block
XPT_PARSER    -> {HW_XPT_108M, HW_XPT_XMEMIF}  # input parsers
XPT_PLAYBACK  -> {HW_XPT_108M, HW_XPT_XMEMIF}  # playback channels
XPT_RAVE      -> {HW_XPT_108M, HW_XPT_XMEMIF}  # RAVE contexts
XPT_PACKETSUB -> {HW_XPT_108M, HW_XPT_XMEMIF}  # packet substitution channels
XPT_REMUX     -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}     # remux
XPT_108M   -> HW_XPT_108M
XPT_XMEMIF -> HW_XPT_XMEMIF
XPT_SRAM   -> HW_XPT_SRAM
XPT_WAKEUP -> HW_XPT_WAKEUP

# HDMI TX
HDMI_TX         -> {HDMI_TX_CLK, HDMI_TX_PHY}                       # entire HDMI block
HDMI_TX_CLK     -> {HW_HDMI_TX_CLK, HW_BVN_108M, HW_HDMI_TX_SRAM}   # HDMI Clocks
HDMI_TX_PHY     -> HW_HDMI_TX_PHY    			                    # HDMI PHY
HW_HDMI_TX_PHY  -> {HW_HDMI_TX_CLK, HW_BVN_108M}

# Graphics2D
M2MC -> M2MC0
M2MC0 -> {HW_M2MC0, HW_GFX_108M}
M2MC_SRAM -> M2MC0_SRAM
M2MC0_SRAM -> HW_M2MC0_SRAM

# Graphics 3D
GRAPHICS3D -> {HW_V3D, HW_GFX_108M}
GRAPHICS3D_SRAM -> HW_V3D_SRAM

# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> {HW_DMA, HW_XPT_108M, HW_XPT_XMEMIF}

# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}
SMARTCARD0 -> HW_SCD0
SMARTCARD1 -> HW_SCD1

# Picture Decoder
SID -> {HW_SID, HW_AVD0_SCB_CLK, HW_AVD0_108_CLK}
SID_SRAM -> HW_AVD0_PWR

# RFM
RFM -> {HW_RFM, HW_RFM_SRAM}


#
# PLLs and VCXOs
#

# AVD PLLs
HW_AVD0_CPU_CLK   -> HW_PLL_AVD_CH0
HW_AVD0_CORE_CLK  -> HW_PLL_AVD_CH1
HW_RAAGA0_DSP_CLK -> HW_PLL_AVD_CH2
HW_V3D            -> HW_PLL_AVD_CH3
HW_M2MC0          -> HW_PLL_AVD_CH4
HW_PLL_AVD_CH0    -> DV_PLL_AVD_CH0
HW_PLL_AVD_CH1    -> DV_PLL_AVD_CH1
HW_PLL_AVD_CH2    -> DV_PLL_AVD_CH2
HW_PLL_AVD_CH3    -> DV_PLL_AVD_CH3
HW_PLL_AVD_CH4    -> DV_PLL_AVD_CH4
{DV_PLL_AVD_CH0, DV_PLL_AVD_CH1, DV_PLL_AVD_CH2, DV_PLL_AVD_CH3, DV_PLL_AVD_CH4} -> HW_PLL_AVD

# AUD PLL
AUD_PLL0 -> HW_AUD_PLL0
AUD_PLL1 -> HW_AUD_PLL1

# SCD PLL
HW_SCD0 -> HW_PLL_SCD_CH0
HW_SCD1 -> HW_PLL_SCD_CH1
{HW_PLL_SCD_CH0, HW_PLL_SCD_CH1} -> HW_PLL_SCD

{HW_VDC_656_OUT} -> HW_PLL_VCXO_CH0
{HW_VEC, HW_AIO} -> HW_PLL_VCXO_CH1
{HW_AUD_PLL0, HW_AUD_PLL1, HW_PLL_SCD} -> HW_PLL_VCXO_CH2
{HW_PLL_VCXO_CH0, HW_PLL_VCXO_CH1, HW_PLL_VCXO_CH2} -> HW_PLL_VCXO


# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out.
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {AVD, RAAGA0_CLK, RAAGA0_DSP, AUD_AIO, VDC, XPT, HDMI_TX, M2MC, GRAPHICS3D, SID, RFM}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, AUD_AIO, RAAGA0_CLK, RAAGA0_DSP, RAAGA0_SRAM}
MAGNUM_CONTROLLED -> {VDC, XPT, HDMI_TX, M2MC, M2MC_SRAM, GRAPHICS3D, GRAPHICS3D_SRAM}
MAGNUM_CONTROLLED -> {SMARTCARD, RFM, SID, DMA, AUD_PLL0, AUD_PLL1}

SECURE_ACCESS -> {HW_AVD0_CORE_CLK, HW_AVD0_CPU_CLK, HW_AVD0_108_CLK}
SECURE_ACCESS -> {HW_RAAGA0_108_CLK, HW_RAAGA0_DSP_CLK}
SECURE_ACCESS -> {HW_XPT_108M, HW_DMA}
