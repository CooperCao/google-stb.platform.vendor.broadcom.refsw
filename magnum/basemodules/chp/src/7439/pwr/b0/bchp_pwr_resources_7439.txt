#
# 7439 power resources
#

# HVD0 (AVD0)
AVD -> {AVD0, AVD1}
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> {HW_HVD0, HW_HVD0_HVD0_CORE, HW_HVD0_HVD0_CPU, HW_HVD0_HVD0_GISB}
AVD0_PWR -> HW_HVD0_SRAM
AVD1 -> {AVD1_CLK, AVD1_PWR}
AVD1_CLK -> {HW_HVD1, HW_HVD1_SID, HW_HVD_SID1_HVD1_CORE, HW_HVD_SID1_HVD1_CPU, HW_HVD_SID1_HVD1_GISB}
AVD1_PWR -> HW_HVD1_SRAM


# VICE
VICE -> VICE0
VICE0 -> {VICE0_CLK, VICE0_PWR}
VICE0_CLK -> {HW_VICE0_CORE_CLK, HW_VICE0_GISB_CLK, HW_VICE0_CLK}
VICE0_PWR -> HW_VICE0_SRAM


# AIO
AUD_AIO -> {AIO_CLK, AIO_SRAM}
AIO_CLK -> {HW_AIO, HW_VEC_AIO, HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_DSP}
AIO_SRAM -> HW_AIO_SRAM

# Audio Dac
AUD_DAC -> HW_AUD_DAC
HW_AUD_DAC -> {HW_AIO, HW_VEC_AIO}

# RAAGA
RAAGA  -> {RAAGA0_CLK, RAAGA0_DSP, RAAGA0_SRAM}
RAAGA0_CLK -> {HW_RAAGA0_CLK, HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK}
RAAGA0_DSP -> HW_RAAGA0_DSP
RAAGA0_SRAM -> HW_RAAGA0_SRAM


# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, VDC_656_OUT}
BVN -> {HW_BVN, HW_BVN_DVPHR_DVPHT_VEC, HW_BVN_SRAM}                                  # BVN clocks
VDC_DAC -> HW_VDAC                                                                    # DAC clocks
VDC_VEC -> {HW_BVN_DVPHR_DVPHT_VEC, HW_VEC, HW_VEC_AIO, HW_VEC_ITU656, HW_VEC_SRAM}   # VEC clocks
VDC_656_OUT -> {MX_656_MUX_SELECT, HW_ITU656, HW_VEC_ITU656}                                             # 656 output clock

# Other clocks required by VDC for video encoder
VDC_STG0 -> VICE0_CLK
VDC_STG1 -> VICE0_CLK
VDC_HDMI_TX_PHY0 -> HW_HDMI_TX0_PHY
VDC_HDMI_RX_CLK0 -> HW_DVPHR


# Transport
XPT -> {XPT_PARSER, XPT_PLAYBACK, XPT_RAVE, XPT_PACKETSUB, XPT_REMUX, XPT_WAKEUP}
XPT_PARSER    -> XPT_XMEMIF                 # input parsers
XPT_PLAYBACK  -> XPT_XMEMIF                 # playback channels
XPT_RAVE      -> XPT_XMEMIF                 # RAVE contexts
XPT_PACKETSUB -> XPT_XMEMIF                 # packet substitution channels
XPT_REMUX     -> {XPT_XMEMIF, HW_XPT_RMX}   # remux
XPT_XMEMIF    -> {HW_XPT, HW_XPT_CORE_GISB}
XPT_WAKEUP    -> HW_XPT_WAKEUP


# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_PHY}
HDMI_TX_CLK      -> {HW_BVN_DVPHR_DVPHT_VEC, HW_DVPHT}   # HDMI Clocks
HDMI_TX_PHY      -> HW_HDMI_TX0_PHY    			         # HDMI PHY
HW_HDMI_TX0_PHY   -> {HW_BVN_DVPHR_DVPHT_VEC, HW_DVPHT}


# HDMI RX
HDMI_RX          -> HDMI_RX0
HDMI_RX0         -> {HDMI_RX0_CLK, HDMI_RX0_PHY}
HDMI_RX0_CLK     -> {HW_BVN_DVPHR_DVPHT_VEC, HW_DVPHR, HW_DVPHR_RBUS}
HDMI_RX0_PHY     -> {HW_HDMI_RX0_PHY, HW_HDMI_RX0_SRAM}
HW_HDMI_RX0_PHY  -> {HW_BVN_DVPHR_DVPHT_VEC, HW_DVPHR, HW_DVPHR_RBUS}


# Graphics 2D
M2MC -> {M2MC0, M2MC1}
M2MC0 -> {HW_M2MC0, HW_VEC_AIO_GFX_M2MC0_GFX_M2MC0_M2MC0}
M2MC1 -> {HW_M2MC1, HW_VEC_AIO_GFX_M2MC1_GFX_M2MC1_M2MC1}
M2MC_SRAM -> {M2MC0_SRAM, M2MC1_SRAM}
M2MC0_SRAM -> HW_M2MC0_SRAM
M2MC1_SRAM -> HW_M2MC1_SRAM


# Graphics 3D
GRAPHICS3D -> {HW_V3D, HW_V3D_V3D}           # Graphics 3D Clocks
GRAPHICS3D_SRAM -> HW_V3D_SRAM               # Graphics 3D SRAM


# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> XPT_XMEMIF


# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}        # Smartcard
SMARTCARD0 -> HW_SC0
SMARTCARD1 -> HW_SC1


# Picture Decoder
SID      -> {HW_HVD1_SID, HW_SID, HW_SID_GISB}
SID_SRAM -> HW_SID_SRAM


# RFM
RFM -> HW_RFM
RFM_PHY -> HW_RFM_PHY
HW_RFM_PHY -> HW_RFM

#
# Top Level PLLs and VCXOs
#

# AVD PLLs
{HW_HVD0_HVD0_CORE, HW_HVD_SID1_HVD1_CORE} -> HW_PLL_HVD_CH0
{HW_HVD0_HVD0_CPU, HW_HVD_SID1_HVD1_CPU}   -> HW_PLL_HVD_CH1
{HW_VEC_AIO_GFX_M2MC0_GFX_M2MC0_M2MC0, HW_VEC_AIO_GFX_M2MC1_GFX_M2MC1_M2MC1} -> HW_PLL_HVD_CH2
HW_V3D_V3D -> HW_PLL_HVD_CH5
HW_PLL_HVD_CH0   -> DV_PLL_HVD_CH0
HW_PLL_HVD_CH1   -> DV_PLL_HVD_CH1
HW_PLL_HVD_CH2   -> DV_PLL_HVD_CH2
HW_PLL_HVD_CH5   -> DV_PLL_HVD_CH5

# AUD PLL
AUD_PLL0 -> HW_AUD_PLL0
AUD_PLL1 -> HW_AUD_PLL1
AUD_PLL2 -> HW_AUD_PLL2
HW_AUD_PLL0 -> {HW_AIO, HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_DSP}
HW_AUD_PLL1 -> {HW_AIO, HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_DSP}
HW_AUD_PLL2 -> {HW_AIO, HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_DSP}

# VCXO PLL
MX_656_MUX_SELECT -> {HW_PLL_VCXO_PLL0_CH0, HW_PLL_VCXO_PLL1_CH0}
HW_AUD_PLL0 -> {HW_PLL_VCXO_PLL0_CH1, HW_PLL_VCXO_PLL0_CH2, HW_PLL_VCXO_PLL1_CH1, HW_PLL_VCXO_PLL1_CH2}
HW_AUD_PLL1 -> {HW_PLL_VCXO_PLL0_CH1, HW_PLL_VCXO_PLL0_CH2, HW_PLL_VCXO_PLL1_CH1, HW_PLL_VCXO_PLL1_CH2}
HW_AUD_PLL2 -> {HW_PLL_VCXO_PLL0_CH1, HW_PLL_VCXO_PLL0_CH2, HW_PLL_VCXO_PLL1_CH1, HW_PLL_VCXO_PLL1_CH2}
{HW_PLL_VCXO_PLL0_CH0, HW_PLL_VCXO_PLL0_CH1, HW_PLL_VCXO_PLL0_CH2} -> HW_PLL_VCXO_PLL0
{HW_PLL_VCXO_PLL1_CH0, HW_PLL_VCXO_PLL1_CH1, HW_PLL_VCXO_PLL1_CH2} -> HW_PLL_VCXO_PLL1


# SCD PLL
HW_SC0 -> HW_PLL_SC0_CH0
HW_PLL_SC0_CH0 -> HW_PLL_SC0
HW_SC1 -> HW_PLL_SC1_CH0
HW_PLL_SC1_CH0 -> HW_PLL_SC1

# SYS PLL
HW_VICE0_CORE_CLK  -> HW_PLL_SYS_PLL_CH3
HW_PLL_SYS_PLL_CH3 -> DV_PLL_SYS_PLL_CH3
HW_RAAGA0_DSP      -> HW_PLL_SYS_PLL_CH4
HW_PLL_SYS_PLL_CH4 -> DV_PLL_SYS_PLL_CH4


# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out.
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {AVD, VICE, AUD_AIO, RAAGA, VDC, XPT, HDMI_TX, HDMI_RX, M2MC, GRAPHICS3D, SMARTCARD, SID, RFM}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, VICE}
MAGNUM_CONTROLLED -> {AUD_PLL0, AUD_PLL1, AUD_AIO, AUD_DAC, RAAGA}
MAGNUM_CONTROLLED -> {VDC, VDC_STG0, VDC_STG1, VDC_HDMI_TX_PHY0, VDC_HDMI_RX_CLK0}
MAGNUM_CONTROLLED -> {XPT, HDMI_TX, HDMI_RX, M2MC, GRAPHICS3D, GRAPHICS3D_SRAM}
MAGNUM_CONTROLLED -> {SMARTCARD, DMA, SID, SID_SRAM, RFM, RFM_PHY}

SECURE_ACCESS -> {HW_HVD0_HVD0_GISB, HW_HVD_SID1_HVD1_GISB, HW_SID_GISB, HW_XPT_CORE_GISB}
SECURE_ACCESS -> {HW_VICE0_CORE_CLK, HW_VICE0_GISB_CLK, HW_DVPHR_RBUS}
SECURE_ACCESS -> {HW_RAAGA0_GISB_CLK, HW_RAAGA0_DSP}
