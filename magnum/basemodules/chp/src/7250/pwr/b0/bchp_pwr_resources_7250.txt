#
# 7250 power resources
#

# HVD0 (AVD0)
AVD -> AVD0
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> {HW_HVD0_CPU_CLK}
HW_HVD0_CPU_CLK -> {HW_HVD0_CORE_CLK, HW_HVD0_SCB_CLK, HW_HVD0_GISB_CLK, HW_HVD0_108_54_CLK}
AVD0_PWR -> HW_HVD0_SRAM      # HVD0 SRAM


# Audio
AUD_AIO    -> {HW_AIO_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_GISB_CLK, HW_VEC_AIO_54_CLK, HW_AIO_SRAM}
AUD_DAC    -> HW_AUD_DAC
HW_AUD_DAC -> {HW_AIO_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_GISB_CLK, HW_VEC_AIO_54_CLK}

# RAAGA
RAAGA       -> {RAAGA0_CLK, RAAGA0_DSP, RAAGA0_SRAM}
RAAGA0_CLK  -> {HW_RAAGA0_GISB_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_SCB_54_CLK}
RAAGA0_DSP  -> HW_RAAGA0_DSP_CLK
RAAGA0_SRAM -> HW_RAAGA0_SRAM


# Display
VDC              -> {BVN, BVN_SRAM, VDC_DAC, VDC_VEC, VDC_VEC_SRAM, VDC_656_OUT}
BVN              -> {HW_BVN_CLK, HW_BVN_BVB_GISB_CLK}
BVN_SRAM         -> {HW_BVN_SRAM}
VDC_DAC          -> HW_VDC_DAC
VDC_VEC          -> {HW_VEC_CLK, HW_BVN_BVB_GISB_CLK, HW_VEC_BVB_216_CLK, HW_VEC_AIO_54_CLK, HW_VIP_BVB}
VDC_VEC_SRAM     -> {HW_VEC_SRAM}
VDC_656_OUT      -> {HW_ITU_656_CLK, HW_VEC_BVB_216_CLK}
VDC_STG0         -> VIP
VDC_HDMI_TX_PHY0 -> HW_HDMI_TX0_PHY
VDC_HDMI_RX_CLK0 -> {HW_HDMI_RX0_CLK, HW_HDMI_RX0_BVB_216_CLK}


# Transport
XPT -> {XPT_PARSER, XPT_PLAYBACK, XPT_RAVE, XPT_PACKETSUB, XPT_REMUX, XPT_WAKEUP}
XPT_PARSER    -> XPT_XMEMIF                 # input parsers
XPT_PLAYBACK  -> XPT_XMEMIF                 # playback channels
XPT_RAVE      -> XPT_XMEMIF                 # RAVE contexts
XPT_PACKETSUB -> XPT_XMEMIF                 # packet substitution channels
XPT_REMUX     -> XPT_XMEMIF                 # remux
XPT_XMEMIF    -> {HW_XPT_CLK, HW_XPT_CORE_GISB_CLK}
XPT_WAKEUP    -> HW_XPT_WAKEUP_CLK

MTSIF_TX0 -> HW_MTSIF_TX0
MTSIF_TX1 -> HW_MTSIF_TX1


# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_PHY}                            # entire HDMI block
HDMI_TX_CLK      -> {HW_HDMI_TX_CLK, HW_HDMI_IIC_CLK, HW_BVN_BVB_GISB_CLK}    # HDMI Clocks
HDMI_TX_PHY      -> HW_HDMI_TX0_PHY 		            	                  # HDMI PHY
HW_HDMI_TX0_PHY   -> {HW_HDMI_TX_CLK, HW_BVN_BVB_GISB_CLK}


# HDMI RX
HDMI_RX          -> HDMI_RX0
HDMI_RX0         -> {HDMI_RX0_CLK, HDMI_RX0_PHY}
HDMI_RX0_CLK     -> {HW_HDMI_RX0_CLK, HW_HDMI_RX0_BVB_216_CLK, HW_BVN_BVB_GISB_CLK}
HDMI_RX0_PHY     -> {HW_HDMI_RX0_PHY, HW_HDMI_RX0_SRAM}
HW_HDMI_RX0_PHY  -> {HW_HDMI_RX0_CLK, HW_HDMI_RX0_BVB_216_CLK, HW_BVN_BVB_GISB_CLK}


# Graphics 2D
M2MC -> M2MC0
M2MC0 -> {HW_M2MC0, HW_VEC_AIO_54_CLK}
M2MC_SRAM -> M2MC0_SRAM
M2MC0_SRAM -> HW_M2MC0_SRAM


# Graphics 3D
GRAPHICS3D -> HW_V3D                         # Graphics3D
GRAPHICS3D_SRAM -> HW_V3D_SRAM               # Graphics 3D SRAM


# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> XPT_XMEMIF


# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}        # Smartcard
SMARTCARD0 -> HW_SCD0
SMARTCARD1 -> HW_SCD1


# Picture Decoder
SID -> {HW_SID_CORE_CLK, HW_HVD0_SCB_CLK, HW_HVD0_GISB_CLK}
SID_SRAM -> HW_SID_SRAM


# RFM
RFM -> HW_RFM


# Video Input Procesing
VIP -> {HW_VIP_BVB, HW_VIP_SCB, HW_VEC_AIO_54_CLK}

# Frontend
AFEC0 -> {HW_AFEC0_AFEC1, HW_FE}
AFEC1 -> {HW_AFEC0_AFEC1, HW_FE}

AIFMDAC -> {HW_AIFMDAC, HW_FE}

AIFSAT0 -> {HW_AIFSAT0, HW_FE}

CHAN -> {HW_CHAN, HW_FE}

DSEC0 -> {HW_FSK_DSEC0, HW_FSK_FSK_DIG, HW_FE}

FSK -> {HW_FSK_DSEC0, HW_FSK_FSK_DIG, HW_FE}

LEAP -> {HW_LEAP, HW_FE}

SDS0 -> {HW_FE, HW_SDS0}
SDS1 -> {HW_FE, HW_SDS1}

TFEC0 -> {HW_DUALSDS_SDS0TFEC0, HW_FE}
TFEC1 -> {HW_DUALSDS_SDS0TFEC1, HW_FE}


#
# Top Level PLLs
#

# AVX PLLs
HW_SID_CORE_CLK -> MX_SID_CORE_SELECT
HW_HVD0_CPU_CLK -> MX_HVD_SID0_CPU_SELECT
HW_HVD0_CORE_CLK -> MX_HVD_SID0_CORE_SELECT
HW_M2MC0 -> MX_M2MC0_SELECT
HW_V3D -> MX_V3D_SELECT

MX_SID_CORE_SELECT      -> {HW_PLL_AVX_CH0, HW_PLL_CPU_CH3}
MX_HVD_SID0_CPU_SELECT  -> {HW_PLL_AVX_CH1, HW_PLL_CPU_CH2}
MX_HVD_SID0_CORE_SELECT -> {HW_PLL_AVX_CH2, HW_PLL_CPU_CH3}
MX_M2MC0_SELECT         -> {HW_PLL_AVX_CH3, HW_PLL_CPU_CH4}
MX_V3D_SELECT           -> {HW_PLL_AVX_CH4, HW_PLL_CPU_CH5}
HW_PLL_AVX_CH0          -> DV_PLL_AVX_CH0
HW_PLL_AVX_CH1          -> DV_PLL_AVX_CH1
HW_PLL_AVX_CH2          -> DV_PLL_AVX_CH2
HW_PLL_AVX_CH3          -> DV_PLL_AVX_CH3
HW_PLL_AVX_CH4          -> DV_PLL_AVX_CH4
HW_PLL_CPU_CH2          -> DV_PLL_CPU_CH2
HW_PLL_CPU_CH3          -> DV_PLL_CPU_CH3
HW_PLL_CPU_CH4          -> DV_PLL_CPU_CH4
HW_PLL_CPU_CH5          -> DV_PLL_CPU_CH5
{DV_PLL_AVX_CH0, DV_PLL_AVX_CH1, DV_PLL_AVX_CH2, DV_PLL_AVX_CH3, DV_PLL_AVX_CH4} -> HW_PLL_AVX

# AUD PLL
AUD_PLL0 -> HW_AUD_PLL0
AUD_PLL1 -> HW_AUD_PLL1
HW_AUD_PLL0 -> {HW_AIO_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_GISB_CLK, HW_VEC_AIO_54_CLK}
HW_AUD_PLL1 -> {HW_AIO_CLK, HW_RAAGA0_108_CLK, HW_RAAGA0_GISB_CLK, HW_VEC_AIO_54_CLK}

# VCXO PLL0
{VDC_656_OUT} -> HW_PLL_VCXO_PLL0_CH0
{VDC_VEC, AUD_AIO} -> HW_PLL_VCXO_PLL0_CH1
{AUD_PLL0, AUD_PLL1} -> HW_PLL_VCXO_PLL0_CH2
{HW_PLL_VCXO_PLL0_CH0, HW_PLL_VCXO_PLL0_CH1, HW_PLL_VCXO_PLL0_CH2} -> HW_PLL_VCXO_PLL0

# VCXO PLL1
{VDC_656_OUT} -> HW_PLL_VCXO_PLL1_CH0
{VDC_VEC, AUD_AIO} -> HW_PLL_VCXO_PLL1_CH1
{AUD_PLL0, AUD_PLL1} -> HW_PLL_VCXO_PLL1_CH2
{HW_PLL_VCXO_PLL1_CH0, HW_PLL_VCXO_PLL1_CH1, HW_PLL_VCXO_PLL1_CH2} -> HW_PLL_VCXO_PLL1

# SCD PLL
HW_SCD0 -> HW_PLL_SCD0_CH0
HW_PLL_SCD0_CH0 -> HW_PLL_SCD0
HW_SCD1 -> HW_PLL_SCD1_CH0
HW_PLL_SCD1_CH0 -> HW_PLL_SCD1

# RAAGA PLL
HW_RAAGA0_DSP_CLK -> MX_RAAGA0_DSP_SELECT
MX_RAAGA0_DSP_SELECT  -> {HW_PLL_RAAGA_PLL_CH0, HW_PLL_CPU_CH1}
HW_PLL_RAAGA_PLL_CH0  -> DV_PLL_RAAGA_PLL_CH0
HW_PLL_CPU_CH1        -> DV_PLL_CPU_CH1
XPT_DEMOD             -> HW_PLL_RAAGA_PLL_CH1
HW_MTSIF_TX0          -> HW_PLL_RAAGA_PLL_CH2
HW_MTSIF_TX1          -> HW_PLL_RAAGA_PLL_CH3
{DV_PLL_RAAGA_PLL_CH0, HW_PLL_RAAGA_PLL_CH1, HW_PLL_RAAGA_PLL_CH2, HW_PLL_RAAGA_PLL_CH3} -> HW_PLL_RAAGA

{HW_DUALSDS_SDS0TFEC0, HW_DUALSDS_SDS0TFEC1} -> HW_PLL_NETWORK_CH1
HW_FSK_FSK_DIG -> HW_PLL_LC_CH4

# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
BINT_OPEN -> {AVD, RAAGA, AUD_AIO, VDC, XPT, HDMI_TX, HDMI_RX, M2MC, GRAPHICS3D, SID, RFM}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, AUD_PLL0, AUD_PLL1, AUD_AIO, AUD_DAC, RAAGA}
MAGNUM_CONTROLLED -> {VDC, VDC_STG0, VDC_HDMI_TX_PHY0, VDC_HDMI_RX_CLK0}
MAGNUM_CONTROLLED -> {XPT, XPT_DEMOD, HDMI_TX, HDMI_RX}
MAGNUM_CONTROLLED -> {M2MC, M2MC_SRAM, GRAPHICS3D, GRAPHICS3D_SRAM}
MAGNUM_CONTROLLED -> {DMA, SMARTCARD, SID, SID_SRAM, RFM, VIP}

SECURE_ACCESS -> {HW_HVD0_GISB_CLK, HW_XPT_CORE_GISB_CLK}
SECURE_ACCESS -> {HW_RAAGA0_GISB_CLK, HW_RAAGA0_DSP_CLK}
SECURE_ACCESS -> {HW_HDMI_RX0_BVB_216_CLK}
