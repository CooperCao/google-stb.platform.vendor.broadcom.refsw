#
# 7362 power resources
#

# AVD
AVD -> AVD0
AVD0 -> {AVD0_CLK, AVD0_PWR}
AVD0_CLK -> HW_AVD0_CLK
AVD0_PWR -> HW_AVD0_PWR     # AVD0 SRAM

# AIO
AUD_AIO -> {HW_VEC_AIO, HW_RAAGA0_CLK, HW_RAAGA0_DSP}    # VEC_AIO and RAAGA is required for register access.

# RAAGA
RAAGA -> {RAAGA0_CLK, RAAGA0_DSP, RAAGA0_SRAM}
RAAGA0_CLK  -> HW_RAAGA0_CLK
RAAGA0_DSP  -> HW_RAAGA0_DSP
RAAGA0_SRAM -> HW_RAAGA0_SRAM


# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, HW_HDMI_TX_CLK} # entire BVN and VEC blocks
BVN -> {HW_BVN, HW_BVN_108M, HW_BVN_SRAM}       # entire BVN block
VDC_DAC -> HW_VDC_DAC                           # DAC clocks
VDC_VEC -> {HW_VEC_AIO, HW_VEC_SRAM}            # VEC_AIO 108M, 216M and SCB clocks

#
# Transport
#
XPT -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX} # entire XPT block

XPT_PARSER    -> {HW_XPT_108M, HW_XPT_XMEMIF}  # input parsers
XPT_PLAYBACK  -> {HW_XPT_108M, HW_XPT_XMEMIF}  # playback channels
XPT_RAVE      -> {HW_XPT_108M, HW_XPT_XMEMIF}  # RAVE contexts
XPT_PACKETSUB -> {HW_XPT_108M, HW_XPT_XMEMIF}  # packet substitution channels
XPT_REMUX     -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX}     # remux

XPT_108M   -> {HW_XPT_108M, HW_XPT_SRAM}
XPT_XMEMIF -> HW_XPT_XMEMIF
XPT_SRAM -> HW_XPT_SRAM
XPT_WAKEUP -> HW_XPT_WAKEUP

# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_CEC}           # entire HDMI block
HDMI_TX_CLK      -> {HW_HDMI_TX_CLK, HW_HDMI_TX_SRAM}    # HDMI Clocks
HW_HDMI_TX_CLK   -> {HW_HDMI_TX_108M, HW_BVN_108M}       # 108M clock for register R/W

#HDMI_TX_TMDS     ->  HW_HDMI_TX_TMDS
HDMI_TX_CEC      -> {HW_HDMI_TX_CEC}                     # CEC and hotplug interrupts

# Graphics 2D
M2MC -> HW_M2MC                              # Graphics2D
M2MC_SRAM -> HW_GFX_SRAM  # Graphics SRAM
HW_M2MC -> HW_GFX_108M             # Graphics 2D depend on 108M and SCB clock

# Security, DMA
HSM -> DMA                                   # HSM depends on DMA and XPT
DMA -> {HW_DMA, HW_XPT_108M, HW_XPT_XMEMIF}

# SmartCard
SMARTCARD -> {SMARTCARD0, SMARTCARD1}
SMARTCARD0 -> HW_SCD0
SMARTCARD1 -> HW_SCD1

# Soft Modem
SOFTMODEM -> HW_MDM


#
# PLLs and VCXOs
#
HW_AVD0_CLK -> {HW_PLL_AVD_CH1, HW_PLL_AVD_CH2}
HW_RAAGA0_DSP -> HW_PLL_AVD_CH3

# AUD PLL
AUD_PLL0 -> HW_AUD_PLL0
AUD_PLL1 -> HW_AUD_PLL1

# VCXO PLL0
{HW_AUD_PLL0, HW_AUD_PLL1, HW_PLL_SCD} -> HW_PLL_VCXO_CH0
{HW_PLL_SCD_CH0, HW_PLL_SCD_CH1} -> HW_PLL_VCXO_CH1
{HW_PLL_VCXO_CH0, HW_PLL_VCXO_CH1} -> HW_PLL_VCXO

# SCD PLL
HW_SCD0 -> HW_PLL_SCD_CH0
HW_SCD1 -> HW_PLL_SCD_CH1
{HW_PLL_SCD_CH0, HW_PLL_SCD_CH1} -> HW_PLL_SCD


# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out.
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {AVD, AUD_AIO, RAAGA, VDC, XPT, HDMI_TX, M2MC}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, AUD_AIO, RAAGA, VDC, XPT, HDMI_TX, SMARTCARD}
