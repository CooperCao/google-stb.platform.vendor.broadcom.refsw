#
# 7420 power resources
#

# AVD
AVD -> {AVD0, AVD1}
AVD0 -> HW_AVD0
AVD1 -> HW_AVD1
HW_AVD1 -> HW_AVD_108

# Audio
RAP -> {RAP_OPEN, RAP_START}
RAP_OPEN -> HW_RAP_OPEN         # power needed for BRAP_Open, but before BRAP_StartChannel
RAP_START -> HW_RAP_START       # power needed for BRAP_StartChannel
HW_RAP_START -> HW_RAP_OPEN     # dependency for register R/W access

# Display
VDC -> {BVN, VDC_DAC, VDC_VEC, VDC_656_OUT}      # entire BVN and VEC blocks
BVN -> {HW_BVN_EDGE, HW_BVN_MIDDLE, HW_BVN_MCVP} # entire BVN block. 3 108M clocks and 3 216M clocks
VDC_DAC -> {HW_VDC_TDAC, HW_VDC_QDAC}            # TDAC 216M and QDAC 216M
VDC_VEC -> HW_VDC_VEC                            # VEC 108M and 216M
VDC_656_OUT -> HW_VDC_656_OUT                    # 656 output clock 
{HW_VDC_TDAC, HW_VDC_QDAC} -> HW_VDC_VEC_DAC     # VEC_DAC 216M

#
# Transport
#
XPT -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_XPT_RMX} # entire XPT block

XPT_PARSER    -> {HW_XPT_108M, HW_XPT_XMEMIF}  # input parsers
XPT_PLAYBACK  -> {HW_XPT_108M, HW_XPT_XMEMIF}  # playback channels
XPT_RAVE      -> {HW_XPT_108M, HW_XPT_XMEMIF}  # RAVE contexts
XPT_PACKETSUB -> {HW_XPT_108M, HW_XPT_XMEMIF}  # packet substitution channels
XPT_REMUX     -> {HW_XPT_108M, HW_XPT_RMX}     # remux

XPT_108M   -> HW_XPT_108M
XPT_XMEMIF -> HW_XPT_XMEMIF


# HDMI TX
HDMI_TX          -> {HDMI_TX_CLK, HDMI_TX_CEC}           # entire HDMI block
HDMI_TX_CLK      -> HW_HDMI_TX_CLK                       # HDMI Clocks
HW_HDMI_TX_CLK   -> {HW_HDMI_TX_108M, HW_BVN_EDGE}       # 108M clock for register R/W
HDMI_TX_CEC      -> HW_HDMI_TX_CEC                       # CEC and hotplug interrupts
HW_HDMI_TX_CEC   -> {HW_HDMI_TX_108M, HW_BVN_EDGE}       # 108M clock for register R/W


# Others
M2MC -> HW_M2MC        # Graphics2D
GRAPHICS3D -> HW_PX3D        # Graphics3D
{DMA, HSM} -> HW_DMA   # DMA and HSM both point to SECTOP_DMA
DIGITAL_FRONTEND -> HW_DIGITAL_FRONTEND     # internal digital demod
RFM -> HW_RFM
1394 -> HW_1394        # disabled for now 
SOFTMODEM -> HW_MDM    # disabled for now 
HSM -> {HW_XPT_108M, HW_XPT_XMEMIF, HW_AVD_108}

# I/O
TESTPORT -> HW_TSP
UHF_INPUT -> {HW_UHF_INPUT_ANALOG, HW_UHF_INPUT_CLK}
HW_UHF_INPUT_ANALOG -> HW_UHF_INPUT_CLK
SMARTCARD -> HW_SCD
TEMP_MONITOR -> HW_TMN


#
# PLLs and VCXOs
#
{HW_AVD0, HW_AVD1} -> HW_AVD_PLL_CH                    # VCXO_CTL_MISC_RAP_AVD_PLL_CHL_6
HW_RAP_OPEN        -> HW_RAP_PLL_CH                    # VCXO_CTL_MISC_RAP_AVD_PLL_CHL_1
{HW_AVD_PLL_CH, HW_RAP_PLL_CH} -> HW_AVD_RAP_PLL_CTRL  # VCXO_CTL_MISC_RAP_AVD_PLL_CTRL
HW_RAP_START       -> HW_ACX_PLL_CTRL                  # VCXO_CTL_MISC_AC0_CTRL, VCXO_CTL_MISC_AC1_CTRL and VCXO_CTL_MISC_AC2_CTRL

HW_VDC_656_OUT     -> HW_VCX_PLL_CH1                   # VCXO_CTL_MISC_VC0_PM_DIS_CHL_1 and VCXO_CTL_MISC_VC1_PM_DIS_CHL_1
HW_XPT_108M        -> HW_VCX_PLL_CH2                   # VCXO_CTL_MISC_VC0_PM_DIS_CHL_2 and VCXO_CTL_MISC_VC1_PM_DIS_CHL_2. TODO: unclear as to what exactly depends on this 
{HW_ACX_PLL_CTRL, HW_SCD} -> HW_VCX_PLL_CH3            # VCXO_CTL_MISC_VC0_PM_DIS_CHL_3 and VCXO_CTL_MISC_VC1_PM_DIS_CHL_3

{HW_VCX_PLL_CH1, HW_VCX_PLL_CH2, HW_VCX_PLL_CH3} -> HW_VCX_PLL_CTRL  # VCXO_CTL_MISC_VC0_CTRL and VCXO_CTL_MISC_VC1_CTRL

{HW_XPT_108M, HW_SCD} -> HW_SYS_PLL_0_CH3              # SYS_PLL_0_PLL_3


# BINT_Open requires access to L2 interrupt registers after BCHP_PWR_Open turns off the CLOCK_GEN clocks.
# BPWR_Open used to guarantee this initial power requirement, but BPWR is being phased-out. 
# The BINT_OPEN node will handle this instead, by being acquired and released around the BINT_Open call.

BINT_OPEN -> {RAP, VDC, XPT, HDMI_TX, M2MC, RFM, UHF_INPUT}


# MAGNUM_CONTROLLED is a special node that keeps track of resources whose power management is done in Magnum (as opposed to upper-level SW, e.g. Nexus)
# During BCHP_PWR_Open, all HW resources that are dependants of MAGNUM_CONTROLLED will be initialized (i.e. powered down)
# Upper-level SW is responsible for initializing all other HW resources

MAGNUM_CONTROLLED -> {AVD, RAP, VDC, XPT, HDMI_TX, RFM, TESTPORT, UHF_INPUT, SMARTCARD, TEMP_MONITOR}
