/****************************************************************************
 *     Copyright (c) 1999-2015, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 *
 * Date:           Generated on               Tue Aug 25 10:46:55 2015
 *                 Full Compile MD5 Checksum  add20cb7888302c2ee8be1277223a4e4
 *                     (minus title and desc)
 *                 MD5 Checksum               f64b4ec86ad9ad7523e5d75b1dc732c5
 *
 * Compiled with:  RDB Utility                combo_header.pl
 *                 RDB.pm                     126
 *                 unknown                    unknown
 *                 Perl Interpreter           5.008008
 *                 Operating System           linux
 *                 Script Source              /tools/dvtsw/current/Linux/combo_header.pl
 *                 DVTSWVER                   current
 *
 *
 ***************************************************************************/

#ifndef BCHP_SDS_HP_1_H__
#define BCHP_SDS_HP_1_H__

/***************************************************************************
 *SDS_HP_1 - SDS Header Processor Register Set
 ***************************************************************************/
#define BCHP_SDS_HP_1_HPCONTROL                  0x00701300 /* [RW] Header Processor control */
#define BCHP_SDS_HP_1_HPCONFIG                   0x00701304 /* [RW] Header Processor configuration */
#define BCHP_SDS_HP_1_FNORM                      0x00701308 /* [RW] Fs/Fb ratio used in divider to scale carrier offset measured in symbol rate to sample rate */
#define BCHP_SDS_HP_1_HPOVERRIDE                 0x00701314 /* [RW] Software override of header processor control outputs */
#define BCHP_SDS_HP_1_FROF1                      0x00701318 /* [RO] DAFE frequency offset estimate based on SOF symbols only during acquisition */
#define BCHP_SDS_HP_1_FROF2                      0x0070131c /* [RO] DAFE frequency offset estimate based on all 90 DVB-S2 header symbols averaged over a number of frames during acquisition */
#define BCHP_SDS_HP_1_FROF3                      0x00701320 /* [RO] DAFE frequency offset estimate based on all 90 DVB-S2 header symbols during tracking */
#define BCHP_SDS_HP_1_FROF1_SW                   0x00701324 /* [RW] DAFE frequency offset estimate based on SOF symbols only during acquisition */
#define BCHP_SDS_HP_1_FROF2_SW                   0x00701328 /* [RW] DAFE frequency offset estimate based on all 90 DVB-S2 header symbols averaged over a number of frames during acquisition */
#define BCHP_SDS_HP_1_FROF3_SW                   0x0070132c /* [RW] DAFE frequency offset estimate based on all 90 DVB-S2 header symbols during tracking */
#define BCHP_SDS_HP_1_M_N_PEAK_VERIFY            0x00701330 /* [RW] N and M parameters for Peak Verify state */
#define BCHP_SDS_HP_1_M_N_RECEIVER_VERIFY        0x00701334 /* [RW] N and M parameters for Receiver Verify state */
#define BCHP_SDS_HP_1_M_N_RECEIVER_LOCK          0x00701338 /* [RW] N and M parameters for Receiver Lock state */
#define BCHP_SDS_HP_1_DCORR_THRESHOLD            0x0070133c /* [RW] Differential correlator threshold */
#define BCHP_SDS_HP_1_PLHDRSCR1                  0x00701370 /* [RW] PL Header Scrambling Sequence 1 */
#define BCHP_SDS_HP_1_PLHDRSCR2                  0x00701374 /* [RW] PL Header Scrambling Sequence 2 */
#define BCHP_SDS_HP_1_PLHDRSCR3                  0x00701378 /* [RW] PL Header Scrambling Sequence 3 */
#define BCHP_SDS_HP_1_ACM_CHECK                  0x0070137c /* [RO] ACM modcod, type, and spectrum inversion parameter status */
#define BCHP_SDS_HP_1_FRAME_LENGTH_INITIAL       0x00701380 /* [RW] Frame length during initial acquisition for FECFRAME=normal or FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_DUMMY_NORMAL  0x00701384 /* [RW] Dummy frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_QPSK_NORMAL   0x00701388 /* [RW] QPSK frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_8PSK_NORMAL   0x0070138c /* [RW] 8PSK frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_16APSK_NORMAL 0x00701390 /* [RW] 16APSK frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_32APSK_NORMAL 0x00701394 /* [RW] 32APSK frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_29_NORMAL 0x00701398 /* [RW] MODCOD=29 frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_30_NORMAL 0x0070139c /* [RW] MODCOD=30 frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_31_NORMAL 0x007013a0 /* [RW] MODCOD=31 frame length for FECFRAME=normal. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_DUMMY_SHORT   0x007013a8 /* [RW] Dummy frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_QPSK_SHORT    0x007013ac /* [RW] QPSK frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_8PSK_SHORT    0x007013b0 /* [RW] 8PSK frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_16APSK_SHORT  0x007013b4 /* [RW] 16APSK frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_32APSK_SHORT  0x007013b8 /* [RW] 32APSK frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_29_SHORT 0x007013bc /* [RW] MODCOD=29 frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_30_SHORT 0x007013c0 /* [RW] MODCOD=30 frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_RESERVED_31_SHORT 0x007013c4 /* [RW] MODCOD=31 frame length for FECFRAME=short. */
#define BCHP_SDS_HP_1_FRAME_LENGTH_SAMPLE        0x007013c8 /* [RW] Frame length for running peak sampling logic. */
#define BCHP_SDS_HP_1_PEAK_SAMPLE_1_0            0x007013d0 /* [RO] Peak sampling amplitudes 1 and 0. Sample 0 is the smallest amplitude. */
#define BCHP_SDS_HP_1_PEAK_SAMPLE_3_2            0x007013d4 /* [RO] Peak sampling amplitudes 3 and 2. Sample 3 is the largest amplitude. */

#endif /* #ifndef BCHP_SDS_HP_1_H__ */

/* End of File */
