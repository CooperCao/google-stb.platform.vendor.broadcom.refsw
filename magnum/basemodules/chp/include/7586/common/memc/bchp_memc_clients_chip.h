/***************************************************************************
 *     Copyright (c) 2003-2014, Broadcom Corporation
 *     All Rights Reserved
 *     Confidential Property of Broadcom Corporation
 *
 *  THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 *  AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 *  EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * $brcm_Workfile: $
 * $brcm_Revision: $
 * $brcm_Date: $
 *
 * Module Description:
 *
 * Revision History:
 *
 * $brcm_Log: $
 *
 ***************************************************************************/


/* this file should not be directly included by unprepared code, but properly constructed code included it multiple times  */
/* ************** THIS FILE IS AUTOGENERATED. DO NOT EDIT **************************/
/*****
GENERATED by:
perl magnum/basemodules/chp/src/common/bchp_memc_clients_chip.pl magnum/basemodules/chp/include/7586/common/memc/bchp_memc_clients_chip.txt magnum/basemodules/chp/include/7586/common/memc/bchp_memc_clients_chip.h
*******/
/* # entries copied (as 'select' -> copy -> 'paste into this file') BCM7586A0_scb_clients_20150312.xlsx */
/* #Client Name    7586            Comments */
/* #    DDR0 Client#    DDR1 Client#    DDR2 Client#     */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_WR_RS,0)                      /*         XMEM IF write */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_WR_XC,1)                      /*         XMEM IF write */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_WR_CDB,2)                     /*         XMEM IF write */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_WR_ITB_MSG,3)                 /*         XMEM IF write */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_RD_RS,4)                      /*         XMEM IF read */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_RD_XC_RMX_MSG,5)              /*         XMEM IF read */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_RD_XC_RAVE,6)                 /*         XMEM IF read */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_RD_PB,7)                      /*         XMEM IF read */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_WR_MEMDMA,8)                  /*         M2M DMA write */
BCHP_P_MEMC_DEFINE_CLIENT(XPT_RD_MEMDMA,9)                  /*         M2M DMA read */
BCHP_P_MEMC_DEFINE_CLIENT(GENET0_WR,10)                     /*         Internal 10/100/1000 GPHY */
BCHP_P_MEMC_DEFINE_CLIENT(GENET0_RD,11)                     /*         Internal 10/100/1000 GPHY */
BCHP_P_MEMC_DEFINE_CLIENT(GENET1_WR,12)                     /*         Internal MoCA */
BCHP_P_MEMC_DEFINE_CLIENT(GENET1_RD,13)                     /*         Internal MoCA */
BCHP_P_MEMC_DEFINE_CLIENT(GENET2_WR,14)                     /*         external 10/100/1000 GPHY, HPNA, HomePlug or similar. (RGMII) */
BCHP_P_MEMC_DEFINE_CLIENT(GENET2_RD,15)                     /*         external 10/100/1000 GPHY, HPNA, HomePlug or similar. (RGMII) */

BCHP_P_MEMC_DEFINE_CLIENT(MOCA_MIPS,16)                     /*         This client is MOCA DMA which is used to load IMEM during boot time and during Host-MoCA message echange */
BCHP_P_MEMC_DEFINE_CLIENT(SATA,17)                          /*         SATA - First controller/port */

BCHP_P_MEMC_DEFINE_CLIENT(BSP,22)                           /*         Broadcom Security Processor - Must be 22 */
BCHP_P_MEMC_DEFINE_CLIENT(SCPU,23)                          /*         Sage CPU - Must be 23 */
BCHP_P_MEMC_DEFINE_CLIENT(FLASH_DMA,24)                     /*         FLASH_DMA replaces EDU */
BCHP_P_MEMC_DEFINE_CLIENT(PCIE,25)                          /*         PCIe - 1st instance */
BCHP_P_MEMC_DEFINE_CLIENT(SDIO_EMMC,26)                     /*         SDIO eMMC - client is for boot code storage/retrieval */
BCHP_P_MEMC_DEFINE_CLIENT(SDIO_CARD,27)                     /*         SDIO  Card - client is for WIFI and video/audio  storage/playback */
BCHP_P_MEMC_DEFINE_CLIENT(TPCAP,28)                         /*         Test Port Capture */
BCHP_P_MEMC_DEFINE_CLIENT(MCIF_RD,29)                       /*         M-Card, 1st port (read), (cablecard) */
BCHP_P_MEMC_DEFINE_CLIENT(MCIF_WR,30)                       /*         M-Card, 1st port (write), (cablecard) */
BCHP_P_MEMC_DEFINE_CLIENT(UART_DMA_RD,31)                   /*         UART_DMA (for Bluetooth interaction) */
BCHP_P_MEMC_DEFINE_CLIENT(UART_DMA_WR,32)                   /*         UART_DMA (for Bluetooth interaction) */
BCHP_P_MEMC_DEFINE_CLIENT(USB_HI_0,33)                      /*         Also called "USB_20", carries EHCI traffic for first USB controller. Controller drives 2 ports. */
BCHP_P_MEMC_DEFINE_CLIENT(USB_LO_0,34)                      /*         Also called "USB_11", carries OHCI traffic for first USB controller. Controller drives 2 portss. */
BCHP_P_MEMC_DEFINE_CLIENT(USB_X_WRITE_0,35)                 /*         (USB 3.0) carries XHCI Write traffic for first USB controller. Controller drives 2 ports. */
BCHP_P_MEMC_DEFINE_CLIENT(USB_X_READ_0,36)                  /*         (USB 3.0) carries XHCI Read traffic for first USB controller. Controller drives 2 ports. */
BCHP_P_MEMC_DEFINE_CLIENT(USB_X_CTRL_0,37)                  /*         (USB 3.0) carries XHCI Control traffic for first USB controller. Controller drives 2 ports. */
BCHP_P_MEMC_DEFINE_CLIENT(RAAGA,40)                         /*         RAAGA audio engine - instance 0 */
BCHP_P_MEMC_DEFINE_CLIENT(RAAGA_1,41)                       /*         RAAGA audio engine - instance 0 / selective RTS */
BCHP_P_MEMC_DEFINE_CLIENT(AUD_AIO,44)                       /*         Audio Analog IO */
BCHP_P_MEMC_DEFINE_CLIENT(VICE_VIP0_INST0,55)               /*         ViCE instance 0 - First VIP instance for dual transcode. write only. Luma and 420 chroma */
BCHP_P_MEMC_DEFINE_CLIENT(VICE_VIP1_INST0,56)               /*         ViCE instance 0 - First VIP instance for dual transcode.  read/write. Write: 2h2v_luma, 2h1v_luma. Read: pcc_luma, hist_luma */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_DBLK,73)                     /*         HVD0 Deblock Writes */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_DBLK1,74)                    /*         HVD0 Deblock Writes / alternate blockout */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_ILCPU,75)                    /*         HVD0 Inner Loop ARC  */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_OLCPU,76)                    /*         HVD0 Outer Loop ARC */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_CAB,77)                      /*         HVD0 CABAC  */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_ILSI,78)                     /*         HVD0 IL Symbol read */

BCHP_P_MEMC_DEFINE_CLIENT(SID,87)                           /*         Still Image decoder */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MAD_PIX_FD,94)                /*         MAD_R pixel feed (read) (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MAD_QUANT,95)                 /*         MAD_R quant motion history (R/W) (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MAD_PIX_CAP,96)               /*         MAD_R pixel capture (write) (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MFD0,106)                     /*         MPEG feeders have access to all DRAMs (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MFD0_1,107)                   /*         MFD Alternate blockout (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MFD1,108)                     /*         MPEG feeders have access to all DRAMs (instance 1) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_MFD1_1,109)                   /*         MFD Alternate blockout (instance 1) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_VFD0,118)                     /*         Video feeder (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_VFD1,119)                     /*         Video feeder (instance 1) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_VFD2,120)                     /*         Video feeder (instance 2) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_VFD3,121)                     /*         Video feeder (instance 3) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_CAP0,126)                     /*         Video capture (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_CAP1,127)                     /*         Video capture (instance 1) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_CAP2,128)                     /*         Video capture (instance 2) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_CAP3,129)                     /*         Video capture (instance 3) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_GFD0,134)                     /*         Graphic feeder (instance 0) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_GFD1,135)                     /*         Graphic feeder (instance 1) */
BCHP_P_MEMC_DEFINE_CLIENT(BVN_RDC,144)                      /*         RDC */
BCHP_P_MEMC_DEFINE_CLIENT(VEC_VBI_ENC0,145)                 /*         TTX0 -- assigned to VBI path 0 (typically IT_0, HD/component display) and arbitrated with ITU656 path 0 */
BCHP_P_MEMC_DEFINE_CLIENT(M2MC_0,147)                       /*         2D graphics - instance 0 - client "0" */
BCHP_P_MEMC_DEFINE_CLIENT(M2MC_1,148)                       /*         2D graphics - instance 0 - client "1" */
BCHP_P_MEMC_DEFINE_CLIENT(M2MC_2,149)                       /*         2D graphics - instance 0 - client "2" */
BCHP_P_MEMC_DEFINE_CLIENT(LEAP,176)                         /*         Lean Acquistion Processosr */
BCHP_P_MEMC_DEFINE_CLIENT(HOST_CPU_MCP_R_HI,200)            /*         Host CPU MCP read client - high priority */
BCHP_P_MEMC_DEFINE_CLIENT(HOST_CPU_MCP_R_LO,201)            /*         Host CPU MCP read client - low priority */
BCHP_P_MEMC_DEFINE_CLIENT(HOST_CPU_MCP_W_HI,202)            /*         Host CPU MCP write client - high priority */
BCHP_P_MEMC_DEFINE_CLIENT(HOST_CPU_MCP_W_LO,203)            /*         Host CPU MCP write client - low priority */
BCHP_P_MEMC_DEFINE_CLIENT(V3D_MCP_R_HI,204)                 /*         V3D (VC4 graphics core) MCP read client - high priority */
BCHP_P_MEMC_DEFINE_CLIENT(V3D_MCP_R_LO,205)                 /*         V3D (VC4 graphics core) MCP read client - low priority */
BCHP_P_MEMC_DEFINE_CLIENT(V3D_MCP_W_HI,206)                 /*         V3D (VC4 graphics core) MCP write client (tile buffer writes) - high priority */
BCHP_P_MEMC_DEFINE_CLIENT(V3D_MCP_W_LO,207)                 /*         V3D (VC4 graphics core) MCP write client (tile buffer writes) - low priority */
/*                 Unused UBUS */
BCHP_P_MEMC_DEFINE_CLIENT(HVD0_MOCOMP,216)                  /*         HVD0 PFRI / MOCOMP */
/*                 Unused LMB */
BCHP_P_MEMC_DEFINE_CLIENT(TRACELOG,248)                     /*         TraceLog */
BCHP_P_MEMC_DEFINE_CLIENT(MEMC_RESERVED_0,249)              /*         Reserved for MEMC use */
BCHP_P_MEMC_DEFINE_CLIENT(ZCQS_ENGINE,250)                  /*         DRAM ZQ Calibration Short client */
BCHP_P_MEMC_DEFINE_CLIENT(MSA,251)                          /*         MSA (Memory Soft Access) */
BCHP_P_MEMC_DEFINE_CLIENT(DIS0,252)                         /*         DIS (DRAM Interface Stress) #0 */
BCHP_P_MEMC_DEFINE_CLIENT(DIS1,253)                         /*         DIS (DRAM Interface Stress) #1 */
BCHP_P_MEMC_DEFINE_CLIENT(DRAM_INIT_ZQCS,254)               /*         DRAM Init (Being updated to ZQCS) */
BCHP_P_MEMC_DEFINE_CLIENT(REFRESH,255)                      /*         Refresh */
