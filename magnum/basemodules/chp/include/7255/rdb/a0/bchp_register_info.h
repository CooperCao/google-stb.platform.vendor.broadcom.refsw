/******************************************************************************
 *  Copyright (C) 2017 Broadcom. The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
 *
 *  This program is the proprietary software of Broadcom and/or its licensors,
 *  and may only be used, duplicated, modified or distributed pursuant to the terms and
 *  conditions of a separate, written license agreement executed between you and Broadcom
 *  (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
 *  no license (express or implied), right to use, or waiver of any kind with respect to the
 *  Software, and Broadcom expressly reserves all rights in and to the Software and all
 *  intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
 *  HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
 *  NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
 *
 *  Except as expressly set forth in the Authorized License,
 *
 *  1.     This program, including its structure, sequence and organization, constitutes the valuable trade
 *  secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
 *  and to use this information only in connection with your use of Broadcom integrated circuit products.
 *
 *  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
 *  AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
 *  WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
 *  THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
 *  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
 *  LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
 *  OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
 *  USE OR PERFORMANCE OF THE SOFTWARE.
 *
 *  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
 *  LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
 *  EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
 *  USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
 *  THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
 *  ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
 *  LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
 *  ANY LIMITED REMEDY.
 *
 * Module Description:
 *                     DO NOT EDIT THIS FILE DIRECTLY
 *
 * This module was generated magically with RDB from a source description
 * file. You must edit the source file for changes to be made to this file.
 *
 * The launch point for all information concerning RDB is found at:
 *   http://bcgbu.broadcom.com/RDB/SitePages/Home.aspx
 *
 * Date:           Generated on               Mon Aug 28 15:40:33 2017
 *                 Full Compile MD5 Checksum  30da472f3aca7b16c166b29b52a795d4
 *                     (minus title and desc)
 *                 MD5 Checksum               82ae2204da07f45bd16c91730a49dc89
 *
 * lock_release:   n/a
 * Compiled with:  RDB Utility                combo_header.pl
 *                 RDB.pm                     1730
 *                 unknown                    unknown
 *                 Perl Interpreter           5.008008
 *                 Operating System           linux
 *                 Script Source              home/tdo/public/tdo/views/refsw/git_baseline/rockford/refswsj/tools//combo_header.pl
 *                 DVTSWVER                   LOCAL home/tdo/public/tdo/views/refsw/git_baseline/rockford/refswsj/tools//combo_header.pl
 *
 *
********************************************************************************/

/****************************************************************************
 * Register info BCHP_REGISTER(offset, width, access, name).
 ***************************************************************************/
BCHP_REGISTER(0x20000000, 32,  RW, HEVD_OL_CPU_REGS_0, HST2CPU_MBX)
BCHP_REGISTER(0x20000004, 32,  RW, HEVD_OL_CPU_REGS_0, CPU2HST_MBX)
BCHP_REGISTER(0x20000008, 32,  RO, HEVD_OL_CPU_REGS_0, MBX_STAT)
BCHP_REGISTER(0x20000010, 64,  RW, HEVD_OL_CPU_REGS_0, INST_BASE)
BCHP_REGISTER(0x20000018, 32,  RW, HEVD_OL_CPU_REGS_0, CPU_INT_ENA)
BCHP_REGISTER(0x2000001c, 32,  RO, HEVD_OL_CPU_REGS_0, CPU_INT_STAT)
BCHP_REGISTER(0x20000020, 32,  RW, HEVD_OL_CPU_REGS_0, HST2CPU_STAT)
BCHP_REGISTER(0x20000024, 32,  RW, HEVD_OL_CPU_REGS_0, CPU2HST_STAT)
BCHP_REGISTER(0x20000028, 32,  RW, HEVD_OL_CPU_REGS_0, CPU_INTGEN_SET)
BCHP_REGISTER(0x2000002c, 32,  RW, HEVD_OL_CPU_REGS_0, CPU_INTGEN_CLR)
BCHP_REGISTER(0x20000030, 32,  RW, HEVD_OL_CPU_REGS_0, CPU_ICACHE_MISS)
BCHP_REGISTER(0x20000034, 32,  RW, HEVD_OL_CPU_REGS_0, CPU_INTGEN_MASK)
BCHP_REGISTER(0x20000038, 32,  RW, HEVD_OL_CPU_REGS_0, DRAM_RD_CNTR)
BCHP_REGISTER(0x2000003c, 32,  RW, HEVD_OL_CPU_REGS_0, END_OF_CODE)
BCHP_REGISTER(0x20000040, 64,  RW, HEVD_OL_CPU_REGS_0, GLOBAL_IO_BASE)
BCHP_REGISTER(0x20000048, 32,  RW, HEVD_OL_CPU_REGS_0, DRAM_WR_CNTR)
BCHP_REGISTER(0x2000004c, 32,  RW, HEVD_OL_CPU_REGS_0, WATCHDOG_TMR)
BCHP_REGISTER(0x20000050, 32,  RO, HEVD_OL_CPU_REGS_0, SDRAM_STATUS)
BCHP_REGISTER(0x20000054, 32,  RW, HEVD_OL_CPU_REGS_0, DEBUG_CTL)
BCHP_REGISTER(0x20000060, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG0)
BCHP_REGISTER(0x20000064, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG1)
BCHP_REGISTER(0x20000068, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG2)
BCHP_REGISTER(0x2000006c, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG3)
BCHP_REGISTER(0x20000070, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG4)
BCHP_REGISTER(0x20000074, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG5)
BCHP_REGISTER(0x20000078, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG6)
BCHP_REGISTER(0x2000007c, 32,  RW, HEVD_OL_CPU_REGS_0, CMD_REG7)
BCHP_REGISTER(0x20000080, 32,  RW, HEVD_OL_CPU_REGS_0, GENERAL_TMR)
BCHP_REGISTER(0x20000084, 32,  RW, HEVD_OL_CPU_REGS_0, RM2_ARB_TIMEOUT)
BCHP_REGISTER(0x20000088, 32,  RW, HEVD_OL_CPU_REGS_0, RM2_ARB_TIMEOUT_SLICE)
BCHP_REGISTER(0x2000008c, 32,  RW, HEVD_OL_CPU_REGS_0, RBUS_ERROR_LOW)
BCHP_REGISTER(0x20000090, 32,  RW, HEVD_OL_CPU_REGS_0, RBUS_ERROR_HI)
BCHP_REGISTER(0x20000108, 32,  RO, HEVD_OL_CPU_REGS_0, DEC_VERSION)
BCHP_REGISTER(0x20000110, 64,  RW, HEVD_OL_CPU_REGS_0, SDRAM_ADDR0)
BCHP_REGISTER(0x20000118, 32,  RW, HEVD_OL_CPU_REGS_0, SDRAM_DATA0)
BCHP_REGISTER(0x20000120, 64,  RW, HEVD_OL_CPU_REGS_0, SDRAM_ADDR1)
BCHP_REGISTER(0x20000128, 32,  RW, HEVD_OL_CPU_REGS_0, SDRAM_DATA1)
BCHP_REGISTER(0x20000130, 64,  RW, HEVD_OL_CPU_REGS_0, SDRAM_WINDOW)
BCHP_REGISTER(0x20000400, 64,  RW, HEVD_OL_CPU_DMA_0, CH0_SD_ADDR)
BCHP_REGISTER(0x20000408, 32,  RW, HEVD_OL_CPU_DMA_0, CH0_LCL_ADDR)
BCHP_REGISTER(0x2000040c, 32,  RW, HEVD_OL_CPU_DMA_0, CH0_LEN)
BCHP_REGISTER(0x20000410, 64,  RW, HEVD_OL_CPU_DMA_0, CH1_SD_ADDR)
BCHP_REGISTER(0x20000418, 32,  RW, HEVD_OL_CPU_DMA_0, CH1_LCL_ADDR)
BCHP_REGISTER(0x2000041c, 32,  RW, HEVD_OL_CPU_DMA_0, CH1_LEN)
BCHP_REGISTER(0x20000420, 64,  RW, HEVD_OL_CPU_DMA_0, CH2_SD_ADDR)
BCHP_REGISTER(0x20000428, 32,  RW, HEVD_OL_CPU_DMA_0, CH2_LCL_ADDR)
BCHP_REGISTER(0x2000042c, 32,  RW, HEVD_OL_CPU_DMA_0, CH2_LEN)
BCHP_REGISTER(0x20000430, 64,  RW, HEVD_OL_CPU_DMA_0, CH3_SD_ADDR)
BCHP_REGISTER(0x20000438, 32,  RW, HEVD_OL_CPU_DMA_0, CH3_LCL_ADDR)
BCHP_REGISTER(0x2000043c, 32,  RW, HEVD_OL_CPU_DMA_0, CH3_LEN)
BCHP_REGISTER(0x20000440, 32,  RO, HEVD_OL_CPU_DMA_0, STATUS)
BCHP_REGISTER(0x20001000, 64,  RW, HEVD_OL_SINT_0, DMA_ADDR)
BCHP_REGISTER(0x20001008, 32,  RW, HEVD_OL_SINT_0, DMA_LEN)
BCHP_REGISTER(0x20001010, 64,  RW, HEVD_OL_SINT_0, DMA_BASE)
BCHP_REGISTER(0x20001018, 64,  RW, HEVD_OL_SINT_0, DMA_END)
BCHP_REGISTER(0x20001020, 32,  RO, HEVD_OL_SINT_0, STRM_POS)
BCHP_REGISTER(0x20001024, 32,  RW, HEVD_OL_SINT_0, STRM_STAT)
BCHP_REGISTER(0x20001028, 32,  RW, HEVD_OL_SINT_0, IENA)
BCHP_REGISTER(0x2000102c, 32,  RW, HEVD_OL_SINT_0, STRM_BITS)
BCHP_REGISTER(0x20001030, 32,  RW, HEVD_OL_SINT_0, GET_SYMB)
BCHP_REGISTER(0x20001034, 32,  RW, HEVD_OL_SINT_0, VPX_PROB_TABLE)
BCHP_REGISTER(0x20001038, 32,  RO, HEVD_OL_SINT_0, VPX_DEBUG)
BCHP_REGISTER(0x20013000, 64,  RW, HEVD_CABAC_0, PICTURE_COMMAND_ADDR)
BCHP_REGISTER(0x20013008, 32,  RO, HEVD_CABAC_0, PICTURE_STATUS)
BCHP_REGISTER(0x2001300c, 32,  RW, HEVD_CABAC_0, CTL)
BCHP_REGISTER(0x20013010, 32,  RW, HEVD_CABAC_0, LITTLE_ENDIAN)
BCHP_REGISTER(0x20013014, 32,  RW, HEVD_CABAC_0, CHANNEL_FLUSH)
BCHP_REGISTER(0x20013018, 32,  RO, HEVD_CABAC_0, COMMAND_STATUS)
BCHP_REGISTER(0x2001301c, 32,  RW, HEVD_CABAC_0, CONFIG)
BCHP_REGISTER(0x20013020, 32,  RW, HEVD_CABAC_0, MISC)
BCHP_REGISTER(0x20013024, 32,  RW, HEVD_CABAC_0, AVC_CONFIG)
BCHP_REGISTER(0x20013028, 32,  RW, HEVD_CABAC_0, MPEG2_CONFIG)
BCHP_REGISTER(0x2001302c, 32,  RW, HEVD_CABAC_0, AVS_CONFIG)
BCHP_REGISTER(0x20013030, 32,  RW, HEVD_CABAC_0, AVS2_CONFIG)
BCHP_REGISTER(0x20014004, 32,  RO, HEVD_OL_CTL_0, CPU_ID)
BCHP_REGISTER(0x20014008, 32,  RO, HEVD_OL_CTL_0, ENDIAN)
BCHP_REGISTER(0x2001400c, 32,  RO, HEVD_OL_CTL_0, BVN_INT)
BCHP_REGISTER(0x20014010, 32, CFG, HEVD_OL_CTL_0, OL_CLK_GATE)
BCHP_REGISTER(0x20014014, 32,  RW, HEVD_OL_CTL_0, TIMER_REG)
BCHP_REGISTER(0x20014018, 32, CFG, HEVD_OL_CTL_0, SOFTSHUTDOWN_CTRL)
BCHP_REGISTER(0x2001401c, 32, CFG, HEVD_OL_CTL_0, SHIM_DEBUG_CTL)
BCHP_REGISTER(0x20014020, 32,  RO, HEVD_OL_CTL_0, SHIM_DEBUG_READ)
BCHP_REGISTER(0x20014024, 32, CFG, HEVD_OL_CTL_0, RM2_ARB_TIMEOUT)
BCHP_REGISTER(0x20014028, 32,  RW, HEVD_OL_CTL_0, RM2_ARB_TIMEOUT_SEEN)
BCHP_REGISTER(0x20014030, 32,  RW, HEVD_OL_CTL_0, FIRMWARE_DEBUG)
BCHP_REGISTER(0x20014034, 32,  RO, HEVD_OL_CTL_0, OTP_CTL_REG)
BCHP_REGISTER(0x20014038, 32,  RO, HEVD_OL_CTL_0, SHIM_ERROR_REG)
BCHP_REGISTER(0x2001403c, 32,  RO, HEVD_OL_CTL_0, SOFTSHUTDOWN_STATUS)
BCHP_REGISTER(0x20014040, 32, CFG, HEVD_OL_CTL_0, CLIENT_INIT_CONFIG)
BCHP_REGISTER(0x20014060, 64,  RO, HEVD_OL_CTL_0, HVD_REG_BASE)
BCHP_REGISTER(0x20014068, 64,  RO, HEVD_OL_CTL_0, MSAT_BASE)
BCHP_REGISTER(0x20014070, 64,  RO, HEVD_OL_CTL_0, PMU_BASE)
BCHP_REGISTER(0x20024000, 32,  WO, HEVD_BE_GLOBAL_0, PICT_INFO)
BCHP_REGISTER(0x20024004, 32,  WO, HEVD_BE_GLOBAL_0, PICT_SIZE)
BCHP_REGISTER(0x20024020, 32,  WO, HEVD_BE_GLOBAL_0, PB_START)
BCHP_REGISTER(0x20024024, 32,  WO, HEVD_BE_GLOBAL_0, PB_AVAIL)
BCHP_REGISTER(0x20024028, 32,  WO, HEVD_BE_GLOBAL_0, SLICE_END)
BCHP_REGISTER(0x20024030, 32,  WO, HEVD_BE_GLOBAL_0, PBCU_INFO)
BCHP_REGISTER(0x20024100, 32,  WO, HEVD_IXFORM_0, COEF)
BCHP_REGISTER(0x20024104, 32,  WO, HEVD_IXFORM_0, RUN)
BCHP_REGISTER(0x20024108, 32,  WO, HEVD_IXFORM_0, INFO)
BCHP_REGISTER(0x2002410c, 32,  WO, HEVD_IXFORM_0, PCM)
BCHP_REGISTER(0x20024110, 32,  WO, HEVD_IXFORM_0, QMATRIX_SEL)
BCHP_REGISTER(0x20024114, 32,  WO, HEVD_IXFORM_0, QMATRIX_DATA)
BCHP_REGISTER(0x20024118, 32,  WO, HEVD_IXFORM_0, QUANT_INFO)
BCHP_REGISTER(0x2002411c, 32,  WO, HEVD_IXFORM_0, LARGE_COEF)
BCHP_REGISTER(0x2002417c, 32,  RO, HEVD_IXFORM_0, STATUS0)
BCHP_REGISTER(0x200241f0, 32,  RO, HEVD_IXFORM_0, CHECKSUM)
BCHP_REGISTER(0x20024200, 32,  WO, HEVD_MCOMP_0, BLK)
BCHP_REGISTER(0x20024204, 32,  WO, HEVD_MCOMP_0, VEC_A)
BCHP_REGISTER(0x20024208, 32,  WO, HEVD_MCOMP_0, VEC_B)
BCHP_REGISTER(0x20024210, 32,  WO, HEVD_MCOMP_0, L0_WP_TABLE)
BCHP_REGISTER(0x20024214, 32,  WO, HEVD_MCOMP_0, L1_WP_TABLE)
BCHP_REGISTER(0x20024218, 32,  WO, HEVD_MCOMP_0, WP_CTL)
BCHP_REGISTER(0x2002421c, 32,  WO, HEVD_MCOMP_0, SCALE_FACTOR)
BCHP_REGISTER(0x20024220, 32,  WO, HEVD_MCOMP_0, IMPLICIT_WP)
BCHP_REGISTER(0x20024224, 32,  WO, HEVD_MCOMP_0, REF_PICT_SIZE)
BCHP_REGISTER(0x2002427c, 32,  RO, HEVD_MCOMP_0, STATUS0)
BCHP_REGISTER(0x200242f0, 32,  RO, HEVD_MCOMP_0, CHECKSUM)
BCHP_REGISTER(0x200242fc, 32,  RO, HEVD_MCOMP_0, STATUS1)
BCHP_REGISTER(0x20024300, 32,  WO, HEVD_SPRED_0, MODES)
BCHP_REGISTER(0x20024304, 32,  WO, HEVD_SPRED_0, BLK)
BCHP_REGISTER(0x20024308, 32,  RO, HEVD_SPRED_0, STATUS)
BCHP_REGISTER(0x2002430c, 32,  WO, HEVD_SPRED_0, CONCEAL)
BCHP_REGISTER(0x200243f0, 32,  RO, HEVD_SPRED_0, CHECKSUM)
BCHP_REGISTER(0x20024400, 32,  WO, HEVD_FILTER_0, DBLK_TU_INFO)
BCHP_REGISTER(0x20024404, 32,  WO, HEVD_FILTER_0, DBLK_MV_INFO)
BCHP_REGISTER(0x20024408, 32,  WO, HEVD_FILTER_0, DBLK_QP)
BCHP_REGISTER(0x2002440c, 32,  WO, HEVD_FILTER_0, INFO)
BCHP_REGISTER(0x20024410, 32,  WO, HEVD_FILTER_0, SLICE)
BCHP_REGISTER(0x20024414, 32,  WO, HEVD_FILTER_0, SAO)
BCHP_REGISTER(0x20024418, 32,  WO, HEVD_FILTER_0, SAO_OFFSET)
BCHP_REGISTER(0x2002441c, 32,  WO, HEVD_FILTER_0, DBLK_IXFORM_INFO)
BCHP_REGISTER(0x20024420, 32,  WO, HEVD_FILTER_0, DBLK_TEST)
BCHP_REGISTER(0x20024424, 32,  WO, HEVD_FILTER_0, ALF_COEF_SEL)
BCHP_REGISTER(0x20024428, 32,  WO, HEVD_FILTER_0, ALF_COEF)
BCHP_REGISTER(0x200244c0, 32,  RO, HEVD_FILTER_0, TOP_DEBUG)
BCHP_REGISTER(0x200244c4, 32,  RO, HEVD_FILTER_0, DBLK_DEBUG)
BCHP_REGISTER(0x200244f0, 32,  RO, HEVD_FILTER_0, CHECKSUM)
BCHP_REGISTER(0x200244fc, 32,  RO, HEVD_FILTER_0, STATUS)
BCHP_REGISTER(0x20024500, 32,  WO, HEVD_OUTPUT_0, Y_BASE)
BCHP_REGISTER(0x20024504, 32,  WO, HEVD_OUTPUT_0, Y_BASE_MSB)
BCHP_REGISTER(0x20024508, 32,  WO, HEVD_OUTPUT_0, C_BASE)
BCHP_REGISTER(0x2002450c, 32,  WO, HEVD_OUTPUT_0, C_BASE_MSB)
BCHP_REGISTER(0x20024510, 32,  WO, HEVD_OUTPUT_0, STRIPE_INFO)
BCHP_REGISTER(0x20024514, 32,  WO, HEVD_OUTPUT_0, PIPE_WIDTH)
BCHP_REGISTER(0x20024580, 32,  RO, HEVD_OUTPUT_0, CHKSUM_Y)
BCHP_REGISTER(0x20024584, 32,  RO, HEVD_OUTPUT_0, CHKSUM_U)
BCHP_REGISTER(0x20024588, 32,  RO, HEVD_OUTPUT_0, CHKSUM_V)
BCHP_REGISTER(0x200245fc, 32,  RO, HEVD_OUTPUT_0, STATUS)
BCHP_REGISTER(0x20025000, 32, CFG, HEVD_FE_CTRL_0, PICT_PARAMS)
BCHP_REGISTER(0x20025004, 32, CFG, HEVD_FE_CTRL_0, PICT_PARAMS_2)
BCHP_REGISTER(0x20025008, 32, CFG, HEVD_FE_CTRL_0, SLICE_PARAMS)
BCHP_REGISTER(0x2002500c, 32, CFG, HEVD_FE_CTRL_0, PICT_SIZE)
BCHP_REGISTER(0x20025010, 32,  WO, HEVD_FE_CTRL_0, COMMAND)
BCHP_REGISTER(0x20025014, 32, CFG, HEVD_FE_CTRL_0, CONCEAL_COLOR)
BCHP_REGISTER(0x20025018, 32, CFG, HEVD_FE_CTRL_0, TILE_ROW)
BCHP_REGISTER(0x20025020, 32,  RW, HEVD_FE_CTRL_0, PBCU_POSITION)
BCHP_REGISTER(0x20025024, 32,  RO, HEVD_FE_CTRL_0, PBCU_TYPE)
BCHP_REGISTER(0x20025028, 32, CFG, HEVD_FE_CTRL_0, NEXT_SLICE_START)
BCHP_REGISTER(0x2002502c, 32, CFG, HEVD_FE_CTRL_0, MISC)
BCHP_REGISTER(0x20025030, 32, CFG, HEVD_FE_CTRL_0, QP_OFFSET)
BCHP_REGISTER(0x20025034, 32,  RO, HEVD_FE_CTRL_0, STATUS)
BCHP_REGISTER(0x20025038, 32, CFG, HEVD_FE_CTRL_0, SYMB_DCD_TYPE)
BCHP_REGISTER(0x2002503c, 32,  RO, HEVD_FE_CTRL_0, SYMB_DCD_READ)
BCHP_REGISTER(0x20025040, 32,  RO, HEVD_FE_CTRL_0, QP_SUM)
BCHP_REGISTER(0x20025044, 32, CFG, HEVD_FE_CTRL_0, QP_PRED)
BCHP_REGISTER(0x20025048, 32, CFG, HEVD_FE_CTRL_0, LAST_SLICE_START)
BCHP_REGISTER(0x20025054, 32, CFG, HEVD_FE_CTRL_0, VP9_COMP_REFIDX)
BCHP_REGISTER(0x20025058, 32, CFG, HEVD_FE_CTRL_0, VP9_FILT_REF_ADJ)
BCHP_REGISTER(0x2002505c, 32, CFG, HEVD_FE_CTRL_0, VP9_FILT_MODE_ADJ)
BCHP_REGISTER(0x20025060, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_0)
BCHP_REGISTER(0x20025064, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_1)
BCHP_REGISTER(0x20025068, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_2)
BCHP_REGISTER(0x2002506c, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_3)
BCHP_REGISTER(0x20025070, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_4)
BCHP_REGISTER(0x20025074, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_5)
BCHP_REGISTER(0x20025078, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_6)
BCHP_REGISTER(0x2002507c, 32, CFG, HEVD_FE_CTRL_0, VP9_SEGMENT_7)
BCHP_REGISTER(0x20025080, 32,  RW, HEVD_FE_CTRL_0, QP_ACCUM)
BCHP_REGISTER(0x20025084, 32,  RW, HEVD_FE_CTRL_0, INTRA_BLK_CNT)
BCHP_REGISTER(0x20025088, 32,  RW, HEVD_FE_CTRL_0, INTER_BLK_CNT)
BCHP_REGISTER(0x2002508c, 32,  RW, HEVD_FE_CTRL_0, TOTAL_BLK_CNT)
BCHP_REGISTER(0x20025090, 32,  RW, HEVD_FE_CTRL_0, QP_MAP_ADDR)
BCHP_REGISTER(0x20025094, 32,  WO, HEVD_FE_CTRL_0, QP_MAP_DATA)
BCHP_REGISTER(0x20025100, 64,  RW, HEVD_STRM_IN_0, ADDRESS)
BCHP_REGISTER(0x20025108, 32,  RW, HEVD_STRM_IN_0, LENGTH)
BCHP_REGISTER(0x2002510c, 32,  RW, HEVD_STRM_IN_0, COMMAND)
BCHP_REGISTER(0x20025110, 32,  RO, HEVD_STRM_IN_0, STATUS)
BCHP_REGISTER(0x20025114, 32,  RO, HEVD_STRM_IN_0, STREAM_POS)
BCHP_REGISTER(0x20025118, 32,  RO, HEVD_STRM_IN_0, STREAM_BITS)
BCHP_REGISTER(0x2002511c, 32,  RW, HEVD_STRM_IN_0, MISC)
BCHP_REGISTER(0x20025200, 32, CFG, HEVD_CMDBUS_XMIT_0, CTL)
BCHP_REGISTER(0x20025204, 32,  RW, HEVD_CMDBUS_XMIT_0, STATUS)
BCHP_REGISTER(0x2002520c, 32,  RO, HEVD_CMDBUS_XMIT_0, ERR_ADDR)
BCHP_REGISTER(0x20025210, 32, CFG, HEVD_CMDBUS_XMIT_0, MISC)
BCHP_REGISTER(0x20025214, 32, CFG, HEVD_CMDBUS_XMIT_0, TIMEOUT)
BCHP_REGISTER(0x20025220, 32,  RO, HEVD_CMDBUS_XMIT_0, GLOBAL_CHECK)
BCHP_REGISTER(0x20025224, 32,  RO, HEVD_CMDBUS_XMIT_0, IXFORM_CHECK)
BCHP_REGISTER(0x20025228, 32,  RO, HEVD_CMDBUS_XMIT_0, MCOMP_CHECK)
BCHP_REGISTER(0x2002522c, 32,  RO, HEVD_CMDBUS_XMIT_0, SPRED_CHECK)
BCHP_REGISTER(0x20025230, 32,  RO, HEVD_CMDBUS_XMIT_0, FILTER_CHECK)
BCHP_REGISTER(0x20025400, 32, CFG, HEVD_VECGEN_0, OUTPUT_POC)
BCHP_REGISTER(0x20025404, 32,  RW, HEVD_VECGEN_0, CONTROL)
BCHP_REGISTER(0x20025408, 32, CFG, HEVD_VECGEN_0, MODE)
BCHP_REGISTER(0x2002540c, 32, CFG, HEVD_VECGEN_0, PIPE_START_COL)
BCHP_REGISTER(0x20025410, 64, CFG, HEVD_VECGEN_0, TRMV_OUTPUT_PTR)
BCHP_REGISTER(0x20025418, 64, CFG, HEVD_VECGEN_0, TRMV_INPUT_PTR)
BCHP_REGISTER(0x20025420, 32, CFG, HEVD_VECGEN_0, LTR_PICS)
BCHP_REGISTER(0x20025424, 32, CFG, HEVD_VECGEN_0, TR_LTR_PICS)
BCHP_REGISTER(0x20025428, 32, CFG, HEVD_VECGEN_0, PIC_TOP_FIELD)
BCHP_REGISTER(0x2002542c, 32, CFG, HEVD_VECGEN_0, OUTPUT_POC1)
BCHP_REGISTER(0x20025430, 32, CFG, HEVD_VECGEN_0, FRAME_POC_SEL)
BCHP_REGISTER(0x20025434, 32, CFG, HEVD_VECGEN_0, L0_REFIDX_BOT_FIELD)
BCHP_REGISTER(0x20025438, 32, CFG, HEVD_VECGEN_0, L1_REFIDX_BOT_FIELD)
BCHP_REGISTER(0x2002543c, 32, CFG, HEVD_VECGEN_0, MPEG2_FCODE)
BCHP_REGISTER(0x20025440, 32, CFG, HEVD_VECGEN_0, PARAMS)
BCHP_REGISTER(0x20025444, 32, CFG, HEVD_VECGEN_0, TR_PIC_TOP_FIELD)
BCHP_REGISTER(0x200254f0, 32, CFG, HEVD_VECGEN_0, VECRAM_ADDR)
BCHP_REGISTER(0x200254f4, 32, CFG, HEVD_VECGEN_0, VECRAM_DATA)
BCHP_REGISTER(0x20026000, 32,  RO, DCD_PIPE_CTL_0, CORE_CONFIG)
BCHP_REGISTER(0x20026004, 32, CFG, DCD_PIPE_CTL_0, AVD_CLK_GATE)
BCHP_REGISTER(0x20026008, 32,  RW, DCD_PIPE_CTL_0, SW_RESET_REG)
BCHP_REGISTER(0x2002600c, 32,  RO, DCD_PIPE_CTL_0, PIPE_STOP_STATUS)
BCHP_REGISTER(0x20026010, 32, CFG, DCD_PIPE_CTL_0, OUTPUT_CLIENT_SEL)
BCHP_REGISTER(0x20026014, 32, CFG, DCD_PIPE_CTL_0, MULTIPIPE_PFRI_ARB_CTL)
BCHP_REGISTER(0x20026018, 32,  RO, DCD_PIPE_CTL_0, MULTIPIPE_PFRI_ARB_STATUS)
BCHP_REGISTER(0x2002601c, 32,  RO, DCD_PIPE_CTL_0, MULTIPIPE_PFRI_ARB_STATUS_UV)
BCHP_REGISTER(0x2002602c, 32,  RW, DCD_PIPE_CTL_0, RAM_POWER_DOWN)
BCHP_REGISTER(0x20026030, 32, CFG, DCD_PIPE_CTL_0, IPCOMM_L2R_TRANSMIT)
BCHP_REGISTER(0x20026034, 32,  RO, DCD_PIPE_CTL_0, IPCOMM_L2R_RECEIVE)
BCHP_REGISTER(0x20026038, 32,  RW, DCD_PIPE_CTL_0, IPCOMM_L2R_STATUS)
BCHP_REGISTER(0x2002603c, 32, CFG, DCD_PIPE_CTL_0, IPCOMM_R2L_TRANSMIT)
BCHP_REGISTER(0x20026040, 32,  RO, DCD_PIPE_CTL_0, IPCOMM_R2L_RECEIVE)
BCHP_REGISTER(0x20026044, 32,  RW, DCD_PIPE_CTL_0, IPCOMM_R2L_STATUS)
BCHP_REGISTER(0x20026080, 32,  RW, DCD_PIPE_CTL_0, RECON_DEBUG_REG)
BCHP_REGISTER(0x20026084, 32,  RW, DCD_PIPE_CTL_0, IXFORM_DEBUG_REG)
BCHP_REGISTER(0x20026088, 32,  RW, DCD_PIPE_CTL_0, ILSI_DEBUG_REG)
BCHP_REGISTER(0x2002608c, 32,  RW, DCD_PIPE_CTL_0, SHIM_DEBUG_CTL)
BCHP_REGISTER(0x20026090, 32,  RO, DCD_PIPE_CTL_0, SHIM_DEBUG_READ)
BCHP_REGISTER(0x20026094, 32,  RO, DCD_PIPE_CTL_0, SHIM_ERROR_REG)
BCHP_REGISTER(0x20026100, 32, CFG, DCD_PIPE_CTL_0, DBLK_STRIPE_HEIGHT)
BCHP_REGISTER(0x20026180, 32, CFG, DCD_PIPE_CTL_0, DBLK_STRIPE_WIDTH)
BCHP_REGISTER(0x20026400, 32,  WO, DCD_PIPE_CTL_0, DBLK_PICT_BASE_LUMA)
BCHP_REGISTER(0x20026404, 32,  WO, DCD_PIPE_CTL_0, DBLK_PICT_BASE_CHROMA)
BCHP_REGISTER(0x20026800, 32, CFG, HEVD_PFRI_0, INFO)
BCHP_REGISTER(0x20026804, 32, CFG, HEVD_PFRI_0, STRIPE_HEIGHT)
BCHP_REGISTER(0x20026808, 32, CFG, HEVD_PFRI_0, STRIPE_WIDTH)
BCHP_REGISTER(0x20026c00, 32,  RW, HEVD_PCACHE_0, MODE0)
BCHP_REGISTER(0x20026c04, 32,  RW, HEVD_PCACHE_0, MODE1)
BCHP_REGISTER(0x20026c08, 32,  RW, HEVD_PCACHE_0, CTRL)
BCHP_REGISTER(0x20026c0c, 32,  RO, HEVD_PCACHE_0, HIT_COUNT)
BCHP_REGISTER(0x20026c10, 32,  RO, HEVD_PCACHE_0, MISS_COUNT)
BCHP_REGISTER(0x20026c14, 32,  RO, HEVD_PCACHE_0, MISS1_COUNT)
BCHP_REGISTER(0x20026c18, 32,  RO, HEVD_PCACHE_0, BLOCK_FLAGS)
BCHP_REGISTER(0x20026c1c, 32,  RO, HEVD_PCACHE_0, DATA)
BCHP_REGISTER(0x20026c20, 32,  RO, HEVD_PCACHE_0, TAG_CONTENTS)
BCHP_REGISTER(0x20026c24, 32,  RW, HEVD_PCACHE_0, FLAG_SELECT)
BCHP_REGISTER(0x20026c28, 32,  RW, HEVD_PCACHE_0, DEBUG_CTRL)
BCHP_REGISTER(0x20026c2c, 32,  RW, HEVD_PCACHE_0, LFSR_DATA)
BCHP_REGISTER(0x20026c30, 32,  RW, HEVD_PCACHE_0, PFRI_CTRL)
BCHP_REGISTER(0x20026c34, 32,  RO, HEVD_PCACHE_0, PFRI_DEBUG)
BCHP_REGISTER(0x20026c38, 32,  RO, HEVD_PCACHE_0, GROUP_COUNT)
BCHP_REGISTER(0x20026c3c, 32,  RW, HEVD_PCACHE_0, PICS_REFERENCED)
BCHP_REGISTER(0x20026d00, 32, CFG, RVC_0, CTL)
BCHP_REGISTER(0x20026d08, 64,  RO, RVC_0, PUT)
BCHP_REGISTER(0x20026d10, 64, CFG, RVC_0, GET)
BCHP_REGISTER(0x20026d18, 64,  RW, RVC_0, BASE)
BCHP_REGISTER(0x20026d20, 64,  RW, RVC_0, END)
BCHP_REGISTER(0x20026d28, 32, CFG, RVC_0, RANGE1_START)
BCHP_REGISTER(0x20026d2c, 32, CFG, RVC_0, RANGE1_END)
BCHP_REGISTER(0x20026d30, 32, CFG, RVC_0, RANGE2_START)
BCHP_REGISTER(0x20026d34, 32, CFG, RVC_0, RANGE2_END)
BCHP_REGISTER(0x20030000, 32,  RW, HEVD_IL_CPU_REGS_0, HST2CPU_MBX)
BCHP_REGISTER(0x20030004, 32,  RW, HEVD_IL_CPU_REGS_0, CPU2HST_MBX)
BCHP_REGISTER(0x20030008, 32,  RO, HEVD_IL_CPU_REGS_0, MBX_STAT)
BCHP_REGISTER(0x20030010, 64,  RW, HEVD_IL_CPU_REGS_0, INST_BASE)
BCHP_REGISTER(0x20030018, 32,  RW, HEVD_IL_CPU_REGS_0, CPU_INT_ENA)
BCHP_REGISTER(0x2003001c, 32,  RO, HEVD_IL_CPU_REGS_0, CPU_INT_STAT)
BCHP_REGISTER(0x20030020, 32,  RW, HEVD_IL_CPU_REGS_0, HST2CPU_STAT)
BCHP_REGISTER(0x20030024, 32,  RW, HEVD_IL_CPU_REGS_0, CPU2HST_STAT)
BCHP_REGISTER(0x20030028, 32,  RW, HEVD_IL_CPU_REGS_0, CPU_INTGEN_SET)
BCHP_REGISTER(0x2003002c, 32,  RW, HEVD_IL_CPU_REGS_0, CPU_INTGEN_CLR)
BCHP_REGISTER(0x20030030, 32,  RW, HEVD_IL_CPU_REGS_0, CPU_ICACHE_MISS)
BCHP_REGISTER(0x20030034, 32,  RW, HEVD_IL_CPU_REGS_0, CPU_INTGEN_MASK)
BCHP_REGISTER(0x20030038, 32,  RW, HEVD_IL_CPU_REGS_0, DRAM_RD_CNTR)
BCHP_REGISTER(0x2003003c, 32,  RW, HEVD_IL_CPU_REGS_0, END_OF_CODE)
BCHP_REGISTER(0x20030040, 64,  RW, HEVD_IL_CPU_REGS_0, GLOBAL_IO_BASE)
BCHP_REGISTER(0x20030048, 32,  RW, HEVD_IL_CPU_REGS_0, DRAM_WR_CNTR)
BCHP_REGISTER(0x2003004c, 32,  RW, HEVD_IL_CPU_REGS_0, WATCHDOG_TMR)
BCHP_REGISTER(0x20030050, 32,  RO, HEVD_IL_CPU_REGS_0, SDRAM_STATUS)
BCHP_REGISTER(0x20030054, 32,  RW, HEVD_IL_CPU_REGS_0, DEBUG_CTL)
BCHP_REGISTER(0x20030060, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG0)
BCHP_REGISTER(0x20030064, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG1)
BCHP_REGISTER(0x20030068, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG2)
BCHP_REGISTER(0x2003006c, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG3)
BCHP_REGISTER(0x20030070, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG4)
BCHP_REGISTER(0x20030074, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG5)
BCHP_REGISTER(0x20030078, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG6)
BCHP_REGISTER(0x2003007c, 32,  RW, HEVD_IL_CPU_REGS_0, CMD_REG7)
BCHP_REGISTER(0x20030080, 32,  RW, HEVD_IL_CPU_REGS_0, GENERAL_TMR)
BCHP_REGISTER(0x20030084, 32,  RW, HEVD_IL_CPU_REGS_0, RM2_ARB_TIMEOUT)
BCHP_REGISTER(0x20030088, 32,  RW, HEVD_IL_CPU_REGS_0, RM2_ARB_TIMEOUT_SLICE)
BCHP_REGISTER(0x2003008c, 32,  RW, HEVD_IL_CPU_REGS_0, RBUS_ERROR_LOW)
BCHP_REGISTER(0x20030090, 32,  RW, HEVD_IL_CPU_REGS_0, RBUS_ERROR_HI)
BCHP_REGISTER(0x20030108, 32,  RO, HEVD_IL_CPU_REGS_0, DEC_VERSION)
BCHP_REGISTER(0x20030110, 64,  RW, HEVD_IL_CPU_REGS_0, SDRAM_ADDR0)
BCHP_REGISTER(0x20030118, 32,  RW, HEVD_IL_CPU_REGS_0, SDRAM_DATA0)
BCHP_REGISTER(0x20030120, 64,  RW, HEVD_IL_CPU_REGS_0, SDRAM_ADDR1)
BCHP_REGISTER(0x20030128, 32,  RW, HEVD_IL_CPU_REGS_0, SDRAM_DATA1)
BCHP_REGISTER(0x20030130, 64,  RW, HEVD_IL_CPU_REGS_0, SDRAM_WINDOW)
BCHP_REGISTER(0x20030400, 64,  RW, HEVD_IL_CPU_DMA_0, CH0_SD_ADDR)
BCHP_REGISTER(0x20030408, 32,  RW, HEVD_IL_CPU_DMA_0, CH0_LCL_ADDR)
BCHP_REGISTER(0x2003040c, 32,  RW, HEVD_IL_CPU_DMA_0, CH0_LEN)
BCHP_REGISTER(0x20030410, 64,  RW, HEVD_IL_CPU_DMA_0, CH1_SD_ADDR)
BCHP_REGISTER(0x20030418, 32,  RW, HEVD_IL_CPU_DMA_0, CH1_LCL_ADDR)
BCHP_REGISTER(0x2003041c, 32,  RW, HEVD_IL_CPU_DMA_0, CH1_LEN)
BCHP_REGISTER(0x20030420, 64,  RW, HEVD_IL_CPU_DMA_0, CH2_SD_ADDR)
BCHP_REGISTER(0x20030428, 32,  RW, HEVD_IL_CPU_DMA_0, CH2_LCL_ADDR)
BCHP_REGISTER(0x2003042c, 32,  RW, HEVD_IL_CPU_DMA_0, CH2_LEN)
BCHP_REGISTER(0x20030430, 64,  RW, HEVD_IL_CPU_DMA_0, CH3_SD_ADDR)
BCHP_REGISTER(0x20030438, 32,  RW, HEVD_IL_CPU_DMA_0, CH3_LCL_ADDR)
BCHP_REGISTER(0x2003043c, 32,  RW, HEVD_IL_CPU_DMA_0, CH3_LEN)
BCHP_REGISTER(0x20030440, 32,  RO, HEVD_IL_CPU_DMA_0, STATUS)
BCHP_REGISTER(0x20031000, 32,  RW, HEVD_IL_SLICE_DMA_0, SOURCE_ADDR)
BCHP_REGISTER(0x20031004, 32,  RW, HEVD_IL_SLICE_DMA_0, LENGTH)
BCHP_REGISTER(0x20031008, 32,  RW, HEVD_IL_SLICE_DMA_0, CONTROL)
BCHP_REGISTER(0x2003100c, 32,  RO, HEVD_IL_SLICE_DMA_0, STATUS)
BCHP_REGISTER(0x20080000, 32,  RO, HVD_INTR2_0, CPU_STATUS)
BCHP_REGISTER(0x20080004, 32,  WO, HVD_INTR2_0, CPU_SET)
BCHP_REGISTER(0x20080008, 32,  WO, HVD_INTR2_0, CPU_CLEAR)
BCHP_REGISTER(0x2008000c, 32,  RO, HVD_INTR2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x20080010, 32,  WO, HVD_INTR2_0, CPU_MASK_SET)
BCHP_REGISTER(0x20080014, 32,  WO, HVD_INTR2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20080018, 32,  RO, HVD_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x2008001c, 32,  WO, HVD_INTR2_0, PCI_SET)
BCHP_REGISTER(0x20080020, 32,  WO, HVD_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x20080024, 32,  RO, HVD_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x20080028, 32,  WO, HVD_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x2008002c, 32,  WO, HVD_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x200a0000, 32,  RW, VICH_0, RESERVED)
BCHP_REGISTER(0x200a00ac, 32,  RW, VICH_0, RESERVED_END)
BCHP_REGISTER(0x20200000, 32,  RW, SDIO_0_HOST, SDMA)
BCHP_REGISTER(0x20200004, 32,  RW, SDIO_0_HOST, BLOCK)
BCHP_REGISTER(0x20200008, 32,  RW, SDIO_0_HOST, ARGUMENT)
BCHP_REGISTER(0x2020000c, 32,  RW, SDIO_0_HOST, CMD_MODE)
BCHP_REGISTER(0x20200010, 32,  RO, SDIO_0_HOST, RESP_01)
BCHP_REGISTER(0x20200014, 32,  RO, SDIO_0_HOST, RESP_23)
BCHP_REGISTER(0x20200018, 32,  RO, SDIO_0_HOST, RESP_45)
BCHP_REGISTER(0x2020001c, 32,  RO, SDIO_0_HOST, RESP_67)
BCHP_REGISTER(0x20200020, 32,  RW, SDIO_0_HOST, BUFFDATA)
BCHP_REGISTER(0x20200024, 32,  RO, SDIO_0_HOST, STATE)
BCHP_REGISTER(0x20200028, 32,  RW, SDIO_0_HOST, CTRL_SET0)
BCHP_REGISTER(0x2020002c, 32,  RW, SDIO_0_HOST, CTRL_SET1)
BCHP_REGISTER(0x20200030, 32,  RW, SDIO_0_HOST, INT_STATUS)
BCHP_REGISTER(0x20200034, 32,  RW, SDIO_0_HOST, INT_STATUS_ENA)
BCHP_REGISTER(0x20200038, 32,  RW, SDIO_0_HOST, INT_SIGNAL_ENA)
BCHP_REGISTER(0x2020003c, 32,  RW, SDIO_0_HOST, AUTOCMD12_STAT)
BCHP_REGISTER(0x20200040, 32,  RO, SDIO_0_HOST, CAPABLE)
BCHP_REGISTER(0x20200044, 32,  RO, SDIO_0_HOST, CAPABLE_1)
BCHP_REGISTER(0x20200048, 32,  RO, SDIO_0_HOST, POWER_CAPABLE)
BCHP_REGISTER(0x2020004c, 32,  RO, SDIO_0_HOST, POWER_CAPABLE_RSVD)
BCHP_REGISTER(0x20200050, 32,  RW, SDIO_0_HOST, FORCE_EVENTS)
BCHP_REGISTER(0x20200054, 32,  RO, SDIO_0_HOST, ADMA_ERR_STAT)
BCHP_REGISTER(0x20200058, 32,  RW, SDIO_0_HOST, ADMA_SYSADDR_LO)
BCHP_REGISTER(0x2020005c, 32,  RO, SDIO_0_HOST, ADMA_SYSADDR_HI)
BCHP_REGISTER(0x20200060, 32,  RO, SDIO_0_HOST, PRESET_INIT_DEFAULT)
BCHP_REGISTER(0x20200064, 32,  RO, SDIO_0_HOST, PRESET_HIGH_SPEED)
BCHP_REGISTER(0x20200068, 32,  RO, SDIO_0_HOST, PRESET_SDR25_50)
BCHP_REGISTER(0x2020006c, 32,  RO, SDIO_0_HOST, PRESET_SDR104_DDR50)
BCHP_REGISTER(0x20200070, 32,  RW, SDIO_0_HOST, BOOT_TIMEOUT)
BCHP_REGISTER(0x20200074, 32,  WO, SDIO_0_HOST, DEBUG_SELECT)
BCHP_REGISTER(0x202000e0, 32,  RW, SDIO_0_HOST, SHARED_BUS_CTRL)
BCHP_REGISTER(0x202000f0, 32,  RW, SDIO_0_HOST, SPI_INTERRUPT)
BCHP_REGISTER(0x202000fc, 32,  RO, SDIO_0_HOST, VERSION_STATUS)
BCHP_REGISTER(0x20200100, 32,  RW, SDIO_0_CFG, SDIO_EMMC_CTRL1)
BCHP_REGISTER(0x20200104, 32,  RW, SDIO_0_CFG, SDIO_EMMC_CTRL2)
BCHP_REGISTER(0x20200108, 32,  RW, SDIO_0_CFG, TP_OUT_SEL)
BCHP_REGISTER(0x2020010c, 32,  RW, SDIO_0_CFG, CAP_REG_OVERRIDE)
BCHP_REGISTER(0x20200110, 32,  RW, SDIO_0_CFG, CAP_REG0)
BCHP_REGISTER(0x20200114, 32,  RW, SDIO_0_CFG, CAP_REG1)
BCHP_REGISTER(0x20200118, 32,  RW, SDIO_0_CFG, PRESET1)
BCHP_REGISTER(0x2020011c, 32,  RW, SDIO_0_CFG, PRESET2)
BCHP_REGISTER(0x20200120, 32,  RW, SDIO_0_CFG, PRESET3)
BCHP_REGISTER(0x20200124, 32,  RW, SDIO_0_CFG, PRESET4)
BCHP_REGISTER(0x20200128, 32,  RW, SDIO_0_CFG, SD_CLOCK_DELAY)
BCHP_REGISTER(0x20200130, 32,  RW, SDIO_0_CFG, IP_DLY)
BCHP_REGISTER(0x20200134, 32,  RW, SDIO_0_CFG, OP_DLY)
BCHP_REGISTER(0x20200138, 32,  RW, SDIO_0_CFG, TUNING)
BCHP_REGISTER(0x2020013c, 32,  RW, SDIO_0_CFG, VOLT_CTRL)
BCHP_REGISTER(0x20200140, 32,  RO, SDIO_0_CFG, DEBUG_TAP_DLY)
BCHP_REGISTER(0x20200144, 32,  RO, SDIO_0_CFG, DEBUG_A2S_BRIDGE_STATUS)
BCHP_REGISTER(0x20200148, 32,  RO, SDIO_0_CFG, DEBUG_A2S_REQ_START_ADDR)
BCHP_REGISTER(0x2020014c, 32,  RO, SDIO_0_CFG, DEBUG_A2S_REQ_END_ADDR)
BCHP_REGISTER(0x20200150, 32,  RW, SDIO_0_CFG, DEBUG_DISABLE_CLIENT_INIT)
BCHP_REGISTER(0x20200154, 32,  RW, SDIO_0_CFG, SD_PIN_SEL)
BCHP_REGISTER(0x20200158, 32,  RW, SDIO_0_CFG, MAX_CURRENT)
BCHP_REGISTER(0x202001f0, 32,  RO, SDIO_0_CFG, VERSION)
BCHP_REGISTER(0x202001fc, 32,  RW, SDIO_0_CFG, SCRATCH)
BCHP_REGISTER(0x20200200, 32,  RW, SDIO_1_HOST, SDMA)
BCHP_REGISTER(0x20200204, 32,  RW, SDIO_1_HOST, BLOCK)
BCHP_REGISTER(0x20200208, 32,  RW, SDIO_1_HOST, ARGUMENT)
BCHP_REGISTER(0x2020020c, 32,  RW, SDIO_1_HOST, CMD_MODE)
BCHP_REGISTER(0x20200210, 32,  RO, SDIO_1_HOST, RESP_01)
BCHP_REGISTER(0x20200214, 32,  RO, SDIO_1_HOST, RESP_23)
BCHP_REGISTER(0x20200218, 32,  RO, SDIO_1_HOST, RESP_45)
BCHP_REGISTER(0x2020021c, 32,  RO, SDIO_1_HOST, RESP_67)
BCHP_REGISTER(0x20200220, 32,  RW, SDIO_1_HOST, BUFFDATA)
BCHP_REGISTER(0x20200224, 32,  RO, SDIO_1_HOST, STATE)
BCHP_REGISTER(0x20200228, 32,  RW, SDIO_1_HOST, CTRL_SET0)
BCHP_REGISTER(0x2020022c, 32,  RW, SDIO_1_HOST, CTRL_SET1)
BCHP_REGISTER(0x20200230, 32,  RW, SDIO_1_HOST, INT_STATUS)
BCHP_REGISTER(0x20200234, 32,  RW, SDIO_1_HOST, INT_STATUS_ENA)
BCHP_REGISTER(0x20200238, 32,  RW, SDIO_1_HOST, INT_SIGNAL_ENA)
BCHP_REGISTER(0x2020023c, 32,  RW, SDIO_1_HOST, AUTOCMD12_STAT)
BCHP_REGISTER(0x20200240, 32,  RO, SDIO_1_HOST, CAPABLE)
BCHP_REGISTER(0x20200244, 32,  RO, SDIO_1_HOST, CAPABLE_1)
BCHP_REGISTER(0x20200248, 32,  RO, SDIO_1_HOST, POWER_CAPABLE)
BCHP_REGISTER(0x2020024c, 32,  RO, SDIO_1_HOST, POWER_CAPABLE_RSVD)
BCHP_REGISTER(0x20200250, 32,  RW, SDIO_1_HOST, FORCE_EVENTS)
BCHP_REGISTER(0x20200254, 32,  RO, SDIO_1_HOST, ADMA_ERR_STAT)
BCHP_REGISTER(0x20200258, 32,  RW, SDIO_1_HOST, ADMA_SYSADDR_LO)
BCHP_REGISTER(0x2020025c, 32,  RO, SDIO_1_HOST, ADMA_SYSADDR_HI)
BCHP_REGISTER(0x20200260, 32,  RO, SDIO_1_HOST, PRESET_INIT_DEFAULT)
BCHP_REGISTER(0x20200264, 32,  RO, SDIO_1_HOST, PRESET_HIGH_SPEED)
BCHP_REGISTER(0x20200268, 32,  RO, SDIO_1_HOST, PRESET_SDR25_50)
BCHP_REGISTER(0x2020026c, 32,  RO, SDIO_1_HOST, PRESET_SDR104_DDR50)
BCHP_REGISTER(0x20200270, 32,  RW, SDIO_1_HOST, BOOT_TIMEOUT)
BCHP_REGISTER(0x20200274, 32,  WO, SDIO_1_HOST, DEBUG_SELECT)
BCHP_REGISTER(0x202002e0, 32,  RW, SDIO_1_HOST, SHARED_BUS_CTRL)
BCHP_REGISTER(0x202002f0, 32,  RW, SDIO_1_HOST, SPI_INTERRUPT)
BCHP_REGISTER(0x202002fc, 32,  RO, SDIO_1_HOST, VERSION_STATUS)
BCHP_REGISTER(0x20200300, 32,  RW, SDIO_1_CFG, SDIO_EMMC_CTRL1)
BCHP_REGISTER(0x20200304, 32,  RW, SDIO_1_CFG, SDIO_EMMC_CTRL2)
BCHP_REGISTER(0x20200308, 32,  RW, SDIO_1_CFG, TP_OUT_SEL)
BCHP_REGISTER(0x2020030c, 32,  RW, SDIO_1_CFG, CAP_REG_OVERRIDE)
BCHP_REGISTER(0x20200310, 32,  RW, SDIO_1_CFG, CAP_REG0)
BCHP_REGISTER(0x20200314, 32,  RW, SDIO_1_CFG, CAP_REG1)
BCHP_REGISTER(0x20200318, 32,  RW, SDIO_1_CFG, PRESET1)
BCHP_REGISTER(0x2020031c, 32,  RW, SDIO_1_CFG, PRESET2)
BCHP_REGISTER(0x20200320, 32,  RW, SDIO_1_CFG, PRESET3)
BCHP_REGISTER(0x20200324, 32,  RW, SDIO_1_CFG, PRESET4)
BCHP_REGISTER(0x20200328, 32,  RW, SDIO_1_CFG, SD_CLOCK_DELAY)
BCHP_REGISTER(0x20200330, 32,  RW, SDIO_1_CFG, IP_DLY)
BCHP_REGISTER(0x20200334, 32,  RW, SDIO_1_CFG, OP_DLY)
BCHP_REGISTER(0x20200338, 32,  RW, SDIO_1_CFG, TUNING)
BCHP_REGISTER(0x2020033c, 32,  RW, SDIO_1_CFG, VOLT_CTRL)
BCHP_REGISTER(0x20200340, 32,  RO, SDIO_1_CFG, DEBUG_TAP_DLY)
BCHP_REGISTER(0x20200344, 32,  RO, SDIO_1_CFG, DEBUG_A2S_BRIDGE_STATUS)
BCHP_REGISTER(0x20200348, 32,  RO, SDIO_1_CFG, DEBUG_A2S_REQ_START_ADDR)
BCHP_REGISTER(0x2020034c, 32,  RO, SDIO_1_CFG, DEBUG_A2S_REQ_END_ADDR)
BCHP_REGISTER(0x20200350, 32,  RW, SDIO_1_CFG, DEBUG_DISABLE_CLIENT_INIT)
BCHP_REGISTER(0x20200354, 32,  RW, SDIO_1_CFG, SD_PIN_SEL)
BCHP_REGISTER(0x20200358, 32,  RW, SDIO_1_CFG, MAX_CURRENT)
BCHP_REGISTER(0x202003f0, 32,  RO, SDIO_1_CFG, VERSION)
BCHP_REGISTER(0x202003fc, 32,  RW, SDIO_1_CFG, SCRATCH)
BCHP_REGISTER(0x20200400, 32,  RW, SDIO_1_BOOT, MAIN_CTL)
BCHP_REGISTER(0x20200404, 32,  RO, SDIO_1_BOOT, STATUS)
BCHP_REGISTER(0x20200408, 32,  RO, SDIO_1_BOOT, VERSION)
BCHP_REGISTER(0x20200410, 32,  RW, SDIO_1_BOOT, CLK_DIV)
BCHP_REGISTER(0x20200414, 32,  RO, SDIO_1_BOOT, RESET_CNT)
BCHP_REGISTER(0x20200418, 32,  RW, SDIO_1_BOOT, RAM_FILL)
BCHP_REGISTER(0x2020041c, 32,  RO, SDIO_1_BOOT, ERROR_ADDR)
BCHP_REGISTER(0x20200420, 32,  RO, SDIO_1_BOOT, BASE_ADDR0)
BCHP_REGISTER(0x20200424, 32,  RO, SDIO_1_BOOT, BASE_ADDR1)
BCHP_REGISTER(0x20200428, 32,  RO, SDIO_1_BOOT, RAM_FILL_CNT)
BCHP_REGISTER(0x2020042c, 32,  RO, SDIO_1_BOOT, DATA_ACCESS_TIME)
BCHP_REGISTER(0x2020043c, 32,  RO, SDIO_1_BOOT, DEBUG)
BCHP_REGISTER(0x20200800, 32,  RW, EBI, CS_BASE_HI_0)
BCHP_REGISTER(0x20200804, 32,  RW, EBI, CS_BASE_0)
BCHP_REGISTER(0x20200808, 32,  RW, EBI, CS_CONFIG_0)
BCHP_REGISTER(0x2020080c, 32,  RW, EBI, CS_BASE_HI_1)
BCHP_REGISTER(0x20200810, 32,  RW, EBI, CS_BASE_1)
BCHP_REGISTER(0x20200814, 32,  RW, EBI, CS_CONFIG_1)
BCHP_REGISTER(0x20200818, 32,  RW, EBI, CS_BASE_HI_2)
BCHP_REGISTER(0x2020081c, 32,  RW, EBI, CS_BASE_2)
BCHP_REGISTER(0x20200820, 32,  RW, EBI, CS_CONFIG_2)
BCHP_REGISTER(0x20200824, 32,  RW, EBI, CS_BASE_HI_3)
BCHP_REGISTER(0x20200828, 32,  RW, EBI, CS_BASE_3)
BCHP_REGISTER(0x2020082c, 32,  RW, EBI, CS_CONFIG_3)
BCHP_REGISTER(0x20200830, 32,  RW, EBI, CS_BASE_HI_4)
BCHP_REGISTER(0x20200834, 32,  RW, EBI, CS_BASE_4)
BCHP_REGISTER(0x20200838, 32,  RW, EBI, CS_CONFIG_4)
BCHP_REGISTER(0x2020083c, 32,  RW, EBI, CS_BASE_HI_5)
BCHP_REGISTER(0x20200840, 32,  RW, EBI, CS_BASE_5)
BCHP_REGISTER(0x20200844, 32,  RW, EBI, CS_CONFIG_5)
BCHP_REGISTER(0x20200848, 32,  RW, EBI, CS_BASE_HI_6)
BCHP_REGISTER(0x2020084c, 32,  RW, EBI, CS_BASE_6)
BCHP_REGISTER(0x20200850, 32,  RW, EBI, CS_CONFIG_6)
BCHP_REGISTER(0x20200860, 32,  RW, EBI, BURST_CFG_0)
BCHP_REGISTER(0x20200864, 32,  RW, EBI, BURST_CFG_1)
BCHP_REGISTER(0x20200868, 32,  RW, EBI, BURST_CFG_2)
BCHP_REGISTER(0x2020086c, 32,  RW, EBI, BURST_CFG_3)
BCHP_REGISTER(0x20200870, 32,  RW, EBI, BURST_CFG_4)
BCHP_REGISTER(0x20200874, 32,  RW, EBI, BURST_CFG_5)
BCHP_REGISTER(0x20200878, 32,  RW, EBI, BURST_CFG_6)
BCHP_REGISTER(0x20200900, 32,  RW, EBI, ECR)
BCHP_REGISTER(0x20200918, 32,  RW, EBI, CS_TRISTATE_CFG)
BCHP_REGISTER(0x20200920, 32,  RW, EBI, CS_SPI_SELECT)
BCHP_REGISTER(0x202009f0, 32,  RW, EBI, ARRAY_ADDRESS)
BCHP_REGISTER(0x20201000, 32,  RO, HIF_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20201004, 32,  WO, HIF_INTR2, CPU_SET)
BCHP_REGISTER(0x20201008, 32,  WO, HIF_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2020100c, 32,  RO, HIF_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20201010, 32,  WO, HIF_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20201014, 32,  WO, HIF_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20201018, 32,  RO, HIF_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2020101c, 32,  WO, HIF_INTR2, PCI_SET)
BCHP_REGISTER(0x20201020, 32,  WO, HIF_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20201024, 32,  RO, HIF_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20201028, 32,  WO, HIF_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2020102c, 32,  WO, HIF_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20201500, 32,  RO, HIF_CPU_INTR1, INTR_W0_STATUS)
BCHP_REGISTER(0x20201504, 32,  RO, HIF_CPU_INTR1, INTR_W1_STATUS)
BCHP_REGISTER(0x20201508, 32,  RO, HIF_CPU_INTR1, INTR_W2_STATUS)
BCHP_REGISTER(0x2020150c, 32,  RO, HIF_CPU_INTR1, INTR_W3_STATUS)
BCHP_REGISTER(0x20201510, 32,  RO, HIF_CPU_INTR1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20201514, 32,  RO, HIF_CPU_INTR1, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20201518, 32,  RO, HIF_CPU_INTR1, INTR_W2_MASK_STATUS)
BCHP_REGISTER(0x2020151c, 32,  RO, HIF_CPU_INTR1, INTR_W3_MASK_STATUS)
BCHP_REGISTER(0x20201520, 32,  WO, HIF_CPU_INTR1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20201524, 32,  WO, HIF_CPU_INTR1, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20201528, 32,  WO, HIF_CPU_INTR1, INTR_W2_MASK_SET)
BCHP_REGISTER(0x2020152c, 32,  WO, HIF_CPU_INTR1, INTR_W3_MASK_SET)
BCHP_REGISTER(0x20201530, 32,  WO, HIF_CPU_INTR1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20201534, 32,  WO, HIF_CPU_INTR1, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20201538, 32,  WO, HIF_CPU_INTR1, INTR_W2_MASK_CLEAR)
BCHP_REGISTER(0x2020153c, 32,  WO, HIF_CPU_INTR1, INTR_W3_MASK_CLEAR)
BCHP_REGISTER(0x20201600, 32,  RO, PCI_PCIE_INTR1, INTR_W0_STATUS)
BCHP_REGISTER(0x20201604, 32,  RO, PCI_PCIE_INTR1, INTR_W1_STATUS)
BCHP_REGISTER(0x20201608, 32,  RO, PCI_PCIE_INTR1, INTR_W2_STATUS)
BCHP_REGISTER(0x2020160c, 32,  RO, PCI_PCIE_INTR1, INTR_W3_STATUS)
BCHP_REGISTER(0x20201610, 32,  RO, PCI_PCIE_INTR1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20201614, 32,  RO, PCI_PCIE_INTR1, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20201618, 32,  RO, PCI_PCIE_INTR1, INTR_W2_MASK_STATUS)
BCHP_REGISTER(0x2020161c, 32,  RO, PCI_PCIE_INTR1, INTR_W3_MASK_STATUS)
BCHP_REGISTER(0x20201620, 32,  WO, PCI_PCIE_INTR1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20201624, 32,  WO, PCI_PCIE_INTR1, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20201628, 32,  WO, PCI_PCIE_INTR1, INTR_W2_MASK_SET)
BCHP_REGISTER(0x2020162c, 32,  WO, PCI_PCIE_INTR1, INTR_W3_MASK_SET)
BCHP_REGISTER(0x20201630, 32,  WO, PCI_PCIE_INTR1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20201634, 32,  WO, PCI_PCIE_INTR1, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20201638, 32,  WO, PCI_PCIE_INTR1, INTR_W2_MASK_CLEAR)
BCHP_REGISTER(0x2020163c, 32,  WO, PCI_PCIE_INTR1, INTR_W3_MASK_CLEAR)
BCHP_REGISTER(0x20201700, 32,  RO, HIF_RGR2, REVISION)
BCHP_REGISTER(0x20201704, 32,  RW, HIF_RGR2, CTRL)
BCHP_REGISTER(0x20201708, 32,  RW, HIF_RGR2, RBUS_TIMER)
BCHP_REGISTER(0x2020170c, 32,  RW, HIF_RGR2, SW_INIT_0)
BCHP_REGISTER(0x20201710, 32,  RW, HIF_RGR2, SW_INIT_1)
BCHP_REGISTER(0x20201a00, 32,  RO, HIF_SPI_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20201a04, 32,  WO, HIF_SPI_INTR2, CPU_SET)
BCHP_REGISTER(0x20201a08, 32,  WO, HIF_SPI_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x20201a0c, 32,  RO, HIF_SPI_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20201a10, 32,  WO, HIF_SPI_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20201a14, 32,  WO, HIF_SPI_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20201a18, 32,  RO, HIF_SPI_INTR2, PCI_STATUS)
BCHP_REGISTER(0x20201a1c, 32,  WO, HIF_SPI_INTR2, PCI_SET)
BCHP_REGISTER(0x20201a20, 32,  WO, HIF_SPI_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20201a24, 32,  RO, HIF_SPI_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20201a28, 32,  WO, HIF_SPI_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x20201a2c, 32,  WO, HIF_SPI_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20201b00, 32,  RW, HIF_TOP_CTRL, EXT_IRQ_LEVEL)
BCHP_REGISTER(0x20201b04, 32,  RW, HIF_TOP_CTRL, SPI_DBG_SEL)
BCHP_REGISTER(0x20201b0c, 32,  RW, HIF_TOP_CTRL, PM_CTRL0)
BCHP_REGISTER(0x20201b10, 32,  RW, HIF_TOP_CTRL, PM_CTRL1)
BCHP_REGISTER(0x20201b14, 32,  RW, HIF_TOP_CTRL, PM_CTRL2)
BCHP_REGISTER(0x20201b18, 32,  RW, HIF_TOP_CTRL, PM_CTRL3)
BCHP_REGISTER(0x20201b1c, 32,  RO, HIF_TOP_CTRL, FLASH_TYPE)
BCHP_REGISTER(0x20201b20, 32,  RW, HIF_TOP_CTRL, PDA_CTRL)
BCHP_REGISTER(0x20201b24, 32,  RO, HIF_TOP_CTRL, PDA_OUT_STATUS)
BCHP_REGISTER(0x20201b3c, 32,  RW, HIF_TOP_CTRL, SCRATCH)
BCHP_REGISTER(0x20202200, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE0_ULIMIT)
BCHP_REGISTER(0x20202204, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE0_LLIMIT)
BCHP_REGISTER(0x20202208, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE0)
BCHP_REGISTER(0x2020220c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE0)
BCHP_REGISTER(0x20202210, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE1_ULIMIT)
BCHP_REGISTER(0x20202214, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE1_LLIMIT)
BCHP_REGISTER(0x20202218, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE1)
BCHP_REGISTER(0x2020221c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE1)
BCHP_REGISTER(0x20202220, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE2_ULIMIT)
BCHP_REGISTER(0x20202224, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE2_LLIMIT)
BCHP_REGISTER(0x20202228, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE2)
BCHP_REGISTER(0x2020222c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE2)
BCHP_REGISTER(0x20202230, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE3_ULIMIT)
BCHP_REGISTER(0x20202234, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE3_LLIMIT)
BCHP_REGISTER(0x20202238, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE3)
BCHP_REGISTER(0x2020223c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE3)
BCHP_REGISTER(0x20202240, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE4_ULIMIT)
BCHP_REGISTER(0x20202244, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE4_LLIMIT)
BCHP_REGISTER(0x20202248, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE4)
BCHP_REGISTER(0x2020224c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE4)
BCHP_REGISTER(0x20202250, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE5_ULIMIT)
BCHP_REGISTER(0x20202254, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE5_LLIMIT)
BCHP_REGISTER(0x20202258, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE5)
BCHP_REGISTER(0x2020225c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE5)
BCHP_REGISTER(0x20202260, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE6_ULIMIT)
BCHP_REGISTER(0x20202264, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE6_LLIMIT)
BCHP_REGISTER(0x20202268, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE6)
BCHP_REGISTER(0x2020226c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE6)
BCHP_REGISTER(0x20202270, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE7_ULIMIT)
BCHP_REGISTER(0x20202274, 32,  RW, HIF_CPUBIUARCH, ADDRESS_RANGE7_LLIMIT)
BCHP_REGISTER(0x20202278, 32,  RW, HIF_CPUBIUARCH, PERMISSIONS_RANGE7)
BCHP_REGISTER(0x2020227c, 32,  RW, HIF_CPUBIUARCH, ACCESS_RIGHTS_CONTROL_RANGE7)
BCHP_REGISTER(0x202023fc, 32,  RW, HIF_CPUBIUARCH, ARCH_SCRATCH_REG)
BCHP_REGISTER(0x20202400, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT0)
BCHP_REGISTER(0x20202404, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT0)
BCHP_REGISTER(0x20202408, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT1)
BCHP_REGISTER(0x2020240c, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT1)
BCHP_REGISTER(0x20202410, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT2)
BCHP_REGISTER(0x20202414, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT2)
BCHP_REGISTER(0x20202418, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT3)
BCHP_REGISTER(0x2020241c, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT3)
BCHP_REGISTER(0x20202420, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT4)
BCHP_REGISTER(0x20202424, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT4)
BCHP_REGISTER(0x20202428, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT5)
BCHP_REGISTER(0x2020242c, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT5)
BCHP_REGISTER(0x20202430, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT6)
BCHP_REGISTER(0x20202434, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT6)
BCHP_REGISTER(0x20202438, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT7)
BCHP_REGISTER(0x2020243c, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT7)
BCHP_REGISTER(0x20202440, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT8)
BCHP_REGISTER(0x20202444, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT8)
BCHP_REGISTER(0x20202448, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT9)
BCHP_REGISTER(0x2020244c, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT9)
BCHP_REGISTER(0x20202450, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_ULIMT10)
BCHP_REGISTER(0x20202454, 32,  RW, HIF_CPUBIUCTRL, CPU_BUS_RANGE_LLIMT10)
BCHP_REGISTER(0x20202458, 32,  RW, HIF_CPUBIUCTRL, SECURE_RESET_HNDSHAKE_REG)
BCHP_REGISTER(0x2020245c, 32,  RW, HIF_CPUBIUCTRL, SECURE_SOFT_RESET_REG)
BCHP_REGISTER(0x20202460, 32,  RO, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_ADDR0)
BCHP_REGISTER(0x20202464, 32,  RO, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_UPPER_ADDR0)
BCHP_REGISTER(0x20202468, 32,  RW, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_DETAIL_ADDR0)
BCHP_REGISTER(0x2020246c, 32,  RO, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_ADDR1)
BCHP_REGISTER(0x20202470, 32,  RO, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_UPPER_ADDR1)
BCHP_REGISTER(0x20202474, 32,  RW, HIF_CPUBIUCTRL, CPU_ACCESS_RIGHT_VIOL_DETAIL_ADDR1)
BCHP_REGISTER(0x20202478, 32,  RW, HIF_CPUBIUCTRL, RAC_CONFIG0_REG)
BCHP_REGISTER(0x2020247c, 32,  RW, HIF_CPUBIUCTRL, RAC_CONFIG1_REG)
BCHP_REGISTER(0x20202480, 32,  RW, HIF_CPUBIUCTRL, RAC_CONFIG2_REG)
BCHP_REGISTER(0x20202484, 32,  RW, HIF_CPUBIUCTRL, RAC_FLUSH_REG)
BCHP_REGISTER(0x20202488, 32,  RW, HIF_CPUBIUCTRL, CPU_POWER_CONFIG_REG)
BCHP_REGISTER(0x2020248c, 32,  RW, HIF_CPUBIUCTRL, CPU_RESET_CONFIG_REG)
BCHP_REGISTER(0x20202490, 32,  RW, HIF_CPUBIUCTRL, CPU_CLOCK_CONFIG_REG)
BCHP_REGISTER(0x20202494, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER0_CLOCK_CONTROL_REG)
BCHP_REGISTER(0x20202498, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER1_CLOCK_CONTROL_REG)
BCHP_REGISTER(0x2020249c, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER0_CLOCK_PATTERN_REG)
BCHP_REGISTER(0x202024a0, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER1_CLOCK_PATTERN_REG)
BCHP_REGISTER(0x202024a4, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER0_CLOCK_RAMP_REG)
BCHP_REGISTER(0x202024a8, 32,  RW, HIF_CPUBIUCTRL, CPU_CLUSTER1_CLOCK_RAMP_REG)
BCHP_REGISTER(0x202024ac, 32,  RW, HIF_CPUBIUCTRL, CPU_MISC_CONFIG_REG)
BCHP_REGISTER(0x202024b0, 32,  RW, HIF_CPUBIUCTRL, CPU_CREDIT_REG)
BCHP_REGISTER(0x202024b4, 32,  RW, HIF_CPUBIUCTRL, CPU_MCP_FLOW_REG)
BCHP_REGISTER(0x202024b8, 32,  RW, HIF_CPUBIUCTRL, PERIPHBASE_GIC)
BCHP_REGISTER(0x202024bc, 32,  RW, HIF_CPUBIUCTRL, PERIPHBASE_GIC_WEB)
BCHP_REGISTER(0x202024c0, 32,  RW, HIF_CPUBIUCTRL, WFX_STATE)
BCHP_REGISTER(0x202024c4, 32,  RW, HIF_CPUBIUCTRL, CPU0_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024c8, 32,  RW, HIF_CPUBIUCTRL, CPU1_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024cc, 32,  RW, HIF_CPUBIUCTRL, CPU2_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024d0, 32,  RW, HIF_CPUBIUCTRL, CPU3_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024d4, 32,  RW, HIF_CPUBIUCTRL, CPU4_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024d8, 32,  RW, HIF_CPUBIUCTRL, CPU5_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024dc, 32,  RW, HIF_CPUBIUCTRL, CPU6_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024e0, 32,  RW, HIF_CPUBIUCTRL, CPU7_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x202024e4, 32,  RW, HIF_CPUBIUCTRL, CPU0_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024e8, 32,  RW, HIF_CPUBIUCTRL, CPU1_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024ec, 32,  RW, HIF_CPUBIUCTRL, CPU2_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024f0, 32,  RW, HIF_CPUBIUCTRL, CPU3_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024f4, 32,  RW, HIF_CPUBIUCTRL, CPU4_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024f8, 32,  RW, HIF_CPUBIUCTRL, CPU5_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x202024fc, 32,  RW, HIF_CPUBIUCTRL, CPU6_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x20202500, 32,  RW, HIF_CPUBIUCTRL, CPU7_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x20202504, 32,  RW, HIF_CPUBIUCTRL, CPU0_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202508, 32,  RW, HIF_CPUBIUCTRL, CPU1_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x2020250c, 32,  RW, HIF_CPUBIUCTRL, CPU2_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202510, 32,  RW, HIF_CPUBIUCTRL, CPU3_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202514, 32,  RW, HIF_CPUBIUCTRL, CPU4_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202518, 32,  RW, HIF_CPUBIUCTRL, CPU5_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x2020251c, 32,  RW, HIF_CPUBIUCTRL, CPU6_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202520, 32,  RW, HIF_CPUBIUCTRL, CPU7_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202524, 32,  RW, HIF_CPUBIUCTRL, C0L2_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x20202528, 32,  RW, HIF_CPUBIUCTRL, C0L2_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x2020252c, 32,  RW, HIF_CPUBIUCTRL, C0L2_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202530, 32,  RW, HIF_CPUBIUCTRL, C1L2_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x20202534, 32,  RW, HIF_CPUBIUCTRL, C1L2_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x20202538, 32,  RW, HIF_CPUBIUCTRL, C1L2_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x2020253c, 32,  RW, HIF_CPUBIUCTRL, SYSIF_PWR_ZONE_CNTRL_REG)
BCHP_REGISTER(0x20202540, 32,  RW, HIF_CPUBIUCTRL, SYSIF_PWR_ZONE_CONFIG1_REG)
BCHP_REGISTER(0x20202544, 32,  RW, HIF_CPUBIUCTRL, SYSIF_PWR_ZONE_CONFIG2_REG)
BCHP_REGISTER(0x20202548, 32,  RO, HIF_CPUBIUCTRL, CPU0_BPCM_ID)
BCHP_REGISTER(0x2020254c, 32,  RO, HIF_CPUBIUCTRL, CPU0_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202550, 32,  RO, HIF_CPUBIUCTRL, CPU1_BPCM_ID)
BCHP_REGISTER(0x20202554, 32,  RO, HIF_CPUBIUCTRL, CPU1_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202558, 32,  RO, HIF_CPUBIUCTRL, CPU2_BPCM_ID)
BCHP_REGISTER(0x2020255c, 32,  RO, HIF_CPUBIUCTRL, CPU2_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202560, 32,  RO, HIF_CPUBIUCTRL, CPU3_BPCM_ID)
BCHP_REGISTER(0x20202564, 32,  RO, HIF_CPUBIUCTRL, CPU3_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202568, 32,  RO, HIF_CPUBIUCTRL, CPU4_BPCM_ID)
BCHP_REGISTER(0x2020256c, 32,  RO, HIF_CPUBIUCTRL, CPU4_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202570, 32,  RO, HIF_CPUBIUCTRL, CPU5_BPCM_ID)
BCHP_REGISTER(0x20202574, 32,  RO, HIF_CPUBIUCTRL, CPU5_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202578, 32,  RO, HIF_CPUBIUCTRL, CPU6_BPCM_ID)
BCHP_REGISTER(0x2020257c, 32,  RO, HIF_CPUBIUCTRL, CPU6_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202580, 32,  RO, HIF_CPUBIUCTRL, CPU7_BPCM_ID)
BCHP_REGISTER(0x20202584, 32,  RO, HIF_CPUBIUCTRL, CPU7_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202588, 32,  RO, HIF_CPUBIUCTRL, C0L2_BPCM_ID)
BCHP_REGISTER(0x2020258c, 32,  RO, HIF_CPUBIUCTRL, C0L2_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202590, 32,  RO, HIF_CPUBIUCTRL, C1L2_BPCM_ID)
BCHP_REGISTER(0x20202594, 32,  RO, HIF_CPUBIUCTRL, C1L2_BPCM_CAPABILITY)
BCHP_REGISTER(0x20202598, 32,  RO, HIF_CPUBIUCTRL, SYSIF_BPCM_ID)
BCHP_REGISTER(0x2020259c, 32,  RO, HIF_CPUBIUCTRL, SYSIF_BPCM_CAPABILITY)
BCHP_REGISTER(0x202025a0, 32,  RO, HIF_CPUBIUCTRL, CPU_THERM_THROTTLE_TEMP_REG)
BCHP_REGISTER(0x202025a4, 32,  RW, HIF_CPUBIUCTRL, CPU_THERM_THROTTLE_IRQ_CONFIG_REG)
BCHP_REGISTER(0x202025a8, 32,  RW, HIF_CPUBIUCTRL, CPU_THERM_IRQ_HIGH_REG)
BCHP_REGISTER(0x202025ac, 32,  RW, HIF_CPUBIUCTRL, CPU_THERM_IRQ_LOW_REG)
BCHP_REGISTER(0x202025b0, 32,  RW, HIF_CPUBIUCTRL, CPU_THERM_MISC_THRESHOLD_REG)
BCHP_REGISTER(0x202025b4, 32,  RO, HIF_CPUBIUCTRL, CPU_THERM_IRQ_MISC_REG)
BCHP_REGISTER(0x202025b8, 32,  RW, HIF_CPUBIUCTRL, CPU_DEFEATURE_REG)
BCHP_REGISTER(0x202025bc, 32,  RW, HIF_CPUBIUCTRL, CPU_DEFEATURE_REG2)
BCHP_REGISTER(0x202025c0, 32,  RW, HIF_CPUBIUCTRL, CPU_DEFEATURE_KEY_REG)
BCHP_REGISTER(0x202025c4, 32,  RW, HIF_CPUBIUCTRL, CPU_DEBUGROMADDR_REG)
BCHP_REGISTER(0x202025c8, 32,  RW, HIF_CPUBIUCTRL, CPU_DEBUG_TRACECTRL_REG)
BCHP_REGISTER(0x202025cc, 32,  RW, HIF_CPUBIUCTRL, CPU_AXICONFIG_REG)
BCHP_REGISTER(0x202025d0, 32,  RO, HIF_CPUBIUCTRL, CPU_REVISION_REG)
BCHP_REGISTER(0x202025d4, 32,  RO, HIF_CPUBIUCTRL, CPU_PATCHLEVEL_REG)
BCHP_REGISTER(0x202025d8, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CONFIG)
BCHP_REGISTER(0x202025dc, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW0)
BCHP_REGISTER(0x202025e0, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW1)
BCHP_REGISTER(0x202025e4, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW2)
BCHP_REGISTER(0x202025e8, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW3)
BCHP_REGISTER(0x202025ec, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW4)
BCHP_REGISTER(0x202025f0, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW5)
BCHP_REGISTER(0x202025f4, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW6)
BCHP_REGISTER(0x202025f8, 32,  RW, HIF_CPUBIUCTRL, CPU_UBUS_CFGWINDOW7)
BCHP_REGISTER(0x202025fc, 32,  RO, HIF_CPUBIUCTRL, CPU_POWER_STATE)
BCHP_REGISTER(0x20202600, 32,  RO, HIF_CPUBIUCTRL, CPU_PHYS_CONFIG)
BCHP_REGISTER(0x20202604, 32,  RO, HIF_CPUBIUCTRL, CPU_RVBAR_ADDRLO)
BCHP_REGISTER(0x20202608, 32,  RO, HIF_CPUBIUCTRL, CPU_RVBAR_ADDRHI)
BCHP_REGISTER(0x2020260c, 32,  RW, HIF_CPUBIUCTRL, CPU0_VMID_REG)
BCHP_REGISTER(0x20202610, 32,  RW, HIF_CPUBIUCTRL, CPU1_VMID_REG)
BCHP_REGISTER(0x20202614, 32,  RW, HIF_CPUBIUCTRL, CPU2_VMID_REG)
BCHP_REGISTER(0x20202618, 32,  RW, HIF_CPUBIUCTRL, CPU3_VMID_REG)
BCHP_REGISTER(0x2020261c, 32,  RW, HIF_CPUBIUCTRL, CPU4_VMID_REG)
BCHP_REGISTER(0x20202620, 32,  RW, HIF_CPUBIUCTRL, CPU5_VMID_REG)
BCHP_REGISTER(0x20202624, 32,  RW, HIF_CPUBIUCTRL, CPU6_VMID_REG)
BCHP_REGISTER(0x20202628, 32,  RW, HIF_CPUBIUCTRL, CPU7_VMID_REG)
BCHP_REGISTER(0x2020262c, 32,  RW, HIF_CPUBIUCTRL, CPU_WRITEBACK_CTRL_REG)
BCHP_REGISTER(0x202027fc, 32,  RW, HIF_CPUBIUCTRL, CPU_SCRATCH_REG)
BCHP_REGISTER(0x20203000, 32,  RO, NAND, REVISION)
BCHP_REGISTER(0x20203004, 32,  RW, NAND, CMD_START)
BCHP_REGISTER(0x20203008, 32,  RW, NAND, CMD_EXT_ADDRESS)
BCHP_REGISTER(0x2020300c, 32,  RW, NAND, CMD_ADDRESS)
BCHP_REGISTER(0x20203010, 32,  RW, NAND, CMD_END_ADDRESS)
BCHP_REGISTER(0x20203014, 32,  RO, NAND, INTFC_STATUS)
BCHP_REGISTER(0x20203018, 32,  RW, NAND, CS_NAND_SELECT)
BCHP_REGISTER(0x2020301c, 32,  RW, NAND, CS_NAND_XOR)
BCHP_REGISTER(0x20203020, 32,  RW, NAND, LL_OP)
BCHP_REGISTER(0x20203024, 32,  RW, NAND, MPLANE_BASE_EXT_ADDRESS)
BCHP_REGISTER(0x20203028, 32,  RW, NAND, MPLANE_BASE_ADDRESS)
BCHP_REGISTER(0x2020302c, 32,  RW, NAND, DATA_SCRAMBLE)
BCHP_REGISTER(0x20203050, 32,  RW, NAND, ACC_CONTROL_CS0)
BCHP_REGISTER(0x20203054, 32,  RW, NAND, CONFIG_EXT_CS0)
BCHP_REGISTER(0x20203058, 32,  RW, NAND, CONFIG_CS0)
BCHP_REGISTER(0x2020305c, 32,  RW, NAND, TIMING_1_CS0)
BCHP_REGISTER(0x20203060, 32,  RW, NAND, TIMING_2_CS0)
BCHP_REGISTER(0x20203064, 32,  RW, NAND, ACC_CONTROL_CS1)
BCHP_REGISTER(0x20203068, 32,  RW, NAND, CONFIG_EXT_CS1)
BCHP_REGISTER(0x2020306c, 32,  RW, NAND, CONFIG_CS1)
BCHP_REGISTER(0x20203070, 32,  RW, NAND, TIMING_1_CS1)
BCHP_REGISTER(0x20203074, 32,  RW, NAND, TIMING_2_CS1)
BCHP_REGISTER(0x20203078, 32,  RW, NAND, ACC_CONTROL_CS2)
BCHP_REGISTER(0x2020307c, 32,  RW, NAND, CONFIG_EXT_CS2)
BCHP_REGISTER(0x20203080, 32,  RW, NAND, CONFIG_CS2)
BCHP_REGISTER(0x20203084, 32,  RW, NAND, TIMING_1_CS2)
BCHP_REGISTER(0x20203088, 32,  RW, NAND, TIMING_2_CS2)
BCHP_REGISTER(0x2020308c, 32,  RW, NAND, ACC_CONTROL_CS3)
BCHP_REGISTER(0x20203090, 32,  RW, NAND, CONFIG_EXT_CS3)
BCHP_REGISTER(0x20203094, 32,  RW, NAND, CONFIG_CS3)
BCHP_REGISTER(0x20203098, 32,  RW, NAND, TIMING_1_CS3)
BCHP_REGISTER(0x2020309c, 32,  RW, NAND, TIMING_2_CS3)
BCHP_REGISTER(0x202030a0, 32,  RW, NAND, ACC_CONTROL_CS4)
BCHP_REGISTER(0x202030a4, 32,  RW, NAND, CONFIG_EXT_CS4)
BCHP_REGISTER(0x202030a8, 32,  RW, NAND, CONFIG_CS4)
BCHP_REGISTER(0x202030ac, 32,  RW, NAND, TIMING_1_CS4)
BCHP_REGISTER(0x202030b0, 32,  RW, NAND, TIMING_2_CS4)
BCHP_REGISTER(0x202030b4, 32,  RW, NAND, ACC_CONTROL_CS5)
BCHP_REGISTER(0x202030b8, 32,  RW, NAND, CONFIG_EXT_CS5)
BCHP_REGISTER(0x202030bc, 32,  RW, NAND, CONFIG_CS5)
BCHP_REGISTER(0x202030c0, 32,  RW, NAND, TIMING_1_CS5)
BCHP_REGISTER(0x202030c4, 32,  RW, NAND, TIMING_2_CS5)
BCHP_REGISTER(0x202030c8, 32,  RW, NAND, ACC_CONTROL_CS6)
BCHP_REGISTER(0x202030cc, 32,  RW, NAND, CONFIG_EXT_CS6)
BCHP_REGISTER(0x202030d0, 32,  RW, NAND, CONFIG_CS6)
BCHP_REGISTER(0x202030d4, 32,  RW, NAND, TIMING_1_CS6)
BCHP_REGISTER(0x202030d8, 32,  RW, NAND, TIMING_2_CS6)
BCHP_REGISTER(0x202030dc, 32,  RW, NAND, CORR_STAT_THRESHOLD)
BCHP_REGISTER(0x202030e0, 32,  RW, NAND, CORR_STAT_THRESHOLD_EXT)
BCHP_REGISTER(0x202030e4, 32,  RW, NAND, BLK_WR_PROTECT)
BCHP_REGISTER(0x202030e8, 32,  RW, NAND, MULTIPLANE_OPCODES_1)
BCHP_REGISTER(0x202030ec, 32,  RW, NAND, MULTIPLANE_OPCODES_2)
BCHP_REGISTER(0x202030f0, 32,  RW, NAND, MULTIPLANE_CTRL)
BCHP_REGISTER(0x202030fc, 32,  RW, NAND, UNCORR_ERROR_COUNT)
BCHP_REGISTER(0x20203100, 32,  RO, NAND, CORR_ERROR_COUNT)
BCHP_REGISTER(0x20203104, 32,  RO, NAND, READ_ERROR_COUNT)
BCHP_REGISTER(0x20203108, 32,  RO, NAND, BLOCK_LOCK_STATUS)
BCHP_REGISTER(0x2020310c, 32,  RO, NAND, ECC_CORR_EXT_ADDR)
BCHP_REGISTER(0x20203110, 32,  RO, NAND, ECC_CORR_ADDR)
BCHP_REGISTER(0x20203114, 32,  RO, NAND, ECC_UNC_EXT_ADDR)
BCHP_REGISTER(0x20203118, 32,  RO, NAND, ECC_UNC_ADDR)
BCHP_REGISTER(0x2020311c, 32,  RO, NAND, FLASH_READ_EXT_ADDR)
BCHP_REGISTER(0x20203120, 32,  RO, NAND, FLASH_READ_ADDR)
BCHP_REGISTER(0x20203124, 32,  RO, NAND, PROGRAM_PAGE_EXT_ADDR)
BCHP_REGISTER(0x20203128, 32,  RO, NAND, PROGRAM_PAGE_ADDR)
BCHP_REGISTER(0x2020312c, 32,  RO, NAND, COPY_BACK_EXT_ADDR)
BCHP_REGISTER(0x20203130, 32,  RO, NAND, COPY_BACK_ADDR)
BCHP_REGISTER(0x20203134, 32,  RO, NAND, BLOCK_ERASE_EXT_ADDR)
BCHP_REGISTER(0x20203138, 32,  RO, NAND, BLOCK_ERASE_ADDR)
BCHP_REGISTER(0x2020313c, 32,  RO, NAND, INV_READ_EXT_ADDR)
BCHP_REGISTER(0x20203140, 32,  RO, NAND, INV_READ_ADDR)
BCHP_REGISTER(0x20203144, 32,  RO, NAND, INIT_STATUS)
BCHP_REGISTER(0x20203148, 32,  RW, NAND, ONFI_STATUS)
BCHP_REGISTER(0x2020314c, 32,  RO, NAND, ONFI_DEBUG_DATA)
BCHP_REGISTER(0x20203150, 32,  RW, NAND, SEMAPHORE)
BCHP_REGISTER(0x20203184, 32,  RW, NAND, SET_FEATURE_DATA)
BCHP_REGISTER(0x20203188, 32,  RO, NAND, GET_FEATURE_DATA)
BCHP_REGISTER(0x2020318c, 32,  RO, NAND, FLASH_JEDEC_ID)
BCHP_REGISTER(0x20203190, 32,  RO, NAND, FLASH_JEDEC_ID_EXT)
BCHP_REGISTER(0x20203194, 32,  RO, NAND, FLASH_DEVICE_ID)
BCHP_REGISTER(0x20203198, 32,  RO, NAND, FLASH_DEVICE_ID_EXT)
BCHP_REGISTER(0x2020319c, 32,  RO, NAND, LL_RDDATA)
BCHP_REGISTER(0x20203200, 32,  RO, NAND, SPARE_AREA_READ_OFS_0)
BCHP_REGISTER(0x20203204, 32,  RO, NAND, SPARE_AREA_READ_OFS_4)
BCHP_REGISTER(0x20203208, 32,  RO, NAND, SPARE_AREA_READ_OFS_8)
BCHP_REGISTER(0x2020320c, 32,  RO, NAND, SPARE_AREA_READ_OFS_C)
BCHP_REGISTER(0x20203210, 32,  RO, NAND, SPARE_AREA_READ_OFS_10)
BCHP_REGISTER(0x20203214, 32,  RO, NAND, SPARE_AREA_READ_OFS_14)
BCHP_REGISTER(0x20203218, 32,  RO, NAND, SPARE_AREA_READ_OFS_18)
BCHP_REGISTER(0x2020321c, 32,  RO, NAND, SPARE_AREA_READ_OFS_1C)
BCHP_REGISTER(0x20203220, 32,  RO, NAND, SPARE_AREA_READ_OFS_20)
BCHP_REGISTER(0x20203224, 32,  RO, NAND, SPARE_AREA_READ_OFS_24)
BCHP_REGISTER(0x20203228, 32,  RO, NAND, SPARE_AREA_READ_OFS_28)
BCHP_REGISTER(0x2020322c, 32,  RO, NAND, SPARE_AREA_READ_OFS_2C)
BCHP_REGISTER(0x20203230, 32,  RO, NAND, SPARE_AREA_READ_OFS_30)
BCHP_REGISTER(0x20203234, 32,  RO, NAND, SPARE_AREA_READ_OFS_34)
BCHP_REGISTER(0x20203238, 32,  RO, NAND, SPARE_AREA_READ_OFS_38)
BCHP_REGISTER(0x2020323c, 32,  RO, NAND, SPARE_AREA_READ_OFS_3C)
BCHP_REGISTER(0x20203240, 32,  RO, NAND, SPARE_AREA_READ_OFS_40)
BCHP_REGISTER(0x20203244, 32,  RO, NAND, SPARE_AREA_READ_OFS_44)
BCHP_REGISTER(0x20203248, 32,  RO, NAND, SPARE_AREA_READ_OFS_48)
BCHP_REGISTER(0x2020324c, 32,  RO, NAND, SPARE_AREA_READ_OFS_4C)
BCHP_REGISTER(0x20203250, 32,  RO, NAND, SPARE_AREA_READ_OFS_50)
BCHP_REGISTER(0x20203254, 32,  RO, NAND, SPARE_AREA_READ_OFS_54)
BCHP_REGISTER(0x20203258, 32,  RO, NAND, SPARE_AREA_READ_OFS_58)
BCHP_REGISTER(0x2020325c, 32,  RO, NAND, SPARE_AREA_READ_OFS_5C)
BCHP_REGISTER(0x20203260, 32,  RO, NAND, SPARE_AREA_READ_OFS_60)
BCHP_REGISTER(0x20203264, 32,  RO, NAND, SPARE_AREA_READ_OFS_64)
BCHP_REGISTER(0x20203268, 32,  RO, NAND, SPARE_AREA_READ_OFS_68)
BCHP_REGISTER(0x2020326c, 32,  RO, NAND, SPARE_AREA_READ_OFS_6C)
BCHP_REGISTER(0x20203270, 32,  RO, NAND, SPARE_AREA_READ_OFS_70)
BCHP_REGISTER(0x20203274, 32,  RO, NAND, SPARE_AREA_READ_OFS_74)
BCHP_REGISTER(0x20203278, 32,  RO, NAND, SPARE_AREA_READ_OFS_78)
BCHP_REGISTER(0x2020327c, 32,  RO, NAND, SPARE_AREA_READ_OFS_7C)
BCHP_REGISTER(0x20203400, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_0)
BCHP_REGISTER(0x20203404, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_4)
BCHP_REGISTER(0x20203408, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_8)
BCHP_REGISTER(0x2020340c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_C)
BCHP_REGISTER(0x20203410, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_10)
BCHP_REGISTER(0x20203414, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_14)
BCHP_REGISTER(0x20203418, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_18)
BCHP_REGISTER(0x2020341c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_1C)
BCHP_REGISTER(0x20203420, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_20)
BCHP_REGISTER(0x20203424, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_24)
BCHP_REGISTER(0x20203428, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_28)
BCHP_REGISTER(0x2020342c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_2C)
BCHP_REGISTER(0x20203430, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_30)
BCHP_REGISTER(0x20203434, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_34)
BCHP_REGISTER(0x20203438, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_38)
BCHP_REGISTER(0x2020343c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_3C)
BCHP_REGISTER(0x20203440, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_40)
BCHP_REGISTER(0x20203444, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_44)
BCHP_REGISTER(0x20203448, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_48)
BCHP_REGISTER(0x2020344c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_4C)
BCHP_REGISTER(0x20203450, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_50)
BCHP_REGISTER(0x20203454, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_54)
BCHP_REGISTER(0x20203458, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_58)
BCHP_REGISTER(0x2020345c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_5C)
BCHP_REGISTER(0x20203460, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_60)
BCHP_REGISTER(0x20203464, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_64)
BCHP_REGISTER(0x20203468, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_68)
BCHP_REGISTER(0x2020346c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_6C)
BCHP_REGISTER(0x20203470, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_70)
BCHP_REGISTER(0x20203474, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_74)
BCHP_REGISTER(0x20203478, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_78)
BCHP_REGISTER(0x2020347c, 32,  RW, NAND, SPARE_AREA_WRITE_OFS_7C)
BCHP_REGISTER(0x20203500, 32,  RW, NAND, DDR_TIMING)
BCHP_REGISTER(0x20203504, 32,  RW, NAND, DDR_NCDL_CALIB_CTL)
BCHP_REGISTER(0x20203508, 32,  RW, NAND, DDR_NCDL_CALIB_PERIOD)
BCHP_REGISTER(0x2020350c, 32,  RO, NAND, DDR_NCDL_CALIB_STAT)
BCHP_REGISTER(0x20203510, 32,  RW, NAND, DDR_NCDL_MODE)
BCHP_REGISTER(0x20203514, 32,  RW, NAND, DDR_NCDL_OFFSET)
BCHP_REGISTER(0x20203518, 32,  RW, NAND, DDR_PHY_CTL)
BCHP_REGISTER(0x2020351c, 32,  RW, NAND, DDR_PHY_BIST_CTL)
BCHP_REGISTER(0x20203520, 32,  RO, NAND, DDR_PHY_BIST_STAT)
BCHP_REGISTER(0x20203524, 32,  RO, NAND, DDR_DIAG_STAT0)
BCHP_REGISTER(0x20203528, 32,  RO, NAND, DDR_DIAG_STAT1)
BCHP_REGISTER(0x20203800, 32,  RO, FLASH_DMA, REVISION)
BCHP_REGISTER(0x20203804, 32,  RW, FLASH_DMA, FIRST_DESC)
BCHP_REGISTER(0x20203808, 32,  RW, FLASH_DMA, FIRST_DESC_EXT)
BCHP_REGISTER(0x2020380c, 32,  RW, FLASH_DMA, CTRL)
BCHP_REGISTER(0x20203810, 32,  RW, FLASH_DMA, MODE)
BCHP_REGISTER(0x20203814, 32,  RO, FLASH_DMA, STATUS)
BCHP_REGISTER(0x20203818, 32,  RO, FLASH_DMA, INTERRUPT_DESC)
BCHP_REGISTER(0x2020381c, 32,  RO, FLASH_DMA, INTERRUPT_DESC_EXT)
BCHP_REGISTER(0x20203820, 32,  RW, FLASH_DMA, ERROR_STATUS)
BCHP_REGISTER(0x20203824, 32,  RO, FLASH_DMA, CURRENT_DESC)
BCHP_REGISTER(0x20203828, 32,  RO, FLASH_DMA, CURRENT_DESC_EXT)
BCHP_REGISTER(0x20203a00, 32,  RO, BSPI, REVISION_ID)
BCHP_REGISTER(0x20203a04, 32,  RW, BSPI, SCRATCH)
BCHP_REGISTER(0x20203a08, 32,  RW, BSPI, MAST_N_BOOT_CTRL)
BCHP_REGISTER(0x20203a0c, 32,  RO, BSPI, BUSY_STATUS)
BCHP_REGISTER(0x20203a10, 32,  RO, BSPI, INTR_STATUS)
BCHP_REGISTER(0x20203a14, 32,  RO, BSPI, B0_STATUS)
BCHP_REGISTER(0x20203a18, 32,  WO, BSPI, B0_CTRL)
BCHP_REGISTER(0x20203a1c, 32,  RO, BSPI, B1_STATUS)
BCHP_REGISTER(0x20203a20, 32,  WO, BSPI, B1_CTRL)
BCHP_REGISTER(0x20203a24, 32,  RW, BSPI, STRAP_OVERRIDE_CTRL)
BCHP_REGISTER(0x20203a28, 32,  RW, BSPI, FLEX_MODE_ENABLE)
BCHP_REGISTER(0x20203a2c, 32,  RW, BSPI, BITS_PER_CYCLE)
BCHP_REGISTER(0x20203a30, 32,  RW, BSPI, BITS_PER_PHASE)
BCHP_REGISTER(0x20203a34, 32,  RW, BSPI, CMD_AND_MODE_BYTE)
BCHP_REGISTER(0x20203a38, 32,  RW, BSPI, BSPI_FLASH_UPPER_ADDR_BYTE)
BCHP_REGISTER(0x20203a3c, 32,  RW, BSPI, BSPI_XOR_VALUE)
BCHP_REGISTER(0x20203a40, 32,  RW, BSPI, BSPI_XOR_ENABLE)
BCHP_REGISTER(0x20203a44, 32,  RW, BSPI, BSPI_PIO_MODE_ENABLE)
BCHP_REGISTER(0x20203a48, 32,  RW, BSPI, BSPI_PIO_IODIR)
BCHP_REGISTER(0x20203a4c, 32,  RW, BSPI, BSPI_PIO_DATA)
BCHP_REGISTER(0x20203b00, 32,  RW, BSPI_RAF, START_ADDR)
BCHP_REGISTER(0x20203b04, 32,  RW, BSPI_RAF, NUM_WORDS)
BCHP_REGISTER(0x20203b08, 32,  RW, BSPI_RAF, CTRL)
BCHP_REGISTER(0x20203b0c, 32,  RO, BSPI_RAF, FULLNESS)
BCHP_REGISTER(0x20203b10, 32,  RW, BSPI_RAF, WATERMARK)
BCHP_REGISTER(0x20203b14, 32,  RO, BSPI_RAF, STATUS)
BCHP_REGISTER(0x20203b18, 32,  RO, BSPI_RAF, READ_DATA)
BCHP_REGISTER(0x20203b1c, 32,  RO, BSPI_RAF, WORD_CNT)
BCHP_REGISTER(0x20203b20, 32,  RO, BSPI_RAF, CURR_ADDR)
BCHP_REGISTER(0x20203c00, 32,  RW, HIF_MSPI, SPCR0_LSB)
BCHP_REGISTER(0x20203c04, 32,  RW, HIF_MSPI, SPCR0_MSB)
BCHP_REGISTER(0x20203c08, 32,  RW, HIF_MSPI, SPCR1_LSB)
BCHP_REGISTER(0x20203c0c, 32,  RW, HIF_MSPI, SPCR1_MSB)
BCHP_REGISTER(0x20203c10, 32,  RW, HIF_MSPI, NEWQP)
BCHP_REGISTER(0x20203c14, 32,  RW, HIF_MSPI, ENDQP)
BCHP_REGISTER(0x20203c18, 32,  RW, HIF_MSPI, SPCR2)
BCHP_REGISTER(0x20203c20, 32,  RW, HIF_MSPI, MSPI_STATUS)
BCHP_REGISTER(0x20203c24, 32,  RO, HIF_MSPI, CPTQP)
BCHP_REGISTER(0x20203c28, 32,  RW, HIF_MSPI, SPCR3)
BCHP_REGISTER(0x20203c2c, 32,  RO, HIF_MSPI, REVISION)
BCHP_REGISTER(0x20203c40, 32,  RW, HIF_MSPI, TXRAM00)
BCHP_REGISTER(0x20203c44, 32,  RW, HIF_MSPI, TXRAM01)
BCHP_REGISTER(0x20203c48, 32,  RW, HIF_MSPI, TXRAM02)
BCHP_REGISTER(0x20203c4c, 32,  RW, HIF_MSPI, TXRAM03)
BCHP_REGISTER(0x20203c50, 32,  RW, HIF_MSPI, TXRAM04)
BCHP_REGISTER(0x20203c54, 32,  RW, HIF_MSPI, TXRAM05)
BCHP_REGISTER(0x20203c58, 32,  RW, HIF_MSPI, TXRAM06)
BCHP_REGISTER(0x20203c5c, 32,  RW, HIF_MSPI, TXRAM07)
BCHP_REGISTER(0x20203c60, 32,  RW, HIF_MSPI, TXRAM08)
BCHP_REGISTER(0x20203c64, 32,  RW, HIF_MSPI, TXRAM09)
BCHP_REGISTER(0x20203c68, 32,  RW, HIF_MSPI, TXRAM10)
BCHP_REGISTER(0x20203c6c, 32,  RW, HIF_MSPI, TXRAM11)
BCHP_REGISTER(0x20203c70, 32,  RW, HIF_MSPI, TXRAM12)
BCHP_REGISTER(0x20203c74, 32,  RW, HIF_MSPI, TXRAM13)
BCHP_REGISTER(0x20203c78, 32,  RW, HIF_MSPI, TXRAM14)
BCHP_REGISTER(0x20203c7c, 32,  RW, HIF_MSPI, TXRAM15)
BCHP_REGISTER(0x20203c80, 32,  RW, HIF_MSPI, TXRAM16)
BCHP_REGISTER(0x20203c84, 32,  RW, HIF_MSPI, TXRAM17)
BCHP_REGISTER(0x20203c88, 32,  RW, HIF_MSPI, TXRAM18)
BCHP_REGISTER(0x20203c8c, 32,  RW, HIF_MSPI, TXRAM19)
BCHP_REGISTER(0x20203c90, 32,  RW, HIF_MSPI, TXRAM20)
BCHP_REGISTER(0x20203c94, 32,  RW, HIF_MSPI, TXRAM21)
BCHP_REGISTER(0x20203c98, 32,  RW, HIF_MSPI, TXRAM22)
BCHP_REGISTER(0x20203c9c, 32,  RW, HIF_MSPI, TXRAM23)
BCHP_REGISTER(0x20203ca0, 32,  RW, HIF_MSPI, TXRAM24)
BCHP_REGISTER(0x20203ca4, 32,  RW, HIF_MSPI, TXRAM25)
BCHP_REGISTER(0x20203ca8, 32,  RW, HIF_MSPI, TXRAM26)
BCHP_REGISTER(0x20203cac, 32,  RW, HIF_MSPI, TXRAM27)
BCHP_REGISTER(0x20203cb0, 32,  RW, HIF_MSPI, TXRAM28)
BCHP_REGISTER(0x20203cb4, 32,  RW, HIF_MSPI, TXRAM29)
BCHP_REGISTER(0x20203cb8, 32,  RW, HIF_MSPI, TXRAM30)
BCHP_REGISTER(0x20203cbc, 32,  RW, HIF_MSPI, TXRAM31)
BCHP_REGISTER(0x20203cc0, 32,  RW, HIF_MSPI, RXRAM00)
BCHP_REGISTER(0x20203cc4, 32,  RW, HIF_MSPI, RXRAM01)
BCHP_REGISTER(0x20203cc8, 32,  RW, HIF_MSPI, RXRAM02)
BCHP_REGISTER(0x20203ccc, 32,  RW, HIF_MSPI, RXRAM03)
BCHP_REGISTER(0x20203cd0, 32,  RW, HIF_MSPI, RXRAM04)
BCHP_REGISTER(0x20203cd4, 32,  RW, HIF_MSPI, RXRAM05)
BCHP_REGISTER(0x20203cd8, 32,  RW, HIF_MSPI, RXRAM06)
BCHP_REGISTER(0x20203cdc, 32,  RW, HIF_MSPI, RXRAM07)
BCHP_REGISTER(0x20203ce0, 32,  RW, HIF_MSPI, RXRAM08)
BCHP_REGISTER(0x20203ce4, 32,  RW, HIF_MSPI, RXRAM09)
BCHP_REGISTER(0x20203ce8, 32,  RW, HIF_MSPI, RXRAM10)
BCHP_REGISTER(0x20203cec, 32,  RW, HIF_MSPI, RXRAM11)
BCHP_REGISTER(0x20203cf0, 32,  RW, HIF_MSPI, RXRAM12)
BCHP_REGISTER(0x20203cf4, 32,  RW, HIF_MSPI, RXRAM13)
BCHP_REGISTER(0x20203cf8, 32,  RW, HIF_MSPI, RXRAM14)
BCHP_REGISTER(0x20203cfc, 32,  RW, HIF_MSPI, RXRAM15)
BCHP_REGISTER(0x20203d00, 32,  RW, HIF_MSPI, RXRAM16)
BCHP_REGISTER(0x20203d04, 32,  RW, HIF_MSPI, RXRAM17)
BCHP_REGISTER(0x20203d08, 32,  RW, HIF_MSPI, RXRAM18)
BCHP_REGISTER(0x20203d0c, 32,  RW, HIF_MSPI, RXRAM19)
BCHP_REGISTER(0x20203d10, 32,  RW, HIF_MSPI, RXRAM20)
BCHP_REGISTER(0x20203d14, 32,  RW, HIF_MSPI, RXRAM21)
BCHP_REGISTER(0x20203d18, 32,  RW, HIF_MSPI, RXRAM22)
BCHP_REGISTER(0x20203d1c, 32,  RW, HIF_MSPI, RXRAM23)
BCHP_REGISTER(0x20203d20, 32,  RW, HIF_MSPI, RXRAM24)
BCHP_REGISTER(0x20203d24, 32,  RW, HIF_MSPI, RXRAM25)
BCHP_REGISTER(0x20203d28, 32,  RW, HIF_MSPI, RXRAM26)
BCHP_REGISTER(0x20203d2c, 32,  RW, HIF_MSPI, RXRAM27)
BCHP_REGISTER(0x20203d30, 32,  RW, HIF_MSPI, RXRAM28)
BCHP_REGISTER(0x20203d34, 32,  RW, HIF_MSPI, RXRAM29)
BCHP_REGISTER(0x20203d38, 32,  RW, HIF_MSPI, RXRAM30)
BCHP_REGISTER(0x20203d3c, 32,  RW, HIF_MSPI, RXRAM31)
BCHP_REGISTER(0x20203d40, 32,  RW, HIF_MSPI, CDRAM00)
BCHP_REGISTER(0x20203d44, 32,  RW, HIF_MSPI, CDRAM01)
BCHP_REGISTER(0x20203d48, 32,  RW, HIF_MSPI, CDRAM02)
BCHP_REGISTER(0x20203d4c, 32,  RW, HIF_MSPI, CDRAM03)
BCHP_REGISTER(0x20203d50, 32,  RW, HIF_MSPI, CDRAM04)
BCHP_REGISTER(0x20203d54, 32,  RW, HIF_MSPI, CDRAM05)
BCHP_REGISTER(0x20203d58, 32,  RW, HIF_MSPI, CDRAM06)
BCHP_REGISTER(0x20203d5c, 32,  RW, HIF_MSPI, CDRAM07)
BCHP_REGISTER(0x20203d60, 32,  RW, HIF_MSPI, CDRAM08)
BCHP_REGISTER(0x20203d64, 32,  RW, HIF_MSPI, CDRAM09)
BCHP_REGISTER(0x20203d68, 32,  RW, HIF_MSPI, CDRAM10)
BCHP_REGISTER(0x20203d6c, 32,  RW, HIF_MSPI, CDRAM11)
BCHP_REGISTER(0x20203d70, 32,  RW, HIF_MSPI, CDRAM12)
BCHP_REGISTER(0x20203d74, 32,  RW, HIF_MSPI, CDRAM13)
BCHP_REGISTER(0x20203d78, 32,  RW, HIF_MSPI, CDRAM14)
BCHP_REGISTER(0x20203d7c, 32,  RW, HIF_MSPI, CDRAM15)
BCHP_REGISTER(0x20203d80, 32,  RW, HIF_MSPI, WRITE_LOCK)
BCHP_REGISTER(0x20203d84, 32,  RW, HIF_MSPI, DISABLE_FLUSH_GEN)
BCHP_REGISTER(0x20203f00, 32,  RW, HIF_CONTINUATION_SECURE_TM, STB_BOOT_HI_ADDR0)
BCHP_REGISTER(0x20203f04, 32,  RW, HIF_CONTINUATION_SECURE_TM, STB_BOOT_ADDR0)
BCHP_REGISTER(0x20204000, 32,  RO, IPI0_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20204004, 32,  WO, IPI0_INTR2, CPU_SET)
BCHP_REGISTER(0x20204008, 32,  WO, IPI0_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2020400c, 32,  RO, IPI0_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20204010, 32,  WO, IPI0_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20204014, 32,  WO, IPI0_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20204018, 32,  RO, IPI0_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2020401c, 32,  WO, IPI0_INTR2, PCI_SET)
BCHP_REGISTER(0x20204020, 32,  WO, IPI0_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20204024, 32,  RO, IPI0_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20204028, 32,  WO, IPI0_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2020402c, 32,  WO, IPI0_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20204100, 32,  RO, IPI1_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20204104, 32,  WO, IPI1_INTR2, CPU_SET)
BCHP_REGISTER(0x20204108, 32,  WO, IPI1_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2020410c, 32,  RO, IPI1_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20204110, 32,  WO, IPI1_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20204114, 32,  WO, IPI1_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20204118, 32,  RO, IPI1_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2020411c, 32,  WO, IPI1_INTR2, PCI_SET)
BCHP_REGISTER(0x20204120, 32,  WO, IPI1_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20204124, 32,  RO, IPI1_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20204128, 32,  WO, IPI1_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2020412c, 32,  WO, IPI1_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20204200, 32,  RO, IPI2_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20204204, 32,  WO, IPI2_INTR2, CPU_SET)
BCHP_REGISTER(0x20204208, 32,  WO, IPI2_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2020420c, 32,  RO, IPI2_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20204210, 32,  WO, IPI2_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20204214, 32,  WO, IPI2_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20204218, 32,  RO, IPI2_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2020421c, 32,  WO, IPI2_INTR2, PCI_SET)
BCHP_REGISTER(0x20204220, 32,  WO, IPI2_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20204224, 32,  RO, IPI2_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20204228, 32,  WO, IPI2_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2020422c, 32,  WO, IPI2_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20204300, 32,  RO, IPI3_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20204304, 32,  WO, IPI3_INTR2, CPU_SET)
BCHP_REGISTER(0x20204308, 32,  WO, IPI3_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2020430c, 32,  RO, IPI3_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20204310, 32,  WO, IPI3_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20204314, 32,  WO, IPI3_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20204318, 32,  RO, IPI3_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2020431c, 32,  WO, IPI3_INTR2, PCI_SET)
BCHP_REGISTER(0x20204320, 32,  WO, IPI3_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20204324, 32,  RO, IPI3_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20204328, 32,  WO, IPI3_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2020432c, 32,  WO, IPI3_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20240000, 32,  RW, ITCH0, RESERVED)
BCHP_REGISTER(0x20240400, 32,  RW, HIF_SECURE_CTRL, RESERVED)
BCHP_REGISTER(0x20240500, 32,  RW, HIF_SECURE_BSPI, RESERVED)
BCHP_REGISTER(0x20240600, 32,  RW, HIF_SECURE_LR_SPI, RESERVED)
BCHP_REGISTER(0x20240800, 32,  RW, NAND_SECURE, RESERVED)
BCHP_REGISTER(0x20240c00, 32,  RW, HIF_SECURE_INDIRECT_MSPI_PIPE, RESERVED)
BCHP_REGISTER(0x20240e00, 32,  RW, HIF_CPUBIUARCH_SECURE, RESERVED_START)
BCHP_REGISTER(0x20240ffc, 32,  RW, HIF_CPUBIUARCH_SECURE, RESERVED_END)
BCHP_REGISTER(0x20241000, 32,  RW, HIF_CONTINUATION_SECURE, STB_BOOT_HI_ADDR0)
BCHP_REGISTER(0x20241004, 32,  RW, HIF_CONTINUATION_SECURE, STB_BOOT_ADDR0)
BCHP_REGISTER(0x20310400, 32,  RO, SCPU_MISB_BRIDGE, CORE_REV_ID)
BCHP_REGISTER(0x20310404, 32,  RW, SCPU_MISB_BRIDGE, EXCEPTION_VECTOR_OFFSET)
BCHP_REGISTER(0x20310408, 32,  RO, SCPU_MISB_BRIDGE, PROCESSOR_ID)
BCHP_REGISTER(0x2031040c, 32,  RW, SCPU_MISB_BRIDGE, WG_MODE_N_TIMEOUT)
BCHP_REGISTER(0x20310410, 32,  RW, SCPU_MISB_BRIDGE, MISB_SPLIT_MODE)
BCHP_REGISTER(0x20310460, 32,  RO, SCPU_RGR_BRIDGE, REVISION)
BCHP_REGISTER(0x20310464, 32,  RW, SCPU_RGR_BRIDGE, CTRL)
BCHP_REGISTER(0x20310468, 32,  RW, SCPU_RGR_BRIDGE, RBUS_TIMER)
BCHP_REGISTER(0x2031046c, 32,  RW, SCPU_RGR_BRIDGE, SW_INIT_0)
BCHP_REGISTER(0x20310470, 32,  RW, SCPU_RGR_BRIDGE, SW_INIT_1)
BCHP_REGISTER(0x20310480, 32,  RO, SCPU_INTR1, INTR_W0_STATUS)
BCHP_REGISTER(0x20310488, 32,  RO, SCPU_INTR1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20310490, 32,  WO, SCPU_INTR1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20310498, 32,  WO, SCPU_INTR1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x203104c0, 32,  RO, INTERNAL_INTR2, CPU_STATUS)
BCHP_REGISTER(0x203104c4, 32,  WO, INTERNAL_INTR2, CPU_SET)
BCHP_REGISTER(0x203104c8, 32,  WO, INTERNAL_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x203104cc, 32,  RO, INTERNAL_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x203104d0, 32,  WO, INTERNAL_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x203104d4, 32,  WO, INTERNAL_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x203104d8, 32,  RO, INTERNAL_INTR2, PCI_STATUS)
BCHP_REGISTER(0x203104dc, 32,  WO, INTERNAL_INTR2, PCI_SET)
BCHP_REGISTER(0x203104e0, 32,  WO, INTERNAL_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x203104e4, 32,  RO, INTERNAL_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x203104e8, 32,  WO, INTERNAL_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x203104ec, 32,  WO, INTERNAL_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20310500, 32,  RO, BSP_IPI_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20310504, 32,  WO, BSP_IPI_INTR2, CPU_SET)
BCHP_REGISTER(0x20310508, 32,  WO, BSP_IPI_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2031050c, 32,  RO, BSP_IPI_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20310510, 32,  WO, BSP_IPI_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20310514, 32,  WO, BSP_IPI_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20310518, 32,  RO, BSP_IPI_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2031051c, 32,  WO, BSP_IPI_INTR2, PCI_SET)
BCHP_REGISTER(0x20310520, 32,  WO, BSP_IPI_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20310524, 32,  RO, BSP_IPI_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20310528, 32,  WO, BSP_IPI_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2031052c, 32,  WO, BSP_IPI_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20310540, 32,  RO, SCPU_HW_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20310544, 32,  WO, SCPU_HW_INTR2, CPU_SET)
BCHP_REGISTER(0x20310548, 32,  WO, SCPU_HW_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2031054c, 32,  RO, SCPU_HW_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20310550, 32,  WO, SCPU_HW_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20310554, 32,  WO, SCPU_HW_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20310558, 32,  RO, SCPU_HW_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2031055c, 32,  WO, SCPU_HW_INTR2, PCI_SET)
BCHP_REGISTER(0x20310560, 32,  WO, SCPU_HW_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20310564, 32,  RO, SCPU_HW_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20310568, 32,  WO, SCPU_HW_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2031056c, 32,  WO, SCPU_HW_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20311000, 32,  RO, CPU_IPI_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20311004, 32,  WO, CPU_IPI_INTR2, CPU_SET)
BCHP_REGISTER(0x20311008, 32,  WO, CPU_IPI_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2031100c, 32,  RO, CPU_IPI_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20311010, 32,  WO, CPU_IPI_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20311014, 32,  WO, CPU_IPI_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20311018, 32,  RO, CPU_IPI_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2031101c, 32,  WO, CPU_IPI_INTR2, PCI_SET)
BCHP_REGISTER(0x20311020, 32,  WO, CPU_IPI_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20311024, 32,  RO, CPU_IPI_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20311028, 32,  WO, CPU_IPI_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2031102c, 32,  WO, CPU_IPI_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20311040, 32,  RO, SCPU_HOST_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20311044, 32,  WO, SCPU_HOST_INTR2, CPU_SET)
BCHP_REGISTER(0x20311048, 32,  WO, SCPU_HOST_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2031104c, 32,  RO, SCPU_HOST_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20311050, 32,  WO, SCPU_HOST_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20311054, 32,  WO, SCPU_HOST_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20311058, 32,  RO, SCPU_HOST_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2031105c, 32,  WO, SCPU_HOST_INTR2, PCI_SET)
BCHP_REGISTER(0x20311060, 32,  WO, SCPU_HOST_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20311064, 32,  RO, SCPU_HOST_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20311068, 32,  WO, SCPU_HOST_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2031106c, 32,  WO, SCPU_HOST_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20312000, 32,  RW, SCPU_TOP_CTRL, ALT_BOOT_VECTOR)
BCHP_REGISTER(0x20312004, 32,  RW, SCPU_TOP_CTRL, SCPU_HOST_IRDY)
BCHP_REGISTER(0x20312008, 32,  WO, SCPU_TOP_CTRL, SCPU_BSP_DDONE)
BCHP_REGISTER(0x20312080, 32,  RW, SCPU_HDMI_CTRL, SCPU_HDMI_INT)
BCHP_REGISTER(0x20312084, 32,  RO, SCPU_HDMI_CTRL, HDMI_SCPU_INFO)
BCHP_REGISTER(0x20312100, 32,  RW, SCPU_SEC_TIME, TC_INIT)
BCHP_REGISTER(0x20312104, 32,  RW, SCPU_SEC_TIME, OS_INIT)
BCHP_REGISTER(0x20312108, 32,  RO, SCPU_SEC_TIME, TC_VAL)
BCHP_REGISTER(0x2031210c, 32,  RO, SCPU_SEC_TIME, OS_VAL)
BCHP_REGISTER(0x20312110, 32,  RW, SCPU_SEC_TIME, ST_CTRL)
BCHP_REGISTER(0x20312114, 32,  RW, SCPU_SEC_TIME, ST_THRESHOLD)
BCHP_REGISTER(0x20312200, 32,  RO, SAGE_UART, RBR)
BCHP_REGISTER_ALIAS(1, 0x20312200, 32,  WO, SAGE_UART, THR)
BCHP_REGISTER_ALIAS(2, 0x20312200, 32,  RW, SAGE_UART, DLL)
BCHP_REGISTER(0x20312204, 32,  RW, SAGE_UART, DLH)
BCHP_REGISTER_ALIAS(1, 0x20312204, 32,  RW, SAGE_UART, IER)
BCHP_REGISTER(0x20312208, 32,  RO, SAGE_UART, IIR)
BCHP_REGISTER_ALIAS(1, 0x20312208, 32,  WO, SAGE_UART, FCR)
BCHP_REGISTER(0x2031220c, 32,  RW, SAGE_UART, LCR)
BCHP_REGISTER(0x20312210, 32,  RW, SAGE_UART, MCR)
BCHP_REGISTER(0x20312214, 32,  RO, SAGE_UART, LSR)
BCHP_REGISTER(0x20312218, 32,  RO, SAGE_UART, MSR)
BCHP_REGISTER(0x2031221c, 32,  RW, SAGE_UART, SCR)
BCHP_REGISTER(0x20312980, 32,  RW, SCPU_PM, CONFIG)
BCHP_REGISTER(0x20312984, 32,  RW, SCPU_PM, CLK_CTRL)
BCHP_REGISTER(0x20312988, 32,  RW, SCPU_PM, RST_CTRL)
BCHP_REGISTER(0x20312e80, 32,  RW, SCPU_TIMER, TIMER_IS)
BCHP_REGISTER(0x20312e84, 32,  RW, SCPU_TIMER, TIMER_IE0)
BCHP_REGISTER(0x20312e88, 32,  RW, SCPU_TIMER, TIMER0_CTRL)
BCHP_REGISTER(0x20312e8c, 32,  RW, SCPU_TIMER, TIMER1_CTRL)
BCHP_REGISTER(0x20312e90, 32,  RW, SCPU_TIMER, TIMER2_CTRL)
BCHP_REGISTER(0x20312e94, 32,  RW, SCPU_TIMER, TIMER3_CTRL)
BCHP_REGISTER(0x20312e98, 32,  RO, SCPU_TIMER, TIMER0_STAT)
BCHP_REGISTER(0x20312e9c, 32,  RO, SCPU_TIMER, TIMER1_STAT)
BCHP_REGISTER(0x20312ea0, 32,  RO, SCPU_TIMER, TIMER2_STAT)
BCHP_REGISTER(0x20312ea4, 32,  RO, SCPU_TIMER, TIMER3_STAT)
BCHP_REGISTER(0x20312ea8, 32,  RW, SCPU_TIMER, WDTIMEOUT)
BCHP_REGISTER(0x20312eac, 32,  WO, SCPU_TIMER, WDCMD)
BCHP_REGISTER(0x20312eb0, 32,  RW, SCPU_TIMER, WDCHIPRST_CNT)
BCHP_REGISTER(0x20312eb4, 32,  RW, SCPU_TIMER, WDCRS)
BCHP_REGISTER(0x20312eb8, 32,  RW, SCPU_TIMER, TIMER_IE1)
BCHP_REGISTER(0x20312ebc, 32,  RW, SCPU_TIMER, WDCTRL)
BCHP_REGISTER(0x2032d000, 32,  RO, BSP_GLB_CONTROL, GLB_REVISION)
BCHP_REGISTER(0x2032d004, 32,  RO, BSP_GLB_CONTROL, GLB_TIMER)
BCHP_REGISTER(0x2032d008, 32,  RO, BSP_GLB_CONTROL, GLB_IRDY)
BCHP_REGISTER(0x2032d00c, 32,  RW, BSP_GLB_CONTROL, GLB_ORDY)
BCHP_REGISTER(0x2032d010, 32,  RW, BSP_GLB_CONTROL, GLB_HOST_INTR_STATUS)
BCHP_REGISTER(0x2032d014, 32,  RW, BSP_GLB_CONTROL, GLB_HOST_INTR_EN)
BCHP_REGISTER(0x2032d018, 32,  RW, BSP_GLB_CONTROL, GLB_RAAGA_INTR_STATUS)
BCHP_REGISTER(0x2032d020, 32,  RW, BSP_GLB_CONTROL, GLB_OLOAD2)
BCHP_REGISTER(0x2032d024, 32,  RW, BSP_GLB_CONTROL, GLB_OLOAD1)
BCHP_REGISTER(0x2032d028, 32,  RW, BSP_GLB_CONTROL, GLB_ILOAD2)
BCHP_REGISTER(0x2032d02c, 32,  RW, BSP_GLB_CONTROL, GLB_ILOAD1)
BCHP_REGISTER(0x2032d034, 32,  RW, BSP_GLB_CONTROL, HOST_TO_BSP_GENERAL_INTR)
BCHP_REGISTER(0x2032d038, 32,  RW, BSP_GLB_CONTROL, GLB_MISC0)
BCHP_REGISTER(0x2032d040, 32,  RW, BSP_GLB_CONTROL, GLB_JTAG_DEBUG_CTRL)
BCHP_REGISTER(0x2032d04c, 32,  RW, BSP_GLB_CONTROL, ZZYZX_CLOCK_STOP)
BCHP_REGISTER(0x2032d050, 32,  RW, BSP_GLB_CONTROL, GLB_DWNLD_ERR)
BCHP_REGISTER(0x2032d054, 32,  RO, BSP_GLB_CONTROL, GLB_DWNLD_STATUS)
BCHP_REGISTER(0x2032d058, 32,  RW, BSP_GLB_CONTROL, GLB_OLOAD_CR)
BCHP_REGISTER(0x2032d05c, 32,  RW, BSP_GLB_CONTROL, GLB_ILOAD_CR)
BCHP_REGISTER(0x2032d060, 32,  RO, BSP_GLB_CONTROL, OTP_HASH_CRC)
BCHP_REGISTER(0x2032d064, 32,  RO, BSP_GLB_CONTROL, v_PubOtpUniqueID_hi)
BCHP_REGISTER(0x2032d068, 32,  RO, BSP_GLB_CONTROL, v_PubOtpUniqueID_lo)
BCHP_REGISTER(0x2032d06c, 32,  RO, BSP_GLB_CONTROL, v_PubOtpOID)
BCHP_REGISTER(0x2032d070, 32,  RO, BSP_GLB_CONTROL, v_Version)
BCHP_REGISTER(0x2032d074, 32,  RO, BSP_GLB_CONTROL, OTP_MSP_CRC)
BCHP_REGISTER(0x2032d078, 32,  RW, BSP_GLB_CONTROL, FW_FLAGS)
BCHP_REGISTER(0x2032d07c, 32,  RO, BSP_GLB_CONTROL, OTP_HASH2_CRC)
BCHP_REGISTER(0x2032d080, 32,  RO, BSP_GLB_CONTROL, ASKM_STB_OwnerID)
BCHP_REGISTER(0x2032d084, 32,  RW, BSP_GLB_CONTROL, HW_FLAGS)
BCHP_REGISTER(0x2032d088, 32,  RW, BSP_GLB_CONTROL, DEBUG_PASSWORD)
BCHP_REGISTER(0x2032d08c, 32,  RW, BSP_GLB_CONTROL, DEBUG_PASSWORD_CTRL)
BCHP_REGISTER(0x2032d090, 32,  RO, BSP_GLB_CONTROL, POWAY_UID_HI)
BCHP_REGISTER(0x2032d094, 32,  RO, BSP_GLB_CONTROL, POWAY_UID_LO)
BCHP_REGISTER(0x2032d098, 32,  RO, BSP_GLB_CONTROL, POWAY_BUSY)
BCHP_REGISTER(0x2032d09c, 32,  RW, BSP_GLB_CONTROL, FW_COUNTER)
BCHP_REGISTER(0x2032d0a0, 32,  RW, BSP_GLB_CONTROL, SCPU_DDONE)
BCHP_REGISTER(0x2032d0a4, 32,  RW, BSP_GLB_CONTROL, SCPU_SW_INIT)
BCHP_REGISTER(0x2032d0a8, 32,  RW, BSP_GLB_CONTROL, ZZYZX_SW_RESET)
BCHP_REGISTER(0x2032d0ac, 32,  RW, BSP_GLB_CONTROL, ZZYZX_CTRL)
BCHP_REGISTER(0x2032d0b0, 32,  RW, BSP_GLB_CONTROL, ZZYZX_RNG_CTRL)
BCHP_REGISTER(0x2032d800, 32,  RO, BSP_CONTROL_INTR2, CPU_STATUS)
BCHP_REGISTER(0x2032d804, 32,  WO, BSP_CONTROL_INTR2, CPU_SET)
BCHP_REGISTER(0x2032d808, 32,  WO, BSP_CONTROL_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2032d80c, 32,  RO, BSP_CONTROL_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x2032d810, 32,  WO, BSP_CONTROL_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x2032d814, 32,  WO, BSP_CONTROL_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2032d818, 32,  RO, BSP_CONTROL_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2032d81c, 32,  WO, BSP_CONTROL_INTR2, PCI_SET)
BCHP_REGISTER(0x2032d820, 32,  WO, BSP_CONTROL_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x2032d824, 32,  RO, BSP_CONTROL_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x2032d828, 32,  WO, BSP_CONTROL_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2032d82c, 32,  WO, BSP_CONTROL_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20380000, 32,  RO, SECTOP_GRB, REVISION)
BCHP_REGISTER(0x20380004, 32,  RW, SECTOP_GRB, CTRL)
BCHP_REGISTER(0x20380008, 32,  RW, SECTOP_GRB, SW_INIT_0)
BCHP_REGISTER(0x2038000c, 32,  RW, SECTOP_GRB, SW_INIT_1)
BCHP_REGISTER(0x20380080, 32,  RO, XPT_SECURITY_NS_INTR2_0, CPU_STATUS)
BCHP_REGISTER(0x20380084, 32,  WO, XPT_SECURITY_NS_INTR2_0, CPU_SET)
BCHP_REGISTER(0x20380088, 32,  WO, XPT_SECURITY_NS_INTR2_0, CPU_CLEAR)
BCHP_REGISTER(0x2038008c, 32,  RO, XPT_SECURITY_NS_INTR2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x20380090, 32,  WO, XPT_SECURITY_NS_INTR2_0, CPU_MASK_SET)
BCHP_REGISTER(0x20380094, 32,  WO, XPT_SECURITY_NS_INTR2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20380098, 32,  RO, XPT_SECURITY_NS_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x2038009c, 32,  WO, XPT_SECURITY_NS_INTR2_0, PCI_SET)
BCHP_REGISTER(0x203800a0, 32,  WO, XPT_SECURITY_NS_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x203800a4, 32,  RO, XPT_SECURITY_NS_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x203800a8, 32,  WO, XPT_SECURITY_NS_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x203800ac, 32,  WO, XPT_SECURITY_NS_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20380100, 32,  RO, XPT_SECURITY_NS_INTR2_1, CPU_STATUS)
BCHP_REGISTER(0x20380104, 32,  WO, XPT_SECURITY_NS_INTR2_1, CPU_SET)
BCHP_REGISTER(0x20380108, 32,  WO, XPT_SECURITY_NS_INTR2_1, CPU_CLEAR)
BCHP_REGISTER(0x2038010c, 32,  RO, XPT_SECURITY_NS_INTR2_1, CPU_MASK_STATUS)
BCHP_REGISTER(0x20380110, 32,  WO, XPT_SECURITY_NS_INTR2_1, CPU_MASK_SET)
BCHP_REGISTER(0x20380114, 32,  WO, XPT_SECURITY_NS_INTR2_1, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20380118, 32,  RO, XPT_SECURITY_NS_INTR2_1, PCI_STATUS)
BCHP_REGISTER(0x2038011c, 32,  WO, XPT_SECURITY_NS_INTR2_1, PCI_SET)
BCHP_REGISTER(0x20380120, 32,  WO, XPT_SECURITY_NS_INTR2_1, PCI_CLEAR)
BCHP_REGISTER(0x20380124, 32,  RO, XPT_SECURITY_NS_INTR2_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x20380128, 32,  WO, XPT_SECURITY_NS_INTR2_1, PCI_MASK_SET)
BCHP_REGISTER(0x2038012c, 32,  WO, XPT_SECURITY_NS_INTR2_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20380180, 32,  RO, XPT_SECURITY_NS_INTR2_2, CPU_STATUS)
BCHP_REGISTER(0x20380184, 32,  WO, XPT_SECURITY_NS_INTR2_2, CPU_SET)
BCHP_REGISTER(0x20380188, 32,  WO, XPT_SECURITY_NS_INTR2_2, CPU_CLEAR)
BCHP_REGISTER(0x2038018c, 32,  RO, XPT_SECURITY_NS_INTR2_2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20380190, 32,  WO, XPT_SECURITY_NS_INTR2_2, CPU_MASK_SET)
BCHP_REGISTER(0x20380194, 32,  WO, XPT_SECURITY_NS_INTR2_2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20380198, 32,  RO, XPT_SECURITY_NS_INTR2_2, PCI_STATUS)
BCHP_REGISTER(0x2038019c, 32,  WO, XPT_SECURITY_NS_INTR2_2, PCI_SET)
BCHP_REGISTER(0x203801a0, 32,  WO, XPT_SECURITY_NS_INTR2_2, PCI_CLEAR)
BCHP_REGISTER(0x203801a4, 32,  RO, XPT_SECURITY_NS_INTR2_2, PCI_MASK_STATUS)
BCHP_REGISTER(0x203801a8, 32,  WO, XPT_SECURITY_NS_INTR2_2, PCI_MASK_SET)
BCHP_REGISTER(0x203801ac, 32,  WO, XPT_SECURITY_NS_INTR2_2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20380200, 32,  RW, XPT_SECURITY_NS, S0_BLOCKOUT_COUNT0)
BCHP_REGISTER(0x20380204, 32,  RW, XPT_SECURITY_NS, S0_BLOCKOUT_COUNT1)
BCHP_REGISTER(0x20380208, 32,  RW, XPT_SECURITY_NS, S0_BLOCKOUT_COUNT2)
BCHP_REGISTER(0x2038020c, 32,  RW, XPT_SECURITY_NS, S0_BLOCKOUT_COUNT3)
BCHP_REGISTER(0x20380210, 32,  RW, XPT_SECURITY_NS, S1_BLOCKOUT_COUNT0)
BCHP_REGISTER(0x20380214, 32,  RW, XPT_SECURITY_NS, S1_BLOCKOUT_COUNT1)
BCHP_REGISTER(0x20380218, 32,  RW, XPT_SECURITY_NS, S1_BLOCKOUT_COUNT2)
BCHP_REGISTER(0x2038021c, 32,  RW, XPT_SECURITY_NS, S1_BLOCKOUT_COUNT3)
BCHP_REGISTER(0x20380220, 32,  RW, XPT_SECURITY_NS, BLOCKOUT_CTRL)
BCHP_REGISTER(0x20380224, 32,  RW, XPT_SECURITY_NS, WATCHDOG_CTRL)
BCHP_REGISTER(0x20380228, 32,  RO, XPT_SECURITY_NS, SEC_POWAY_STATUS)
BCHP_REGISTER(0x2038022c, 32,  RW, XPT_SECURITY_NS, MAC0_SEMAPHORE)
BCHP_REGISTER(0x20380230, 32,  RO, XPT_SECURITY_NS, MAC0_0)
BCHP_REGISTER(0x20380234, 32,  RO, XPT_SECURITY_NS, MAC0_1)
BCHP_REGISTER(0x20380238, 32,  RO, XPT_SECURITY_NS, MAC0_2)
BCHP_REGISTER(0x2038023c, 32,  RO, XPT_SECURITY_NS, MAC0_3)
BCHP_REGISTER(0x20380240, 32,  RW, XPT_SECURITY_NS, MAC1_SEMAPHORE)
BCHP_REGISTER(0x20380244, 32,  RO, XPT_SECURITY_NS, MAC1_0)
BCHP_REGISTER(0x20380248, 32,  RO, XPT_SECURITY_NS, MAC1_1)
BCHP_REGISTER(0x2038024c, 32,  RO, XPT_SECURITY_NS, MAC1_2)
BCHP_REGISTER(0x20380250, 32,  RO, XPT_SECURITY_NS, MAC1_3)
BCHP_REGISTER(0x20380254, 32,  RW, XPT_SECURITY_NS, MAC2_SEMAPHORE)
BCHP_REGISTER(0x20380258, 32,  RO, XPT_SECURITY_NS, MAC2_0)
BCHP_REGISTER(0x2038025c, 32,  RO, XPT_SECURITY_NS, MAC2_1)
BCHP_REGISTER(0x20380260, 32,  RO, XPT_SECURITY_NS, MAC2_2)
BCHP_REGISTER(0x20380264, 32,  RO, XPT_SECURITY_NS, MAC2_3)
BCHP_REGISTER(0x20380268, 32,  RW, XPT_SECURITY_NS, MAC3_SEMAPHORE)
BCHP_REGISTER(0x2038026c, 32,  RO, XPT_SECURITY_NS, MAC3_0)
BCHP_REGISTER(0x20380270, 32,  RO, XPT_SECURITY_NS, MAC3_1)
BCHP_REGISTER(0x20380274, 32,  RO, XPT_SECURITY_NS, MAC3_2)
BCHP_REGISTER(0x20380278, 32,  RO, XPT_SECURITY_NS, MAC3_3)
BCHP_REGISTER(0x2038027c, 32,  RW, XPT_SECURITY_NS, SHA20_SEMAPHORE)
BCHP_REGISTER(0x20380280, 32,  RW, XPT_SECURITY_NS, SHA20_CTRL)
BCHP_REGISTER(0x20380284, 32,  RO, XPT_SECURITY_NS, SHA20_0)
BCHP_REGISTER(0x20380288, 32,  RO, XPT_SECURITY_NS, SHA20_1)
BCHP_REGISTER(0x2038028c, 32,  RO, XPT_SECURITY_NS, SHA20_2)
BCHP_REGISTER(0x20380290, 32,  RO, XPT_SECURITY_NS, SHA20_3)
BCHP_REGISTER(0x20380294, 32,  RO, XPT_SECURITY_NS, SHA20_4)
BCHP_REGISTER(0x20380298, 32,  RO, XPT_SECURITY_NS, SHA20_5)
BCHP_REGISTER(0x2038029c, 32,  RO, XPT_SECURITY_NS, SHA20_6)
BCHP_REGISTER(0x203802a0, 32,  RO, XPT_SECURITY_NS, SHA20_7)
BCHP_REGISTER(0x203802a4, 32,  RW, XPT_SECURITY_NS, SHA21_SEMAPHORE)
BCHP_REGISTER(0x203802a8, 32,  RW, XPT_SECURITY_NS, SHA21_CTRL)
BCHP_REGISTER(0x203802ac, 32,  RO, XPT_SECURITY_NS, SHA21_0)
BCHP_REGISTER(0x203802b0, 32,  RO, XPT_SECURITY_NS, SHA21_1)
BCHP_REGISTER(0x203802b4, 32,  RO, XPT_SECURITY_NS, SHA21_2)
BCHP_REGISTER(0x203802b8, 32,  RO, XPT_SECURITY_NS, SHA21_3)
BCHP_REGISTER(0x203802bc, 32,  RO, XPT_SECURITY_NS, SHA21_4)
BCHP_REGISTER(0x203802c0, 32,  RO, XPT_SECURITY_NS, SHA21_5)
BCHP_REGISTER(0x203802c4, 32,  RO, XPT_SECURITY_NS, SHA21_6)
BCHP_REGISTER(0x203802c8, 32,  RO, XPT_SECURITY_NS, SHA21_7)
BCHP_REGISTER(0x203bc000, 32, CFG, S_MEMC_0, RESERVED0)
BCHP_REGISTER(0x203bc7f0, 32, CFG, S_MEMC_0, RESERVED1)
BCHP_REGISTER(0x20400000, 32,  RO, SUN_GISB_ARB, REVISION)
BCHP_REGISTER(0x20400004, 32,  RW, SUN_GISB_ARB, REQ_MASK)
BCHP_REGISTER(0x20400008, 32,  RW, SUN_GISB_ARB, TIMER)
BCHP_REGISTER(0x2040000c, 32, CFG, SUN_GISB_ARB, BP_CTRL)
BCHP_REGISTER(0x20400010, 32,  WO, SUN_GISB_ARB, BP_CAP_CLR)
BCHP_REGISTER(0x20400014, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_0)
BCHP_REGISTER(0x20400018, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_0)
BCHP_REGISTER(0x2040001c, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_0)
BCHP_REGISTER(0x20400020, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_0)
BCHP_REGISTER(0x20400024, 32, CFG, SUN_GISB_ARB, BP_READ_0)
BCHP_REGISTER(0x20400028, 32, CFG, SUN_GISB_ARB, BP_WRITE_0)
BCHP_REGISTER(0x2040002c, 32, CFG, SUN_GISB_ARB, BP_ENABLE_0)
BCHP_REGISTER(0x20400030, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_1)
BCHP_REGISTER(0x20400034, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_1)
BCHP_REGISTER(0x20400038, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_1)
BCHP_REGISTER(0x2040003c, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_1)
BCHP_REGISTER(0x20400040, 32, CFG, SUN_GISB_ARB, BP_READ_1)
BCHP_REGISTER(0x20400044, 32, CFG, SUN_GISB_ARB, BP_WRITE_1)
BCHP_REGISTER(0x20400048, 32, CFG, SUN_GISB_ARB, BP_ENABLE_1)
BCHP_REGISTER(0x2040004c, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_2)
BCHP_REGISTER(0x20400050, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_2)
BCHP_REGISTER(0x20400054, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_2)
BCHP_REGISTER(0x20400058, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_2)
BCHP_REGISTER(0x2040005c, 32, CFG, SUN_GISB_ARB, BP_READ_2)
BCHP_REGISTER(0x20400060, 32, CFG, SUN_GISB_ARB, BP_WRITE_2)
BCHP_REGISTER(0x20400064, 32, CFG, SUN_GISB_ARB, BP_ENABLE_2)
BCHP_REGISTER(0x20400068, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_3)
BCHP_REGISTER(0x2040006c, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_3)
BCHP_REGISTER(0x20400070, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_3)
BCHP_REGISTER(0x20400074, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_3)
BCHP_REGISTER(0x20400078, 32, CFG, SUN_GISB_ARB, BP_READ_3)
BCHP_REGISTER(0x2040007c, 32, CFG, SUN_GISB_ARB, BP_WRITE_3)
BCHP_REGISTER(0x20400080, 32, CFG, SUN_GISB_ARB, BP_ENABLE_3)
BCHP_REGISTER(0x20400084, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_4)
BCHP_REGISTER(0x20400088, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_4)
BCHP_REGISTER(0x2040008c, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_4)
BCHP_REGISTER(0x20400090, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_4)
BCHP_REGISTER(0x20400094, 32, CFG, SUN_GISB_ARB, BP_READ_4)
BCHP_REGISTER(0x20400098, 32, CFG, SUN_GISB_ARB, BP_WRITE_4)
BCHP_REGISTER(0x2040009c, 32, CFG, SUN_GISB_ARB, BP_ENABLE_4)
BCHP_REGISTER(0x204000a0, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_5)
BCHP_REGISTER(0x204000a4, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_5)
BCHP_REGISTER(0x204000a8, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_5)
BCHP_REGISTER(0x204000ac, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_5)
BCHP_REGISTER(0x204000b0, 32, CFG, SUN_GISB_ARB, BP_READ_5)
BCHP_REGISTER(0x204000b4, 32, CFG, SUN_GISB_ARB, BP_WRITE_5)
BCHP_REGISTER(0x204000b8, 32, CFG, SUN_GISB_ARB, BP_ENABLE_5)
BCHP_REGISTER(0x204000bc, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_6)
BCHP_REGISTER(0x204000c0, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_6)
BCHP_REGISTER(0x204000c4, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_6)
BCHP_REGISTER(0x204000c8, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_6)
BCHP_REGISTER(0x204000cc, 32, CFG, SUN_GISB_ARB, BP_READ_6)
BCHP_REGISTER(0x204000d0, 32, CFG, SUN_GISB_ARB, BP_WRITE_6)
BCHP_REGISTER(0x204000d4, 32, CFG, SUN_GISB_ARB, BP_ENABLE_6)
BCHP_REGISTER(0x204000d8, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_7)
BCHP_REGISTER(0x204000dc, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_7)
BCHP_REGISTER(0x204000e0, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_7)
BCHP_REGISTER(0x204000e4, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_7)
BCHP_REGISTER(0x204000e8, 32, CFG, SUN_GISB_ARB, BP_READ_7)
BCHP_REGISTER(0x204000ec, 32, CFG, SUN_GISB_ARB, BP_WRITE_7)
BCHP_REGISTER(0x204000f0, 32, CFG, SUN_GISB_ARB, BP_ENABLE_7)
BCHP_REGISTER(0x204000f4, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_8)
BCHP_REGISTER(0x204000f8, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_8)
BCHP_REGISTER(0x204000fc, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_8)
BCHP_REGISTER(0x20400100, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_8)
BCHP_REGISTER(0x20400104, 32, CFG, SUN_GISB_ARB, BP_READ_8)
BCHP_REGISTER(0x20400108, 32, CFG, SUN_GISB_ARB, BP_WRITE_8)
BCHP_REGISTER(0x2040010c, 32, CFG, SUN_GISB_ARB, BP_ENABLE_8)
BCHP_REGISTER(0x20400110, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_9)
BCHP_REGISTER(0x20400114, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_9)
BCHP_REGISTER(0x20400118, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_9)
BCHP_REGISTER(0x2040011c, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_9)
BCHP_REGISTER(0x20400120, 32, CFG, SUN_GISB_ARB, BP_READ_9)
BCHP_REGISTER(0x20400124, 32, CFG, SUN_GISB_ARB, BP_WRITE_9)
BCHP_REGISTER(0x20400128, 32, CFG, SUN_GISB_ARB, BP_ENABLE_9)
BCHP_REGISTER(0x2040012c, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_10)
BCHP_REGISTER(0x20400130, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_10)
BCHP_REGISTER(0x20400134, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_10)
BCHP_REGISTER(0x20400138, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_10)
BCHP_REGISTER(0x2040013c, 32, CFG, SUN_GISB_ARB, BP_READ_10)
BCHP_REGISTER(0x20400140, 32, CFG, SUN_GISB_ARB, BP_WRITE_10)
BCHP_REGISTER(0x20400144, 32, CFG, SUN_GISB_ARB, BP_ENABLE_10)
BCHP_REGISTER(0x20400148, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_11)
BCHP_REGISTER(0x2040014c, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_11)
BCHP_REGISTER(0x20400150, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_11)
BCHP_REGISTER(0x20400154, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_11)
BCHP_REGISTER(0x20400158, 32, CFG, SUN_GISB_ARB, BP_READ_11)
BCHP_REGISTER(0x2040015c, 32, CFG, SUN_GISB_ARB, BP_WRITE_11)
BCHP_REGISTER(0x20400160, 32, CFG, SUN_GISB_ARB, BP_ENABLE_11)
BCHP_REGISTER(0x20400164, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_12)
BCHP_REGISTER(0x20400168, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_12)
BCHP_REGISTER(0x2040016c, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_12)
BCHP_REGISTER(0x20400170, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_12)
BCHP_REGISTER(0x20400174, 32, CFG, SUN_GISB_ARB, BP_READ_12)
BCHP_REGISTER(0x20400178, 32, CFG, SUN_GISB_ARB, BP_WRITE_12)
BCHP_REGISTER(0x2040017c, 32, CFG, SUN_GISB_ARB, BP_ENABLE_12)
BCHP_REGISTER(0x20400180, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_13)
BCHP_REGISTER(0x20400184, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_13)
BCHP_REGISTER(0x20400188, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_13)
BCHP_REGISTER(0x2040018c, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_13)
BCHP_REGISTER(0x20400190, 32, CFG, SUN_GISB_ARB, BP_READ_13)
BCHP_REGISTER(0x20400194, 32, CFG, SUN_GISB_ARB, BP_WRITE_13)
BCHP_REGISTER(0x20400198, 32, CFG, SUN_GISB_ARB, BP_ENABLE_13)
BCHP_REGISTER(0x2040019c, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_14)
BCHP_REGISTER(0x204001a0, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_14)
BCHP_REGISTER(0x204001a4, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_14)
BCHP_REGISTER(0x204001a8, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_14)
BCHP_REGISTER(0x204001ac, 32, CFG, SUN_GISB_ARB, BP_READ_14)
BCHP_REGISTER(0x204001b0, 32, CFG, SUN_GISB_ARB, BP_WRITE_14)
BCHP_REGISTER(0x204001b4, 32, CFG, SUN_GISB_ARB, BP_ENABLE_14)
BCHP_REGISTER(0x204001b8, 32, CFG, SUN_GISB_ARB, BP_HI_START_ADDR_15)
BCHP_REGISTER(0x204001bc, 32, CFG, SUN_GISB_ARB, BP_START_ADDR_15)
BCHP_REGISTER(0x204001c0, 32, CFG, SUN_GISB_ARB, BP_HI_END_ADDR_15)
BCHP_REGISTER(0x204001c4, 32, CFG, SUN_GISB_ARB, BP_END_ADDR_15)
BCHP_REGISTER(0x204001c8, 32, CFG, SUN_GISB_ARB, BP_READ_15)
BCHP_REGISTER(0x204001cc, 32, CFG, SUN_GISB_ARB, BP_WRITE_15)
BCHP_REGISTER(0x204001d0, 32, CFG, SUN_GISB_ARB, BP_ENABLE_15)
BCHP_REGISTER(0x204001d4, 32,  RO, SUN_GISB_ARB, BP_CAP_HI_ADDR)
BCHP_REGISTER(0x204001d8, 32,  RO, SUN_GISB_ARB, BP_CAP_ADDR)
BCHP_REGISTER(0x204001dc, 32,  RO, SUN_GISB_ARB, BP_CAP_DATA)
BCHP_REGISTER(0x204001e0, 32,  RO, SUN_GISB_ARB, BP_CAP_STATUS)
BCHP_REGISTER(0x204001e4, 32,  RO, SUN_GISB_ARB, BP_CAP_MASTER)
BCHP_REGISTER(0x204007e4, 32,  WO, SUN_GISB_ARB, ERR_CAP_CLR)
BCHP_REGISTER(0x204007e8, 32,  RO, SUN_GISB_ARB, ERR_CAP_HI_ADDR)
BCHP_REGISTER(0x204007ec, 32,  RO, SUN_GISB_ARB, ERR_CAP_ADDR)
BCHP_REGISTER(0x204007f0, 32,  RO, SUN_GISB_ARB, ERR_CAP_DATA)
BCHP_REGISTER(0x204007f4, 32,  RO, SUN_GISB_ARB, ERR_CAP_STATUS)
BCHP_REGISTER(0x204007f8, 32,  RO, SUN_GISB_ARB, ERR_CAP_MASTER)
BCHP_REGISTER(0x204007fc, 32, CFG, SUN_GISB_ARB, SCRATCH)
BCHP_REGISTER(0x20401000, 32,  RO, SUN_GR, REVISION)
BCHP_REGISTER(0x20401004, 32, CFG, SUN_GR, CTRL)
BCHP_REGISTER(0x20401008, 32, CFG, SUN_GR, PD)
BCHP_REGISTER(0x2040100c, 32, CFG, SUN_GR, SW_INIT_0)
BCHP_REGISTER(0x20401200, 32,  RO, SSP_RG, REVISION)
BCHP_REGISTER(0x20401204, 32,  RW, SSP_RG, CTRL)
BCHP_REGISTER(0x20401208, 32,  RW, SSP_RG, SW_INIT_0)
BCHP_REGISTER(0x2040120c, 32,  RW, SSP_RG, SW_INIT_1)
BCHP_REGISTER(0x20401400, 32,  RO, SUN_RG, REVISION)
BCHP_REGISTER(0x20401404, 32,  RW, SUN_RG, CTRL)
BCHP_REGISTER(0x20401408, 32,  RW, SUN_RG, SW_INIT_0)
BCHP_REGISTER(0x2040140c, 32,  RW, SUN_RG, SW_INIT_1)
BCHP_REGISTER(0x20403000, 32,  RO, SUN_L2, CPU_STATUS)
BCHP_REGISTER(0x20403004, 32,  WO, SUN_L2, CPU_SET)
BCHP_REGISTER(0x20403008, 32,  WO, SUN_L2, CPU_CLEAR)
BCHP_REGISTER(0x2040300c, 32,  RO, SUN_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20403010, 32,  WO, SUN_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20403014, 32,  WO, SUN_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20403018, 32,  RO, SUN_L2, PCI_STATUS)
BCHP_REGISTER(0x2040301c, 32,  WO, SUN_L2, PCI_SET)
BCHP_REGISTER(0x20403020, 32,  WO, SUN_L2, PCI_CLEAR)
BCHP_REGISTER(0x20403024, 32,  RO, SUN_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20403028, 32,  WO, SUN_L2, PCI_MASK_SET)
BCHP_REGISTER(0x2040302c, 32,  WO, SUN_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20403030, 32,  RO, SUN_L2, SCPU_STATUS)
BCHP_REGISTER(0x20403034, 32,  WO, SUN_L2, SCPU_SET)
BCHP_REGISTER(0x20403038, 32,  WO, SUN_L2, SCPU_CLEAR)
BCHP_REGISTER(0x2040303c, 32,  RO, SUN_L2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x20403040, 32,  WO, SUN_L2, SCPU_MASK_SET)
BCHP_REGISTER(0x20403044, 32,  WO, SUN_L2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x20403100, 32,  RO, SUN_UUI, VERSION)
BCHP_REGISTER(0x20403104, 32,  WO, SUN_UUI, COMMAND)
BCHP_REGISTER(0x20403108, 32,  RO, SUN_UUI, STATUS)
BCHP_REGISTER(0x20403110, 32, CFG, SUN_UUI, CLK_DIV)
BCHP_REGISTER(0x20403114, 32, CFG, SUN_UUI, DATA_TIMING)
BCHP_REGISTER(0x2040311c, 32, CFG, SUN_UUI, DEBUG)
BCHP_REGISTER(0x20403120, 32, CFG, SUN_UUI, UART_SEL1)
BCHP_REGISTER(0x20403124, 32, CFG, SUN_UUI, UART_SEL2)
BCHP_REGISTER(0x20403128, 32, CFG, SUN_UUI, UART_SEL3)
BCHP_REGISTER(0x2040312c, 32, CFG, SUN_UUI, UART_SEL4)
BCHP_REGISTER(0x20403130, 32, CFG, SUN_UUI, UART_SEL5)
BCHP_REGISTER(0x20403134, 32, CFG, SUN_UUI, UART_SEL6)
BCHP_REGISTER(0x2040313c, 32,  RW, SUN_UUI, TX_ACTIVE)
BCHP_REGISTER(0x20404000, 32,  RO, SUN_TOP_CTRL, CHIP_FAMILY_ID)
BCHP_REGISTER(0x20404004, 32,  RO, SUN_TOP_CTRL, PRODUCT_ID)
BCHP_REGISTER(0x20404008, 32,  RO, SUN_TOP_CTRL, BSP_FEATURE_TABLE_ADDR)
BCHP_REGISTER(0x2040401c, 32,  RO, SUN_TOP_CTRL, STRAP_VALUE_0)
BCHP_REGISTER(0x20404020, 32,  RO, SUN_TOP_CTRL, STRAP_VALUE_1)
BCHP_REGISTER(0x20404024, 32,  RO, SUN_TOP_CTRL, BOND_STATUS)
BCHP_REGISTER(0x20404028, 32,  RW, SUN_TOP_CTRL, OTP_OPTION_TEST_0)
BCHP_REGISTER(0x2040402c, 32,  RW, SUN_TOP_CTRL, OTP_OPTION_TEST_1)
BCHP_REGISTER(0x20404030, 32,  RO, SUN_TOP_CTRL, OTP_OPTION_STATUS_0)
BCHP_REGISTER(0x20404034, 32,  RO, SUN_TOP_CTRL, OTP_OPTION_STATUS_1)
BCHP_REGISTER(0x20404038, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_0)
BCHP_REGISTER(0x2040403c, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_1)
BCHP_REGISTER(0x20404040, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_2)
BCHP_REGISTER(0x20404044, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_3)
BCHP_REGISTER(0x20404048, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_4)
BCHP_REGISTER(0x2040404c, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_5)
BCHP_REGISTER(0x20404050, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_6)
BCHP_REGISTER(0x20404054, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_7)
BCHP_REGISTER(0x20404058, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_8)
BCHP_REGISTER(0x2040405c, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_9)
BCHP_REGISTER(0x20404060, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_10)
BCHP_REGISTER(0x20404064, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_11)
BCHP_REGISTER(0x20404068, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_12)
BCHP_REGISTER(0x2040406c, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_13)
BCHP_REGISTER(0x20404070, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_14)
BCHP_REGISTER(0x20404074, 32,  RW, SUN_TOP_CTRL, SEMAPHORE_15)
BCHP_REGISTER(0x20404078, 32,  RW, SUN_TOP_CTRL, GEN_WATCHDOG_0)
BCHP_REGISTER(0x2040407c, 32,  RW, SUN_TOP_CTRL, GEN_WATCHDOG_1)
BCHP_REGISTER(0x20404080, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_0)
BCHP_REGISTER(0x20404084, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_1)
BCHP_REGISTER(0x20404088, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_2)
BCHP_REGISTER(0x2040408c, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_3)
BCHP_REGISTER(0x20404090, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_4)
BCHP_REGISTER(0x20404094, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_5)
BCHP_REGISTER(0x20404098, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_0)
BCHP_REGISTER(0x2040409c, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_1)
BCHP_REGISTER(0x204040a0, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_2)
BCHP_REGISTER(0x204040a4, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_0)
BCHP_REGISTER(0x204040a8, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_1)
BCHP_REGISTER(0x204040ac, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_2)
BCHP_REGISTER(0x204040b0, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_3)
BCHP_REGISTER(0x204040b4, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_4)
BCHP_REGISTER(0x204040b8, 32,  RW, SUN_TOP_CTRL, GENERAL_CTRL_NO_SCAN_5)
BCHP_REGISTER(0x204040bc, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_3)
BCHP_REGISTER(0x204040c0, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_4)
BCHP_REGISTER(0x204040c4, 32,  RO, SUN_TOP_CTRL, GENERAL_STATUS_5)
BCHP_REGISTER(0x204040d0, 32,  RW, SUN_TOP_CTRL, IP_DISABLE_UNLOCK)
BCHP_REGISTER(0x204040d4, 32,  RW, SUN_TOP_CTRL, IP_DISABLE_0)
BCHP_REGISTER(0x20404100, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_0)
BCHP_REGISTER(0x20404104, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_1)
BCHP_REGISTER(0x20404108, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_2)
BCHP_REGISTER(0x2040410c, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_3)
BCHP_REGISTER(0x20404110, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_4)
BCHP_REGISTER(0x20404114, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_5)
BCHP_REGISTER(0x20404118, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_6)
BCHP_REGISTER(0x2040411c, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_7)
BCHP_REGISTER(0x20404120, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_8)
BCHP_REGISTER(0x20404124, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_9)
BCHP_REGISTER(0x20404128, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_10)
BCHP_REGISTER(0x2040412c, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_11)
BCHP_REGISTER(0x20404130, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_12)
BCHP_REGISTER(0x20404134, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_13)
BCHP_REGISTER(0x20404138, 32,  RW, SUN_TOP_CTRL, PIN_MUX_CTRL_14)
BCHP_REGISTER(0x2040413c, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_0)
BCHP_REGISTER(0x20404140, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_1)
BCHP_REGISTER(0x20404144, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_2)
BCHP_REGISTER(0x20404148, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_3)
BCHP_REGISTER(0x2040414c, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_4)
BCHP_REGISTER(0x20404150, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_5)
BCHP_REGISTER(0x20404154, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_6)
BCHP_REGISTER(0x20404158, 32,  RW, SUN_TOP_CTRL, PIN_MUX_PAD_CTRL_7)
BCHP_REGISTER(0x2040415c, 32,  RW, SUN_TOP_CTRL, BYP_CLK_UNSELECT_0)
BCHP_REGISTER(0x20404300, 32,  RW, SUN_TOP_CTRL, RESET_CTRL)
BCHP_REGISTER(0x20404304, 32,  RW, SUN_TOP_CTRL, RESET_SOURCE_ENABLE)
BCHP_REGISTER(0x20404308, 32,  RW, SUN_TOP_CTRL, SW_MASTER_RESET)
BCHP_REGISTER(0x2040430c, 32,  RW, SUN_TOP_CTRL, HW_RESET_EXTENSION)
BCHP_REGISTER(0x20404310, 32,  RO, SUN_TOP_CTRL, RESET_MONITOR)
BCHP_REGISTER(0x20404314, 32,  RO, SUN_TOP_CTRL, RESET_HISTORY)
BCHP_REGISTER(0x20404318, 32,  WO, SUN_TOP_CTRL, SW_INIT_0_SET)
BCHP_REGISTER(0x2040431c, 32,  WO, SUN_TOP_CTRL, SW_INIT_0_CLEAR)
BCHP_REGISTER(0x20404320, 32,  RO, SUN_TOP_CTRL, SW_INIT_0_STATUS)
BCHP_REGISTER(0x20404324, 32,  RO, SUN_TOP_CTRL, SEC_SW_INIT_0_MONITOR)
BCHP_REGISTER(0x20404328, 32,  RO, SUN_TOP_CTRL, TEST_CONFIG_SW_INIT_0_MONITOR)
BCHP_REGISTER(0x2040432c, 32,  RO, SUN_TOP_CTRL, FINAL_SW_INIT_0_MONITOR)
BCHP_REGISTER(0x20404330, 32,  WO, SUN_TOP_CTRL, SW_INIT_1_SET)
BCHP_REGISTER(0x20404334, 32,  WO, SUN_TOP_CTRL, SW_INIT_1_CLEAR)
BCHP_REGISTER(0x20404338, 32,  RO, SUN_TOP_CTRL, SW_INIT_1_STATUS)
BCHP_REGISTER(0x2040433c, 32,  RO, SUN_TOP_CTRL, SEC_SW_INIT_1_MONITOR)
BCHP_REGISTER(0x20404340, 32,  RO, SUN_TOP_CTRL, TEST_CONFIG_SW_INIT_1_MONITOR)
BCHP_REGISTER(0x20404344, 32,  RO, SUN_TOP_CTRL, FINAL_SW_INIT_1_MONITOR)
BCHP_REGISTER(0x20404348, 32,  RW, SUN_TOP_CTRL, SW_INIT_ONE_SHOT_TRIGGER)
BCHP_REGISTER(0x2040434c, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_0_SW_INIT_WIDTH)
BCHP_REGISTER(0x20404350, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_0_SW_INIT_0_MASK)
BCHP_REGISTER(0x20404354, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_0_SW_INIT_1_MASK)
BCHP_REGISTER(0x20404358, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_1_SW_INIT_WIDTH)
BCHP_REGISTER(0x2040435c, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_1_SW_INIT_0_MASK)
BCHP_REGISTER(0x20404360, 32,  RW, SUN_TOP_CTRL, ONE_SHOT_1_SW_INIT_1_MASK)
BCHP_REGISTER(0x20404364, 32,  RW, SUN_TOP_CTRL, UNCLEARED_SCRATCH)
BCHP_REGISTER(0x20404368, 32,  RW, SUN_TOP_CTRL, SPARE_CTRL)
BCHP_REGISTER(0x20404380, 32,  RW, SUN_TOP_CTRL, TEST_PORT_CTRL)
BCHP_REGISTER(0x20404384, 32,  RO, SUN_TOP_CTRL, TEST_PORT_OUT_PEEK)
BCHP_REGISTER(0x20404388, 32,  RW, SUN_TOP_CTRL, TEST_PORT_OUT_POKE)
BCHP_REGISTER(0x2040438c, 32,  RO, SUN_TOP_CTRL, TEST_PORT_IN_PEEK)
BCHP_REGISTER(0x20404390, 32,  RW, SUN_TOP_CTRL, TEST_PORT_IN_POKE)
BCHP_REGISTER(0x20404394, 32,  RW, SUN_TOP_CTRL, EJTAG_INPUT_EN)
BCHP_REGISTER(0x20404398, 32,  RW, SUN_TOP_CTRL, EJTAG_OUTPUT_SEL)
BCHP_REGISTER(0x204043a0, 32,  RW, SUN_TOP_CTRL, VTRAP_CTRL)
BCHP_REGISTER(0x204043a4, 32,  RO, SUN_TOP_CTRL, VTRAP_STATUS)
BCHP_REGISTER(0x204043a8, 32,  RW, SUN_TOP_CTRL, UART_ROUTER_SEL_0)
BCHP_REGISTER(0x204043ac, 32,  RW, SUN_TOP_CTRL, UART_ROUTER_SEL_1)
BCHP_REGISTER(0x20404400, 32,  RW, SUN_TOP_CTRL, SSP_CONFIG)
BCHP_REGISTER(0x20404420, 32,  RO, SUN_TOP_CTRL, SERS_REV)
BCHP_REGISTER(0x20404424, 32,  RW, SUN_TOP_CTRL, SERS_CFG)
BCHP_REGISTER(0x20404514, 32,  RW, SUN_TOP_CTRL, RO_TEST_BLOCK_SEL)
BCHP_REGISTER(0x20404518, 32,  RW, SUN_TOP_CTRL, TEST_CONFIGURATION)
BCHP_REGISTER(0x2040451c, 32,  RW, SUN_TOP_CTRL, OTP_OPTION_TEST_2)
BCHP_REGISTER(0x20404520, 32,  RO, SUN_TOP_CTRL, OTP_OPTION_STATUS_2)
BCHP_REGISTER(0x20404600, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_AIO)
BCHP_REGISTER(0x20404604, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_BVN)
BCHP_REGISTER(0x20404614, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_GENET0)
BCHP_REGISTER(0x2040461c, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_HVD)
BCHP_REGISTER(0x20404628, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_M2MC0)
BCHP_REGISTER(0x20404658, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_V3D)
BCHP_REGISTER(0x2040465c, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_VEC)
BCHP_REGISTER(0x2040466c, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_HVDP)
BCHP_REGISTER(0x20404674, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_LEAP)
BCHP_REGISTER(0x2040467c, 32,  RW, SUN_TOP_CTRL, SRAM_POWER_GATE_DS)
BCHP_REGISTER(0x20404700, 32,  RW, SUN_TOP_CTRL, MEMORY_STANDBY_HIF)
BCHP_REGISTER(0x2040470c, 32,  RW, SUN_TOP_CTRL, MEMORY_STANDBY_BSP)
BCHP_REGISTER(0x20404710, 32,  RW, SUN_TOP_CTRL, MEMORY_STANDBY_AON)
BCHP_REGISTER(0x2040471c, 32,  RW, SUN_TOP_CTRL, MEMORY_STANDBY_LEAP)
BCHP_REGISTER(0x20405c00, 32,  RO, BBSI_RG, REVISION)
BCHP_REGISTER(0x20405c04, 32,  RW, BBSI_RG, CTRL)
BCHP_REGISTER(0x20405c08, 32,  RW, BBSI_RG, SW_INIT_0)
BCHP_REGISTER(0x20405c0c, 32,  RW, BBSI_RG, SW_INIT_1)
BCHP_REGISTER(0x20408000, 32,  RW, PWM, CTRL)
BCHP_REGISTER(0x20408004, 32,  RW, PWM, CTRL2)
BCHP_REGISTER(0x20408008, 32,  RW, PWM, PWM1_CWORD_MSB)
BCHP_REGISTER(0x2040800c, 32,  RW, PWM, PWM1_CWORD_LSB)
BCHP_REGISTER(0x20408010, 32,  RW, PWM, PWM2_CWORD_MSB)
BCHP_REGISTER(0x20408014, 32,  RW, PWM, PWM2_CWORD_LSB)
BCHP_REGISTER(0x20408018, 32,  RW, PWM, PWM1_ON)
BCHP_REGISTER(0x2040801c, 32,  RW, PWM, PWM1_PERIOD)
BCHP_REGISTER(0x20408020, 32,  RW, PWM, PWM2_ON)
BCHP_REGISTER(0x20408024, 32,  RW, PWM, PWM2_PERIOD)
BCHP_REGISTER(0x20409000, 32,  RW, PWMB, CTRL)
BCHP_REGISTER(0x20409004, 32,  RW, PWMB, CTRL2)
BCHP_REGISTER(0x20409008, 32,  RW, PWMB, PWM1_CWORD_MSB)
BCHP_REGISTER(0x2040900c, 32,  RW, PWMB, PWM1_CWORD_LSB)
BCHP_REGISTER(0x20409010, 32,  RW, PWMB, PWM2_CWORD_MSB)
BCHP_REGISTER(0x20409014, 32,  RW, PWMB, PWM2_CWORD_LSB)
BCHP_REGISTER(0x20409018, 32,  RW, PWMB, PWM1_ON)
BCHP_REGISTER(0x2040901c, 32,  RW, PWMB, PWM1_PERIOD)
BCHP_REGISTER(0x20409020, 32,  RW, PWMB, PWM2_ON)
BCHP_REGISTER(0x20409024, 32,  RW, PWMB, PWM2_PERIOD)
BCHP_REGISTER(0x2040a000, 32,  RW, IRB, BLAST_NUMSEQ)
BCHP_REGISTER(0x2040a004, 32,  RW, IRB, BLAST_CONTROL)
BCHP_REGISTER(0x2040a008, 32,  RW, IRB, BLAST_INDXPRE)
BCHP_REGISTER(0x2040a00c, 32,  RW, IRB, BLAST_PRIMPRE)
BCHP_REGISTER(0x2040a010, 32,  RW, IRB, BLAST_REPINDX)
BCHP_REGISTER(0x2040a014, 32,  RW, IRB, BLAST_REPNUM)
BCHP_REGISTER(0x2040a018, 32,  RW, IRB, BLAST_CARRHI)
BCHP_REGISTER(0x2040a01c, 32,  RW, IRB, BLAST_CARRLO)
BCHP_REGISTER(0x2040a020, 32,  RW, IRB, BLAST_SEQ_REGFILE00)
BCHP_REGISTER(0x2040a024, 32,  RW, IRB, BLAST_SEQ_REGFILE01)
BCHP_REGISTER(0x2040a028, 32,  RW, IRB, BLAST_SEQ_REGFILE02)
BCHP_REGISTER(0x2040a02c, 32,  RW, IRB, BLAST_SEQ_REGFILE03)
BCHP_REGISTER(0x2040a030, 32,  RW, IRB, BLAST_SEQ_REGFILE04)
BCHP_REGISTER(0x2040a034, 32,  RW, IRB, BLAST_SEQ_REGFILE05)
BCHP_REGISTER(0x2040a038, 32,  RW, IRB, BLAST_SEQ_REGFILE06)
BCHP_REGISTER(0x2040a03c, 32,  RW, IRB, BLAST_SEQ_REGFILE07)
BCHP_REGISTER(0x2040a040, 32,  RW, IRB, BLAST_SEQ_REGFILE08)
BCHP_REGISTER(0x2040a044, 32,  RW, IRB, BLAST_SEQ_REGFILE09)
BCHP_REGISTER(0x2040a048, 32,  RW, IRB, BLAST_SEQ_REGFILE10)
BCHP_REGISTER(0x2040a04c, 32,  RW, IRB, BLAST_SEQ_REGFILE11)
BCHP_REGISTER(0x2040a050, 32,  RW, IRB, BLAST_SEQ_REGFILE12)
BCHP_REGISTER(0x2040a054, 32,  RW, IRB, BLAST_SEQ_REGFILE13)
BCHP_REGISTER(0x2040a058, 32,  RW, IRB, BLAST_SEQ_REGFILE14)
BCHP_REGISTER(0x2040a05c, 32,  RW, IRB, BLAST_SEQ_REGFILE15)
BCHP_REGISTER(0x2040a060, 32,  RW, IRB, BLAST_SEQ_REGFILE16)
BCHP_REGISTER(0x2040a064, 32,  RW, IRB, BLAST_SEQ_REGFILE17)
BCHP_REGISTER(0x2040a068, 32,  RW, IRB, BLAST_SEQ_REGFILE18)
BCHP_REGISTER(0x2040a06c, 32,  RW, IRB, BLAST_SEQ_REGFILE19)
BCHP_REGISTER(0x2040a070, 32,  RW, IRB, BLAST_SEQ_REGFILE20)
BCHP_REGISTER(0x2040a074, 32,  RW, IRB, BLAST_SEQ_REGFILE21)
BCHP_REGISTER(0x2040a078, 32,  RW, IRB, BLAST_SEQ_REGFILE22)
BCHP_REGISTER(0x2040a07c, 32,  RW, IRB, BLAST_SEQ_REGFILE23)
BCHP_REGISTER(0x2040a080, 32,  RW, IRB, BLAST_SEQ_REGFILE24)
BCHP_REGISTER(0x2040a084, 32,  RW, IRB, BLAST_SEQ_REGFILE25)
BCHP_REGISTER(0x2040a088, 32,  RW, IRB, BLAST_SEQ_REGFILE26)
BCHP_REGISTER(0x2040a08c, 32,  RW, IRB, BLAST_SEQ_REGFILE27)
BCHP_REGISTER(0x2040a090, 32,  RW, IRB, BLAST_SEQ_REGFILE28)
BCHP_REGISTER(0x2040a094, 32,  RW, IRB, BLAST_SEQ_REGFILE29)
BCHP_REGISTER(0x2040a098, 32,  RW, IRB, BLAST_SEQ_REGFILE30)
BCHP_REGISTER(0x2040a09c, 32,  RW, IRB, BLAST_SEQ_REGFILE31)
BCHP_REGISTER(0x2040a0a0, 32,  RW, IRB, BLAST_SEQ_REGFILE32)
BCHP_REGISTER(0x2040a0a4, 32,  RW, IRB, BLAST_SEQ_REGFILE33)
BCHP_REGISTER(0x2040a0a8, 32,  RW, IRB, BLAST_SEQ_REGFILE34)
BCHP_REGISTER(0x2040a0ac, 32,  RW, IRB, BLAST_SEQ_REGFILE35)
BCHP_REGISTER(0x2040a0b0, 32,  RW, IRB, BLAST_SEQ_REGFILE36)
BCHP_REGISTER(0x2040a0b4, 32,  RW, IRB, BLAST_SEQ_REGFILE37)
BCHP_REGISTER(0x2040a0b8, 32,  RW, IRB, BLAST_SEQ_REGFILE38)
BCHP_REGISTER(0x2040a0bc, 32,  RW, IRB, BLAST_SEQ_REGFILE39)
BCHP_REGISTER(0x2040a0c0, 32,  RW, IRB, BLAST_MOD_REGFILE00)
BCHP_REGISTER(0x2040a0c4, 32,  RW, IRB, BLAST_MOD_REGFILE01)
BCHP_REGISTER(0x2040a0c8, 32,  RW, IRB, BLAST_MOD_REGFILE02)
BCHP_REGISTER(0x2040a0cc, 32,  RW, IRB, BLAST_MOD_REGFILE03)
BCHP_REGISTER(0x2040a0d0, 32,  RW, IRB, BLAST_MOD_REGFILE04)
BCHP_REGISTER(0x2040a0d4, 32,  RW, IRB, BLAST_MOD_REGFILE05)
BCHP_REGISTER(0x2040a0d8, 32,  RW, IRB, BLAST_MOD_REGFILE06)
BCHP_REGISTER(0x2040a0dc, 32,  RW, IRB, BLAST_MOD_REGFILE07)
BCHP_REGISTER(0x2040a0e0, 32,  RW, IRB, BLAST_MOD_REGFILE08)
BCHP_REGISTER(0x2040a0e4, 32,  RW, IRB, BLAST_MOD_REGFILE09)
BCHP_REGISTER(0x2040a0e8, 32,  RW, IRB, BLAST_MOD_REGFILE10)
BCHP_REGISTER(0x2040a0ec, 32,  RW, IRB, BLAST_MOD_REGFILE11)
BCHP_REGISTER(0x2040a0f0, 32,  RW, IRB, BLAST_MOD_REGFILE12)
BCHP_REGISTER(0x2040a0f4, 32,  RW, IRB, BLAST_MOD_REGFILE13)
BCHP_REGISTER(0x2040a0f8, 32,  RW, IRB, BLAST_MOD_REGFILE14)
BCHP_REGISTER(0x2040a0fc, 32,  RW, IRB, BLAST_MOD_REGFILE15)
BCHP_REGISTER(0x2040a100, 32,  RW, IRB, BLAST_MOD_REGFILE16)
BCHP_REGISTER(0x2040a104, 32,  RW, IRB, BLAST_MOD_REGFILE17)
BCHP_REGISTER(0x2040a108, 32,  RW, IRB, BLAST_MOD_REGFILE18)
BCHP_REGISTER(0x2040a10c, 32,  RW, IRB, BLAST_MOD_REGFILE19)
BCHP_REGISTER(0x2040a110, 32,  RW, IRB, BLAST_MOD_REGFILE20)
BCHP_REGISTER(0x2040a114, 32,  RW, IRB, BLAST_MOD_REGFILE21)
BCHP_REGISTER(0x2040a118, 32,  RW, IRB, BLAST_MOD_REGFILE22)
BCHP_REGISTER(0x2040a11c, 32,  RW, IRB, BLAST_MOD_REGFILE23)
BCHP_REGISTER(0x2040a120, 32,  RW, IRB, BLAST_MOD_REGFILE24)
BCHP_REGISTER(0x2040a124, 32,  RW, IRB, BLAST_MOD_REGFILE25)
BCHP_REGISTER(0x2040a128, 32,  RW, IRB, BLAST_MOD_REGFILE26)
BCHP_REGISTER(0x2040a12c, 32,  RW, IRB, BLAST_MOD_REGFILE27)
BCHP_REGISTER(0x2040a130, 32,  RW, IRB, BLAST_INTRSTATUS)
BCHP_REGISTER(0x2040a134, 32,  RW, IRB, BLAST_INTRENABLE)
BCHP_REGISTER(0x2040a138, 32,  RW, IRB, BLAST_INTRDISABLE)
BCHP_REGISTER(0x2040a200, 32,  RW, PM, CONFIG)
BCHP_REGISTER(0x2040a204, 32,  RW, PM, CLK_CTRL)
BCHP_REGISTER(0x2040a208, 32,  RW, PM, RST_CTRL)
BCHP_REGISTER(0x2040a280, 32,  RW, BSCA, CHIP_ADDRESS)
BCHP_REGISTER(0x2040a284, 32,  RW, BSCA, DATA_IN0)
BCHP_REGISTER(0x2040a288, 32,  RW, BSCA, DATA_IN1)
BCHP_REGISTER(0x2040a28c, 32,  RW, BSCA, DATA_IN2)
BCHP_REGISTER(0x2040a290, 32,  RW, BSCA, DATA_IN3)
BCHP_REGISTER(0x2040a294, 32,  RW, BSCA, DATA_IN4)
BCHP_REGISTER(0x2040a298, 32,  RW, BSCA, DATA_IN5)
BCHP_REGISTER(0x2040a29c, 32,  RW, BSCA, DATA_IN6)
BCHP_REGISTER(0x2040a2a0, 32,  RW, BSCA, DATA_IN7)
BCHP_REGISTER(0x2040a2a4, 32,  RW, BSCA, CNT_REG)
BCHP_REGISTER(0x2040a2a8, 32,  RW, BSCA, CTL_REG)
BCHP_REGISTER(0x2040a2ac, 32,  RW, BSCA, IIC_ENABLE)
BCHP_REGISTER(0x2040a2b0, 32,  RO, BSCA, DATA_OUT0)
BCHP_REGISTER(0x2040a2b4, 32,  RO, BSCA, DATA_OUT1)
BCHP_REGISTER(0x2040a2b8, 32,  RO, BSCA, DATA_OUT2)
BCHP_REGISTER(0x2040a2bc, 32,  RO, BSCA, DATA_OUT3)
BCHP_REGISTER(0x2040a2c0, 32,  RO, BSCA, DATA_OUT4)
BCHP_REGISTER(0x2040a2c4, 32,  RO, BSCA, DATA_OUT5)
BCHP_REGISTER(0x2040a2c8, 32,  RO, BSCA, DATA_OUT6)
BCHP_REGISTER(0x2040a2cc, 32,  RO, BSCA, DATA_OUT7)
BCHP_REGISTER(0x2040a2d0, 32,  RW, BSCA, CTLHI_REG)
BCHP_REGISTER(0x2040a2d4, 32,  RW, BSCA, SCL_PARAM)
BCHP_REGISTER(0x2040a300, 32,  RO, UPG_MAIN_IRQ, CPU_STATUS)
BCHP_REGISTER(0x2040a304, 32,  RO, UPG_MAIN_IRQ, CPU_MASK_STATUS)
BCHP_REGISTER(0x2040a308, 32,  WO, UPG_MAIN_IRQ, CPU_MASK_SET)
BCHP_REGISTER(0x2040a30c, 32,  WO, UPG_MAIN_IRQ, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2040a310, 32,  RO, UPG_MAIN_IRQ, PCI_STATUS)
BCHP_REGISTER(0x2040a314, 32,  RO, UPG_MAIN_IRQ, PCI_MASK_STATUS)
BCHP_REGISTER(0x2040a318, 32,  WO, UPG_MAIN_IRQ, PCI_MASK_SET)
BCHP_REGISTER(0x2040a31c, 32,  WO, UPG_MAIN_IRQ, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2040a340, 32,  RO, UPG_BSC_IRQ, CPU_STATUS)
BCHP_REGISTER(0x2040a344, 32,  RO, UPG_BSC_IRQ, CPU_MASK_STATUS)
BCHP_REGISTER(0x2040a348, 32,  WO, UPG_BSC_IRQ, CPU_MASK_SET)
BCHP_REGISTER(0x2040a34c, 32,  WO, UPG_BSC_IRQ, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2040a350, 32,  RO, UPG_BSC_IRQ, PCI_STATUS)
BCHP_REGISTER(0x2040a354, 32,  RO, UPG_BSC_IRQ, PCI_MASK_STATUS)
BCHP_REGISTER(0x2040a358, 32,  WO, UPG_BSC_IRQ, PCI_MASK_SET)
BCHP_REGISTER(0x2040a35c, 32,  WO, UPG_BSC_IRQ, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2040a380, 32, CFG, GIO, ODEN_LO)
BCHP_REGISTER(0x2040a384, 32,  RW, GIO, DATA_LO)
BCHP_REGISTER(0x2040a388, 32, CFG, GIO, IODIR_LO)
BCHP_REGISTER(0x2040a38c, 32, CFG, GIO, EC_LO)
BCHP_REGISTER(0x2040a390, 32, CFG, GIO, EI_LO)
BCHP_REGISTER(0x2040a394, 32, CFG, GIO, MASK_LO)
BCHP_REGISTER(0x2040a398, 32, CFG, GIO, LEVEL_LO)
BCHP_REGISTER(0x2040a39c, 32,  RW, GIO, STAT_LO)
BCHP_REGISTER(0x2040a3a0, 32, CFG, GIO, ODEN_HI)
BCHP_REGISTER(0x2040a3a4, 32,  RW, GIO, DATA_HI)
BCHP_REGISTER(0x2040a3a8, 32, CFG, GIO, IODIR_HI)
BCHP_REGISTER(0x2040a3ac, 32, CFG, GIO, EC_HI)
BCHP_REGISTER(0x2040a3b0, 32, CFG, GIO, EI_HI)
BCHP_REGISTER(0x2040a3b4, 32, CFG, GIO, MASK_HI)
BCHP_REGISTER(0x2040a3b8, 32, CFG, GIO, LEVEL_HI)
BCHP_REGISTER(0x2040a3bc, 32,  RW, GIO, STAT_HI)
BCHP_REGISTER(0x2040a3c0, 32, CFG, GIO, ODEN_EXT_HI)
BCHP_REGISTER(0x2040a3c4, 32,  RW, GIO, DATA_EXT_HI)
BCHP_REGISTER(0x2040a3c8, 32, CFG, GIO, IODIR_EXT_HI)
BCHP_REGISTER(0x2040a3cc, 32, CFG, GIO, EC_EXT_HI)
BCHP_REGISTER(0x2040a3d0, 32, CFG, GIO, EI_EXT_HI)
BCHP_REGISTER(0x2040a3d4, 32, CFG, GIO, MASK_EXT_HI)
BCHP_REGISTER(0x2040a3d8, 32, CFG, GIO, LEVEL_EXT_HI)
BCHP_REGISTER(0x2040a3dc, 32,  RW, GIO, STAT_EXT_HI)
BCHP_REGISTER(0x2040a500, 32,  RW, TIMER, TIMER_IS)
BCHP_REGISTER(0x2040a504, 32,  RW, TIMER, TIMER_IE0)
BCHP_REGISTER(0x2040a508, 32,  RW, TIMER, TIMER0_CTRL)
BCHP_REGISTER(0x2040a50c, 32,  RW, TIMER, TIMER1_CTRL)
BCHP_REGISTER(0x2040a510, 32,  RW, TIMER, TIMER2_CTRL)
BCHP_REGISTER(0x2040a514, 32,  RW, TIMER, TIMER3_CTRL)
BCHP_REGISTER(0x2040a518, 32,  RO, TIMER, TIMER0_STAT)
BCHP_REGISTER(0x2040a51c, 32,  RO, TIMER, TIMER1_STAT)
BCHP_REGISTER(0x2040a520, 32,  RO, TIMER, TIMER2_STAT)
BCHP_REGISTER(0x2040a524, 32,  RO, TIMER, TIMER3_STAT)
BCHP_REGISTER(0x2040a528, 32,  RW, TIMER, WDTIMEOUT)
BCHP_REGISTER(0x2040a52c, 32,  WO, TIMER, WDCMD)
BCHP_REGISTER(0x2040a530, 32,  RW, TIMER, WDCHIPRST_CNT)
BCHP_REGISTER(0x2040a538, 32,  RW, TIMER, TIMER_IE1)
BCHP_REGISTER(0x2040a53c, 32,  RW, TIMER, WDCTRL)
BCHP_REGISTER(0x2040a800, 32,  RW, SCA, UART_CMD)
BCHP_REGISTER(0x2040a804, 32,  RW, SCA, IF_CMD)
BCHP_REGISTER(0x2040a808, 32,  RW, SCA, CLK_CMD)
BCHP_REGISTER(0x2040a80c, 32,  RW, SCA, PROTO_CMD)
BCHP_REGISTER(0x2040a810, 32,  RW, SCA, PRESCALE)
BCHP_REGISTER(0x2040a814, 32,  RW, SCA, TGUARD)
BCHP_REGISTER(0x2040a818, 32,  RW, SCA, TRANSMIT)
BCHP_REGISTER(0x2040a81c, 32,  RO, SCA, RECEIVE)
BCHP_REGISTER(0x2040a824, 32,  RW, SCA, TLEN)
BCHP_REGISTER(0x2040a828, 32,  RW, SCA, FLOW_CMD)
BCHP_REGISTER(0x2040a830, 32,  RO, SCA, RLEN)
BCHP_REGISTER(0x2040a834, 32,  RO, SCA, STATUS)
BCHP_REGISTER(0x2040a844, 32,  RW, SCA, BGT)
BCHP_REGISTER(0x2040a848, 32,  RW, SCA, TIMER_CMD)
BCHP_REGISTER(0x2040a850, 32,  RW, SCA, INTR_EN)
BCHP_REGISTER(0x2040a858, 32,  RO, SCA, INTR_STAT)
BCHP_REGISTER(0x2040a860, 32,  RW, SCA, TIMER_CMP)
BCHP_REGISTER(0x2040a868, 32,  RO, SCA, TIMER_CNT)
BCHP_REGISTER(0x2040a870, 32,  RW, SCA, WAIT)
BCHP_REGISTER(0x2040a880, 32,  RO, SCA, EVENT1_CNT)
BCHP_REGISTER(0x2040a888, 32,  RW, SCA, EVENT1_CMP)
BCHP_REGISTER(0x2040a890, 32,  RW, SCA, EVENT1_CMD)
BCHP_REGISTER(0x2040a8a0, 32,  RW, SCA, EVENT2_CMP)
BCHP_REGISTER(0x2040a8a8, 32,  RO, SCA, EVENT2_CNT)
BCHP_REGISTER(0x2040a8b0, 32,  RW, SCA, EVENT2_CMD)
BCHP_REGISTER(0x2040a8c0, 32,  RW, SCA, SMODE_TICK)
BCHP_REGISTER(0x2040a8c4, 32,  RW, SCA, IOIF_TICK)
BCHP_REGISTER(0x2040a8c8, 32,  RW, SCA, SMODE_RLEN)
BCHP_REGISTER(0x2040a8cc, 32,  RW, SCA, AFE_CMD_1)
BCHP_REGISTER(0x2040a8d0, 32,  RW, SCA, AFE_CMD_2)
BCHP_REGISTER(0x2040a8d4, 32,  RW, SCA, TMON_CMP)
BCHP_REGISTER(0x2040a8d8, 32,  RO, SCA, TMON_TEMP)
BCHP_REGISTER(0x2040a8fc, 32,  RO, SCA, REVISION_ID)
BCHP_REGISTER(0x2040a900, 32,  RW, SCB, UART_CMD)
BCHP_REGISTER(0x2040a904, 32,  RW, SCB, IF_CMD)
BCHP_REGISTER(0x2040a908, 32,  RW, SCB, CLK_CMD)
BCHP_REGISTER(0x2040a90c, 32,  RW, SCB, PROTO_CMD)
BCHP_REGISTER(0x2040a910, 32,  RW, SCB, PRESCALE)
BCHP_REGISTER(0x2040a914, 32,  RW, SCB, TGUARD)
BCHP_REGISTER(0x2040a918, 32,  RW, SCB, TRANSMIT)
BCHP_REGISTER(0x2040a91c, 32,  RO, SCB, RECEIVE)
BCHP_REGISTER(0x2040a924, 32,  RW, SCB, TLEN)
BCHP_REGISTER(0x2040a928, 32,  RW, SCB, FLOW_CMD)
BCHP_REGISTER(0x2040a930, 32,  RO, SCB, RLEN)
BCHP_REGISTER(0x2040a934, 32,  RO, SCB, STATUS)
BCHP_REGISTER(0x2040a944, 32,  RW, SCB, BGT)
BCHP_REGISTER(0x2040a948, 32,  RW, SCB, TIMER_CMD)
BCHP_REGISTER(0x2040a950, 32,  RW, SCB, INTR_EN)
BCHP_REGISTER(0x2040a958, 32,  RO, SCB, INTR_STAT)
BCHP_REGISTER(0x2040a960, 32,  RW, SCB, TIMER_CMP)
BCHP_REGISTER(0x2040a968, 32,  RO, SCB, TIMER_CNT)
BCHP_REGISTER(0x2040a970, 32,  RW, SCB, WAIT)
BCHP_REGISTER(0x2040a980, 32,  RO, SCB, EVENT1_CNT)
BCHP_REGISTER(0x2040a988, 32,  RW, SCB, EVENT1_CMP)
BCHP_REGISTER(0x2040a990, 32,  RW, SCB, EVENT1_CMD)
BCHP_REGISTER(0x2040a9a0, 32,  RW, SCB, EVENT2_CMP)
BCHP_REGISTER(0x2040a9a8, 32,  RO, SCB, EVENT2_CNT)
BCHP_REGISTER(0x2040a9b0, 32,  RW, SCB, EVENT2_CMD)
BCHP_REGISTER(0x2040a9c0, 32,  RW, SCB, SMODE_TICK)
BCHP_REGISTER(0x2040a9c4, 32,  RW, SCB, IOIF_TICK)
BCHP_REGISTER(0x2040a9c8, 32,  RW, SCB, SMODE_RLEN)
BCHP_REGISTER(0x2040a9cc, 32,  RW, SCB, AFE_CMD_1)
BCHP_REGISTER(0x2040a9d0, 32,  RW, SCB, AFE_CMD_2)
BCHP_REGISTER(0x2040a9d4, 32,  RW, SCB, TMON_CMP)
BCHP_REGISTER(0x2040a9d8, 32,  RO, SCB, TMON_TEMP)
BCHP_REGISTER(0x2040a9fc, 32,  RO, SCB, REVISION_ID)
BCHP_REGISTER(0x2040aa00, 32,  RW, SCIRQ0, SCIRQEN)
BCHP_REGISTER(0x2040aa04, 32,  RW, SCIRQ0, SCIRQSTAT)
BCHP_REGISTER(0x2040aa40, 32,  RW, SCIRQ1, SCIRQEN)
BCHP_REGISTER(0x2040aa44, 32,  RW, SCIRQ1, SCIRQSTAT)
BCHP_REGISTER(0x2040aa80, 32,  RW, SCIRQ_SCPU, SCIRQEN)
BCHP_REGISTER(0x2040aa84, 32,  RW, SCIRQ_SCPU, SCIRQSTAT)
BCHP_REGISTER(0x2040c000, 32,  RO, UARTA, RBR)
BCHP_REGISTER_ALIAS(1, 0x2040c000, 32,  WO, UARTA, THR)
BCHP_REGISTER_ALIAS(2, 0x2040c000, 32,  RW, UARTA, DLL)
BCHP_REGISTER(0x2040c004, 32,  RW, UARTA, DLH)
BCHP_REGISTER_ALIAS(1, 0x2040c004, 32,  RW, UARTA, IER)
BCHP_REGISTER(0x2040c008, 32,  RO, UARTA, IIR)
BCHP_REGISTER_ALIAS(1, 0x2040c008, 32,  WO, UARTA, FCR)
BCHP_REGISTER(0x2040c00c, 32,  RW, UARTA, LCR)
BCHP_REGISTER(0x2040c010, 32,  RW, UARTA, MCR)
BCHP_REGISTER(0x2040c014, 32,  RO, UARTA, LSR)
BCHP_REGISTER(0x2040c018, 32,  RO, UARTA, MSR)
BCHP_REGISTER(0x2040c01c, 32,  RW, UARTA, SCR)
BCHP_REGISTER(0x2040c080, 32,  RW, UARTA_DMA_ARB, RX)
BCHP_REGISTER(0x2040c084, 32,  RW, UARTA_DMA_ARB, TX)
BCHP_REGISTER(0x2040c100, 32,  RW, UARTA_DMA_RX, REVISION_ID)
BCHP_REGISTER(0x2040c104, 32,  RW, UARTA_DMA_RX, CTRL)
BCHP_REGISTER(0x2040c108, 32,  RW, UARTA_DMA_RX, STATUS)
BCHP_REGISTER(0x2040c10c, 32,  RW, UARTA_DMA_RX, TRANSFER_LEN)
BCHP_REGISTER(0x2040c110, 32,  RO, UARTA_DMA_RX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040c114, 32,  RW, UARTA_DMA_RX, BUFFER_SIZE)
BCHP_REGISTER(0x2040c118, 32,  RW, UARTA_DMA_RX, SRC_ADDR)
BCHP_REGISTER(0x2040c11c, 32,  RW, UARTA_DMA_RX, TIMEOUT)
BCHP_REGISTER(0x2040c120, 32,  RW, UARTA_DMA_RX, BUFFER_CLOSE)
BCHP_REGISTER(0x2040c124, 32,  RW, UARTA_DMA_RX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040c128, 32,  RW, UARTA_DMA_RX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040c12c, 32,  RW, UARTA_DMA_RX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040c130, 32,  RW, UARTA_DMA_RX, BUF0_STATUS)
BCHP_REGISTER(0x2040c134, 32,  RO, UARTA_DMA_RX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040c138, 32,  RW, UARTA_DMA_RX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040c13c, 32,  RW, UARTA_DMA_RX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040c140, 32,  RW, UARTA_DMA_RX, BUF1_STATUS)
BCHP_REGISTER(0x2040c144, 32,  RO, UARTA_DMA_RX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040c148, 32,  RW, UARTA_DMA_RX, BUF2_PTR_LO)
BCHP_REGISTER(0x2040c14c, 32,  RW, UARTA_DMA_RX, BUF2_PTR_HI)
BCHP_REGISTER(0x2040c150, 32,  RW, UARTA_DMA_RX, BUF2_STATUS)
BCHP_REGISTER(0x2040c154, 32,  RO, UARTA_DMA_RX, BUF2_DATA_LEN)
BCHP_REGISTER(0x2040c158, 32,  RW, UARTA_DMA_RX, BUF3_PTR_LO)
BCHP_REGISTER(0x2040c15c, 32,  RW, UARTA_DMA_RX, BUF3_PTR_HI)
BCHP_REGISTER(0x2040c160, 32,  RW, UARTA_DMA_RX, BUF3_STATUS)
BCHP_REGISTER(0x2040c164, 32,  RO, UARTA_DMA_RX, BUF3_DATA_LEN)
BCHP_REGISTER(0x2040c168, 32,  RW, UARTA_DMA_RX, BUF4_PTR_LO)
BCHP_REGISTER(0x2040c16c, 32,  RW, UARTA_DMA_RX, BUF4_PTR_HI)
BCHP_REGISTER(0x2040c170, 32,  RW, UARTA_DMA_RX, BUF4_STATUS)
BCHP_REGISTER(0x2040c174, 32,  RO, UARTA_DMA_RX, BUF4_DATA_LEN)
BCHP_REGISTER(0x2040c178, 32,  RW, UARTA_DMA_RX, BUF5_PTR_LO)
BCHP_REGISTER(0x2040c17c, 32,  RW, UARTA_DMA_RX, BUF5_PTR_HI)
BCHP_REGISTER(0x2040c180, 32,  RW, UARTA_DMA_RX, BUF5_STATUS)
BCHP_REGISTER(0x2040c184, 32,  RO, UARTA_DMA_RX, BUF5_DATA_LEN)
BCHP_REGISTER(0x2040c188, 32,  RW, UARTA_DMA_RX, BUF6_PTR_LO)
BCHP_REGISTER(0x2040c18c, 32,  RW, UARTA_DMA_RX, BUF6_PTR_HI)
BCHP_REGISTER(0x2040c190, 32,  RW, UARTA_DMA_RX, BUF6_STATUS)
BCHP_REGISTER(0x2040c194, 32,  RO, UARTA_DMA_RX, BUF6_DATA_LEN)
BCHP_REGISTER(0x2040c198, 32,  RW, UARTA_DMA_RX, BUF7_PTR_LO)
BCHP_REGISTER(0x2040c19c, 32,  RW, UARTA_DMA_RX, BUF7_PTR_HI)
BCHP_REGISTER(0x2040c1a0, 32,  RW, UARTA_DMA_RX, BUF7_STATUS)
BCHP_REGISTER(0x2040c1a4, 32,  RO, UARTA_DMA_RX, BUF7_DATA_LEN)
BCHP_REGISTER(0x2040c200, 32,  RW, UARTA_DMA_TX, REVISION_ID)
BCHP_REGISTER(0x2040c204, 32,  RW, UARTA_DMA_TX, CTRL)
BCHP_REGISTER(0x2040c208, 32,  RW, UARTA_DMA_TX, DST_ADDR)
BCHP_REGISTER(0x2040c20c, 32,  RW, UARTA_DMA_TX, SPARE)
BCHP_REGISTER(0x2040c210, 32,  RW, UARTA_DMA_TX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040c214, 32,  RW, UARTA_DMA_TX, TRANSFER_LEN)
BCHP_REGISTER(0x2040c218, 32,  RO, UARTA_DMA_TX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040c220, 32,  RW, UARTA_DMA_TX, STATUS)
BCHP_REGISTER(0x2040c224, 32,  RW, UARTA_DMA_TX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040c228, 32,  RW, UARTA_DMA_TX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040c22c, 32,  RW, UARTA_DMA_TX, BUF0_STATUS)
BCHP_REGISTER(0x2040c230, 32,  RW, UARTA_DMA_TX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040c234, 32,  RO, UARTA_DMA_TX, BUF0_DATA_SENT)
BCHP_REGISTER(0x2040c238, 32,  RW, UARTA_DMA_TX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040c23c, 32,  RW, UARTA_DMA_TX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040c240, 32,  RW, UARTA_DMA_TX, BUF1_STATUS)
BCHP_REGISTER(0x2040c244, 32,  RW, UARTA_DMA_TX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040c248, 32,  RO, UARTA_DMA_TX, BUF1_DATA_SENT)
BCHP_REGISTER(0x2040c300, 32,  RO, UARTA_DMA_INTR2, CPU_STATUS)
BCHP_REGISTER(0x2040c304, 32,  WO, UARTA_DMA_INTR2, CPU_SET)
BCHP_REGISTER(0x2040c308, 32,  WO, UARTA_DMA_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2040c30c, 32,  RO, UARTA_DMA_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x2040c310, 32,  WO, UARTA_DMA_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x2040c314, 32,  WO, UARTA_DMA_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2040c318, 32,  RO, UARTA_DMA_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2040c31c, 32,  WO, UARTA_DMA_INTR2, PCI_SET)
BCHP_REGISTER(0x2040c320, 32,  WO, UARTA_DMA_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x2040c324, 32,  RO, UARTA_DMA_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x2040c328, 32,  WO, UARTA_DMA_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2040c32c, 32,  WO, UARTA_DMA_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2040d000, 32,  RO, UARTB, RBR)
BCHP_REGISTER_ALIAS(1, 0x2040d000, 32,  WO, UARTB, THR)
BCHP_REGISTER_ALIAS(2, 0x2040d000, 32,  RW, UARTB, DLL)
BCHP_REGISTER(0x2040d004, 32,  RW, UARTB, DLH)
BCHP_REGISTER_ALIAS(1, 0x2040d004, 32,  RW, UARTB, IER)
BCHP_REGISTER(0x2040d008, 32,  RO, UARTB, IIR)
BCHP_REGISTER_ALIAS(1, 0x2040d008, 32,  WO, UARTB, FCR)
BCHP_REGISTER(0x2040d00c, 32,  RW, UARTB, LCR)
BCHP_REGISTER(0x2040d010, 32,  RW, UARTB, MCR)
BCHP_REGISTER(0x2040d014, 32,  RO, UARTB, LSR)
BCHP_REGISTER(0x2040d018, 32,  RO, UARTB, MSR)
BCHP_REGISTER(0x2040d01c, 32,  RW, UARTB, SCR)
BCHP_REGISTER(0x2040d080, 32,  RW, UARTB_DMA_ARB, RX)
BCHP_REGISTER(0x2040d084, 32,  RW, UARTB_DMA_ARB, TX)
BCHP_REGISTER(0x2040d100, 32,  RW, UARTB_DMA_RX, REVISION_ID)
BCHP_REGISTER(0x2040d104, 32,  RW, UARTB_DMA_RX, CTRL)
BCHP_REGISTER(0x2040d108, 32,  RW, UARTB_DMA_RX, STATUS)
BCHP_REGISTER(0x2040d10c, 32,  RW, UARTB_DMA_RX, TRANSFER_LEN)
BCHP_REGISTER(0x2040d110, 32,  RO, UARTB_DMA_RX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040d114, 32,  RW, UARTB_DMA_RX, BUFFER_SIZE)
BCHP_REGISTER(0x2040d118, 32,  RW, UARTB_DMA_RX, SRC_ADDR)
BCHP_REGISTER(0x2040d11c, 32,  RW, UARTB_DMA_RX, TIMEOUT)
BCHP_REGISTER(0x2040d120, 32,  RW, UARTB_DMA_RX, BUFFER_CLOSE)
BCHP_REGISTER(0x2040d124, 32,  RW, UARTB_DMA_RX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040d128, 32,  RW, UARTB_DMA_RX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040d12c, 32,  RW, UARTB_DMA_RX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040d130, 32,  RW, UARTB_DMA_RX, BUF0_STATUS)
BCHP_REGISTER(0x2040d134, 32,  RO, UARTB_DMA_RX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040d138, 32,  RW, UARTB_DMA_RX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040d13c, 32,  RW, UARTB_DMA_RX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040d140, 32,  RW, UARTB_DMA_RX, BUF1_STATUS)
BCHP_REGISTER(0x2040d144, 32,  RO, UARTB_DMA_RX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040d148, 32,  RW, UARTB_DMA_RX, BUF2_PTR_LO)
BCHP_REGISTER(0x2040d14c, 32,  RW, UARTB_DMA_RX, BUF2_PTR_HI)
BCHP_REGISTER(0x2040d150, 32,  RW, UARTB_DMA_RX, BUF2_STATUS)
BCHP_REGISTER(0x2040d154, 32,  RO, UARTB_DMA_RX, BUF2_DATA_LEN)
BCHP_REGISTER(0x2040d158, 32,  RW, UARTB_DMA_RX, BUF3_PTR_LO)
BCHP_REGISTER(0x2040d15c, 32,  RW, UARTB_DMA_RX, BUF3_PTR_HI)
BCHP_REGISTER(0x2040d160, 32,  RW, UARTB_DMA_RX, BUF3_STATUS)
BCHP_REGISTER(0x2040d164, 32,  RO, UARTB_DMA_RX, BUF3_DATA_LEN)
BCHP_REGISTER(0x2040d168, 32,  RW, UARTB_DMA_RX, BUF4_PTR_LO)
BCHP_REGISTER(0x2040d16c, 32,  RW, UARTB_DMA_RX, BUF4_PTR_HI)
BCHP_REGISTER(0x2040d170, 32,  RW, UARTB_DMA_RX, BUF4_STATUS)
BCHP_REGISTER(0x2040d174, 32,  RO, UARTB_DMA_RX, BUF4_DATA_LEN)
BCHP_REGISTER(0x2040d178, 32,  RW, UARTB_DMA_RX, BUF5_PTR_LO)
BCHP_REGISTER(0x2040d17c, 32,  RW, UARTB_DMA_RX, BUF5_PTR_HI)
BCHP_REGISTER(0x2040d180, 32,  RW, UARTB_DMA_RX, BUF5_STATUS)
BCHP_REGISTER(0x2040d184, 32,  RO, UARTB_DMA_RX, BUF5_DATA_LEN)
BCHP_REGISTER(0x2040d188, 32,  RW, UARTB_DMA_RX, BUF6_PTR_LO)
BCHP_REGISTER(0x2040d18c, 32,  RW, UARTB_DMA_RX, BUF6_PTR_HI)
BCHP_REGISTER(0x2040d190, 32,  RW, UARTB_DMA_RX, BUF6_STATUS)
BCHP_REGISTER(0x2040d194, 32,  RO, UARTB_DMA_RX, BUF6_DATA_LEN)
BCHP_REGISTER(0x2040d198, 32,  RW, UARTB_DMA_RX, BUF7_PTR_LO)
BCHP_REGISTER(0x2040d19c, 32,  RW, UARTB_DMA_RX, BUF7_PTR_HI)
BCHP_REGISTER(0x2040d1a0, 32,  RW, UARTB_DMA_RX, BUF7_STATUS)
BCHP_REGISTER(0x2040d1a4, 32,  RO, UARTB_DMA_RX, BUF7_DATA_LEN)
BCHP_REGISTER(0x2040d200, 32,  RW, UARTB_DMA_TX, REVISION_ID)
BCHP_REGISTER(0x2040d204, 32,  RW, UARTB_DMA_TX, CTRL)
BCHP_REGISTER(0x2040d208, 32,  RW, UARTB_DMA_TX, DST_ADDR)
BCHP_REGISTER(0x2040d20c, 32,  RW, UARTB_DMA_TX, SPARE)
BCHP_REGISTER(0x2040d210, 32,  RW, UARTB_DMA_TX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040d214, 32,  RW, UARTB_DMA_TX, TRANSFER_LEN)
BCHP_REGISTER(0x2040d218, 32,  RO, UARTB_DMA_TX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040d220, 32,  RW, UARTB_DMA_TX, STATUS)
BCHP_REGISTER(0x2040d224, 32,  RW, UARTB_DMA_TX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040d228, 32,  RW, UARTB_DMA_TX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040d22c, 32,  RW, UARTB_DMA_TX, BUF0_STATUS)
BCHP_REGISTER(0x2040d230, 32,  RW, UARTB_DMA_TX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040d234, 32,  RO, UARTB_DMA_TX, BUF0_DATA_SENT)
BCHP_REGISTER(0x2040d238, 32,  RW, UARTB_DMA_TX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040d23c, 32,  RW, UARTB_DMA_TX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040d240, 32,  RW, UARTB_DMA_TX, BUF1_STATUS)
BCHP_REGISTER(0x2040d244, 32,  RW, UARTB_DMA_TX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040d248, 32,  RO, UARTB_DMA_TX, BUF1_DATA_SENT)
BCHP_REGISTER(0x2040d300, 32,  RO, UARTB_DMA_INTR2, CPU_STATUS)
BCHP_REGISTER(0x2040d304, 32,  WO, UARTB_DMA_INTR2, CPU_SET)
BCHP_REGISTER(0x2040d308, 32,  WO, UARTB_DMA_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2040d30c, 32,  RO, UARTB_DMA_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x2040d310, 32,  WO, UARTB_DMA_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x2040d314, 32,  WO, UARTB_DMA_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2040d318, 32,  RO, UARTB_DMA_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2040d31c, 32,  WO, UARTB_DMA_INTR2, PCI_SET)
BCHP_REGISTER(0x2040d320, 32,  WO, UARTB_DMA_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x2040d324, 32,  RO, UARTB_DMA_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x2040d328, 32,  WO, UARTB_DMA_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2040d32c, 32,  WO, UARTB_DMA_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2040e000, 32,  RO, UARTC, RBR)
BCHP_REGISTER_ALIAS(1, 0x2040e000, 32,  WO, UARTC, THR)
BCHP_REGISTER_ALIAS(2, 0x2040e000, 32,  RW, UARTC, DLL)
BCHP_REGISTER(0x2040e004, 32,  RW, UARTC, DLH)
BCHP_REGISTER_ALIAS(1, 0x2040e004, 32,  RW, UARTC, IER)
BCHP_REGISTER(0x2040e008, 32,  RO, UARTC, IIR)
BCHP_REGISTER_ALIAS(1, 0x2040e008, 32,  WO, UARTC, FCR)
BCHP_REGISTER(0x2040e00c, 32,  RW, UARTC, LCR)
BCHP_REGISTER(0x2040e010, 32,  RW, UARTC, MCR)
BCHP_REGISTER(0x2040e014, 32,  RO, UARTC, LSR)
BCHP_REGISTER(0x2040e018, 32,  RO, UARTC, MSR)
BCHP_REGISTER(0x2040e01c, 32,  RW, UARTC, SCR)
BCHP_REGISTER(0x2040e080, 32,  RW, UARTC_DMA_ARB, RX)
BCHP_REGISTER(0x2040e084, 32,  RW, UARTC_DMA_ARB, TX)
BCHP_REGISTER(0x2040e100, 32,  RW, UARTC_DMA_RX, REVISION_ID)
BCHP_REGISTER(0x2040e104, 32,  RW, UARTC_DMA_RX, CTRL)
BCHP_REGISTER(0x2040e108, 32,  RW, UARTC_DMA_RX, STATUS)
BCHP_REGISTER(0x2040e10c, 32,  RW, UARTC_DMA_RX, TRANSFER_LEN)
BCHP_REGISTER(0x2040e110, 32,  RO, UARTC_DMA_RX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040e114, 32,  RW, UARTC_DMA_RX, BUFFER_SIZE)
BCHP_REGISTER(0x2040e118, 32,  RW, UARTC_DMA_RX, SRC_ADDR)
BCHP_REGISTER(0x2040e11c, 32,  RW, UARTC_DMA_RX, TIMEOUT)
BCHP_REGISTER(0x2040e120, 32,  RW, UARTC_DMA_RX, BUFFER_CLOSE)
BCHP_REGISTER(0x2040e124, 32,  RW, UARTC_DMA_RX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040e128, 32,  RW, UARTC_DMA_RX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040e12c, 32,  RW, UARTC_DMA_RX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040e130, 32,  RW, UARTC_DMA_RX, BUF0_STATUS)
BCHP_REGISTER(0x2040e134, 32,  RO, UARTC_DMA_RX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040e138, 32,  RW, UARTC_DMA_RX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040e13c, 32,  RW, UARTC_DMA_RX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040e140, 32,  RW, UARTC_DMA_RX, BUF1_STATUS)
BCHP_REGISTER(0x2040e144, 32,  RO, UARTC_DMA_RX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040e148, 32,  RW, UARTC_DMA_RX, BUF2_PTR_LO)
BCHP_REGISTER(0x2040e14c, 32,  RW, UARTC_DMA_RX, BUF2_PTR_HI)
BCHP_REGISTER(0x2040e150, 32,  RW, UARTC_DMA_RX, BUF2_STATUS)
BCHP_REGISTER(0x2040e154, 32,  RO, UARTC_DMA_RX, BUF2_DATA_LEN)
BCHP_REGISTER(0x2040e158, 32,  RW, UARTC_DMA_RX, BUF3_PTR_LO)
BCHP_REGISTER(0x2040e15c, 32,  RW, UARTC_DMA_RX, BUF3_PTR_HI)
BCHP_REGISTER(0x2040e160, 32,  RW, UARTC_DMA_RX, BUF3_STATUS)
BCHP_REGISTER(0x2040e164, 32,  RO, UARTC_DMA_RX, BUF3_DATA_LEN)
BCHP_REGISTER(0x2040e168, 32,  RW, UARTC_DMA_RX, BUF4_PTR_LO)
BCHP_REGISTER(0x2040e16c, 32,  RW, UARTC_DMA_RX, BUF4_PTR_HI)
BCHP_REGISTER(0x2040e170, 32,  RW, UARTC_DMA_RX, BUF4_STATUS)
BCHP_REGISTER(0x2040e174, 32,  RO, UARTC_DMA_RX, BUF4_DATA_LEN)
BCHP_REGISTER(0x2040e178, 32,  RW, UARTC_DMA_RX, BUF5_PTR_LO)
BCHP_REGISTER(0x2040e17c, 32,  RW, UARTC_DMA_RX, BUF5_PTR_HI)
BCHP_REGISTER(0x2040e180, 32,  RW, UARTC_DMA_RX, BUF5_STATUS)
BCHP_REGISTER(0x2040e184, 32,  RO, UARTC_DMA_RX, BUF5_DATA_LEN)
BCHP_REGISTER(0x2040e188, 32,  RW, UARTC_DMA_RX, BUF6_PTR_LO)
BCHP_REGISTER(0x2040e18c, 32,  RW, UARTC_DMA_RX, BUF6_PTR_HI)
BCHP_REGISTER(0x2040e190, 32,  RW, UARTC_DMA_RX, BUF6_STATUS)
BCHP_REGISTER(0x2040e194, 32,  RO, UARTC_DMA_RX, BUF6_DATA_LEN)
BCHP_REGISTER(0x2040e198, 32,  RW, UARTC_DMA_RX, BUF7_PTR_LO)
BCHP_REGISTER(0x2040e19c, 32,  RW, UARTC_DMA_RX, BUF7_PTR_HI)
BCHP_REGISTER(0x2040e1a0, 32,  RW, UARTC_DMA_RX, BUF7_STATUS)
BCHP_REGISTER(0x2040e1a4, 32,  RO, UARTC_DMA_RX, BUF7_DATA_LEN)
BCHP_REGISTER(0x2040e200, 32,  RW, UARTC_DMA_TX, REVISION_ID)
BCHP_REGISTER(0x2040e204, 32,  RW, UARTC_DMA_TX, CTRL)
BCHP_REGISTER(0x2040e208, 32,  RW, UARTC_DMA_TX, DST_ADDR)
BCHP_REGISTER(0x2040e20c, 32,  RW, UARTC_DMA_TX, SPARE)
BCHP_REGISTER(0x2040e210, 32,  RW, UARTC_DMA_TX, BLOCKOUT_COUNTER)
BCHP_REGISTER(0x2040e214, 32,  RW, UARTC_DMA_TX, TRANSFER_LEN)
BCHP_REGISTER(0x2040e218, 32,  RO, UARTC_DMA_TX, TRANSFER_TOTAL)
BCHP_REGISTER(0x2040e220, 32,  RW, UARTC_DMA_TX, STATUS)
BCHP_REGISTER(0x2040e224, 32,  RW, UARTC_DMA_TX, BUF0_PTR_LO)
BCHP_REGISTER(0x2040e228, 32,  RW, UARTC_DMA_TX, BUF0_PTR_HI)
BCHP_REGISTER(0x2040e22c, 32,  RW, UARTC_DMA_TX, BUF0_STATUS)
BCHP_REGISTER(0x2040e230, 32,  RW, UARTC_DMA_TX, BUF0_DATA_LEN)
BCHP_REGISTER(0x2040e234, 32,  RO, UARTC_DMA_TX, BUF0_DATA_SENT)
BCHP_REGISTER(0x2040e238, 32,  RW, UARTC_DMA_TX, BUF1_PTR_LO)
BCHP_REGISTER(0x2040e23c, 32,  RW, UARTC_DMA_TX, BUF1_PTR_HI)
BCHP_REGISTER(0x2040e240, 32,  RW, UARTC_DMA_TX, BUF1_STATUS)
BCHP_REGISTER(0x2040e244, 32,  RW, UARTC_DMA_TX, BUF1_DATA_LEN)
BCHP_REGISTER(0x2040e248, 32,  RO, UARTC_DMA_TX, BUF1_DATA_SENT)
BCHP_REGISTER(0x2040e300, 32,  RO, UARTC_DMA_INTR2, CPU_STATUS)
BCHP_REGISTER(0x2040e304, 32,  WO, UARTC_DMA_INTR2, CPU_SET)
BCHP_REGISTER(0x2040e308, 32,  WO, UARTC_DMA_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2040e30c, 32,  RO, UARTC_DMA_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x2040e310, 32,  WO, UARTC_DMA_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x2040e314, 32,  WO, UARTC_DMA_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2040e318, 32,  RO, UARTC_DMA_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2040e31c, 32,  WO, UARTC_DMA_INTR2, PCI_SET)
BCHP_REGISTER(0x2040e320, 32,  WO, UARTC_DMA_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x2040e324, 32,  RO, UARTC_DMA_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x2040e328, 32,  WO, UARTC_DMA_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2040e32c, 32,  WO, UARTC_DMA_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2040f000, 32,  RW, DMA_SHARE, RX)
BCHP_REGISTER(0x2040f004, 32,  RW, DMA_SHARE, TX)
BCHP_REGISTER(0x20410000, 32,  RW, AON_CTRL, RESET_CTRL)
BCHP_REGISTER(0x20410004, 32,  RW, AON_CTRL, PM_CTRL)
BCHP_REGISTER(0x20410008, 32,  RO, AON_CTRL, PM_STATUS)
BCHP_REGISTER(0x2041000c, 32,  RO, AON_CTRL, PM_IRQ_INPUT_STATUS)
BCHP_REGISTER(0x20410010, 32,  RW, AON_CTRL, PM_CPU_WAIT_COUNT)
BCHP_REGISTER(0x20410014, 32,  RW, AON_CTRL, PM_CPU_GUARDBAND_TIMER)
BCHP_REGISTER(0x20410018, 32,  RW, AON_CTRL, PM_S3_STANDBY_TIMER)
BCHP_REGISTER(0x2041001c, 32,  RW, AON_CTRL, PM_S3_WAKEUP_TIMER)
BCHP_REGISTER(0x20410020, 32,  RW, AON_CTRL, PM_FAST_PWRDN_PRECHARGE)
BCHP_REGISTER(0x20410024, 32,  RW, AON_CTRL, PM_LED_CTRL)
BCHP_REGISTER(0x20410028, 32,  RW, AON_CTRL, PM_LED_AUTO_ON_ENABLES)
BCHP_REGISTER(0x20410030, 32,  RW, AON_CTRL, HLCD_CTRL)
BCHP_REGISTER(0x20410034, 32,  RW, AON_CTRL, SECOND_FRACTION_COUNTER)
BCHP_REGISTER(0x20410038, 32,  RW, AON_CTRL, TIME_COUNTER)
BCHP_REGISTER(0x2041003c, 32,  RW, AON_CTRL, LED_DIGIT_CODE_0)
BCHP_REGISTER(0x20410040, 32,  RW, AON_CTRL, LED_DIGIT_CODE_1)
BCHP_REGISTER(0x20410044, 32,  RW, AON_CTRL, LED_DIGIT_CODE_2)
BCHP_REGISTER(0x20410048, 32,  RW, AON_CTRL, LED_DIGIT_ADDR_OFFSET)
BCHP_REGISTER(0x2041004c, 32,  RW, AON_CTRL, LED_STATUS_CTRL)
BCHP_REGISTER(0x20410050, 32,  RW, AON_CTRL, GENERAL_CTRL_0)
BCHP_REGISTER(0x20410054, 32,  RO, AON_CTRL, GENERAL_STATUS_0)
BCHP_REGISTER(0x20410058, 32,  RW, AON_CTRL, GENERAL_CTRL_NO_SCAN_0)
BCHP_REGISTER(0x20410060, 32,  RW, AON_CTRL, SPARE_CTRL_0)
BCHP_REGISTER(0x20410064, 32,  RW, AON_CTRL, SPARE_CTRL_1)
BCHP_REGISTER(0x20410068, 32,  RW, AON_CTRL, UNCLEARED_SCRATCH)
BCHP_REGISTER(0x2041006c, 32,  RO, AON_CTRL, RESET_HISTORY)
BCHP_REGISTER(0x20410070, 32,  RW, AON_CTRL, NMI_CTRL)
BCHP_REGISTER(0x20410074, 32,  RW, AON_CTRL, ANA_XTAL_CONTROL)
BCHP_REGISTER(0x20410078, 32,  RW, AON_CTRL, SUB_TEST_MODE_CTRL)
BCHP_REGISTER(0x2041007c, 32,  RW, AON_CTRL, SUB_TEST_MODE)
BCHP_REGISTER(0x20410080, 32,  RO, AON_CTRL, LATCHED_TEST_MODE)
BCHP_REGISTER(0x20410084, 32,  RO, AON_CTRL, LATCHED_SUB_TEST_MODE)
BCHP_REGISTER(0x20410088, 32,  RW, AON_CTRL, PM_INITIATE)
BCHP_REGISTER(0x2041008c, 32,  RW, AON_CTRL, HOST_MISC_CMDS)
BCHP_REGISTER(0x20410090, 32,  RW, AON_CTRL, ANA_XTAL_EXT_CML_CONTROL)
BCHP_REGISTER(0x20410094, 32,  RW, AON_CTRL, PM_DRAM_READY_STATUS_MASK)
BCHP_REGISTER(0x20410600, 32,  RO, AON_L2, CPU_STATUS)
BCHP_REGISTER(0x20410604, 32,  WO, AON_L2, CPU_SET)
BCHP_REGISTER(0x20410608, 32,  WO, AON_L2, CPU_CLEAR)
BCHP_REGISTER(0x2041060c, 32,  RO, AON_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20410610, 32,  WO, AON_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20410614, 32,  WO, AON_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20410618, 32,  RO, AON_L2, PCI_STATUS)
BCHP_REGISTER(0x2041061c, 32,  WO, AON_L2, PCI_SET)
BCHP_REGISTER(0x20410620, 32,  WO, AON_L2, PCI_CLEAR)
BCHP_REGISTER(0x20410624, 32,  RO, AON_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20410628, 32,  WO, AON_L2, PCI_MASK_SET)
BCHP_REGISTER(0x2041062c, 32,  WO, AON_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20410640, 32,  RO, AON_PM_L2, CPU_STATUS)
BCHP_REGISTER(0x20410644, 32,  WO, AON_PM_L2, CPU_SET)
BCHP_REGISTER(0x20410648, 32,  WO, AON_PM_L2, CPU_CLEAR)
BCHP_REGISTER(0x2041064c, 32,  RO, AON_PM_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20410650, 32,  WO, AON_PM_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20410654, 32,  WO, AON_PM_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20410658, 32,  RO, AON_PM_L2, PCI_STATUS)
BCHP_REGISTER(0x2041065c, 32,  WO, AON_PM_L2, PCI_SET)
BCHP_REGISTER(0x20410660, 32,  WO, AON_PM_L2, PCI_CLEAR)
BCHP_REGISTER(0x20410664, 32,  RO, AON_PM_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20410668, 32,  WO, AON_PM_L2, PCI_MASK_SET)
BCHP_REGISTER(0x2041066c, 32,  WO, AON_PM_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20410700, 32,  RW, AON_PIN_CTRL, PIN_MUX_CTRL_0)
BCHP_REGISTER(0x20410704, 32,  RW, AON_PIN_CTRL, PIN_MUX_CTRL_1)
BCHP_REGISTER(0x20410708, 32,  RW, AON_PIN_CTRL, PIN_MUX_CTRL_2)
BCHP_REGISTER(0x2041070c, 32,  RW, AON_PIN_CTRL, PIN_MUX_CTRL_3)
BCHP_REGISTER(0x20410710, 32,  RW, AON_PIN_CTRL, PIN_MUX_CTRL_4)
BCHP_REGISTER(0x20410714, 32,  RW, AON_PIN_CTRL, PIN_MUX_PAD_CTRL_0)
BCHP_REGISTER(0x20410718, 32,  RW, AON_PIN_CTRL, PIN_MUX_PAD_CTRL_1)
BCHP_REGISTER(0x2041071c, 32,  RW, AON_PIN_CTRL, PIN_MUX_PAD_CTRL_2)
BCHP_REGISTER(0x20410720, 32,  RW, AON_PIN_CTRL, BYP_CLK_UNSELECT_0)
BCHP_REGISTER(0x20410800, 32,  RW, AON_HDMI_TX, CEC_ENERGYSTAR_CFG1)
BCHP_REGISTER(0x20410804, 32,  RW, AON_HDMI_TX, CEC_ENERGYSTAR_CFG2)
BCHP_REGISTER(0x20410808, 32,  RW, AON_HDMI_TX, CEC_ENERGYSTAR_CNTRL)
BCHP_REGISTER(0x2041080c, 32,  RO, AON_HDMI_TX, CEC_ENERGYSTAR_STATUS)
BCHP_REGISTER(0x20410810, 32,  RW, AON_HDMI_TX, CEC_CNTRL_1)
BCHP_REGISTER(0x20410814, 32,  RW, AON_HDMI_TX, CEC_CNTRL_2)
BCHP_REGISTER(0x20410818, 32,  RW, AON_HDMI_TX, CEC_CNTRL_3)
BCHP_REGISTER(0x2041081c, 32,  RW, AON_HDMI_TX, CEC_CNTRL_4)
BCHP_REGISTER(0x20410820, 32,  RW, AON_HDMI_TX, CEC_CNTRL_5)
BCHP_REGISTER(0x20410824, 32,  RW, AON_HDMI_TX, CEC_CNTRL_6)
BCHP_REGISTER(0x20410828, 32,  RW, AON_HDMI_TX, CEC_TX_DATA_1)
BCHP_REGISTER(0x2041082c, 32,  RW, AON_HDMI_TX, CEC_TX_DATA_2)
BCHP_REGISTER(0x20410830, 32,  RW, AON_HDMI_TX, CEC_TX_DATA_3)
BCHP_REGISTER(0x20410834, 32,  RW, AON_HDMI_TX, CEC_TX_DATA_4)
BCHP_REGISTER(0x20410838, 32,  RO, AON_HDMI_TX, CEC_RX_DATA_1)
BCHP_REGISTER(0x2041083c, 32,  RO, AON_HDMI_TX, CEC_RX_DATA_2)
BCHP_REGISTER(0x20410840, 32,  RO, AON_HDMI_TX, CEC_RX_DATA_3)
BCHP_REGISTER(0x20410844, 32,  RO, AON_HDMI_TX, CEC_RX_DATA_4)
BCHP_REGISTER(0x20410848, 32,  RO, AON_HDMI_TX, HDMI_HOTPLUG_STATUS)
BCHP_REGISTER(0x2041084c, 32,  RW, AON_HDMI_TX, HDMI_HOTPLUG_CONTROL)
BCHP_REGISTER(0x20410850, 32,  RW, AON_HDMI_TX, HDMI_HOTPLUG_CONFIG)
BCHP_REGISTER(0x20410854, 32,  RW, AON_HDMI_TX, DVP_GEN_1MS_CONFIG)
BCHP_REGISTER(0x20410858, 32,  RW, AON_HDMI_TX, AUTO_CEC_CFG)
BCHP_REGISTER(0x2041085c, 32,  RW, AON_HDMI_TX, AUTO_CEC_CNTRL)
BCHP_REGISTER(0x20410860, 32,  RW, AON_HDMI_TX, AUTO_CEC_FEATURE_ABORT_CFG)
BCHP_REGISTER(0x20410864, 32,  RW, AON_HDMI_TX, AUTO_CEC_POWER_STATUS_CFG)
BCHP_REGISTER(0x20410868, 32,  RW, AON_HDMI_TX, AUTO_CEC_GIVE_FEATURES_CFG_0)
BCHP_REGISTER(0x2041086c, 32,  RW, AON_HDMI_TX, AUTO_CEC_GIVE_FEATURES_CFG_1)
BCHP_REGISTER(0x20410870, 32,  RW, AON_HDMI_TX, AUTO_CEC_GIVE_VERSION_CFG)
BCHP_REGISTER(0x20410874, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_STANDBY_CFG)
BCHP_REGISTER(0x20410878, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE1_CFG_0)
BCHP_REGISTER(0x2041087c, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE1_CFG_1)
BCHP_REGISTER(0x20410880, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE1_CFG_2)
BCHP_REGISTER(0x20410884, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE1_CFG_3)
BCHP_REGISTER(0x20410888, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE2_CFG_0)
BCHP_REGISTER(0x2041088c, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE2_CFG_1)
BCHP_REGISTER(0x20410890, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE3_CFG_0)
BCHP_REGISTER(0x20410894, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE3_CFG_1)
BCHP_REGISTER(0x20410898, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE3_CFG_2)
BCHP_REGISTER(0x2041089c, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE4_CFG_0)
BCHP_REGISTER(0x204108a0, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE4_CFG_1)
BCHP_REGISTER(0x204108a4, 32,  RW, AON_HDMI_TX, AUTO_CEC_CHECK_WAKE4_CFG_2)
BCHP_REGISTER(0x204108a8, 32,  RO, AON_HDMI_TX, AUTO_CEC_STATUS_0)
BCHP_REGISTER(0x204108ac, 32,  RO, AON_HDMI_TX, AUTO_CEC_STATUS_1)
BCHP_REGISTER(0x20412000, 32,  RW, CNTControlBase, CNTCR)
BCHP_REGISTER(0x20412004, 32,  RO, CNTControlBase, CNTSR)
BCHP_REGISTER(0x20412008, 32,  RW, CNTControlBase, CNTCV_LO)
BCHP_REGISTER(0x2041200c, 32,  RW, CNTControlBase, CNTCV_HI)
BCHP_REGISTER(0x20412020, 32,  RO, CNTControlBase, CNTFID0)
BCHP_REGISTER(0x20412024, 32,  RO, CNTControlBase, CNTFID1)
BCHP_REGISTER(0x20412fd0, 32,  RO, CNTControlBase, CounterID0)
BCHP_REGISTER(0x20412fd4, 32,  RO, CNTControlBase, CounterID1)
BCHP_REGISTER(0x20412fd8, 32,  RO, CNTControlBase, CounterID2)
BCHP_REGISTER(0x20412fdc, 32,  RO, CNTControlBase, CounterID3)
BCHP_REGISTER(0x20412fe0, 32,  RO, CNTControlBase, CounterID4)
BCHP_REGISTER(0x20412fe4, 32,  RO, CNTControlBase, CounterID5)
BCHP_REGISTER(0x20412fe8, 32,  RO, CNTControlBase, CounterID6)
BCHP_REGISTER(0x20412fec, 32,  RO, CNTControlBase, CounterID7)
BCHP_REGISTER(0x20412ff0, 32,  RO, CNTControlBase, CounterID8)
BCHP_REGISTER(0x20412ff4, 32,  RO, CNTControlBase, CounterID9)
BCHP_REGISTER(0x20412ff8, 32,  RO, CNTControlBase, CounterID10)
BCHP_REGISTER(0x20412ffc, 32,  RO, CNTControlBase, CounterID11)
BCHP_REGISTER(0x20414000, 32,  RO, CNTReadBase, CNTCV_LO)
BCHP_REGISTER(0x20414004, 32,  RO, CNTReadBase, CNTCV_HI)
BCHP_REGISTER(0x20414fd0, 32,  RO, CNTReadBase, CounterID0)
BCHP_REGISTER(0x20414fd4, 32,  RO, CNTReadBase, CounterID1)
BCHP_REGISTER(0x20414fd8, 32,  RO, CNTReadBase, CounterID2)
BCHP_REGISTER(0x20414fdc, 32,  RO, CNTReadBase, CounterID3)
BCHP_REGISTER(0x20414fe0, 32,  RO, CNTReadBase, CounterID4)
BCHP_REGISTER(0x20414fe4, 32,  RO, CNTReadBase, CounterID5)
BCHP_REGISTER(0x20414fe8, 32,  RO, CNTReadBase, CounterID6)
BCHP_REGISTER(0x20414fec, 32,  RO, CNTReadBase, CounterID7)
BCHP_REGISTER(0x20414ff0, 32,  RO, CNTReadBase, CounterID8)
BCHP_REGISTER(0x20414ff4, 32,  RO, CNTReadBase, CounterID9)
BCHP_REGISTER(0x20414ff8, 32,  RO, CNTReadBase, CounterID10)
BCHP_REGISTER(0x20414ffc, 32,  RO, CNTReadBase, CounterID11)
BCHP_REGISTER(0x20416000, 32,  RW, MSPI, SPCR0_LSB)
BCHP_REGISTER(0x20416004, 32,  RW, MSPI, SPCR0_MSB)
BCHP_REGISTER(0x20416008, 32,  RW, MSPI, SPCR1_LSB)
BCHP_REGISTER(0x2041600c, 32,  RW, MSPI, SPCR1_MSB)
BCHP_REGISTER(0x20416010, 32,  RW, MSPI, NEWQP)
BCHP_REGISTER(0x20416014, 32,  RW, MSPI, ENDQP)
BCHP_REGISTER(0x20416018, 32,  RW, MSPI, SPCR2)
BCHP_REGISTER(0x20416020, 32,  RW, MSPI, MSPI_STATUS)
BCHP_REGISTER(0x20416024, 32,  RO, MSPI, CPTQP)
BCHP_REGISTER(0x20416028, 32,  RW, MSPI, SPCR3)
BCHP_REGISTER(0x2041602c, 32,  RO, MSPI, REVISION)
BCHP_REGISTER(0x20416040, 32,  RW, MSPI, TXRAM00)
BCHP_REGISTER(0x20416044, 32,  RW, MSPI, TXRAM01)
BCHP_REGISTER(0x20416048, 32,  RW, MSPI, TXRAM02)
BCHP_REGISTER(0x2041604c, 32,  RW, MSPI, TXRAM03)
BCHP_REGISTER(0x20416050, 32,  RW, MSPI, TXRAM04)
BCHP_REGISTER(0x20416054, 32,  RW, MSPI, TXRAM05)
BCHP_REGISTER(0x20416058, 32,  RW, MSPI, TXRAM06)
BCHP_REGISTER(0x2041605c, 32,  RW, MSPI, TXRAM07)
BCHP_REGISTER(0x20416060, 32,  RW, MSPI, TXRAM08)
BCHP_REGISTER(0x20416064, 32,  RW, MSPI, TXRAM09)
BCHP_REGISTER(0x20416068, 32,  RW, MSPI, TXRAM10)
BCHP_REGISTER(0x2041606c, 32,  RW, MSPI, TXRAM11)
BCHP_REGISTER(0x20416070, 32,  RW, MSPI, TXRAM12)
BCHP_REGISTER(0x20416074, 32,  RW, MSPI, TXRAM13)
BCHP_REGISTER(0x20416078, 32,  RW, MSPI, TXRAM14)
BCHP_REGISTER(0x2041607c, 32,  RW, MSPI, TXRAM15)
BCHP_REGISTER(0x20416080, 32,  RW, MSPI, TXRAM16)
BCHP_REGISTER(0x20416084, 32,  RW, MSPI, TXRAM17)
BCHP_REGISTER(0x20416088, 32,  RW, MSPI, TXRAM18)
BCHP_REGISTER(0x2041608c, 32,  RW, MSPI, TXRAM19)
BCHP_REGISTER(0x20416090, 32,  RW, MSPI, TXRAM20)
BCHP_REGISTER(0x20416094, 32,  RW, MSPI, TXRAM21)
BCHP_REGISTER(0x20416098, 32,  RW, MSPI, TXRAM22)
BCHP_REGISTER(0x2041609c, 32,  RW, MSPI, TXRAM23)
BCHP_REGISTER(0x204160a0, 32,  RW, MSPI, TXRAM24)
BCHP_REGISTER(0x204160a4, 32,  RW, MSPI, TXRAM25)
BCHP_REGISTER(0x204160a8, 32,  RW, MSPI, TXRAM26)
BCHP_REGISTER(0x204160ac, 32,  RW, MSPI, TXRAM27)
BCHP_REGISTER(0x204160b0, 32,  RW, MSPI, TXRAM28)
BCHP_REGISTER(0x204160b4, 32,  RW, MSPI, TXRAM29)
BCHP_REGISTER(0x204160b8, 32,  RW, MSPI, TXRAM30)
BCHP_REGISTER(0x204160bc, 32,  RW, MSPI, TXRAM31)
BCHP_REGISTER(0x204160c0, 32,  RW, MSPI, RXRAM00)
BCHP_REGISTER(0x204160c4, 32,  RW, MSPI, RXRAM01)
BCHP_REGISTER(0x204160c8, 32,  RW, MSPI, RXRAM02)
BCHP_REGISTER(0x204160cc, 32,  RW, MSPI, RXRAM03)
BCHP_REGISTER(0x204160d0, 32,  RW, MSPI, RXRAM04)
BCHP_REGISTER(0x204160d4, 32,  RW, MSPI, RXRAM05)
BCHP_REGISTER(0x204160d8, 32,  RW, MSPI, RXRAM06)
BCHP_REGISTER(0x204160dc, 32,  RW, MSPI, RXRAM07)
BCHP_REGISTER(0x204160e0, 32,  RW, MSPI, RXRAM08)
BCHP_REGISTER(0x204160e4, 32,  RW, MSPI, RXRAM09)
BCHP_REGISTER(0x204160e8, 32,  RW, MSPI, RXRAM10)
BCHP_REGISTER(0x204160ec, 32,  RW, MSPI, RXRAM11)
BCHP_REGISTER(0x204160f0, 32,  RW, MSPI, RXRAM12)
BCHP_REGISTER(0x204160f4, 32,  RW, MSPI, RXRAM13)
BCHP_REGISTER(0x204160f8, 32,  RW, MSPI, RXRAM14)
BCHP_REGISTER(0x204160fc, 32,  RW, MSPI, RXRAM15)
BCHP_REGISTER(0x20416100, 32,  RW, MSPI, RXRAM16)
BCHP_REGISTER(0x20416104, 32,  RW, MSPI, RXRAM17)
BCHP_REGISTER(0x20416108, 32,  RW, MSPI, RXRAM18)
BCHP_REGISTER(0x2041610c, 32,  RW, MSPI, RXRAM19)
BCHP_REGISTER(0x20416110, 32,  RW, MSPI, RXRAM20)
BCHP_REGISTER(0x20416114, 32,  RW, MSPI, RXRAM21)
BCHP_REGISTER(0x20416118, 32,  RW, MSPI, RXRAM22)
BCHP_REGISTER(0x2041611c, 32,  RW, MSPI, RXRAM23)
BCHP_REGISTER(0x20416120, 32,  RW, MSPI, RXRAM24)
BCHP_REGISTER(0x20416124, 32,  RW, MSPI, RXRAM25)
BCHP_REGISTER(0x20416128, 32,  RW, MSPI, RXRAM26)
BCHP_REGISTER(0x2041612c, 32,  RW, MSPI, RXRAM27)
BCHP_REGISTER(0x20416130, 32,  RW, MSPI, RXRAM28)
BCHP_REGISTER(0x20416134, 32,  RW, MSPI, RXRAM29)
BCHP_REGISTER(0x20416138, 32,  RW, MSPI, RXRAM30)
BCHP_REGISTER(0x2041613c, 32,  RW, MSPI, RXRAM31)
BCHP_REGISTER(0x20416140, 32,  RW, MSPI, CDRAM00)
BCHP_REGISTER(0x20416144, 32,  RW, MSPI, CDRAM01)
BCHP_REGISTER(0x20416148, 32,  RW, MSPI, CDRAM02)
BCHP_REGISTER(0x2041614c, 32,  RW, MSPI, CDRAM03)
BCHP_REGISTER(0x20416150, 32,  RW, MSPI, CDRAM04)
BCHP_REGISTER(0x20416154, 32,  RW, MSPI, CDRAM05)
BCHP_REGISTER(0x20416158, 32,  RW, MSPI, CDRAM06)
BCHP_REGISTER(0x2041615c, 32,  RW, MSPI, CDRAM07)
BCHP_REGISTER(0x20416160, 32,  RW, MSPI, CDRAM08)
BCHP_REGISTER(0x20416164, 32,  RW, MSPI, CDRAM09)
BCHP_REGISTER(0x20416168, 32,  RW, MSPI, CDRAM10)
BCHP_REGISTER(0x2041616c, 32,  RW, MSPI, CDRAM11)
BCHP_REGISTER(0x20416170, 32,  RW, MSPI, CDRAM12)
BCHP_REGISTER(0x20416174, 32,  RW, MSPI, CDRAM13)
BCHP_REGISTER(0x20416178, 32,  RW, MSPI, CDRAM14)
BCHP_REGISTER(0x2041617c, 32,  RW, MSPI, CDRAM15)
BCHP_REGISTER(0x20417000, 32,  RO, UPG_SPI_AON_IRQ, CPU_STATUS)
BCHP_REGISTER(0x20417004, 32,  RO, UPG_SPI_AON_IRQ, CPU_MASK_STATUS)
BCHP_REGISTER(0x20417008, 32,  WO, UPG_SPI_AON_IRQ, CPU_MASK_SET)
BCHP_REGISTER(0x2041700c, 32,  WO, UPG_SPI_AON_IRQ, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20417010, 32,  RO, UPG_SPI_AON_IRQ, PCI_STATUS)
BCHP_REGISTER(0x20417014, 32,  RO, UPG_SPI_AON_IRQ, PCI_MASK_STATUS)
BCHP_REGISTER(0x20417018, 32,  WO, UPG_SPI_AON_IRQ, PCI_MASK_SET)
BCHP_REGISTER(0x2041701c, 32,  WO, UPG_SPI_AON_IRQ, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20417800, 32,  RO, LDK, KEYROW32)
BCHP_REGISTER(0x20417804, 32,  RO, LDK, KEYROW10)
BCHP_REGISTER(0x20417808, 32,  RW, LDK, PRESCHI)
BCHP_REGISTER(0x2041780c, 32,  RW, LDK, PRESCLO)
BCHP_REGISTER(0x20417810, 32,  RW, LDK, DUTYOFF)
BCHP_REGISTER(0x20417814, 32,  RW, LDK, DUTYON)
BCHP_REGISTER(0x20417818, 32,  RW, LDK, DIGIT2)
BCHP_REGISTER(0x2041781c, 32,  RW, LDK, DIGIT1)
BCHP_REGISTER(0x20417820, 32,  RW, LDK, DIGIT4)
BCHP_REGISTER(0x20417824, 32,  RW, LDK, DIGIT3)
BCHP_REGISTER(0x20417828, 32,  RW, LDK, DEBOUNCE)
BCHP_REGISTER(0x2041782c, 32,  RW, LDK, STATUS)
BCHP_REGISTER(0x20417830, 32,  RW, LDK, KEY_MASK)
BCHP_REGISTER(0x20417834, 32,  RW, LDK, CONTROL)
BCHP_REGISTER(0x20417838, 32,  RW, LDK, IDLEHI)
BCHP_REGISTER(0x2041783c, 32,  RW, LDK, IDLELO)
BCHP_REGISTER(0x20417880, 32,  RW, PM_AON, CONFIG)
BCHP_REGISTER(0x20417884, 32,  RW, PM_AON, CLK_CTRL)
BCHP_REGISTER(0x20417888, 32,  RW, PM_AON, RST_CTRL)
BCHP_REGISTER(0x204178c0, 32,  RW, ICAP, INEDGE)
BCHP_REGISTER(0x204178c4, 32,  RW, ICAP, RCNT0)
BCHP_REGISTER(0x204178c8, 32,  RW, ICAP, RCNT1)
BCHP_REGISTER(0x204178cc, 32,  RW, ICAP, RCNT2)
BCHP_REGISTER(0x204178d0, 32,  RW, ICAP, MASK)
BCHP_REGISTER(0x204178d4, 32,  RO, ICAP, TCNT0MSB)
BCHP_REGISTER(0x204178d8, 32,  RO, ICAP, TCNT0LSB)
BCHP_REGISTER(0x204178dc, 32,  RO, ICAP, TCNT1MSB)
BCHP_REGISTER(0x204178e0, 32,  RO, ICAP, TCNT1LSB)
BCHP_REGISTER(0x204178e4, 32,  RO, ICAP, TCNT2MSB)
BCHP_REGISTER(0x204178e8, 32,  RO, ICAP, TCNT2LSB)
BCHP_REGISTER(0x204178ec, 32,  RW, ICAP, RCNT3)
BCHP_REGISTER(0x204178f0, 32,  RO, ICAP, TCNT3MSB)
BCHP_REGISTER(0x204178f4, 32,  RO, ICAP, TCNT3LSB)
BCHP_REGISTER(0x204178f8, 32,  WO, ICAP, RST)
BCHP_REGISTER(0x204178fc, 32,  RO, ICAP, INSTATUS)
BCHP_REGISTER(0x20417900, 32,  RW, KBD1, STATUS)
BCHP_REGISTER(0x20417904, 32,  RW, KBD1, DIVISOR)
BCHP_REGISTER(0x20417908, 32,  RW, KBD1, FILTER1)
BCHP_REGISTER(0x2041790c, 32,  RW, KBD1, DATA1)
BCHP_REGISTER(0x20417910, 32,  RW, KBD1, DATA0)
BCHP_REGISTER(0x20417914, 32,  RW, KBD1, CMD)
BCHP_REGISTER(0x20417918, 32,  RW, KBD1, CIR_ADDR)
BCHP_REGISTER(0x2041791c, 32,  RW, KBD1, CIR_DATA)
BCHP_REGISTER(0x20417920, 32,  RW, KBD1, KBD_MASK0)
BCHP_REGISTER(0x20417924, 32,  RW, KBD1, KBD_MASK1)
BCHP_REGISTER(0x20417928, 32,  RW, KBD1, KBD_MASK2)
BCHP_REGISTER(0x2041792c, 32,  RW, KBD1, KBD_PAT0)
BCHP_REGISTER(0x20417930, 32,  RW, KBD1, KBD_PAT1)
BCHP_REGISTER(0x20417934, 32,  RW, KBD1, KBD_PAT2)
BCHP_REGISTER(0x2041793c, 32,  RO, KBD1, STATUS2)
BCHP_REGISTER(0x20417980, 32,  RW, KBD2, STATUS)
BCHP_REGISTER(0x20417984, 32,  RW, KBD2, DIVISOR)
BCHP_REGISTER(0x20417988, 32,  RW, KBD2, FILTER1)
BCHP_REGISTER(0x2041798c, 32,  RW, KBD2, DATA1)
BCHP_REGISTER(0x20417990, 32,  RW, KBD2, DATA0)
BCHP_REGISTER(0x20417994, 32,  RW, KBD2, CMD)
BCHP_REGISTER(0x20417998, 32,  RW, KBD2, CIR_ADDR)
BCHP_REGISTER(0x2041799c, 32,  RW, KBD2, CIR_DATA)
BCHP_REGISTER(0x204179a0, 32,  RW, KBD2, KBD_MASK0)
BCHP_REGISTER(0x204179a4, 32,  RW, KBD2, KBD_MASK1)
BCHP_REGISTER(0x204179a8, 32,  RW, KBD2, KBD_MASK2)
BCHP_REGISTER(0x204179ac, 32,  RW, KBD2, KBD_PAT0)
BCHP_REGISTER(0x204179b0, 32,  RW, KBD2, KBD_PAT1)
BCHP_REGISTER(0x204179b4, 32,  RW, KBD2, KBD_PAT2)
BCHP_REGISTER(0x204179bc, 32,  RO, KBD2, STATUS2)
BCHP_REGISTER(0x20417a00, 32,  RW, KBD3, STATUS)
BCHP_REGISTER(0x20417a04, 32,  RW, KBD3, DIVISOR)
BCHP_REGISTER(0x20417a08, 32,  RW, KBD3, FILTER1)
BCHP_REGISTER(0x20417a0c, 32,  RW, KBD3, DATA1)
BCHP_REGISTER(0x20417a10, 32,  RW, KBD3, DATA0)
BCHP_REGISTER(0x20417a14, 32,  RW, KBD3, CMD)
BCHP_REGISTER(0x20417a18, 32,  RW, KBD3, CIR_ADDR)
BCHP_REGISTER(0x20417a1c, 32,  RW, KBD3, CIR_DATA)
BCHP_REGISTER(0x20417a20, 32,  RW, KBD3, KBD_MASK0)
BCHP_REGISTER(0x20417a24, 32,  RW, KBD3, KBD_MASK1)
BCHP_REGISTER(0x20417a28, 32,  RW, KBD3, KBD_MASK2)
BCHP_REGISTER(0x20417a2c, 32,  RW, KBD3, KBD_PAT0)
BCHP_REGISTER(0x20417a30, 32,  RW, KBD3, KBD_PAT1)
BCHP_REGISTER(0x20417a34, 32,  RW, KBD3, KBD_PAT2)
BCHP_REGISTER(0x20417a3c, 32,  RO, KBD3, STATUS2)
BCHP_REGISTER(0x20417a80, 32,  RW, BSCB, CHIP_ADDRESS)
BCHP_REGISTER(0x20417a84, 32,  RW, BSCB, DATA_IN0)
BCHP_REGISTER(0x20417a88, 32,  RW, BSCB, DATA_IN1)
BCHP_REGISTER(0x20417a8c, 32,  RW, BSCB, DATA_IN2)
BCHP_REGISTER(0x20417a90, 32,  RW, BSCB, DATA_IN3)
BCHP_REGISTER(0x20417a94, 32,  RW, BSCB, DATA_IN4)
BCHP_REGISTER(0x20417a98, 32,  RW, BSCB, DATA_IN5)
BCHP_REGISTER(0x20417a9c, 32,  RW, BSCB, DATA_IN6)
BCHP_REGISTER(0x20417aa0, 32,  RW, BSCB, DATA_IN7)
BCHP_REGISTER(0x20417aa4, 32,  RW, BSCB, CNT_REG)
BCHP_REGISTER(0x20417aa8, 32,  RW, BSCB, CTL_REG)
BCHP_REGISTER(0x20417aac, 32,  RW, BSCB, IIC_ENABLE)
BCHP_REGISTER(0x20417ab0, 32,  RO, BSCB, DATA_OUT0)
BCHP_REGISTER(0x20417ab4, 32,  RO, BSCB, DATA_OUT1)
BCHP_REGISTER(0x20417ab8, 32,  RO, BSCB, DATA_OUT2)
BCHP_REGISTER(0x20417abc, 32,  RO, BSCB, DATA_OUT3)
BCHP_REGISTER(0x20417ac0, 32,  RO, BSCB, DATA_OUT4)
BCHP_REGISTER(0x20417ac4, 32,  RO, BSCB, DATA_OUT5)
BCHP_REGISTER(0x20417ac8, 32,  RO, BSCB, DATA_OUT6)
BCHP_REGISTER(0x20417acc, 32,  RO, BSCB, DATA_OUT7)
BCHP_REGISTER(0x20417ad0, 32,  RW, BSCB, CTLHI_REG)
BCHP_REGISTER(0x20417ad4, 32,  RW, BSCB, SCL_PARAM)
BCHP_REGISTER(0x20417b00, 32,  RW, BSCC, CHIP_ADDRESS)
BCHP_REGISTER(0x20417b04, 32,  RW, BSCC, DATA_IN0)
BCHP_REGISTER(0x20417b08, 32,  RW, BSCC, DATA_IN1)
BCHP_REGISTER(0x20417b0c, 32,  RW, BSCC, DATA_IN2)
BCHP_REGISTER(0x20417b10, 32,  RW, BSCC, DATA_IN3)
BCHP_REGISTER(0x20417b14, 32,  RW, BSCC, DATA_IN4)
BCHP_REGISTER(0x20417b18, 32,  RW, BSCC, DATA_IN5)
BCHP_REGISTER(0x20417b1c, 32,  RW, BSCC, DATA_IN6)
BCHP_REGISTER(0x20417b20, 32,  RW, BSCC, DATA_IN7)
BCHP_REGISTER(0x20417b24, 32,  RW, BSCC, CNT_REG)
BCHP_REGISTER(0x20417b28, 32,  RW, BSCC, CTL_REG)
BCHP_REGISTER(0x20417b2c, 32,  RW, BSCC, IIC_ENABLE)
BCHP_REGISTER(0x20417b30, 32,  RO, BSCC, DATA_OUT0)
BCHP_REGISTER(0x20417b34, 32,  RO, BSCC, DATA_OUT1)
BCHP_REGISTER(0x20417b38, 32,  RO, BSCC, DATA_OUT2)
BCHP_REGISTER(0x20417b3c, 32,  RO, BSCC, DATA_OUT3)
BCHP_REGISTER(0x20417b40, 32,  RO, BSCC, DATA_OUT4)
BCHP_REGISTER(0x20417b44, 32,  RO, BSCC, DATA_OUT5)
BCHP_REGISTER(0x20417b48, 32,  RO, BSCC, DATA_OUT6)
BCHP_REGISTER(0x20417b4c, 32,  RO, BSCC, DATA_OUT7)
BCHP_REGISTER(0x20417b50, 32,  RW, BSCC, CTLHI_REG)
BCHP_REGISTER(0x20417b54, 32,  RW, BSCC, SCL_PARAM)
BCHP_REGISTER(0x20417b80, 32,  RW, BSCD, CHIP_ADDRESS)
BCHP_REGISTER(0x20417b84, 32,  RW, BSCD, DATA_IN0)
BCHP_REGISTER(0x20417b88, 32,  RW, BSCD, DATA_IN1)
BCHP_REGISTER(0x20417b8c, 32,  RW, BSCD, DATA_IN2)
BCHP_REGISTER(0x20417b90, 32,  RW, BSCD, DATA_IN3)
BCHP_REGISTER(0x20417b94, 32,  RW, BSCD, DATA_IN4)
BCHP_REGISTER(0x20417b98, 32,  RW, BSCD, DATA_IN5)
BCHP_REGISTER(0x20417b9c, 32,  RW, BSCD, DATA_IN6)
BCHP_REGISTER(0x20417ba0, 32,  RW, BSCD, DATA_IN7)
BCHP_REGISTER(0x20417ba4, 32,  RW, BSCD, CNT_REG)
BCHP_REGISTER(0x20417ba8, 32,  RW, BSCD, CTL_REG)
BCHP_REGISTER(0x20417bac, 32,  RW, BSCD, IIC_ENABLE)
BCHP_REGISTER(0x20417bb0, 32,  RO, BSCD, DATA_OUT0)
BCHP_REGISTER(0x20417bb4, 32,  RO, BSCD, DATA_OUT1)
BCHP_REGISTER(0x20417bb8, 32,  RO, BSCD, DATA_OUT2)
BCHP_REGISTER(0x20417bbc, 32,  RO, BSCD, DATA_OUT3)
BCHP_REGISTER(0x20417bc0, 32,  RO, BSCD, DATA_OUT4)
BCHP_REGISTER(0x20417bc4, 32,  RO, BSCD, DATA_OUT5)
BCHP_REGISTER(0x20417bc8, 32,  RO, BSCD, DATA_OUT6)
BCHP_REGISTER(0x20417bcc, 32,  RO, BSCD, DATA_OUT7)
BCHP_REGISTER(0x20417bd0, 32,  RW, BSCD, CTLHI_REG)
BCHP_REGISTER(0x20417bd4, 32,  RW, BSCD, SCL_PARAM)
BCHP_REGISTER(0x20417c00, 32,  RO, UPG_MAIN_AON_IRQ, CPU_STATUS)
BCHP_REGISTER(0x20417c04, 32,  RO, UPG_MAIN_AON_IRQ, CPU_MASK_STATUS)
BCHP_REGISTER(0x20417c08, 32,  WO, UPG_MAIN_AON_IRQ, CPU_MASK_SET)
BCHP_REGISTER(0x20417c0c, 32,  WO, UPG_MAIN_AON_IRQ, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20417c10, 32,  RO, UPG_MAIN_AON_IRQ, PCI_STATUS)
BCHP_REGISTER(0x20417c14, 32,  RO, UPG_MAIN_AON_IRQ, PCI_MASK_STATUS)
BCHP_REGISTER(0x20417c18, 32,  WO, UPG_MAIN_AON_IRQ, PCI_MASK_SET)
BCHP_REGISTER(0x20417c1c, 32,  WO, UPG_MAIN_AON_IRQ, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20417c40, 32,  RO, UPG_BSC_AON_IRQ, CPU_STATUS)
BCHP_REGISTER(0x20417c44, 32,  RO, UPG_BSC_AON_IRQ, CPU_MASK_STATUS)
BCHP_REGISTER(0x20417c48, 32,  WO, UPG_BSC_AON_IRQ, CPU_MASK_SET)
BCHP_REGISTER(0x20417c4c, 32,  WO, UPG_BSC_AON_IRQ, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20417c50, 32,  RO, UPG_BSC_AON_IRQ, PCI_STATUS)
BCHP_REGISTER(0x20417c54, 32,  RO, UPG_BSC_AON_IRQ, PCI_MASK_STATUS)
BCHP_REGISTER(0x20417c58, 32,  WO, UPG_BSC_AON_IRQ, PCI_MASK_SET)
BCHP_REGISTER(0x20417c5c, 32,  WO, UPG_BSC_AON_IRQ, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20417d00, 32, CFG, GIO_AON, ODEN_LO)
BCHP_REGISTER(0x20417d04, 32,  RW, GIO_AON, DATA_LO)
BCHP_REGISTER(0x20417d08, 32, CFG, GIO_AON, IODIR_LO)
BCHP_REGISTER(0x20417d0c, 32, CFG, GIO_AON, EC_LO)
BCHP_REGISTER(0x20417d10, 32, CFG, GIO_AON, EI_LO)
BCHP_REGISTER(0x20417d14, 32, CFG, GIO_AON, MASK_LO)
BCHP_REGISTER(0x20417d18, 32, CFG, GIO_AON, LEVEL_LO)
BCHP_REGISTER(0x20417d1c, 32,  RW, GIO_AON, STAT_LO)
BCHP_REGISTER(0x20417d20, 32, CFG, GIO_AON, ODEN_EXT)
BCHP_REGISTER(0x20417d24, 32,  RW, GIO_AON, DATA_EXT)
BCHP_REGISTER(0x20417d28, 32, CFG, GIO_AON, IODIR_EXT)
BCHP_REGISTER(0x20417d2c, 32, CFG, GIO_AON, EC_EXT)
BCHP_REGISTER(0x20417d30, 32, CFG, GIO_AON, EI_EXT)
BCHP_REGISTER(0x20417d34, 32, CFG, GIO_AON, MASK_EXT)
BCHP_REGISTER(0x20417d38, 32, CFG, GIO_AON, LEVEL_EXT)
BCHP_REGISTER(0x20417d3c, 32,  RW, GIO_AON, STAT_EXT)
BCHP_REGISTER(0x20417e00, 32,  RO, BICAP, REVISION)
BCHP_REGISTER(0x20417e04, 32,  RW, BICAP, CONTROL0)
BCHP_REGISTER(0x20417e08, 32,  RW, BICAP, CONTROL1)
BCHP_REGISTER(0x20417e0c, 32,  RW, BICAP, FILTER0)
BCHP_REGISTER(0x20417e10, 32,  RW, BICAP, FILTER1)
BCHP_REGISTER(0x20417e14, 32,  RW, BICAP, TIMEOUT0)
BCHP_REGISTER(0x20417e18, 32,  RW, BICAP, TIMEOUT1)
BCHP_REGISTER(0x20417e1c, 32,  RW, BICAP, TIMEOUT2)
BCHP_REGISTER(0x20417e20, 32,  RW, BICAP, TIMEOUT3)
BCHP_REGISTER(0x20417e24, 32,  RW, BICAP, FIFO_INACT_TIMEOUT)
BCHP_REGISTER(0x20417e28, 32,  RO, BICAP, FIFO_DATA)
BCHP_REGISTER(0x20417e2c, 32,  RW, BICAP, FIFO_CONTROL)
BCHP_REGISTER(0x20417e30, 32,  RO, BICAP, STATUS)
BCHP_REGISTER(0x20417e34, 32,  RW, BICAP, PWC0)
BCHP_REGISTER(0x20417e38, 32,  RW, BICAP, PWC1)
BCHP_REGISTER(0x20417e40, 32,  RW, WKTMR, EVENT)
BCHP_REGISTER(0x20417e44, 32,  RW, WKTMR, COUNTER)
BCHP_REGISTER(0x20417e48, 32,  RW, WKTMR, ALARM)
BCHP_REGISTER(0x20417e4c, 32,  RW, WKTMR, PRESCALER)
BCHP_REGISTER(0x20417e50, 32,  RO, WKTMR, PRESCALER_VAL)
BCHP_REGISTER(0x20417e80, 32,  RO, UPG_AUX_AON_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20417e84, 32,  WO, UPG_AUX_AON_INTR2, CPU_SET)
BCHP_REGISTER(0x20417e88, 32,  WO, UPG_AUX_AON_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x20417e8c, 32,  RO, UPG_AUX_AON_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20417e90, 32,  WO, UPG_AUX_AON_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20417e94, 32,  WO, UPG_AUX_AON_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20417e98, 32,  RO, UPG_AUX_AON_INTR2, PCI_STATUS)
BCHP_REGISTER(0x20417e9c, 32,  WO, UPG_AUX_AON_INTR2, PCI_SET)
BCHP_REGISTER(0x20417ea0, 32,  WO, UPG_AUX_AON_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20417ea4, 32,  RO, UPG_AUX_AON_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20417ea8, 32,  WO, UPG_AUX_AON_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x20417eac, 32,  WO, UPG_AUX_AON_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2041e000, 32,  RW, SYS_GISB_ARB_SEC, RSV_S)
BCHP_REGISTER(0x2041e7fc, 32,  RW, SYS_GISB_ARB_SEC, RSV_E)
BCHP_REGISTER(0x2041e800, 32,  RW, SYS_TOP_CTRL_SEC, RSV_S)
BCHP_REGISTER(0x2041e808, 32,  RW, SYS_TOP_CTRL_SEC, RSV_E)
BCHP_REGISTER(0x2041e900, 32,  RW, AON_CTRL_SECURE, RSV_S)
BCHP_REGISTER(0x2041e97c, 32,  RW, AON_CTRL_SECURE, RSV_E)
BCHP_REGISTER(0x20452000, 32,  RO, HIF_CONTINUATION, STB_BOOT_HI_ADDR0)
BCHP_REGISTER(0x20452004, 32,  RO, HIF_CONTINUATION, STB_BOOT_ADDR0)
BCHP_REGISTER(0x20452008, 32,  RW, HIF_CONTINUATION, STB_BOOT_HI_ADDR1)
BCHP_REGISTER(0x2045200c, 32,  RW, HIF_CONTINUATION, STB_BOOT_ADDR1)
BCHP_REGISTER(0x20452010, 32,  RW, HIF_CONTINUATION, STB_BOOT_HI_ADDR2)
BCHP_REGISTER(0x20452014, 32,  RW, HIF_CONTINUATION, STB_BOOT_ADDR2)
BCHP_REGISTER(0x20452018, 32,  RW, HIF_CONTINUATION, STB_BOOT_HI_ADDR3)
BCHP_REGISTER(0x2045201c, 32,  RW, HIF_CONTINUATION, STB_BOOT_ADDR3)
BCHP_REGISTER(0x20460000, 32,  RO, PCIE_0_RC_CFG_TYPE1, DEVICE_VENDOR_ID)
BCHP_REGISTER(0x20460004, 32,  RW, PCIE_0_RC_CFG_TYPE1, STATUS_COMMAND)
BCHP_REGISTER(0x20460008, 32,  RO, PCIE_0_RC_CFG_TYPE1, REV_ID_CLASS_CODE)
BCHP_REGISTER(0x2046000c, 32,  RW, PCIE_0_RC_CFG_TYPE1, HEADERTYPE_LAT_CACHELINESIZE)
BCHP_REGISTER(0x20460010, 32,  RW, PCIE_0_RC_CFG_TYPE1, BAR_1)
BCHP_REGISTER(0x20460014, 32,  RW, PCIE_0_RC_CFG_TYPE1, BAR_2)
BCHP_REGISTER(0x20460018, 32,  RW, PCIE_0_RC_CFG_TYPE1, PRI_SEC_BUS_NO)
BCHP_REGISTER(0x2046001c, 32,  RW, PCIE_0_RC_CFG_TYPE1, SEC_STATUS_IO_BASE_LIMIT)
BCHP_REGISTER(0x20460020, 32,  RW, PCIE_0_RC_CFG_TYPE1, RC_MEM_BASE_LIMIT)
BCHP_REGISTER(0x20460024, 32,  RW, PCIE_0_RC_CFG_TYPE1, RC_PREF_BASE_LIMIT)
BCHP_REGISTER(0x20460028, 32,  RW, PCIE_0_RC_CFG_TYPE1, RC_PREF_BASE_HI)
BCHP_REGISTER(0x2046002c, 32,  RW, PCIE_0_RC_CFG_TYPE1, RC_PREF_LIM_HI)
BCHP_REGISTER(0x20460030, 32,  RO, PCIE_0_RC_CFG_TYPE1, RC_IO_BASE_LIMIT)
BCHP_REGISTER(0x20460034, 32,  RO, PCIE_0_RC_CFG_TYPE1, CAP_POINTER)
BCHP_REGISTER(0x20460038, 32,  RO, PCIE_0_RC_CFG_TYPE1, EXP_ROM_BAR)
BCHP_REGISTER(0x2046003c, 32,  RW, PCIE_0_RC_CFG_TYPE1, BRIDGE_CONTROL)
BCHP_REGISTER(0x20460048, 32,  RO, PCIE_0_RC_CFG_PM, PM_CAP)
BCHP_REGISTER(0x2046004c, 32,  RW, PCIE_0_RC_CFG_PM, PM_CSR)
BCHP_REGISTER(0x204600ac, 32,  RO, PCIE_0_RC_CFG_PCIE, PCIE_CAPABILITY)
BCHP_REGISTER(0x204600b0, 32,  RO, PCIE_0_RC_CFG_PCIE, DEVICE_CAPABILITY)
BCHP_REGISTER(0x204600b4, 32,  RW, PCIE_0_RC_CFG_PCIE, DEVICE_STATUS_CONTROL)
BCHP_REGISTER(0x204600b8, 32,  RO, PCIE_0_RC_CFG_PCIE, LINK_CAPABILITY)
BCHP_REGISTER(0x204600bc, 32,  RW, PCIE_0_RC_CFG_PCIE, LINK_STATUS_CONTROL)
BCHP_REGISTER(0x204600c0, 32,  RW, PCIE_0_RC_CFG_PCIE, SLOT_CAPABILITY)
BCHP_REGISTER(0x204600c4, 32,  RO, PCIE_0_RC_CFG_PCIE, SLOT_CONTROL_STATUS)
BCHP_REGISTER(0x204600c8, 32,  RW, PCIE_0_RC_CFG_PCIE, ROOT_CAP_CONTROL)
BCHP_REGISTER(0x204600cc, 32,  RW, PCIE_0_RC_CFG_PCIE, ROOT_STATUS)
BCHP_REGISTER(0x204600d0, 32,  RO, PCIE_0_RC_CFG_PCIE, DEVICE_CAPABILITY_2)
BCHP_REGISTER(0x204600d4, 32,  RW, PCIE_0_RC_CFG_PCIE, DEVICE_STATUS_CONTROL_2)
BCHP_REGISTER(0x204600d8, 32,  RO, PCIE_0_RC_CFG_PCIE, LINK_CAPABILITY_2)
BCHP_REGISTER(0x204600dc, 32,  RW, PCIE_0_RC_CFG_PCIE, LINK_STATUS_CONTROL_2)
BCHP_REGISTER(0x204600e0, 32,  RO, PCIE_0_RC_CFG_PCIE, SLOT_CAPABILITY_2)
BCHP_REGISTER(0x204600e4, 32,  RO, PCIE_0_RC_CFG_PCIE, SLOT_STATUS_CONTROL_2)
BCHP_REGISTER(0x20460100, 32,  RO, PCIE_0_RC_CFG_AER, ADV_ERR_CAP)
BCHP_REGISTER(0x20460104, 32,  RW, PCIE_0_RC_CFG_AER, UC_ERR_STATUS)
BCHP_REGISTER(0x20460108, 32,  RW, PCIE_0_RC_CFG_AER, UCORR_ERR_MASK)
BCHP_REGISTER(0x2046010c, 32,  RW, PCIE_0_RC_CFG_AER, UCORR_ERR_SEVR)
BCHP_REGISTER(0x20460110, 32,  RW, PCIE_0_RC_CFG_AER, CORR_ERR_STATUS)
BCHP_REGISTER(0x20460114, 32,  RW, PCIE_0_RC_CFG_AER, CORR_ERR_MASK)
BCHP_REGISTER(0x20460118, 32,  RW, PCIE_0_RC_CFG_AER, ADV_ERR_CAP_CONTROL)
BCHP_REGISTER(0x2046011c, 32,  RO, PCIE_0_RC_CFG_AER, HEADER_LOG1)
BCHP_REGISTER(0x20460120, 32,  RO, PCIE_0_RC_CFG_AER, HEADER_LOG2)
BCHP_REGISTER(0x20460124, 32,  RO, PCIE_0_RC_CFG_AER, HEADER_LOG3)
BCHP_REGISTER(0x20460128, 32,  RO, PCIE_0_RC_CFG_AER, HEADER_LOG4)
BCHP_REGISTER(0x2046012c, 32,  RW, PCIE_0_RC_CFG_AER, ROOT_ERROR_COMMAND)
BCHP_REGISTER(0x20460130, 32,  RW, PCIE_0_RC_CFG_AER, ROOT_ERROR_STATUS)
BCHP_REGISTER(0x20460134, 32,  RO, PCIE_0_RC_CFG_AER, ROOT_ERR_ID)
BCHP_REGISTER(0x20460180, 32,  RO, PCIE_0_RC_CFG_VENDOR, VENDOR_CAP)
BCHP_REGISTER(0x20460184, 32,  RO, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_HEADER)
BCHP_REGISTER(0x20460188, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG1)
BCHP_REGISTER(0x2046018c, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG2)
BCHP_REGISTER(0x20460190, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG3)
BCHP_REGISTER(0x20460194, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG4)
BCHP_REGISTER(0x20460198, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG5)
BCHP_REGISTER(0x2046019c, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG6)
BCHP_REGISTER(0x204601a0, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG7)
BCHP_REGISTER(0x204601a4, 32,  RW, PCIE_0_RC_CFG_VENDOR, VENDOR_SPECIFIC_REG8)
BCHP_REGISTER(0x20460240, 32,  RO, PCIE_0_RC_CFG_L1SUB, PML1SUB_CAPID)
BCHP_REGISTER(0x20460244, 32,  RO, PCIE_0_RC_CFG_L1SUB, PML1_SUB_CAP_REG)
BCHP_REGISTER(0x20460248, 32,  RW, PCIE_0_RC_CFG_L1SUB, PML1_SUB_CONTROL1)
BCHP_REGISTER(0x2046024c, 32,  RW, PCIE_0_RC_CFG_L1SUB, PML1_SUB_CONTROL2)
BCHP_REGISTER(0x20460404, 32,  RO, PCIE_0_RC_CFG_PRIV0, UNUSED_F)
BCHP_REGISTER(0x20460408, 32,  RW, PCIE_0_RC_CFG_PRIV0, CONFIG_2)
BCHP_REGISTER(0x2046040c, 32,  RW, PCIE_0_RC_CFG_PRIV0, CONFIG_3)
BCHP_REGISTER(0x20460410, 32,  RW, PCIE_0_RC_CFG_PRIV0, PM_DATA_A)
BCHP_REGISTER(0x20460414, 32,  RW, PCIE_0_RC_CFG_PRIV0, PM_DATA_B)
BCHP_REGISTER(0x20460418, 32,  RO, PCIE_0_RC_CFG_PRIV0, PCI_EXTENDED_BAR_SIZE)
BCHP_REGISTER(0x20460428, 32,  RO, PCIE_0_RC_CFG_PRIV1, VPD_INTF)
BCHP_REGISTER(0x2046042c, 32,  RO, PCIE_0_RC_CFG_PRIV1, VPD_ADDR_FLAG)
BCHP_REGISTER(0x20460430, 32,  RW, PCIE_0_RC_CFG_PRIV1, VPD_DATA)
BCHP_REGISTER(0x20460434, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL1)
BCHP_REGISTER(0x20460438, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL2)
BCHP_REGISTER(0x2046043c, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL3)
BCHP_REGISTER(0x20460440, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL4)
BCHP_REGISTER(0x20460444, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL5)
BCHP_REGISTER(0x20460448, 32,  RO, PCIE_0_RC_CFG_PRIV1, UNUSED_H)
BCHP_REGISTER(0x2046044c, 32,  RW, PCIE_0_RC_CFG_PRIV1, ID_VAL6)
BCHP_REGISTER(0x20460450, 32,  RO, PCIE_0_RC_CFG_PRIV1, MSI_DATA)
BCHP_REGISTER(0x20460454, 32,  RO, PCIE_0_RC_CFG_PRIV1, MSI_ADDR_H)
BCHP_REGISTER(0x20460458, 32,  RO, PCIE_0_RC_CFG_PRIV1, MSI_ADDR_L)
BCHP_REGISTER(0x20460464, 32,  RO, PCIE_0_RC_CFG_PRIV1, MSI_MASK)
BCHP_REGISTER(0x20460468, 32,  RW, PCIE_0_RC_CFG_PRIV1, MSI_PEND)
BCHP_REGISTER(0x2046046c, 32,  RW, PCIE_0_RC_CFG_PRIV1, PM_DATA_C)
BCHP_REGISTER(0x204604c0, 32,  RW, PCIE_0_RC_CFG_PRIV1, MSIX_CONTROL)
BCHP_REGISTER(0x204604c4, 32,  RW, PCIE_0_RC_CFG_PRIV1, MSIX_TBL_OFF_BIR)
BCHP_REGISTER(0x204604c8, 32,  RW, PCIE_0_RC_CFG_PRIV1, MSIX_PBA_OFF_BIR)
BCHP_REGISTER(0x204604cc, 32,  RO, PCIE_0_RC_CFG_PRIV1, UNUSED_K)
BCHP_REGISTER(0x204604d0, 32,  RW, PCIE_0_RC_CFG_PRIV1, PCIE_CAPABILITY)
BCHP_REGISTER(0x204604d4, 32,  RW, PCIE_0_RC_CFG_PRIV1, DEVICE_CAPABILITY)
BCHP_REGISTER(0x204604d8, 32,  RO, PCIE_0_RC_CFG_PRIV1, DEVICE_CONTROL)
BCHP_REGISTER(0x204604dc, 32,  RW, PCIE_0_RC_CFG_PRIV1, LINK_CAPABILITY)
BCHP_REGISTER(0x204604e0, 32,  RO, PCIE_0_RC_CFG_PRIV1, BAR2_CONFIG)
BCHP_REGISTER(0x204604e4, 32,  RW, PCIE_0_RC_CFG_PRIV1, PCIE_DEVICE_CAPABILITY_2)
BCHP_REGISTER(0x204604e8, 32,  RW, PCIE_0_RC_CFG_PRIV1, PCIE_LINK_CAPABILITY_2)
BCHP_REGISTER(0x204604ec, 32,  RW, PCIE_0_RC_CFG_PRIV1, PCIE_LINK_CONTROL)
BCHP_REGISTER(0x204604f0, 32,  RW, PCIE_0_RC_CFG_PRIV1, PCIE_LINK_CAPABILITY_RC)
BCHP_REGISTER(0x204604f4, 32,  RO, PCIE_0_RC_CFG_PRIV1, BAR3_CONFIG)
BCHP_REGISTER(0x204604f8, 32,  RW, PCIE_0_RC_CFG_PRIV1, ROOT_CAP)
BCHP_REGISTER(0x204604fc, 32,  RW, PCIE_0_RC_CFG_PRIV1, ROOT_CONTROL)
BCHP_REGISTER(0x20460500, 32,  RW, PCIE_0_RC_CFG_PRIV1, DEV_SER_NUM_CAP_ID)
BCHP_REGISTER(0x20460504, 32,  RW, PCIE_0_RC_CFG_PRIV1, LOWER_SER_NUM)
BCHP_REGISTER(0x20460508, 32,  RW, PCIE_0_RC_CFG_PRIV1, UPPER_SER_NUM)
BCHP_REGISTER(0x2046050c, 32,  RW, PCIE_0_RC_CFG_PRIV1, ADV_ERR_CAP)
BCHP_REGISTER(0x20460510, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_0)
BCHP_REGISTER(0x20460514, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_1)
BCHP_REGISTER(0x20460518, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_2)
BCHP_REGISTER(0x2046051c, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_3)
BCHP_REGISTER(0x20460520, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_4)
BCHP_REGISTER(0x20460524, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_5)
BCHP_REGISTER(0x20460528, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_6)
BCHP_REGISTER(0x2046052c, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_7)
BCHP_REGISTER(0x20460530, 32,  RW, PCIE_0_RC_CFG_PRIV1, EXT2_CAP_ADDR)
BCHP_REGISTER(0x20460534, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_DATA_8)
BCHP_REGISTER(0x20460540, 32,  RW, PCIE_0_RC_CFG_PRIV1, L1SUB_CAP)
BCHP_REGISTER(0x20460544, 32,  RW, PCIE_0_RC_CFG_PRIV1, L1SUB_EXT_CAP)
BCHP_REGISTER(0x20460550, 32,  RW, PCIE_0_RC_CFG_PRIV1, PWR_BDGT_CAPABILITY)
BCHP_REGISTER(0x20460554, 32,  RW, PCIE_0_RC_CFG_PRIV1, VSEC_HDR)
BCHP_REGISTER(0x20460558, 32,  RW, PCIE_0_RC_CFG_PRIV1, RC_USER_MEM_LO1)
BCHP_REGISTER(0x2046055c, 32,  RW, PCIE_0_RC_CFG_PRIV1, RC_USER_MEM_HI1)
BCHP_REGISTER(0x20460560, 32,  RW, PCIE_0_RC_CFG_PRIV1, RC_USER_MEM_LO2)
BCHP_REGISTER(0x20460564, 32,  RW, PCIE_0_RC_CFG_PRIV1, RC_USER_MEM_HI2)
BCHP_REGISTER(0x204605f4, 32,  RW, PCIE_0_RC_CFG_PRIV1, TPH_CAP)
BCHP_REGISTER(0x204605f8, 32,  RW, PCIE_0_RC_CFG_PRIV1, RESIZEBAR_CAP)
BCHP_REGISTER(0x204605fc, 32,  RW, PCIE_0_RC_CFG_PRIV1, ARI_CAP)
BCHP_REGISTER(0x20460600, 32,  RO, PCIE_0_RC_CFG_PRIV1, INITVF)
BCHP_REGISTER(0x20460604, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_OFFSET)
BCHP_REGISTER(0x20460608, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_BAR_REG)
BCHP_REGISTER(0x2046060c, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_SUPP_PAGE_SIZE)
BCHP_REGISTER(0x20460610, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_CAP_EN)
BCHP_REGISTER(0x20460614, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_MSIX_TBL_BIR_OFF)
BCHP_REGISTER(0x20460618, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_MSIX_PBA_OFF_BIR)
BCHP_REGISTER(0x2046061c, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_MSIX_CONTROL)
BCHP_REGISTER(0x20460620, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_BAR4_REG)
BCHP_REGISTER(0x20460624, 32,  RW, PCIE_0_RC_CFG_PRIV1, PF_INITVF)
BCHP_REGISTER(0x20460628, 32,  RO, PCIE_0_RC_CFG_PRIV1, VF_NSP)
BCHP_REGISTER(0x20460630, 32,  RO, PCIE_0_RC_CFG_PRIV1, ATS_INLD_QUEUE_DEPTH)
BCHP_REGISTER(0x20460800, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_0)
BCHP_REGISTER(0x20460804, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_1)
BCHP_REGISTER(0x20460808, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_2)
BCHP_REGISTER(0x2046080c, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_3)
BCHP_REGISTER(0x20460810, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_4)
BCHP_REGISTER(0x20460814, 32,  RW, PCIE_0_RC_TL, TL_CONTROL_5)
BCHP_REGISTER(0x20460818, 32,  RW, PCIE_0_RC_TL, L1_CTRL1)
BCHP_REGISTER(0x2046081c, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_2)
BCHP_REGISTER(0x20460820, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_3)
BCHP_REGISTER(0x20460824, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_4)
BCHP_REGISTER(0x20460828, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_5)
BCHP_REGISTER(0x2046082c, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_6)
BCHP_REGISTER(0x20460830, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_7)
BCHP_REGISTER(0x20460834, 32,  RW, PCIE_0_RC_TL, USER_CONTROL_8)
BCHP_REGISTER(0x20460838, 32,  RW, PCIE_0_RC_TL, CRS_CLEAR_TIMER)
BCHP_REGISTER(0x20460840, 32,  RW, PCIE_0_RC_TL, SW_LTR_VAL)
BCHP_REGISTER(0x20460844, 32,  RW, PCIE_0_RC_TL, LTR0_REG)
BCHP_REGISTER(0x20460848, 32,  RW, PCIE_0_RC_TL, LTR1_REG)
BCHP_REGISTER(0x2046084c, 32,  RW, PCIE_0_RC_TL, LTR2_REG)
BCHP_REGISTER(0x20460850, 32,  RW, PCIE_0_RC_TL, TL_FUNC345_MASK)
BCHP_REGISTER(0x20460854, 32,  RO, PCIE_0_RC_TL, TL_FUNC345_STAT)
BCHP_REGISTER(0x20460858, 32,  RW, PCIE_0_RC_TL, TL_FUNC678_MASK)
BCHP_REGISTER(0x2046085c, 32,  RO, PCIE_0_RC_TL, TL_FUNC678_STAT)
BCHP_REGISTER(0x20460860, 32,  RW, PCIE_0_RC_TL, FUNC_INT_SEL)
BCHP_REGISTER(0x20460870, 32,  RW, PCIE_0_RC_TL, TL_OBFF_CTRL)
BCHP_REGISTER(0x20460874, 32,  RW, PCIE_0_RC_TL, TL_CTLSTAT_0)
BCHP_REGISTER(0x20460878, 32,  RO, PCIE_0_RC_TL, PM_STATUS_0)
BCHP_REGISTER(0x2046087c, 32,  RO, PCIE_0_RC_TL, PM_STATUS_1)
BCHP_REGISTER(0x20460900, 32,  RO, PCIE_0_RC_TL, TL_STATUS_0)
BCHP_REGISTER(0x20460904, 32,  RO, PCIE_0_RC_TL, TL_STATUS_1)
BCHP_REGISTER(0x20460908, 32,  RO, PCIE_0_RC_TL, TL_STATUS_2)
BCHP_REGISTER(0x2046090c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_3)
BCHP_REGISTER(0x20460910, 32,  RO, PCIE_0_RC_TL, TL_STATUS_4)
BCHP_REGISTER(0x20460914, 32,  RO, PCIE_0_RC_TL, TL_STATUS_5)
BCHP_REGISTER(0x20460918, 32,  RO, PCIE_0_RC_TL, TL_STATUS_6)
BCHP_REGISTER(0x2046091c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_7)
BCHP_REGISTER(0x20460920, 32,  RO, PCIE_0_RC_TL, TL_STATUS_8)
BCHP_REGISTER(0x20460924, 32,  RO, PCIE_0_RC_TL, TL_STATUS_9)
BCHP_REGISTER(0x20460928, 32,  RO, PCIE_0_RC_TL, TL_STATUS_10)
BCHP_REGISTER(0x2046092c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_11)
BCHP_REGISTER(0x20460930, 32,  RO, PCIE_0_RC_TL, TL_STATUS_12)
BCHP_REGISTER(0x20460934, 32,  RO, PCIE_0_RC_TL, TL_STATUS_13)
BCHP_REGISTER(0x20460938, 32,  RO, PCIE_0_RC_TL, TL_STATUS_14)
BCHP_REGISTER(0x2046093c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_15)
BCHP_REGISTER(0x20460940, 32,  RO, PCIE_0_RC_TL, TL_STATUS_16)
BCHP_REGISTER(0x20460944, 32,  RO, PCIE_0_RC_TL, TL_STATUS_17)
BCHP_REGISTER(0x20460948, 32,  RO, PCIE_0_RC_TL, TL_STATUS_18)
BCHP_REGISTER(0x2046094c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_19)
BCHP_REGISTER(0x20460950, 32,  RO, PCIE_0_RC_TL, TL_STATUS_20)
BCHP_REGISTER(0x20460954, 32,  RO, PCIE_0_RC_TL, TL_STATUS_21)
BCHP_REGISTER(0x20460958, 32,  RO, PCIE_0_RC_TL, TL_STATUS_22)
BCHP_REGISTER(0x2046095c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_23)
BCHP_REGISTER(0x20460960, 32,  RO, PCIE_0_RC_TL, TL_STATUS_24)
BCHP_REGISTER(0x20460964, 32,  RO, PCIE_0_RC_TL, TL_STATUS_25)
BCHP_REGISTER(0x20460968, 32,  RO, PCIE_0_RC_TL, TL_STATUS_26)
BCHP_REGISTER(0x2046096c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_27)
BCHP_REGISTER(0x20460970, 32,  RO, PCIE_0_RC_TL, TL_STATUS_28)
BCHP_REGISTER(0x20460974, 32,  RO, PCIE_0_RC_TL, TL_STATUS_29)
BCHP_REGISTER(0x20460978, 32,  RO, PCIE_0_RC_TL, TL_STATUS_30)
BCHP_REGISTER(0x2046097c, 32,  RO, PCIE_0_RC_TL, TL_STATUS_31)
BCHP_REGISTER(0x20460980, 32,  RO, PCIE_0_RC_TL, TL_HDR_FC_ST)
BCHP_REGISTER(0x20460984, 32,  RO, PCIE_0_RC_TL, TL_DAT_FC_ST)
BCHP_REGISTER(0x20460988, 32,  RO, PCIE_0_RC_TL, TL_HDR_FCCON_ST)
BCHP_REGISTER(0x2046098c, 32,  RO, PCIE_0_RC_TL, TL_DAT_FCCON_ST)
BCHP_REGISTER(0x20460990, 32,  RO, PCIE_0_RC_TL, TL_TGT_CRDT_ST)
BCHP_REGISTER(0x20460994, 32,  RO, PCIE_0_RC_TL, TL_CRDT_ALLOC_ST)
BCHP_REGISTER(0x20460998, 32,  RO, PCIE_0_RC_TL, TL_SMLOGIC_ST)
BCHP_REGISTER(0x20460a00, 32,  RO, PCIE_0_RC_TL, PCIE_PM_DEBUG_REGISTERS)
BCHP_REGISTER(0x20460a04, 32,  RO, PCIE_0_RC_TL, UNUSED_OA2)
BCHP_REGISTER(0x20460a08, 32,  RO, PCIE_0_RC_TL, TL_RST_DEBUG)
BCHP_REGISTER(0x20460a10, 32,  RW, PCIE_0_RC_TL, TL_FCIMM_NP_LIMIT)
BCHP_REGISTER(0x20460a14, 32,  RW, PCIE_0_RC_TL, TL_FCIMM_P_LIMIT)
BCHP_REGISTER(0x20460a18, 32,  RW, PCIE_0_RC_TL, TL_FCIMM_TIMEOUT_ENA)
BCHP_REGISTER(0x20460a1c, 32,  RW, PCIE_0_RC_TL, REG_CAPENA_FN0_MASK)
BCHP_REGISTER(0x20460a50, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_TX_CTL)
BCHP_REGISTER(0x20460a54, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_TX_TYPE)
BCHP_REGISTER(0x20460a58, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_TX_MASK)
BCHP_REGISTER(0x20460a5c, 32,  RO, PCIE_0_RC_TL, PCIER_TL_STAT_TX_CTR)
BCHP_REGISTER(0x20460a60, 32,  RO, PCIE_0_RC_TL, PCIER_TL_STAT_TX_CTR_HI)
BCHP_REGISTER(0x20460a64, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_RX_CTL)
BCHP_REGISTER(0x20460a68, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_RX_TYPE)
BCHP_REGISTER(0x20460a6c, 32,  RW, PCIE_0_RC_TL, PCIER_TL_STAT_RX_MASK)
BCHP_REGISTER(0x20460a70, 32,  RO, PCIE_0_RC_TL, PCIER_TL_STAT_RX_CTR)
BCHP_REGISTER(0x20460a74, 32,  RO, PCIE_0_RC_TL, PCIER_TL_STAT_RX_CTR_HI)
BCHP_REGISTER(0x20461000, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_0)
BCHP_REGISTER(0x20461004, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_1)
BCHP_REGISTER(0x20461008, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_2)
BCHP_REGISTER(0x2046100c, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_3)
BCHP_REGISTER(0x20461010, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_4)
BCHP_REGISTER(0x20461014, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_5)
BCHP_REGISTER(0x20461028, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_10)
BCHP_REGISTER(0x2046102c, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_11)
BCHP_REGISTER(0x20461030, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_12)
BCHP_REGISTER(0x20461034, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_13)
BCHP_REGISTER(0x20461038, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_14)
BCHP_REGISTER(0x2046103c, 32,  RW, PCIE_0_RC_DL, PDL_CONTROL_15)
BCHP_REGISTER(0x20461040, 32,  RW, PCIE_0_RC_DL, DLATTN_VEC)
BCHP_REGISTER(0x20461044, 32,  RW, PCIE_0_RC_DL, DL_ATTN_MASK)
BCHP_REGISTER(0x20461048, 32,  RO, PCIE_0_RC_DL, DL_STATUS)
BCHP_REGISTER(0x2046104c, 32,  RO, PCIE_0_RC_DL, DL_TX_CHECKSUM)
BCHP_REGISTER(0x20461050, 32,  RW, PCIE_0_RC_DL, DL_FORCED_UPDATE_GEN1)
BCHP_REGISTER(0x20461054, 32,  RW, PCIE_0_RC_DL, REG_DL_SPARE0)
BCHP_REGISTER(0x20461060, 32,  RW, PCIE_0_RC_DL, DL_FC_LIMIT_TMR)
BCHP_REGISTER(0x20461100, 32,  RW, PCIE_0_RC_DL, MDIO_ADDR)
BCHP_REGISTER(0x20461104, 32,  RW, PCIE_0_RC_DL, MDIO_WR_DATA)
BCHP_REGISTER(0x20461108, 32,  RO, PCIE_0_RC_DL, MDIO_RD_DATA)
BCHP_REGISTER(0x2046110c, 32,  RW, PCIE_0_RC_DL, ATE_TLP_HDR_0)
BCHP_REGISTER(0x20461110, 32,  RW, PCIE_0_RC_DL, ATE_TLP_HDR_1)
BCHP_REGISTER(0x20461114, 32,  RW, PCIE_0_RC_DL, ATE_TLP_HDR_2)
BCHP_REGISTER(0x20461118, 32,  RW, PCIE_0_RC_DL, ATE_TLP_HDR_3)
BCHP_REGISTER(0x2046111c, 32,  RW, PCIE_0_RC_DL, ATE_TLP_CFG)
BCHP_REGISTER(0x20461120, 32,  RW, PCIE_0_RC_DL, ATE_TLP_CTL)
BCHP_REGISTER(0x20461400, 32,  RO, PCIE_0_RC_DL, DL_RX_P_FC_CL)
BCHP_REGISTER(0x20461404, 32,  RO, PCIE_0_RC_DL, DL_RX_C_FC_CL)
BCHP_REGISTER(0x20461408, 32,  RO, PCIE_0_RC_DL, DL_RX_ACK_NACK)
BCHP_REGISTER(0x2046140c, 32,  RO, PCIE_0_RC_DL, DL_REG_SPARE0)
BCHP_REGISTER(0x20461410, 32,  RO, PCIE_0_RC_DL, DL_TX_P_FC_AL)
BCHP_REGISTER(0x20461414, 32,  RO, PCIE_0_RC_DL, DL_TX_NP_FC_AL)
BCHP_REGISTER(0x20461418, 32,  RO, PCIE_0_RC_DL, REG_DL_SPARE)
BCHP_REGISTER(0x2046141c, 32,  RO, PCIE_0_RC_DL, DL_REG_SPARE)
BCHP_REGISTER(0x20461420, 32,  RO, PCIE_0_RC_DL, DL_TX_RX_SEQ)
BCHP_REGISTER(0x20461424, 32,  RO, PCIE_0_RC_DL, DL_RX_NP_FC_CL)
BCHP_REGISTER(0x20461800, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_0)
BCHP_REGISTER(0x20461804, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_1)
BCHP_REGISTER(0x20461808, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_2)
BCHP_REGISTER(0x2046180c, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_3)
BCHP_REGISTER(0x20461810, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_4)
BCHP_REGISTER(0x20461814, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_5)
BCHP_REGISTER(0x20461818, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_6)
BCHP_REGISTER(0x2046181c, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_7)
BCHP_REGISTER(0x20461820, 32,  RW, PCIE_0_RC_PL, PHY_ERR_ATTN_VEC)
BCHP_REGISTER(0x20461824, 32,  RW, PCIE_0_RC_PL, PHY_ERR_ATTN_MASK)
BCHP_REGISTER(0x20461830, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_8)
BCHP_REGISTER(0x2046184c, 32,  RW, PCIE_0_RC_PL, REG_PHY_CTL_15)
BCHP_REGISTER(0x204618e0, 32,  RW, PCIE_0_RC_PL, REG_CPM_CTL_0)
BCHP_REGISTER(0x20461900, 32,  RW, PCIE_0_RC_PL, PL_LPBK_MASTER_CTL0)
BCHP_REGISTER(0x20461904, 32,  RW, PCIE_0_RC_PL, PL_LPBK_MASTER_CTL1)
BCHP_REGISTER(0x20461908, 32,  RO, PCIE_0_RC_PL, PL_LPBK_MASTER_STAT)
BCHP_REGISTER(0x2046190c, 32,  RW, PCIE_0_RC_PL, PL_LPBK_MASTER_SLAVE_SETTING)
BCHP_REGISTER(0x20461910, 32,  RW, PCIE_0_RC_PL, PL_LPBK_MASTER_TX_SETTING)
BCHP_REGISTER(0x20461914, 32,  RW, PCIE_0_RC_PL, PL_LPBK_MASTER_LN_ERRS)
BCHP_REGISTER(0x20461940, 32,  RW, PCIE_0_RC_PL, PCIE_STATIS_CTL)
BCHP_REGISTER(0x20461944, 32,  RO, PCIE_0_RC_PL, PCIE_TXTLP_STATIS_LO)
BCHP_REGISTER(0x20461948, 32,  RO, PCIE_0_RC_PL, PCIE_TXTLP_STATIS_HI)
BCHP_REGISTER(0x2046194c, 32,  RO, PCIE_0_RC_PL, PCIE_TXDLLP_STATIS_LO)
BCHP_REGISTER(0x20461950, 32,  RO, PCIE_0_RC_PL, PCIE_TXDLLP_STATIS_HI)
BCHP_REGISTER(0x20461954, 32,  RO, PCIE_0_RC_PL, PCIE_TXOS_STATIS_LO)
BCHP_REGISTER(0x20461958, 32,  RO, PCIE_0_RC_PL, PCIE_TXOS_STATIS_HI)
BCHP_REGISTER(0x2046195c, 32,  RO, PCIE_0_RC_PL, PCIE_RXTLP_STATIS_LO)
BCHP_REGISTER(0x20461960, 32,  RO, PCIE_0_RC_PL, PCIE_RXTLP_STATIS_HI)
BCHP_REGISTER(0x20461964, 32,  RO, PCIE_0_RC_PL, PCIE_RXDLLP_STATIS_LO)
BCHP_REGISTER(0x20461968, 32,  RO, PCIE_0_RC_PL, PCIE_RXDLLP_STATIS_HI)
BCHP_REGISTER(0x2046196c, 32,  RO, PCIE_0_RC_PL, PCIE_RXOS_STATIS_LO)
BCHP_REGISTER(0x20461970, 32,  RO, PCIE_0_RC_PL, PCIE_RXOS_STATIS_HI)
BCHP_REGISTER(0x20461974, 32,  RO, PCIE_0_RC_PL, PCIE_PLRXERR_STATIS)
BCHP_REGISTER(0x20461978, 32,  RO, PCIE_0_RC_PL, PCIE_RXDLLPERR_STATIS)
BCHP_REGISTER(0x2046197c, 32,  RO, PCIE_0_RC_PL, PCIE_RXTLPERR_STATIS)
BCHP_REGISTER(0x204619a0, 32,  RW, PCIE_0_RC_PL, LTSSM_STATIS_CTL)
BCHP_REGISTER(0x204619a4, 32,  RO, PCIE_0_RC_PL, LTSSM_STATIS_0)
BCHP_REGISTER(0x204619a8, 32,  RO, PCIE_0_RC_PL, LTSSM_STATIS_1)
BCHP_REGISTER(0x204619ac, 32,  RO, PCIE_0_RC_PL, LTSSM_STATIS_2)
BCHP_REGISTER(0x204619b0, 32,  RO, PCIE_0_RC_PL, LTSSM_STATIS_3)
BCHP_REGISTER(0x204619b4, 32,  RO, PCIE_0_RC_PL, LTSSM_STATIS_CNT)
BCHP_REGISTER(0x20461c00, 32,  RO, PCIE_0_RC_PL, RECEIVED_MCP_ERRORS)
BCHP_REGISTER(0x20461c10, 32,  RO, PCIE_0_RC_PL, TRANSMITTED_MCP_ERRORS)
BCHP_REGISTER(0x20461c20, 32,  RO, PCIE_0_RC_PL, RX_FTS_LIMIT)
BCHP_REGISTER(0x20461c24, 32,  RW, PCIE_0_RC_PL, LINK_STATE_DEBUG)
BCHP_REGISTER(0x20461cd8, 32,  RO, PCIE_0_RC_PL, FTS_HIST)
BCHP_REGISTER(0x20461cdc, 32,  RO, PCIE_0_RC_PL, GEN2_DEBUG)
BCHP_REGISTER(0x20461ce4, 32,  RO, PCIE_0_RC_PL, RECOVERY_HIST)
BCHP_REGISTER(0x20461cec, 32,  RO, PCIE_0_RC_PL, PHY_LTSSM_HIST_0)
BCHP_REGISTER(0x20461cf0, 32,  RO, PCIE_0_RC_PL, PHY_LTSSM_HIST_1)
BCHP_REGISTER(0x20461cf4, 32,  RO, PCIE_0_RC_PL, PHY_LTSSM_HIST_2)
BCHP_REGISTER(0x20461cf8, 32,  RO, PCIE_0_RC_PL, PHY_LTSSM_HIST_3)
BCHP_REGISTER(0x20461cfc, 32,  RO, PCIE_0_RC_PL, PHY_LTSSM_HIST_2_DUP)
BCHP_REGISTER(0x20461d00, 32,  RO, PCIE_0_RC_PL, PHY_DBG_0)
BCHP_REGISTER(0x20461d04, 32,  RO, PCIE_0_RC_PL, PHY_DBG_1)
BCHP_REGISTER(0x20461d08, 32,  RO, PCIE_0_RC_PL, PHY_DBG_2)
BCHP_REGISTER(0x20461d0c, 32,  RO, PCIE_0_RC_PL, PHY_DBG_3)
BCHP_REGISTER(0x20461d10, 32,  RO, PCIE_0_RC_PL, PHY_DBG_4)
BCHP_REGISTER(0x20461d14, 32,  RO, PCIE_0_RC_PL, PHY_DBG_5)
BCHP_REGISTER(0x20461d18, 32,  RO, PCIE_0_RC_PL, PHY_DBG_6)
BCHP_REGISTER(0x20461d1c, 32,  RO, PCIE_0_RC_PL, PHY_DBG_7)
BCHP_REGISTER(0x20461d20, 32,  RO, PCIE_0_RC_PL, PHY_DBG_8)
BCHP_REGISTER(0x20461d24, 32,  RO, PCIE_0_RC_PL, PHY_DBG_9)
BCHP_REGISTER(0x20461d28, 32,  RO, PCIE_0_RC_PL, PHY_DBG_10)
BCHP_REGISTER(0x20461d30, 32,  RO, PCIE_0_RC_PL, ATE_LOOPBACK_INFO)
BCHP_REGISTER(0x20461e10, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ_0)
BCHP_REGISTER(0x20461e14, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ_1)
BCHP_REGISTER(0x20461e18, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ_2)
BCHP_REGISTER(0x20461e1c, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ_3)
BCHP_REGISTER(0x20461e30, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ2_0)
BCHP_REGISTER(0x20461e34, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ2_1)
BCHP_REGISTER(0x20461e38, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ2_2)
BCHP_REGISTER(0x20461e3c, 32,  RO, PCIE_0_RC_PL, PHY_DBG_CLKREQ2_3)
BCHP_REGISTER(0x20461ffc, 32,  RO, PCIE_0_RC_PL, BUILD_TAG)
BCHP_REGISTER(0x20462000, 32,  RO, PCIE_0_EP_CFG_TYPE0, DEVICE_VENDOR_ID)
BCHP_REGISTER(0x20462004, 32,  RW, PCIE_0_EP_CFG_TYPE0, STATUS_COMMAND)
BCHP_REGISTER(0x20462008, 32,  RO, PCIE_0_EP_CFG_TYPE0, REV_ID_CLASS_CODE)
BCHP_REGISTER(0x2046200c, 32,  RW, PCIE_0_EP_CFG_TYPE0, HEADERTYPE_LAT_CACHELINESIZE)
BCHP_REGISTER(0x20462010, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_1)
BCHP_REGISTER(0x20462014, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_2)
BCHP_REGISTER(0x20462018, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_3)
BCHP_REGISTER(0x2046201c, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_4)
BCHP_REGISTER(0x20462020, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_5)
BCHP_REGISTER(0x20462024, 32,  RW, PCIE_0_EP_CFG_TYPE0, BAR_6)
BCHP_REGISTER(0x20462028, 32,  RO, PCIE_0_EP_CFG_TYPE0, CARDBUS_CIS)
BCHP_REGISTER(0x2046202c, 32,  RO, PCIE_0_EP_CFG_TYPE0, SUBSYSTEM_ID_VENDOR_ID)
BCHP_REGISTER(0x20462030, 32,  RW, PCIE_0_EP_CFG_TYPE0, EXP_ROM_BAR)
BCHP_REGISTER(0x20462034, 32,  RO, PCIE_0_EP_CFG_TYPE0, CAP_POINTER)
BCHP_REGISTER(0x20462038, 32,  RO, PCIE_0_EP_CFG_TYPE0, RESERVED)
BCHP_REGISTER(0x2046203c, 32,  RW, PCIE_0_EP_CFG_TYPE0, LAT_MIN_GRANT_INT_PIN_INT_LINE)
BCHP_REGISTER(0x20462048, 32,  RO, PCIE_0_EP_CFG_PM, PM_CAP)
BCHP_REGISTER(0x2046204c, 32,  RW, PCIE_0_EP_CFG_PM, PM_CSR)
BCHP_REGISTER(0x20462050, 32,  RW, PCIE_0_EP_CFG_VPD, VPD_CAP)
BCHP_REGISTER(0x20462054, 32,  RW, PCIE_0_EP_CFG_VPD, VPD_DATA)
BCHP_REGISTER(0x20462058, 32,  RW, PCIE_0_EP_CFG_MSI, MSI_CAP)
BCHP_REGISTER(0x2046205c, 32,  RW, PCIE_0_EP_CFG_MSI, MSI_ADDR_L)
BCHP_REGISTER(0x20462060, 32,  RW, PCIE_0_EP_CFG_MSI, MSI_ADDR_H)
BCHP_REGISTER(0x20462064, 32,  RW, PCIE_0_EP_CFG_MSI, MSI_DATA)
BCHP_REGISTER(0x204620a0, 32,  RW, PCIE_0_EP_CFG_MSIX, MSIX_CAP)
BCHP_REGISTER(0x204620a4, 32,  RO, PCIE_0_EP_CFG_MSIX, MSIX_TBL_OFF_BIR)
BCHP_REGISTER(0x204620a8, 32,  RO, PCIE_0_EP_CFG_MSIX, MSIX_PBA_BIR_OFF)
BCHP_REGISTER(0x204620ac, 32,  RO, PCIE_0_EP_CFG_PCIE, PCIE_CAPABILITY)
BCHP_REGISTER(0x204620b0, 32,  RO, PCIE_0_EP_CFG_PCIE, DEVICE_CAPABILITY)
BCHP_REGISTER(0x204620b4, 32,  RW, PCIE_0_EP_CFG_PCIE, DEVICE_STATUS_CONTROL)
BCHP_REGISTER(0x204620b8, 32,  RO, PCIE_0_EP_CFG_PCIE, LINK_CAPABILITY)
BCHP_REGISTER(0x204620bc, 32,  RW, PCIE_0_EP_CFG_PCIE, LINK_STATUS_CONTROL)
BCHP_REGISTER(0x204620c0, 32,  RO, PCIE_0_EP_CFG_PCIE, SLOT_CAPABILITY)
BCHP_REGISTER(0x204620c4, 32,  RO, PCIE_0_EP_CFG_PCIE, SLOT_CONTROL_STATUS)
BCHP_REGISTER(0x204620c8, 32,  RO, PCIE_0_EP_CFG_PCIE, ROOT_CAP_CONTROL)
BCHP_REGISTER(0x204620cc, 32,  RO, PCIE_0_EP_CFG_PCIE, ROOT_STATUS)
BCHP_REGISTER(0x204620d0, 32,  RO, PCIE_0_EP_CFG_PCIE, DEVICE_CAPABILITY_2)
BCHP_REGISTER(0x204620d4, 32,  RW, PCIE_0_EP_CFG_PCIE, DEVICE_STATUS_CONTROL_2)
BCHP_REGISTER(0x204620d8, 32,  RO, PCIE_0_EP_CFG_PCIE, LINK_CAPABILITY_2)
BCHP_REGISTER(0x204620dc, 32,  RW, PCIE_0_EP_CFG_PCIE, LINK_STATUS_CONTROL_2)
BCHP_REGISTER(0x204620e0, 32,  RO, PCIE_0_EP_CFG_PCIE, SLOT_CAPABILITY_2)
BCHP_REGISTER(0x204620e4, 32,  RO, PCIE_0_EP_CFG_PCIE, SLOT_STATUS_CONTROL_2)
BCHP_REGISTER(0x20462100, 32,  RO, PCIE_0_EP_CFG_AER, ADV_ERR_CAP)
BCHP_REGISTER(0x20462104, 32,  RW, PCIE_0_EP_CFG_AER, UC_ERR_STATUS)
BCHP_REGISTER(0x20462108, 32,  RW, PCIE_0_EP_CFG_AER, UCORR_ERR_MASK)
BCHP_REGISTER(0x2046210c, 32,  RW, PCIE_0_EP_CFG_AER, UCORR_ERR_SEVR)
BCHP_REGISTER(0x20462110, 32,  RW, PCIE_0_EP_CFG_AER, CORR_ERR_STATUS)
BCHP_REGISTER(0x20462114, 32,  RW, PCIE_0_EP_CFG_AER, CORR_ERR_MASK)
BCHP_REGISTER(0x20462118, 32,  RW, PCIE_0_EP_CFG_AER, ADV_ERR_CAP_CONTROL)
BCHP_REGISTER(0x2046211c, 32,  RO, PCIE_0_EP_CFG_AER, HEADER_LOG1)
BCHP_REGISTER(0x20462120, 32,  RO, PCIE_0_EP_CFG_AER, HEADER_LOG2)
BCHP_REGISTER(0x20462124, 32,  RO, PCIE_0_EP_CFG_AER, HEADER_LOG3)
BCHP_REGISTER(0x20462128, 32,  RO, PCIE_0_EP_CFG_AER, HEADER_LOG4)
BCHP_REGISTER(0x2046212c, 32,  RO, PCIE_0_EP_CFG_AER, ROOT_ERROR_COMMAND)
BCHP_REGISTER(0x20462130, 32,  RO, PCIE_0_EP_CFG_AER, ROOT_ERROR_STATUS)
BCHP_REGISTER(0x20462134, 32,  RO, PCIE_0_EP_CFG_AER, ROOT_ERR_ID)
BCHP_REGISTER(0x2046213c, 32,  RO, PCIE_0_EP_CFG_DEV, DEVICE_SER_NUM_CAP)
BCHP_REGISTER(0x20462140, 32,  RO, PCIE_0_EP_CFG_DEV, LOWER_SER_NUM)
BCHP_REGISTER(0x20462144, 32,  RO, PCIE_0_EP_CFG_DEV, UPPER_SER_NUM)
BCHP_REGISTER(0x20462150, 32,  RO, PCIE_0_EP_CFG_PB, PWR_BDGT_CAP)
BCHP_REGISTER(0x20462154, 32,  RW, PCIE_0_EP_CFG_PB, PWR_BDGT_DATA_SEL)
BCHP_REGISTER(0x20462158, 32,  RO, PCIE_0_EP_CFG_PB, PWR_BDGT_DATA)
BCHP_REGISTER(0x2046215c, 32,  RO, PCIE_0_EP_CFG_PB, PWR_BDGT_CAPABILITY)
BCHP_REGISTER(0x20462160, 32,  RO, PCIE_0_EP_CFG_VC, VC_CAP)
BCHP_REGISTER(0x20462164, 32,  RO, PCIE_0_EP_CFG_VC, PORT_VC_CAPABILITY)
BCHP_REGISTER(0x20462168, 32,  RO, PCIE_0_EP_CFG_VC, PORT_VC_CAPABILITY2)
BCHP_REGISTER(0x2046216c, 32,  RO, PCIE_0_EP_CFG_VC, PORT_VC_STATUS_CONTROL)
BCHP_REGISTER(0x20462170, 32,  RO, PCIE_0_EP_CFG_VC, PORT_ARB_TABLE)
BCHP_REGISTER(0x20462174, 32,  RW, PCIE_0_EP_CFG_VC, VC_RSRC_CONTROL)
BCHP_REGISTER(0x20462178, 32,  RO, PCIE_0_EP_CFG_VC, VC_RSRC_STATUS)
BCHP_REGISTER(0x20462180, 32,  RO, PCIE_0_EP_CFG_VENDOR, VENDOR_CAP)
BCHP_REGISTER(0x20462184, 32,  RO, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_HEADER)
BCHP_REGISTER(0x20462188, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG1)
BCHP_REGISTER(0x2046218c, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG2)
BCHP_REGISTER(0x20462190, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG3)
BCHP_REGISTER(0x20462194, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG4)
BCHP_REGISTER(0x20462198, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG5)
BCHP_REGISTER(0x2046219c, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG6)
BCHP_REGISTER(0x204621a0, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG7)
BCHP_REGISTER(0x204621a4, 32,  RW, PCIE_0_EP_CFG_VENDOR, VENDOR_SPECIFIC_REG8)
BCHP_REGISTER(0x204621b0, 32,  RO, PCIE_0_EP_CFG_LTR, LTR_CAP)
BCHP_REGISTER(0x204621b4, 32,  RW, PCIE_0_EP_CFG_LTR, LATENCY_REGISTER)
BCHP_REGISTER(0x20462240, 32,  RO, PCIE_0_EP_CFG_L1SUB, PML1SUB_CAPID)
BCHP_REGISTER(0x20462244, 32,  RO, PCIE_0_EP_CFG_L1SUB, PML1_SUB_CAP_REG)
BCHP_REGISTER(0x20462248, 32,  RW, PCIE_0_EP_CFG_L1SUB, PML1_SUB_CONTROL1)
BCHP_REGISTER(0x2046224c, 32,  RW, PCIE_0_EP_CFG_L1SUB, PML1_SUB_CONTROL2)
BCHP_REGISTER(0x20462404, 32,  RO, PCIE_0_EP_CFG_PRIV0, UNUSED_F)
BCHP_REGISTER(0x20462408, 32,  RW, PCIE_0_EP_CFG_PRIV0, CONFIG_2)
BCHP_REGISTER(0x2046240c, 32,  RW, PCIE_0_EP_CFG_PRIV0, CONFIG_3)
BCHP_REGISTER(0x20462410, 32,  RW, PCIE_0_EP_CFG_PRIV0, PM_DATA_A)
BCHP_REGISTER(0x20462414, 32,  RW, PCIE_0_EP_CFG_PRIV0, PM_DATA_B)
BCHP_REGISTER(0x20462418, 32,  RW, PCIE_0_EP_CFG_PRIV0, PCI_EXTENDED_BAR_SIZE)
BCHP_REGISTER(0x20462428, 32,  RO, PCIE_0_EP_CFG_PRIV1, VPD_INTF)
BCHP_REGISTER(0x2046242c, 32,  RO, PCIE_0_EP_CFG_PRIV1, VPD_ADDR_FLAG)
BCHP_REGISTER(0x20462430, 32,  RW, PCIE_0_EP_CFG_PRIV1, VPD_DATA)
BCHP_REGISTER(0x20462434, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL1)
BCHP_REGISTER(0x20462438, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL2)
BCHP_REGISTER(0x2046243c, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL3)
BCHP_REGISTER(0x20462440, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL4)
BCHP_REGISTER(0x20462444, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL5)
BCHP_REGISTER(0x20462448, 32,  RO, PCIE_0_EP_CFG_PRIV1, UNUSED_H)
BCHP_REGISTER(0x2046244c, 32,  RW, PCIE_0_EP_CFG_PRIV1, ID_VAL6)
BCHP_REGISTER(0x20462450, 32,  RO, PCIE_0_EP_CFG_PRIV1, MSI_DATA)
BCHP_REGISTER(0x20462454, 32,  RO, PCIE_0_EP_CFG_PRIV1, MSI_ADDR_H)
BCHP_REGISTER(0x20462458, 32,  RO, PCIE_0_EP_CFG_PRIV1, MSI_ADDR_L)
BCHP_REGISTER(0x20462464, 32,  RO, PCIE_0_EP_CFG_PRIV1, MSI_MASK)
BCHP_REGISTER(0x20462468, 32,  RW, PCIE_0_EP_CFG_PRIV1, MSI_PEND)
BCHP_REGISTER(0x2046246c, 32,  RW, PCIE_0_EP_CFG_PRIV1, PM_DATA_C)
BCHP_REGISTER(0x204624c0, 32,  RW, PCIE_0_EP_CFG_PRIV1, MSIX_CONTROL)
BCHP_REGISTER(0x204624c4, 32,  RW, PCIE_0_EP_CFG_PRIV1, MSIX_TBL_OFF_BIR)
BCHP_REGISTER(0x204624c8, 32,  RW, PCIE_0_EP_CFG_PRIV1, MSIX_PBA_OFF_BIR)
BCHP_REGISTER(0x204624cc, 32,  RO, PCIE_0_EP_CFG_PRIV1, UNUSED_K)
BCHP_REGISTER(0x204624d0, 32,  RW, PCIE_0_EP_CFG_PRIV1, PCIE_CAPABILITY)
BCHP_REGISTER(0x204624d4, 32,  RW, PCIE_0_EP_CFG_PRIV1, DEVICE_CAPABILITY)
BCHP_REGISTER(0x204624d8, 32,  RO, PCIE_0_EP_CFG_PRIV1, DEVICE_CONTROL)
BCHP_REGISTER(0x204624dc, 32,  RW, PCIE_0_EP_CFG_PRIV1, LINK_CAPABILITY)
BCHP_REGISTER(0x204624e0, 32,  RW, PCIE_0_EP_CFG_PRIV1, BAR2_CONFIG)
BCHP_REGISTER(0x204624e4, 32,  RW, PCIE_0_EP_CFG_PRIV1, PCIE_DEVICE_CAPABILITY_2)
BCHP_REGISTER(0x204624e8, 32,  RW, PCIE_0_EP_CFG_PRIV1, PCIE_LINK_CAPABILITY_2)
BCHP_REGISTER(0x204624ec, 32,  RO, PCIE_0_EP_CFG_PRIV1, PCIE_LINK_CONTROL)
BCHP_REGISTER(0x204624f0, 32,  RW, PCIE_0_EP_CFG_PRIV1, PCIE_LINK_CAPABILITY_RC)
BCHP_REGISTER(0x204624f4, 32,  RW, PCIE_0_EP_CFG_PRIV1, BAR3_CONFIG)
BCHP_REGISTER(0x204624f8, 32,  RW, PCIE_0_EP_CFG_PRIV1, ROOT_CAP)
BCHP_REGISTER(0x204624fc, 32,  RW, PCIE_0_EP_CFG_PRIV1, ROOT_CONTROL)
BCHP_REGISTER(0x20462500, 32,  RW, PCIE_0_EP_CFG_PRIV1, DEV_SER_NUM_CAP_ID)
BCHP_REGISTER(0x20462504, 32,  RW, PCIE_0_EP_CFG_PRIV1, LOWER_SER_NUM)
BCHP_REGISTER(0x20462508, 32,  RW, PCIE_0_EP_CFG_PRIV1, UPPER_SER_NUM)
BCHP_REGISTER(0x2046250c, 32,  RW, PCIE_0_EP_CFG_PRIV1, ADV_ERR_CAP)
BCHP_REGISTER(0x20462510, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_0)
BCHP_REGISTER(0x20462514, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_1)
BCHP_REGISTER(0x20462518, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_2)
BCHP_REGISTER(0x2046251c, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_3)
BCHP_REGISTER(0x20462520, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_4)
BCHP_REGISTER(0x20462524, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_5)
BCHP_REGISTER(0x20462528, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_6)
BCHP_REGISTER(0x2046252c, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_7)
BCHP_REGISTER(0x20462530, 32,  RW, PCIE_0_EP_CFG_PRIV1, EXT2_CAP_ADDR)
BCHP_REGISTER(0x20462534, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_DATA_8)
BCHP_REGISTER(0x20462540, 32,  RW, PCIE_0_EP_CFG_PRIV1, L1SUB_CAP)
BCHP_REGISTER(0x20462544, 32,  RW, PCIE_0_EP_CFG_PRIV1, L1SUB_EXT_CAP)
BCHP_REGISTER(0x20462550, 32,  RW, PCIE_0_EP_CFG_PRIV1, PWR_BDGT_CAPABILITY)
BCHP_REGISTER(0x20462554, 32,  RW, PCIE_0_EP_CFG_PRIV1, VSEC_HDR)
BCHP_REGISTER(0x20462558, 32,  RO, PCIE_0_EP_CFG_PRIV1, RC_USER_MEM_LO1)
BCHP_REGISTER(0x2046255c, 32,  RO, PCIE_0_EP_CFG_PRIV1, RC_USER_MEM_HI1)
BCHP_REGISTER(0x20462560, 32,  RO, PCIE_0_EP_CFG_PRIV1, RC_USER_MEM_LO2)
BCHP_REGISTER(0x20462564, 32,  RO, PCIE_0_EP_CFG_PRIV1, RC_USER_MEM_HI2)
BCHP_REGISTER(0x204625f4, 32,  RW, PCIE_0_EP_CFG_PRIV1, TPH_CAP)
BCHP_REGISTER(0x204625f8, 32,  RW, PCIE_0_EP_CFG_PRIV1, RESIZEBAR_CAP)
BCHP_REGISTER(0x204625fc, 32,  RW, PCIE_0_EP_CFG_PRIV1, ARI_CAP)
BCHP_REGISTER(0x20462600, 32,  RO, PCIE_0_EP_CFG_PRIV1, INITVF)
BCHP_REGISTER(0x20462604, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_OFFSET)
BCHP_REGISTER(0x20462608, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_BAR_REG)
BCHP_REGISTER(0x2046260c, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_SUPP_PAGE_SIZE)
BCHP_REGISTER(0x20462610, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_CAP_EN)
BCHP_REGISTER(0x20462614, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_MSIX_TBL_BIR_OFF)
BCHP_REGISTER(0x20462618, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_MSIX_PBA_OFF_BIR)
BCHP_REGISTER(0x2046261c, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_MSIX_CONTROL)
BCHP_REGISTER(0x20462620, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_BAR4_REG)
BCHP_REGISTER(0x20462624, 32,  RW, PCIE_0_EP_CFG_PRIV1, PF_INITVF)
BCHP_REGISTER(0x20462628, 32,  RO, PCIE_0_EP_CFG_PRIV1, VF_NSP)
BCHP_REGISTER(0x20462630, 32,  RO, PCIE_0_EP_CFG_PRIV1, ATS_INLD_QUEUE_DEPTH)
BCHP_REGISTER(0x20462800, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_0)
BCHP_REGISTER(0x20462804, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_1)
BCHP_REGISTER(0x20462808, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_2)
BCHP_REGISTER(0x2046280c, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_3)
BCHP_REGISTER(0x20462810, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_4)
BCHP_REGISTER(0x20462814, 32,  RW, PCIE_0_EP_TL, TL_CONTROL_5)
BCHP_REGISTER(0x20462818, 32,  RW, PCIE_0_EP_TL, L1_CTRL1)
BCHP_REGISTER(0x2046281c, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_2)
BCHP_REGISTER(0x20462820, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_3)
BCHP_REGISTER(0x20462824, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_4)
BCHP_REGISTER(0x20462828, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_5)
BCHP_REGISTER(0x2046282c, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_6)
BCHP_REGISTER(0x20462830, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_7)
BCHP_REGISTER(0x20462834, 32,  RW, PCIE_0_EP_TL, USER_CONTROL_8)
BCHP_REGISTER(0x20462838, 32,  RW, PCIE_0_EP_TL, CRS_CLEAR_TIMER)
BCHP_REGISTER(0x20462840, 32,  RW, PCIE_0_EP_TL, SW_LTR_VAL)
BCHP_REGISTER(0x20462844, 32,  RW, PCIE_0_EP_TL, LTR0_REG)
BCHP_REGISTER(0x20462848, 32,  RW, PCIE_0_EP_TL, LTR1_REG)
BCHP_REGISTER(0x2046284c, 32,  RW, PCIE_0_EP_TL, LTR2_REG)
BCHP_REGISTER(0x20462850, 32,  RW, PCIE_0_EP_TL, TL_FUNC345_MASK)
BCHP_REGISTER(0x20462854, 32,  RO, PCIE_0_EP_TL, TL_FUNC345_STAT)
BCHP_REGISTER(0x20462858, 32,  RW, PCIE_0_EP_TL, TL_FUNC678_MASK)
BCHP_REGISTER(0x2046285c, 32,  RO, PCIE_0_EP_TL, TL_FUNC678_STAT)
BCHP_REGISTER(0x20462860, 32,  RW, PCIE_0_EP_TL, FUNC_INT_SEL)
BCHP_REGISTER(0x20462870, 32,  RW, PCIE_0_EP_TL, TL_OBFF_CTRL)
BCHP_REGISTER(0x20462874, 32,  RW, PCIE_0_EP_TL, TL_CTLSTAT_0)
BCHP_REGISTER(0x20462878, 32,  RO, PCIE_0_EP_TL, PM_STATUS_0)
BCHP_REGISTER(0x2046287c, 32,  RO, PCIE_0_EP_TL, PM_STATUS_1)
BCHP_REGISTER(0x20462900, 32,  RO, PCIE_0_EP_TL, TL_STATUS_0)
BCHP_REGISTER(0x20462904, 32,  RO, PCIE_0_EP_TL, TL_STATUS_1)
BCHP_REGISTER(0x20462908, 32,  RO, PCIE_0_EP_TL, TL_STATUS_2)
BCHP_REGISTER(0x2046290c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_3)
BCHP_REGISTER(0x20462910, 32,  RO, PCIE_0_EP_TL, TL_STATUS_4)
BCHP_REGISTER(0x20462914, 32,  RO, PCIE_0_EP_TL, TL_STATUS_5)
BCHP_REGISTER(0x20462918, 32,  RO, PCIE_0_EP_TL, TL_STATUS_6)
BCHP_REGISTER(0x2046291c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_7)
BCHP_REGISTER(0x20462920, 32,  RO, PCIE_0_EP_TL, TL_STATUS_8)
BCHP_REGISTER(0x20462924, 32,  RO, PCIE_0_EP_TL, TL_STATUS_9)
BCHP_REGISTER(0x20462928, 32,  RO, PCIE_0_EP_TL, TL_STATUS_10)
BCHP_REGISTER(0x2046292c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_11)
BCHP_REGISTER(0x20462930, 32,  RO, PCIE_0_EP_TL, TL_STATUS_12)
BCHP_REGISTER(0x20462934, 32,  RO, PCIE_0_EP_TL, TL_STATUS_13)
BCHP_REGISTER(0x20462938, 32,  RO, PCIE_0_EP_TL, TL_STATUS_14)
BCHP_REGISTER(0x2046293c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_15)
BCHP_REGISTER(0x20462940, 32,  RO, PCIE_0_EP_TL, TL_STATUS_16)
BCHP_REGISTER(0x20462944, 32,  RO, PCIE_0_EP_TL, TL_STATUS_17)
BCHP_REGISTER(0x20462948, 32,  RO, PCIE_0_EP_TL, TL_STATUS_18)
BCHP_REGISTER(0x2046294c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_19)
BCHP_REGISTER(0x20462950, 32,  RO, PCIE_0_EP_TL, TL_STATUS_20)
BCHP_REGISTER(0x20462954, 32,  RO, PCIE_0_EP_TL, TL_STATUS_21)
BCHP_REGISTER(0x20462958, 32,  RO, PCIE_0_EP_TL, TL_STATUS_22)
BCHP_REGISTER(0x2046295c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_23)
BCHP_REGISTER(0x20462960, 32,  RO, PCIE_0_EP_TL, TL_STATUS_24)
BCHP_REGISTER(0x20462964, 32,  RO, PCIE_0_EP_TL, TL_STATUS_25)
BCHP_REGISTER(0x20462968, 32,  RO, PCIE_0_EP_TL, TL_STATUS_26)
BCHP_REGISTER(0x2046296c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_27)
BCHP_REGISTER(0x20462970, 32,  RO, PCIE_0_EP_TL, TL_STATUS_28)
BCHP_REGISTER(0x20462974, 32,  RO, PCIE_0_EP_TL, TL_STATUS_29)
BCHP_REGISTER(0x20462978, 32,  RO, PCIE_0_EP_TL, TL_STATUS_30)
BCHP_REGISTER(0x2046297c, 32,  RO, PCIE_0_EP_TL, TL_STATUS_31)
BCHP_REGISTER(0x20462980, 32,  RO, PCIE_0_EP_TL, TL_HDR_FC_ST)
BCHP_REGISTER(0x20462984, 32,  RO, PCIE_0_EP_TL, TL_DAT_FC_ST)
BCHP_REGISTER(0x20462988, 32,  RO, PCIE_0_EP_TL, TL_HDR_FCCON_ST)
BCHP_REGISTER(0x2046298c, 32,  RO, PCIE_0_EP_TL, TL_DAT_FCCON_ST)
BCHP_REGISTER(0x20462990, 32,  RO, PCIE_0_EP_TL, TL_TGT_CRDT_ST)
BCHP_REGISTER(0x20462994, 32,  RO, PCIE_0_EP_TL, TL_CRDT_ALLOC_ST)
BCHP_REGISTER(0x20462998, 32,  RO, PCIE_0_EP_TL, TL_SMLOGIC_ST)
BCHP_REGISTER(0x20462a00, 32,  RO, PCIE_0_EP_TL, PCIE_PM_DEBUG_REGISTERS)
BCHP_REGISTER(0x20462a04, 32,  RO, PCIE_0_EP_TL, UNUSED_OA2)
BCHP_REGISTER(0x20462a08, 32,  RO, PCIE_0_EP_TL, TL_RST_DEBUG)
BCHP_REGISTER(0x20462a10, 32,  RW, PCIE_0_EP_TL, TL_FCIMM_NP_LIMIT)
BCHP_REGISTER(0x20462a14, 32,  RW, PCIE_0_EP_TL, TL_FCIMM_P_LIMIT)
BCHP_REGISTER(0x20462a18, 32,  RW, PCIE_0_EP_TL, TL_FCIMM_TIMEOUT_ENA)
BCHP_REGISTER(0x20462a1c, 32,  RW, PCIE_0_EP_TL, REG_CAPENA_FN0_MASK)
BCHP_REGISTER(0x20462a50, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_TX_CTL)
BCHP_REGISTER(0x20462a54, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_TX_TYPE)
BCHP_REGISTER(0x20462a58, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_TX_MASK)
BCHP_REGISTER(0x20462a5c, 32,  RO, PCIE_0_EP_TL, PCIER_TL_STAT_TX_CTR)
BCHP_REGISTER(0x20462a60, 32,  RO, PCIE_0_EP_TL, PCIER_TL_STAT_TX_CTR_HI)
BCHP_REGISTER(0x20462a64, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_RX_CTL)
BCHP_REGISTER(0x20462a68, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_RX_TYPE)
BCHP_REGISTER(0x20462a6c, 32,  RW, PCIE_0_EP_TL, PCIER_TL_STAT_RX_MASK)
BCHP_REGISTER(0x20462a70, 32,  RO, PCIE_0_EP_TL, PCIER_TL_STAT_RX_CTR)
BCHP_REGISTER(0x20462a74, 32,  RO, PCIE_0_EP_TL, PCIER_TL_STAT_RX_CTR_HI)
BCHP_REGISTER(0x20463000, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_0)
BCHP_REGISTER(0x20463004, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_1)
BCHP_REGISTER(0x20463008, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_2)
BCHP_REGISTER(0x2046300c, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_3)
BCHP_REGISTER(0x20463010, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_4)
BCHP_REGISTER(0x20463014, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_5)
BCHP_REGISTER(0x20463028, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_10)
BCHP_REGISTER(0x2046302c, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_11)
BCHP_REGISTER(0x20463030, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_12)
BCHP_REGISTER(0x20463034, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_13)
BCHP_REGISTER(0x20463038, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_14)
BCHP_REGISTER(0x2046303c, 32,  RW, PCIE_0_EP_DL, PDL_CONTROL_15)
BCHP_REGISTER(0x20463040, 32,  RW, PCIE_0_EP_DL, DLATTN_VEC)
BCHP_REGISTER(0x20463044, 32,  RW, PCIE_0_EP_DL, DL_ATTN_MASK)
BCHP_REGISTER(0x20463048, 32,  RO, PCIE_0_EP_DL, DL_STATUS)
BCHP_REGISTER(0x2046304c, 32,  RO, PCIE_0_EP_DL, DL_TX_CHECKSUM)
BCHP_REGISTER(0x20463050, 32,  RW, PCIE_0_EP_DL, DL_FORCED_UPDATE_GEN1)
BCHP_REGISTER(0x20463054, 32,  RW, PCIE_0_EP_DL, REG_DL_SPARE0)
BCHP_REGISTER(0x20463060, 32,  RW, PCIE_0_EP_DL, DL_FC_LIMIT_TMR)
BCHP_REGISTER(0x20463100, 32,  RW, PCIE_0_EP_DL, MDIO_ADDR)
BCHP_REGISTER(0x20463104, 32,  RW, PCIE_0_EP_DL, MDIO_WR_DATA)
BCHP_REGISTER(0x20463108, 32,  RO, PCIE_0_EP_DL, MDIO_RD_DATA)
BCHP_REGISTER(0x2046310c, 32,  RW, PCIE_0_EP_DL, ATE_TLP_HDR_0)
BCHP_REGISTER(0x20463110, 32,  RW, PCIE_0_EP_DL, ATE_TLP_HDR_1)
BCHP_REGISTER(0x20463114, 32,  RW, PCIE_0_EP_DL, ATE_TLP_HDR_2)
BCHP_REGISTER(0x20463118, 32,  RW, PCIE_0_EP_DL, ATE_TLP_HDR_3)
BCHP_REGISTER(0x2046311c, 32,  RW, PCIE_0_EP_DL, ATE_TLP_CFG)
BCHP_REGISTER(0x20463120, 32,  RW, PCIE_0_EP_DL, ATE_TLP_CTL)
BCHP_REGISTER(0x20463400, 32,  RO, PCIE_0_EP_DL, DL_RX_P_FC_CL)
BCHP_REGISTER(0x20463404, 32,  RO, PCIE_0_EP_DL, DL_RX_C_FC_CL)
BCHP_REGISTER(0x20463408, 32,  RO, PCIE_0_EP_DL, DL_RX_ACK_NACK)
BCHP_REGISTER(0x2046340c, 32,  RO, PCIE_0_EP_DL, DL_REG_SPARE0)
BCHP_REGISTER(0x20463410, 32,  RO, PCIE_0_EP_DL, DL_TX_P_FC_AL)
BCHP_REGISTER(0x20463414, 32,  RO, PCIE_0_EP_DL, DL_TX_NP_FC_AL)
BCHP_REGISTER(0x20463418, 32,  RO, PCIE_0_EP_DL, REG_DL_SPARE)
BCHP_REGISTER(0x2046341c, 32,  RO, PCIE_0_EP_DL, DL_REG_SPARE)
BCHP_REGISTER(0x20463420, 32,  RO, PCIE_0_EP_DL, DL_TX_RX_SEQ)
BCHP_REGISTER(0x20463424, 32,  RO, PCIE_0_EP_DL, DL_RX_NP_FC_CL)
BCHP_REGISTER(0x20463800, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_0)
BCHP_REGISTER(0x20463804, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_1)
BCHP_REGISTER(0x20463808, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_2)
BCHP_REGISTER(0x2046380c, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_3)
BCHP_REGISTER(0x20463810, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_4)
BCHP_REGISTER(0x20463814, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_5)
BCHP_REGISTER(0x20463818, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_6)
BCHP_REGISTER(0x2046381c, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_7)
BCHP_REGISTER(0x20463820, 32,  RW, PCIE_0_EP_PL, PHY_ERR_ATTN_VEC)
BCHP_REGISTER(0x20463824, 32,  RW, PCIE_0_EP_PL, PHY_ERR_ATTN_MASK)
BCHP_REGISTER(0x20463830, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_8)
BCHP_REGISTER(0x2046384c, 32,  RW, PCIE_0_EP_PL, REG_PHY_CTL_15)
BCHP_REGISTER(0x204638e0, 32,  RW, PCIE_0_EP_PL, REG_CPM_CTL_0)
BCHP_REGISTER(0x20463900, 32,  RW, PCIE_0_EP_PL, PL_LPBK_MASTER_CTL0)
BCHP_REGISTER(0x20463904, 32,  RW, PCIE_0_EP_PL, PL_LPBK_MASTER_CTL1)
BCHP_REGISTER(0x20463908, 32,  RO, PCIE_0_EP_PL, PL_LPBK_MASTER_STAT)
BCHP_REGISTER(0x2046390c, 32,  RW, PCIE_0_EP_PL, PL_LPBK_MASTER_SLAVE_SETTING)
BCHP_REGISTER(0x20463910, 32,  RW, PCIE_0_EP_PL, PL_LPBK_MASTER_TX_SETTING)
BCHP_REGISTER(0x20463914, 32,  RW, PCIE_0_EP_PL, PL_LPBK_MASTER_LN_ERRS)
BCHP_REGISTER(0x20463940, 32,  RW, PCIE_0_EP_PL, PCIE_STATIS_CTL)
BCHP_REGISTER(0x20463944, 32,  RO, PCIE_0_EP_PL, PCIE_TXTLP_STATIS_LO)
BCHP_REGISTER(0x20463948, 32,  RO, PCIE_0_EP_PL, PCIE_TXTLP_STATIS_HI)
BCHP_REGISTER(0x2046394c, 32,  RO, PCIE_0_EP_PL, PCIE_TXDLLP_STATIS_LO)
BCHP_REGISTER(0x20463950, 32,  RO, PCIE_0_EP_PL, PCIE_TXDLLP_STATIS_HI)
BCHP_REGISTER(0x20463954, 32,  RO, PCIE_0_EP_PL, PCIE_TXOS_STATIS_LO)
BCHP_REGISTER(0x20463958, 32,  RO, PCIE_0_EP_PL, PCIE_TXOS_STATIS_HI)
BCHP_REGISTER(0x2046395c, 32,  RO, PCIE_0_EP_PL, PCIE_RXTLP_STATIS_LO)
BCHP_REGISTER(0x20463960, 32,  RO, PCIE_0_EP_PL, PCIE_RXTLP_STATIS_HI)
BCHP_REGISTER(0x20463964, 32,  RO, PCIE_0_EP_PL, PCIE_RXDLLP_STATIS_LO)
BCHP_REGISTER(0x20463968, 32,  RO, PCIE_0_EP_PL, PCIE_RXDLLP_STATIS_HI)
BCHP_REGISTER(0x2046396c, 32,  RO, PCIE_0_EP_PL, PCIE_RXOS_STATIS_LO)
BCHP_REGISTER(0x20463970, 32,  RO, PCIE_0_EP_PL, PCIE_RXOS_STATIS_HI)
BCHP_REGISTER(0x20463974, 32,  RO, PCIE_0_EP_PL, PCIE_PLRXERR_STATIS)
BCHP_REGISTER(0x20463978, 32,  RO, PCIE_0_EP_PL, PCIE_RXDLLPERR_STATIS)
BCHP_REGISTER(0x2046397c, 32,  RO, PCIE_0_EP_PL, PCIE_RXTLPERR_STATIS)
BCHP_REGISTER(0x204639a0, 32,  RW, PCIE_0_EP_PL, LTSSM_STATIS_CTL)
BCHP_REGISTER(0x204639a4, 32,  RO, PCIE_0_EP_PL, LTSSM_STATIS_0)
BCHP_REGISTER(0x204639a8, 32,  RO, PCIE_0_EP_PL, LTSSM_STATIS_1)
BCHP_REGISTER(0x204639ac, 32,  RO, PCIE_0_EP_PL, LTSSM_STATIS_2)
BCHP_REGISTER(0x204639b0, 32,  RO, PCIE_0_EP_PL, LTSSM_STATIS_3)
BCHP_REGISTER(0x204639b4, 32,  RO, PCIE_0_EP_PL, LTSSM_STATIS_CNT)
BCHP_REGISTER(0x20463c00, 32,  RO, PCIE_0_EP_PL, RECEIVED_MCP_ERRORS)
BCHP_REGISTER(0x20463c10, 32,  RO, PCIE_0_EP_PL, TRANSMITTED_MCP_ERRORS)
BCHP_REGISTER(0x20463c20, 32,  RO, PCIE_0_EP_PL, RX_FTS_LIMIT)
BCHP_REGISTER(0x20463c24, 32,  RW, PCIE_0_EP_PL, LINK_STATE_DEBUG)
BCHP_REGISTER(0x20463cd8, 32,  RO, PCIE_0_EP_PL, FTS_HIST)
BCHP_REGISTER(0x20463cdc, 32,  RO, PCIE_0_EP_PL, GEN2_DEBUG)
BCHP_REGISTER(0x20463ce4, 32,  RO, PCIE_0_EP_PL, RECOVERY_HIST)
BCHP_REGISTER(0x20463cec, 32,  RO, PCIE_0_EP_PL, PHY_LTSSM_HIST_0)
BCHP_REGISTER(0x20463cf0, 32,  RO, PCIE_0_EP_PL, PHY_LTSSM_HIST_1)
BCHP_REGISTER(0x20463cf4, 32,  RO, PCIE_0_EP_PL, PHY_LTSSM_HIST_2)
BCHP_REGISTER(0x20463cf8, 32,  RO, PCIE_0_EP_PL, PHY_LTSSM_HIST_3)
BCHP_REGISTER(0x20463cfc, 32,  RO, PCIE_0_EP_PL, PHY_LTSSM_HIST_2_DUP)
BCHP_REGISTER(0x20463d00, 32,  RO, PCIE_0_EP_PL, PHY_DBG_0)
BCHP_REGISTER(0x20463d04, 32,  RO, PCIE_0_EP_PL, PHY_DBG_1)
BCHP_REGISTER(0x20463d08, 32,  RO, PCIE_0_EP_PL, PHY_DBG_2)
BCHP_REGISTER(0x20463d0c, 32,  RO, PCIE_0_EP_PL, PHY_DBG_3)
BCHP_REGISTER(0x20463d10, 32,  RO, PCIE_0_EP_PL, PHY_DBG_4)
BCHP_REGISTER(0x20463d14, 32,  RO, PCIE_0_EP_PL, PHY_DBG_5)
BCHP_REGISTER(0x20463d18, 32,  RO, PCIE_0_EP_PL, PHY_DBG_6)
BCHP_REGISTER(0x20463d1c, 32,  RO, PCIE_0_EP_PL, PHY_DBG_7)
BCHP_REGISTER(0x20463d20, 32,  RO, PCIE_0_EP_PL, PHY_DBG_8)
BCHP_REGISTER(0x20463d24, 32,  RO, PCIE_0_EP_PL, PHY_DBG_9)
BCHP_REGISTER(0x20463d28, 32,  RO, PCIE_0_EP_PL, PHY_DBG_10)
BCHP_REGISTER(0x20463d30, 32,  RO, PCIE_0_EP_PL, ATE_LOOPBACK_INFO)
BCHP_REGISTER(0x20463e10, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ_0)
BCHP_REGISTER(0x20463e14, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ_1)
BCHP_REGISTER(0x20463e18, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ_2)
BCHP_REGISTER(0x20463e1c, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ_3)
BCHP_REGISTER(0x20463e30, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ2_0)
BCHP_REGISTER(0x20463e34, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ2_1)
BCHP_REGISTER(0x20463e38, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ2_2)
BCHP_REGISTER(0x20463e3c, 32,  RO, PCIE_0_EP_PL, PHY_DBG_CLKREQ2_3)
BCHP_REGISTER(0x20463ffc, 32,  RO, PCIE_0_EP_PL, BUILD_TAG)
BCHP_REGISTER(0x20464000, 32,  RW, PCIE_0_MISC, RESET_CTRL)
BCHP_REGISTER(0x20464004, 32,  RW, PCIE_0_MISC, ECO_CTRL_CORE)
BCHP_REGISTER(0x20464008, 32,  RW, PCIE_0_MISC, MISC_CTRL)
BCHP_REGISTER(0x2046400c, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN0_LO)
BCHP_REGISTER(0x20464010, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN0_HI)
BCHP_REGISTER(0x20464014, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN1_LO)
BCHP_REGISTER(0x20464018, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN1_HI)
BCHP_REGISTER(0x2046401c, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN2_LO)
BCHP_REGISTER(0x20464020, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN2_HI)
BCHP_REGISTER(0x20464024, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN3_LO)
BCHP_REGISTER(0x20464028, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN3_HI)
BCHP_REGISTER(0x2046402c, 32,  RW, PCIE_0_MISC, RC_BAR1_CONFIG_LO)
BCHP_REGISTER(0x20464030, 32,  RW, PCIE_0_MISC, RC_BAR1_CONFIG_HI)
BCHP_REGISTER(0x20464034, 32,  RW, PCIE_0_MISC, RC_BAR2_CONFIG_LO)
BCHP_REGISTER(0x20464038, 32,  RW, PCIE_0_MISC, RC_BAR2_CONFIG_HI)
BCHP_REGISTER(0x2046403c, 32,  RW, PCIE_0_MISC, RC_BAR3_CONFIG_LO)
BCHP_REGISTER(0x20464040, 32,  RW, PCIE_0_MISC, RC_BAR3_CONFIG_HI)
BCHP_REGISTER(0x20464044, 32,  RW, PCIE_0_MISC, MSI_BAR_CONFIG_LO)
BCHP_REGISTER(0x20464048, 32,  RW, PCIE_0_MISC, MSI_BAR_CONFIG_HI)
BCHP_REGISTER(0x2046404c, 32,  RW, PCIE_0_MISC, MSI_DATA_CONFIG)
BCHP_REGISTER(0x20464050, 32,  RW, PCIE_0_MISC, RC_BAD_ADDRESS_LO)
BCHP_REGISTER(0x20464054, 32,  RO, PCIE_0_MISC, RC_BAD_ADDRESS_HI)
BCHP_REGISTER(0x20464058, 32,  RO, PCIE_0_MISC, RC_BAD_DATA)
BCHP_REGISTER(0x2046405c, 32,  RW, PCIE_0_MISC, RC_CONFIG_RETRY_TIMEOUT)
BCHP_REGISTER(0x20464060, 32,  RW, PCIE_0_MISC, EOI_CTRL)
BCHP_REGISTER(0x20464064, 32,  RW, PCIE_0_MISC, PCIE_CTRL)
BCHP_REGISTER(0x20464068, 32,  RO, PCIE_0_MISC, PCIE_STATUS)
BCHP_REGISTER(0x2046406c, 32,  RO, PCIE_0_MISC, REVISION)
BCHP_REGISTER(0x20464070, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN0_BASE_LIMIT)
BCHP_REGISTER(0x20464074, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN1_BASE_LIMIT)
BCHP_REGISTER(0x20464078, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN2_BASE_LIMIT)
BCHP_REGISTER(0x2046407c, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN3_BASE_LIMIT)
BCHP_REGISTER(0x20464080, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN0_BASE_HI)
BCHP_REGISTER(0x20464084, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN0_LIMIT_HI)
BCHP_REGISTER(0x20464088, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN1_BASE_HI)
BCHP_REGISTER(0x2046408c, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN1_LIMIT_HI)
BCHP_REGISTER(0x20464090, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN2_BASE_HI)
BCHP_REGISTER(0x20464094, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN2_LIMIT_HI)
BCHP_REGISTER(0x20464098, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN3_BASE_HI)
BCHP_REGISTER(0x2046409c, 32,  RW, PCIE_0_MISC, CPU_2_PCIE_MEM_WIN3_LIMIT_HI)
BCHP_REGISTER(0x204640a0, 32,  RW, PCIE_0_MISC, MISC_CTRL_1)
BCHP_REGISTER(0x204640a4, 32,  RW, PCIE_0_MISC, UBUS_CTRL)
BCHP_REGISTER(0x204640a8, 32,  RW, PCIE_0_MISC, UBUS_TIMEOUT)
BCHP_REGISTER(0x204640ac, 32,  RW, PCIE_0_MISC, UBUS_BAR1_CONFIG_REMAP)
BCHP_REGISTER(0x204640b0, 32,  RW, PCIE_0_MISC, UBUS_BAR1_CONFIG_REMAP_HI)
BCHP_REGISTER(0x204640b4, 32,  RW, PCIE_0_MISC, UBUS_BAR2_CONFIG_REMAP)
BCHP_REGISTER(0x204640b8, 32,  RW, PCIE_0_MISC, UBUS_BAR2_CONFIG_REMAP_HI)
BCHP_REGISTER(0x204640bc, 32,  RW, PCIE_0_MISC, UBUS_BAR3_CONFIG_REMAP)
BCHP_REGISTER(0x204640c0, 32,  RW, PCIE_0_MISC, UBUS_BAR3_CONFIG_REMAP_HI)
BCHP_REGISTER(0x204640c4, 32,  RO, PCIE_0_MISC, UBUS_STATUS)
BCHP_REGISTER(0x204640c8, 32,  RO, PCIE_0_MISC, SCB_STATUS)
BCHP_REGISTER(0x204640cc, 32,  RW, PCIE_0_MISC, SCB_CTRL)
BCHP_REGISTER(0x204640d0, 32,  RO, PCIE_0_MISC, LTR_MSG_DATA)
BCHP_REGISTER(0x20464100, 32,  RW, PCIE_0_MISC_PERST, ECO_CTRL_PERST)
BCHP_REGISTER(0x20464104, 32,  RO, PCIE_0_MISC_PERST, CCE_STATUS)
BCHP_REGISTER(0x20464200, 32,  RW, PCIE_0_MISC_HARD, ECO_CTRL_HARD)
BCHP_REGISTER(0x20464204, 32,  RW, PCIE_0_MISC_HARD, PCIE_HARD_DEBUG)
BCHP_REGISTER(0x20464300, 32,  RO, PCIE_0_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20464304, 32,  WO, PCIE_0_INTR2, CPU_SET)
BCHP_REGISTER(0x20464308, 32,  WO, PCIE_0_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2046430c, 32,  RO, PCIE_0_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20464310, 32,  WO, PCIE_0_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20464314, 32,  WO, PCIE_0_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20464318, 32,  RO, PCIE_0_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2046431c, 32,  WO, PCIE_0_INTR2, PCI_SET)
BCHP_REGISTER(0x20464320, 32,  WO, PCIE_0_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20464324, 32,  RO, PCIE_0_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20464328, 32,  WO, PCIE_0_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2046432c, 32,  WO, PCIE_0_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20464400, 32,  RW, PCIE_0_DMA, TX_FIRST_DESC_L_ADDR_LIST0)
BCHP_REGISTER(0x20464404, 32,  RW, PCIE_0_DMA, TX_FIRST_DESC_U_ADDR_LIST0)
BCHP_REGISTER(0x20464408, 32,  RW, PCIE_0_DMA, TX_FIRST_DESC_L_ADDR_LIST1)
BCHP_REGISTER(0x2046440c, 32,  RW, PCIE_0_DMA, TX_FIRST_DESC_U_ADDR_LIST1)
BCHP_REGISTER(0x20464410, 32,  RW, PCIE_0_DMA, TX_SW_DESC_LIST_CTRL_STS)
BCHP_REGISTER(0x20464414, 32,  RW, PCIE_0_DMA, TX_WAKE_CTRL)
BCHP_REGISTER(0x20464418, 32,  RW, PCIE_0_DMA, TX_ERROR_STATUS)
BCHP_REGISTER(0x2046441c, 32,  RO, PCIE_0_DMA, TX_LIST0_CUR_DESC_L_ADDR)
BCHP_REGISTER(0x20464420, 32,  RO, PCIE_0_DMA, TX_LIST0_CUR_DESC_U_ADDR)
BCHP_REGISTER(0x20464424, 32,  RO, PCIE_0_DMA, TX_LIST0_CUR_BYTE_CNT)
BCHP_REGISTER(0x20464428, 32,  RO, PCIE_0_DMA, TX_LIST1_CUR_DESC_L_ADDR)
BCHP_REGISTER(0x2046442c, 32,  RO, PCIE_0_DMA, TX_LIST1_CUR_DESC_U_ADDR)
BCHP_REGISTER(0x20464430, 32,  RO, PCIE_0_DMA, TX_LIST1_CUR_BYTE_CNT)
BCHP_REGISTER(0x20464434, 32,  RW, PCIE_0_DMA, RX_FIRST_DESC_L_ADDR_LIST0)
BCHP_REGISTER(0x20464438, 32,  RW, PCIE_0_DMA, RX_FIRST_DESC_U_ADDR_LIST0)
BCHP_REGISTER(0x2046443c, 32,  RW, PCIE_0_DMA, RX_FIRST_DESC_L_ADDR_LIST1)
BCHP_REGISTER(0x20464440, 32,  RW, PCIE_0_DMA, RX_FIRST_DESC_U_ADDR_LIST1)
BCHP_REGISTER(0x20464444, 32,  RW, PCIE_0_DMA, RX_SW_DESC_LIST_CTRL_STS)
BCHP_REGISTER(0x20464448, 32,  RW, PCIE_0_DMA, RX_WAKE_CTRL)
BCHP_REGISTER(0x2046444c, 32,  RW, PCIE_0_DMA, RX_ERROR_STATUS)
BCHP_REGISTER(0x20464450, 32,  RO, PCIE_0_DMA, RX_LIST0_CUR_DESC_L_ADDR)
BCHP_REGISTER(0x20464454, 32,  RO, PCIE_0_DMA, RX_LIST0_CUR_DESC_U_ADDR)
BCHP_REGISTER(0x20464458, 32,  RO, PCIE_0_DMA, RX_LIST0_CUR_BYTE_CNT)
BCHP_REGISTER(0x2046445c, 32,  RO, PCIE_0_DMA, RX_LIST1_CUR_DESC_L_ADDR)
BCHP_REGISTER(0x20464460, 32,  RO, PCIE_0_DMA, RX_LIST1_CUR_DESC_U_ADDR)
BCHP_REGISTER(0x20464464, 32,  RO, PCIE_0_DMA, RX_LIST1_CUR_BYTE_CNT)
BCHP_REGISTER(0x20464468, 32,  RW, PCIE_0_DMA, DMA_DEBUG_OPTIONS_REG)
BCHP_REGISTER(0x2046446c, 32,  RO, PCIE_0_DMA, READ_CHANNEL_ERROR_STATUS)
BCHP_REGISTER(0x20464500, 32,  RO, PCIE_0_MSI_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20464504, 32,  WO, PCIE_0_MSI_INTR2, CPU_SET)
BCHP_REGISTER(0x20464508, 32,  WO, PCIE_0_MSI_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2046450c, 32,  RO, PCIE_0_MSI_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20464510, 32,  WO, PCIE_0_MSI_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20464514, 32,  WO, PCIE_0_MSI_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20464518, 32,  RO, PCIE_0_MSI_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2046451c, 32,  WO, PCIE_0_MSI_INTR2, PCI_SET)
BCHP_REGISTER(0x20464520, 32,  WO, PCIE_0_MSI_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20464524, 32,  RO, PCIE_0_MSI_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20464528, 32,  WO, PCIE_0_MSI_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2046452c, 32,  WO, PCIE_0_MSI_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20468000, 32,  RW, PCIE_0_EXT_CFG, PCIE_EXT_CFG_DATA_0)
BCHP_REGISTER(0x20468ffc, 32,  RW, PCIE_0_EXT_CFG, PCIE_EXT_CFG_DATA_1023)
BCHP_REGISTER(0x20469000, 32,  RW, PCIE_0_EXT_CFG, PCIE_EXT_CFG_INDEX)
BCHP_REGISTER(0x20469004, 32,  RW, PCIE_0_EXT_CFG, PCIE_EXT_CFG_DATA)
BCHP_REGISTER(0x20469008, 32,  RW, PCIE_0_EXT_CFG, SCRATCH)
BCHP_REGISTER(0x20469200, 32,  RO, PCIE_0_RGR1, REVISION)
BCHP_REGISTER(0x20469204, 32,  RW, PCIE_0_RGR1, CTRL)
BCHP_REGISTER(0x20469208, 32,  RW, PCIE_0_RGR1, RBUS_TIMER)
BCHP_REGISTER(0x2046920c, 32,  RW, PCIE_0_RGR1, SW_INIT_0)
BCHP_REGISTER(0x20469210, 32,  RW, PCIE_0_RGR1, SW_INIT_1)
BCHP_REGISTER(0x20469300, 32,  RO, PCIE_0_RG, REVISION)
BCHP_REGISTER(0x20469304, 32,  RW, PCIE_0_RG, CTRL)
BCHP_REGISTER(0x20469308, 32,  RW, PCIE_0_RG, SW_INIT_0)
BCHP_REGISTER(0x2046930c, 32,  RW, PCIE_0_RG, SW_INIT_1)
BCHP_REGISTER(0x20480000, 32,  RO, GENET_0_SYS, REV_CNTRL)
BCHP_REGISTER(0x20480004, 32,  RW, GENET_0_SYS, PORT_CNTRL)
BCHP_REGISTER(0x20480008, 32,  RW, GENET_0_SYS, RBUF_FLUSH_CNTRL)
BCHP_REGISTER(0x2048000c, 32,  RW, GENET_0_SYS, TBUF_FLUSH_CNTRL)
BCHP_REGISTER(0x20480010, 32,  RO, GENET_0_SYS, SCB_CLIENT_INIT_STATE)
BCHP_REGISTER(0x20480014, 32,  RW, GENET_0_SYS, LED_CNTRL)
BCHP_REGISTER(0x20480018, 32,  RW, GENET_0_SYS, LED_LINK_AND_SPEED_ENCODING_SEL)
BCHP_REGISTER(0x2048001c, 32,  RW, GENET_0_SYS, LED_LINK_AND_SPEED_ENCODING)
BCHP_REGISTER(0x20480020, 32,  RW, GENET_0_SYS, LED_SERIAL_CNTRL)
BCHP_REGISTER(0x20480024, 32,  RW, GENET_0_SYS, REFRESH_PERIOD_CNTRL)
BCHP_REGISTER(0x20480028, 32,  RW, GENET_0_SYS, AGGREGATE_LED_CNTRL)
BCHP_REGISTER(0x2048002c, 32,  RW, GENET_0_SYS, AGGREGATE_LED_BLINK_RATE_CNTRL)
BCHP_REGISTER(0x20480040, 32,  RO, GENET_0_GR_BRIDGE, REVISION)
BCHP_REGISTER(0x20480044, 32,  RW, GENET_0_GR_BRIDGE, CTRL)
BCHP_REGISTER(0x20480048, 32,  RW, GENET_0_GR_BRIDGE, SW_INIT_0)
BCHP_REGISTER(0x2048004c, 32,  RW, GENET_0_GR_BRIDGE, SW_INIT_1)
BCHP_REGISTER(0x20480080, 32,  RW, GENET_0_EXT, EPHY_CNTRL)
BCHP_REGISTER(0x20480084, 32,  RO, GENET_0_EXT, EPHY_STATUS)
BCHP_REGISTER(0x20480088, 32,  RW, GENET_0_EXT, TEST_CNTRL)
BCHP_REGISTER(0x2048008c, 32,  RW, GENET_0_EXT, RGMII_OOB_CNTRL)
BCHP_REGISTER(0x20480090, 32,  RW, GENET_0_EXT, RGMII_IB_STATUS)
BCHP_REGISTER(0x20480094, 32,  RW, GENET_0_EXT, RGMII_LED_CNTRL)
BCHP_REGISTER(0x20480098, 32,  RW, GENET_0_EXT, CLOCK_SEL_CNTRL)
BCHP_REGISTER(0x2048009c, 32,  RW, GENET_0_EXT, GPHY_CNTRL)
BCHP_REGISTER(0x204800a0, 32,  RO, GENET_0_EXT, GPHY_STATUS)
BCHP_REGISTER(0x204800a4, 32,  RW, GENET_0_EXT, RGMII_RX_CLOCK_DELAY_CNTRL)
BCHP_REGISTER(0x204800a8, 32,  RW, GENET_0_EXT, RGMII_ATE_RX_CNTRL_EXP_DATA)
BCHP_REGISTER(0x204800ac, 32,  RW, GENET_0_EXT, RGMII_ATE_RX_EXP_DATA_1)
BCHP_REGISTER(0x204800b0, 32,  RO, GENET_0_EXT, RGMII_ATE_RX_STATUS_0)
BCHP_REGISTER(0x204800b4, 32,  RO, GENET_0_EXT, RGMII_ATE_RX_STATUS_1)
BCHP_REGISTER(0x204800b8, 32,  RW, GENET_0_EXT, RGMII_ATE_TX_CNTRL)
BCHP_REGISTER(0x204800bc, 32,  RW, GENET_0_EXT, RGMII_ATE_TX_DATA_0)
BCHP_REGISTER(0x204800c0, 32,  RW, GENET_0_EXT, RGMII_ATE_TX_DATA_1)
BCHP_REGISTER(0x204800c4, 32,  RW, GENET_0_EXT, RGMII_ATE_TX_DATA_2)
BCHP_REGISTER(0x204800c8, 32,  RW, GENET_0_EXT, RGMII_TX_DELAY_CNTRL_0)
BCHP_REGISTER(0x204800cc, 32,  RW, GENET_0_EXT, RGMII_TX_DELAY_CNTRL_1)
BCHP_REGISTER(0x204800d0, 32,  RW, GENET_0_EXT, RGMII_RX_DELAY_CNTRL_0)
BCHP_REGISTER(0x204800d4, 32,  RW, GENET_0_EXT, RGMII_RX_DELAY_CNTRL_1)
BCHP_REGISTER(0x204800d8, 32,  RW, GENET_0_EXT, RGMII_RX_DELAY_CNTRL_2)
BCHP_REGISTER(0x20480200, 32,  RO, GENET_0_INTRL2_0, CPU_STATUS)
BCHP_REGISTER(0x20480204, 32,  WO, GENET_0_INTRL2_0, CPU_SET)
BCHP_REGISTER(0x20480208, 32,  WO, GENET_0_INTRL2_0, CPU_CLEAR)
BCHP_REGISTER(0x2048020c, 32,  RO, GENET_0_INTRL2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x20480210, 32,  WO, GENET_0_INTRL2_0, CPU_MASK_SET)
BCHP_REGISTER(0x20480214, 32,  WO, GENET_0_INTRL2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20480218, 32,  RO, GENET_0_INTRL2_0, PCI_STATUS)
BCHP_REGISTER(0x2048021c, 32,  WO, GENET_0_INTRL2_0, PCI_SET)
BCHP_REGISTER(0x20480220, 32,  WO, GENET_0_INTRL2_0, PCI_CLEAR)
BCHP_REGISTER(0x20480224, 32,  RO, GENET_0_INTRL2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x20480228, 32,  WO, GENET_0_INTRL2_0, PCI_MASK_SET)
BCHP_REGISTER(0x2048022c, 32,  WO, GENET_0_INTRL2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20480240, 32,  RO, GENET_0_INTRL2_1, CPU_STATUS)
BCHP_REGISTER(0x20480244, 32,  WO, GENET_0_INTRL2_1, CPU_SET)
BCHP_REGISTER(0x20480248, 32,  WO, GENET_0_INTRL2_1, CPU_CLEAR)
BCHP_REGISTER(0x2048024c, 32,  RO, GENET_0_INTRL2_1, CPU_MASK_STATUS)
BCHP_REGISTER(0x20480250, 32,  WO, GENET_0_INTRL2_1, CPU_MASK_SET)
BCHP_REGISTER(0x20480254, 32,  WO, GENET_0_INTRL2_1, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20480258, 32,  RO, GENET_0_INTRL2_1, PCI_STATUS)
BCHP_REGISTER(0x2048025c, 32,  WO, GENET_0_INTRL2_1, PCI_SET)
BCHP_REGISTER(0x20480260, 32,  WO, GENET_0_INTRL2_1, PCI_CLEAR)
BCHP_REGISTER(0x20480264, 32,  RO, GENET_0_INTRL2_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x20480268, 32,  WO, GENET_0_INTRL2_1, PCI_MASK_SET)
BCHP_REGISTER(0x2048026c, 32,  WO, GENET_0_INTRL2_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20480300, 32,  RW, GENET_0_RBUF, CNTRL)
BCHP_REGISTER(0x20480308, 32,  RW, GENET_0_RBUF, PKT_RDY_THLD)
BCHP_REGISTER(0x2048030c, 32,  RO, GENET_0_RBUF, STATUS)
BCHP_REGISTER(0x20480310, 32,  RW, GENET_0_RBUF, ENDIANESS_CNTRL)
BCHP_REGISTER(0x20480314, 32,  RW, GENET_0_RBUF, RXCHK_CNTRL)
BCHP_REGISTER(0x20480334, 32,  RW, GENET_0_RBUF, RXC_OFFSET_23)
BCHP_REGISTER(0x20480338, 32,  RW, GENET_0_RBUF, RXC_OFFSET_22)
BCHP_REGISTER(0x2048033c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_21)
BCHP_REGISTER(0x20480340, 32,  RW, GENET_0_RBUF, RXC_OFFSET_20)
BCHP_REGISTER(0x20480344, 32,  RW, GENET_0_RBUF, RXC_OFFSET_19)
BCHP_REGISTER(0x20480348, 32,  RW, GENET_0_RBUF, RXC_OFFSET_18)
BCHP_REGISTER(0x2048034c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_17)
BCHP_REGISTER(0x20480350, 32,  RW, GENET_0_RBUF, RXC_OFFSET_16)
BCHP_REGISTER(0x20480354, 32,  RW, GENET_0_RBUF, RXC_OFFSET_15)
BCHP_REGISTER(0x20480358, 32,  RW, GENET_0_RBUF, RXC_OFFSET_14)
BCHP_REGISTER(0x2048035c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_13)
BCHP_REGISTER(0x20480360, 32,  RW, GENET_0_RBUF, RXC_OFFSET_12)
BCHP_REGISTER(0x20480364, 32,  RW, GENET_0_RBUF, RXC_OFFSET_11)
BCHP_REGISTER(0x20480368, 32,  RW, GENET_0_RBUF, RXC_OFFSET_10)
BCHP_REGISTER(0x2048036c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_9)
BCHP_REGISTER(0x20480370, 32,  RW, GENET_0_RBUF, RXC_OFFSET_8)
BCHP_REGISTER(0x20480374, 32,  RW, GENET_0_RBUF, RXC_OFFSET_7)
BCHP_REGISTER(0x20480378, 32,  RW, GENET_0_RBUF, RXC_OFFSET_6)
BCHP_REGISTER(0x2048037c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_5)
BCHP_REGISTER(0x20480380, 32,  RW, GENET_0_RBUF, RXC_OFFSET_4)
BCHP_REGISTER(0x20480384, 32,  RW, GENET_0_RBUF, RXC_OFFSET_3)
BCHP_REGISTER(0x20480388, 32,  RW, GENET_0_RBUF, RXC_OFFSET_2)
BCHP_REGISTER(0x2048038c, 32,  RW, GENET_0_RBUF, RXC_OFFSET_1)
BCHP_REGISTER(0x20480390, 32,  RW, GENET_0_RBUF, RXC_OFFSET_0)
BCHP_REGISTER(0x20480394, 32,  RO, GENET_0_RBUF, OVFL_PKT_CNT)
BCHP_REGISTER(0x20480398, 32,  RO, GENET_0_RBUF, ERR_CNT)
BCHP_REGISTER(0x2048039c, 32,  RW, GENET_0_RBUF, ENERGY_CNTRL)
BCHP_REGISTER(0x204803a0, 32,  RW, GENET_0_RBUF, PD_SRAM_CNTRL)
BCHP_REGISTER(0x204803a4, 32,  RW, GENET_0_RBUF, TEST_MUX_CNTRL)
BCHP_REGISTER(0x204803a8, 32,  RW, GENET_0_RBUF, SPARE_REG_0)
BCHP_REGISTER(0x204803ac, 32,  RW, GENET_0_RBUF, SPARE_REG_1)
BCHP_REGISTER(0x204803b0, 32,  RW, GENET_0_RBUF, SPARE_REG_2)
BCHP_REGISTER(0x204803b4, 32,  RW, GENET_0_RBUF, TBUF_SIZE_CNTL)
BCHP_REGISTER(0x20480600, 32,  RW, GENET_0_TBUF, CNTRL)
BCHP_REGISTER(0x20480608, 32,  RW, GENET_0_TBUF, ENDINESS_CNTRL)
BCHP_REGISTER(0x2048060c, 32,  RW, GENET_0_TBUF, BP_MASK_AND_CNTRL)
BCHP_REGISTER(0x20480610, 32,  RW, GENET_0_TBUF, TXCHK_PKTRDY_THLD)
BCHP_REGISTER(0x20480614, 32,  RW, GENET_0_TBUF, ENERGY_CNTRL)
BCHP_REGISTER(0x20480618, 32,  RO, GENET_0_TBUF, EXT_BP_STATUS)
BCHP_REGISTER(0x2048061c, 32,  RW, GENET_0_TBUF, TSV_MASK_0)
BCHP_REGISTER(0x20480620, 32,  RW, GENET_0_TBUF, TSV_MASK_1)
BCHP_REGISTER(0x20480624, 32,  RW, GENET_0_TBUF, TSV_STATUS_0)
BCHP_REGISTER(0x20480628, 32,  RW, GENET_0_TBUF, TSV_STATUS_1)
BCHP_REGISTER(0x20480800, 32,  RO, GENET_0_UMAC, UMAC_DUMMY)
BCHP_REGISTER(0x20480804, 32,  RW, GENET_0_UMAC, HD_BKP_CNTL)
BCHP_REGISTER(0x20480808, 32,  RW, GENET_0_UMAC, CMD)
BCHP_REGISTER(0x2048080c, 32,  RW, GENET_0_UMAC, MAC0)
BCHP_REGISTER(0x20480810, 32,  RW, GENET_0_UMAC, MAC1)
BCHP_REGISTER(0x20480814, 32,  RW, GENET_0_UMAC, FRM_LEN)
BCHP_REGISTER(0x20480818, 32,  RW, GENET_0_UMAC, PAUSE_QUNAT)
BCHP_REGISTER(0x20480840, 32,  RO, GENET_0_UMAC, SFD_OFFSET)
BCHP_REGISTER(0x20480844, 32,  RO, GENET_0_UMAC, MODE)
BCHP_REGISTER(0x20480848, 32,  RW, GENET_0_UMAC, FRM_TAG0)
BCHP_REGISTER(0x2048084c, 32,  RW, GENET_0_UMAC, FRM_TAG1)
BCHP_REGISTER(0x2048085c, 32,  RW, GENET_0_UMAC, TX_IPG_LEN)
BCHP_REGISTER(0x20480864, 32,  RW, GENET_0_UMAC, EEE_CTRL)
BCHP_REGISTER(0x20480868, 32,  RW, GENET_0_UMAC, EEE_LPI_TIMER)
BCHP_REGISTER(0x2048086c, 32,  RW, GENET_0_UMAC, EEE_WAKE_TIMER)
BCHP_REGISTER(0x20480870, 32,  RW, GENET_0_UMAC, EEE_REF_COUNT)
BCHP_REGISTER(0x20480878, 32,  RW, GENET_0_UMAC, RX_PKT_DROP_STATUS)
BCHP_REGISTER(0x2048087c, 32,  RW, GENET_0_UMAC, SYMMETRIC_IDLE_THRESHOLD)
BCHP_REGISTER(0x20480b10, 32,  RW, GENET_0_UMAC, MACSEC_PROG_TX_CRC)
BCHP_REGISTER(0x20480b14, 32,  RW, GENET_0_UMAC, MACSEC_CNTRL)
BCHP_REGISTER(0x20480b18, 32,  RO, GENET_0_UMAC, TS_STATUS_CNTRL)
BCHP_REGISTER(0x20480b1c, 32,  RO, GENET_0_UMAC, TX_TS_DATA)
BCHP_REGISTER(0x20480b30, 32,  RW, GENET_0_UMAC, PAUSE_CNTRL)
BCHP_REGISTER(0x20480b34, 32,  RW, GENET_0_UMAC, TXFIFO_FLUSH)
BCHP_REGISTER(0x20480b38, 32,  RO, GENET_0_UMAC, RXFIFO_STAT)
BCHP_REGISTER(0x20480b3c, 32,  RO, GENET_0_UMAC, TXFIFO_STAT)
BCHP_REGISTER(0x20480b40, 32,  RW, GENET_0_UMAC, PPP_CNTRL)
BCHP_REGISTER(0x20480b44, 32,  RW, GENET_0_UMAC, PPP_REFRESH_CNTRL)
BCHP_REGISTER(0x20480b48, 32,  RO, GENET_0_UMAC, TX_PAUSE_PREL0)
BCHP_REGISTER(0x20480b4c, 32,  RO, GENET_0_UMAC, TX_PAUSE_PREL1)
BCHP_REGISTER(0x20480b50, 32,  RO, GENET_0_UMAC, TX_PAUSE_PREL2)
BCHP_REGISTER(0x20480b54, 32,  RO, GENET_0_UMAC, TX_PAUSE_PREL3)
BCHP_REGISTER(0x20480b58, 32,  RO, GENET_0_UMAC, RX_PAUSE_PREL0)
BCHP_REGISTER(0x20480b5c, 32,  RO, GENET_0_UMAC, RX_PAUSE_PREL1)
BCHP_REGISTER(0x20480b60, 32,  RO, GENET_0_UMAC, RX_PAUSE_PREL2)
BCHP_REGISTER(0x20480b64, 32,  RO, GENET_0_UMAC, RX_PAUSE_PREL3)
BCHP_REGISTER(0x20480c00, 32,  RW, GENET_0_UMAC, GR64)
BCHP_REGISTER(0x20480c04, 32,  RW, GENET_0_UMAC, GR127)
BCHP_REGISTER(0x20480c08, 32,  RW, GENET_0_UMAC, GR255)
BCHP_REGISTER(0x20480c0c, 32,  RW, GENET_0_UMAC, GR511)
BCHP_REGISTER(0x20480c10, 32,  RW, GENET_0_UMAC, GR1023)
BCHP_REGISTER(0x20480c14, 32,  RW, GENET_0_UMAC, GR1518)
BCHP_REGISTER(0x20480c18, 32,  RW, GENET_0_UMAC, GRMGV)
BCHP_REGISTER(0x20480c1c, 32,  RW, GENET_0_UMAC, GR2047)
BCHP_REGISTER(0x20480c20, 32,  RW, GENET_0_UMAC, GR4095)
BCHP_REGISTER(0x20480c24, 32,  RW, GENET_0_UMAC, GR9216)
BCHP_REGISTER(0x20480c28, 32,  RW, GENET_0_UMAC, GRPKT)
BCHP_REGISTER(0x20480c2c, 32,  RW, GENET_0_UMAC, GRBYT)
BCHP_REGISTER(0x20480c30, 32,  RW, GENET_0_UMAC, GRMCA)
BCHP_REGISTER(0x20480c34, 32,  RW, GENET_0_UMAC, GRBCA)
BCHP_REGISTER(0x20480c38, 32,  RW, GENET_0_UMAC, GRFCS)
BCHP_REGISTER(0x20480c3c, 32,  RW, GENET_0_UMAC, GRXCF)
BCHP_REGISTER(0x20480c40, 32,  RW, GENET_0_UMAC, GRXPF)
BCHP_REGISTER(0x20480c44, 32,  RW, GENET_0_UMAC, GRXUO)
BCHP_REGISTER(0x20480c48, 32,  RW, GENET_0_UMAC, GRALN)
BCHP_REGISTER(0x20480c4c, 32,  RW, GENET_0_UMAC, GRFLR)
BCHP_REGISTER(0x20480c50, 32,  RW, GENET_0_UMAC, GRCDE)
BCHP_REGISTER(0x20480c54, 32,  RW, GENET_0_UMAC, GRFCR)
BCHP_REGISTER(0x20480c58, 32,  RW, GENET_0_UMAC, GROVR)
BCHP_REGISTER(0x20480c5c, 32,  RW, GENET_0_UMAC, GRJBR)
BCHP_REGISTER(0x20480c60, 32,  RW, GENET_0_UMAC, GRMTUE)
BCHP_REGISTER(0x20480c64, 32,  RW, GENET_0_UMAC, GRPOK)
BCHP_REGISTER(0x20480c68, 32,  RW, GENET_0_UMAC, GRUC)
BCHP_REGISTER(0x20480c6c, 32,  RW, GENET_0_UMAC, GRPPP)
BCHP_REGISTER(0x20480c70, 32,  RW, GENET_0_UMAC, GRCRC)
BCHP_REGISTER(0x20480c80, 32,  RW, GENET_0_UMAC, TR64)
BCHP_REGISTER(0x20480c84, 32,  RW, GENET_0_UMAC, TR127)
BCHP_REGISTER(0x20480c88, 32,  RW, GENET_0_UMAC, TR255)
BCHP_REGISTER(0x20480c8c, 32,  RW, GENET_0_UMAC, TR511)
BCHP_REGISTER(0x20480c90, 32,  RW, GENET_0_UMAC, TR1023)
BCHP_REGISTER(0x20480c94, 32,  RW, GENET_0_UMAC, TR1518)
BCHP_REGISTER(0x20480c98, 32,  RW, GENET_0_UMAC, TRMGV)
BCHP_REGISTER(0x20480c9c, 32,  RW, GENET_0_UMAC, TR2047)
BCHP_REGISTER(0x20480ca0, 32,  RW, GENET_0_UMAC, TR4095)
BCHP_REGISTER(0x20480ca4, 32,  RW, GENET_0_UMAC, TR9216)
BCHP_REGISTER(0x20480ca8, 32,  RW, GENET_0_UMAC, GTPKT)
BCHP_REGISTER(0x20480cac, 32,  RW, GENET_0_UMAC, GTMCA)
BCHP_REGISTER(0x20480cb0, 32,  RW, GENET_0_UMAC, GTBCA)
BCHP_REGISTER(0x20480cb4, 32,  RW, GENET_0_UMAC, GTXPF)
BCHP_REGISTER(0x20480cb8, 32,  RW, GENET_0_UMAC, GTXCF)
BCHP_REGISTER(0x20480cbc, 32,  RW, GENET_0_UMAC, GTFCS)
BCHP_REGISTER(0x20480cc0, 32,  RW, GENET_0_UMAC, GTOVR)
BCHP_REGISTER(0x20480cc4, 32,  RW, GENET_0_UMAC, GTDRF)
BCHP_REGISTER(0x20480cc8, 32,  RW, GENET_0_UMAC, GTEDF)
BCHP_REGISTER(0x20480ccc, 32,  RW, GENET_0_UMAC, GTSCL)
BCHP_REGISTER(0x20480cd0, 32,  RW, GENET_0_UMAC, GTMCL)
BCHP_REGISTER(0x20480cd4, 32,  RW, GENET_0_UMAC, GTLCL)
BCHP_REGISTER(0x20480cd8, 32,  RW, GENET_0_UMAC, GTXCL)
BCHP_REGISTER(0x20480cdc, 32,  RW, GENET_0_UMAC, GTFRG)
BCHP_REGISTER(0x20480ce0, 32,  RW, GENET_0_UMAC, GTNCL)
BCHP_REGISTER(0x20480ce4, 32,  RW, GENET_0_UMAC, GTJBR)
BCHP_REGISTER(0x20480ce8, 32,  RW, GENET_0_UMAC, GTBYT)
BCHP_REGISTER(0x20480cec, 32,  RW, GENET_0_UMAC, GTPOK)
BCHP_REGISTER(0x20480cf0, 32,  RW, GENET_0_UMAC, GTUC)
BCHP_REGISTER(0x20480d00, 32,  RW, GENET_0_UMAC, RRPKT)
BCHP_REGISTER(0x20480d04, 32,  RW, GENET_0_UMAC, RRUND)
BCHP_REGISTER(0x20480d08, 32,  RW, GENET_0_UMAC, RRFRG)
BCHP_REGISTER(0x20480d0c, 32,  RW, GENET_0_UMAC, RRBYT)
BCHP_REGISTER(0x20480d80, 32,  RW, GENET_0_UMAC, MIB_CNTRL)
BCHP_REGISTER(0x20480e00, 32,  RW, GENET_0_UMAC, BKPU_CNTRL)
BCHP_REGISTER(0x20480e04, 32,  RW, GENET_0_UMAC, RXERR_MASK)
BCHP_REGISTER(0x20480e08, 32,  RW, GENET_0_UMAC, RX_MAX_PKT_SIZE)
BCHP_REGISTER(0x20480e0c, 32,  RW, GENET_0_UMAC, VLAN_TAG)
BCHP_REGISTER(0x20480e14, 32,  RW, GENET_0_UMAC, MDIO_CMD)
BCHP_REGISTER(0x20480e18, 32,  RW, GENET_0_UMAC, MDIO_CFG)
BCHP_REGISTER(0x20480e20, 32,  RW, GENET_0_UMAC, MPD_CTRL)
BCHP_REGISTER(0x20480e24, 32,  RW, GENET_0_UMAC, PSW_MS)
BCHP_REGISTER(0x20480e28, 32,  RW, GENET_0_UMAC, PSW_LS)
BCHP_REGISTER(0x20480e38, 32,  RO, GENET_0_UMAC, MDF_CNT)
BCHP_REGISTER(0x20480e4c, 32,  RW, GENET_0_UMAC, DIAG_SEL)
BCHP_REGISTER(0x20480e50, 32,  RW, GENET_0_UMAC, MDF_CNTRL)
BCHP_REGISTER(0x20480e54, 32,  RW, GENET_0_UMAC, MDF_ADDR0)
BCHP_REGISTER(0x20480e58, 32,  RW, GENET_0_UMAC, MDF_ADDR1)
BCHP_REGISTER(0x20480e5c, 32,  RW, GENET_0_UMAC, MDF_ADDR2)
BCHP_REGISTER(0x20480e60, 32,  RW, GENET_0_UMAC, MDF_ADDR3)
BCHP_REGISTER(0x20480e64, 32,  RW, GENET_0_UMAC, MDF_ADDR4)
BCHP_REGISTER(0x20480e68, 32,  RW, GENET_0_UMAC, MDF_ADDR5)
BCHP_REGISTER(0x20480e6c, 32,  RW, GENET_0_UMAC, MDF_ADDR6)
BCHP_REGISTER(0x20480e70, 32,  RW, GENET_0_UMAC, MDF_ADDR7)
BCHP_REGISTER(0x20480e74, 32,  RW, GENET_0_UMAC, MDF_ADDR8)
BCHP_REGISTER(0x20480e78, 32,  RW, GENET_0_UMAC, MDF_ADDR9)
BCHP_REGISTER(0x20480e7c, 32,  RW, GENET_0_UMAC, MDF_ADDR10)
BCHP_REGISTER(0x20480e80, 32,  RW, GENET_0_UMAC, MDF_ADDR11)
BCHP_REGISTER(0x20480e84, 32,  RW, GENET_0_UMAC, MDF_ADDR12)
BCHP_REGISTER(0x20480e88, 32,  RW, GENET_0_UMAC, MDF_ADDR13)
BCHP_REGISTER(0x20480e8c, 32,  RW, GENET_0_UMAC, MDF_ADDR14)
BCHP_REGISTER(0x20480e90, 32,  RW, GENET_0_UMAC, MDF_ADDR15)
BCHP_REGISTER(0x20480e94, 32,  RW, GENET_0_UMAC, MDF_ADDR16)
BCHP_REGISTER(0x20480e98, 32,  RW, GENET_0_UMAC, MDF_ADDR17)
BCHP_REGISTER(0x20480e9c, 32,  RW, GENET_0_UMAC, MDF_ADDR18)
BCHP_REGISTER(0x20480ea0, 32,  RW, GENET_0_UMAC, MDF_ADDR19)
BCHP_REGISTER(0x20480ea4, 32,  RW, GENET_0_UMAC, MDF_ADDR20)
BCHP_REGISTER(0x20480ea8, 32,  RW, GENET_0_UMAC, MDF_ADDR21)
BCHP_REGISTER(0x20480eac, 32,  RW, GENET_0_UMAC, MDF_ADDR22)
BCHP_REGISTER(0x20480eb0, 32,  RW, GENET_0_UMAC, MDF_ADDR23)
BCHP_REGISTER(0x20480eb4, 32,  RW, GENET_0_UMAC, MDF_ADDR24)
BCHP_REGISTER(0x20480eb8, 32,  RW, GENET_0_UMAC, MDF_ADDR25)
BCHP_REGISTER(0x20480ebc, 32,  RW, GENET_0_UMAC, MDF_ADDR26)
BCHP_REGISTER(0x20480ec0, 32,  RW, GENET_0_UMAC, MDF_ADDR27)
BCHP_REGISTER(0x20480ec4, 32,  RW, GENET_0_UMAC, MDF_ADDR28)
BCHP_REGISTER(0x20480ec8, 32,  RW, GENET_0_UMAC, MDF_ADDR29)
BCHP_REGISTER(0x20480ecc, 32,  RW, GENET_0_UMAC, MDF_ADDR30)
BCHP_REGISTER(0x20480ed0, 32,  RW, GENET_0_UMAC, MDF_ADDR31)
BCHP_REGISTER(0x20480ed4, 32,  RW, GENET_0_UMAC, MDF_ADDR32)
BCHP_REGISTER(0x20480ed8, 32,  RW, GENET_0_UMAC, MDF_ADDR33)
BCHP_REGISTER(0x20482000, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD0)
BCHP_REGISTER(0x20482004, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD1)
BCHP_REGISTER(0x20482008, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD2)
BCHP_REGISTER(0x2048200c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD3)
BCHP_REGISTER(0x20482010, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD4)
BCHP_REGISTER(0x20482014, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD5)
BCHP_REGISTER(0x20482018, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD6)
BCHP_REGISTER(0x2048201c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD7)
BCHP_REGISTER(0x20482020, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD8)
BCHP_REGISTER(0x20482024, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD9)
BCHP_REGISTER(0x20482028, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD10)
BCHP_REGISTER(0x2048202c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD11)
BCHP_REGISTER(0x20482030, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD12)
BCHP_REGISTER(0x20482034, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD13)
BCHP_REGISTER(0x20482038, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD14)
BCHP_REGISTER(0x2048203c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD15)
BCHP_REGISTER(0x20482040, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD16)
BCHP_REGISTER(0x20482044, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD17)
BCHP_REGISTER(0x20482048, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD18)
BCHP_REGISTER(0x2048204c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD19)
BCHP_REGISTER(0x20482050, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD20)
BCHP_REGISTER(0x20482054, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD21)
BCHP_REGISTER(0x20482058, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD22)
BCHP_REGISTER(0x2048205c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD23)
BCHP_REGISTER(0x20482060, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD24)
BCHP_REGISTER(0x20482064, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD25)
BCHP_REGISTER(0x20482068, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD26)
BCHP_REGISTER(0x2048206c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD27)
BCHP_REGISTER(0x20482070, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD28)
BCHP_REGISTER(0x20482074, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD29)
BCHP_REGISTER(0x20482078, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD30)
BCHP_REGISTER(0x2048207c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD31)
BCHP_REGISTER(0x20482080, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD32)
BCHP_REGISTER(0x20482084, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD33)
BCHP_REGISTER(0x20482088, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD34)
BCHP_REGISTER(0x2048208c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD35)
BCHP_REGISTER(0x20482090, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD36)
BCHP_REGISTER(0x20482094, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD37)
BCHP_REGISTER(0x20482098, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD38)
BCHP_REGISTER(0x2048209c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD39)
BCHP_REGISTER(0x204820a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD40)
BCHP_REGISTER(0x204820a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD41)
BCHP_REGISTER(0x204820a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD42)
BCHP_REGISTER(0x204820ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD43)
BCHP_REGISTER(0x204820b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD44)
BCHP_REGISTER(0x204820b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD45)
BCHP_REGISTER(0x204820b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD46)
BCHP_REGISTER(0x204820bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD47)
BCHP_REGISTER(0x204820c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD48)
BCHP_REGISTER(0x204820c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD49)
BCHP_REGISTER(0x204820c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD50)
BCHP_REGISTER(0x204820cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD51)
BCHP_REGISTER(0x204820d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD52)
BCHP_REGISTER(0x204820d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD53)
BCHP_REGISTER(0x204820d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD54)
BCHP_REGISTER(0x204820dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD55)
BCHP_REGISTER(0x204820e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD56)
BCHP_REGISTER(0x204820e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD57)
BCHP_REGISTER(0x204820e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD58)
BCHP_REGISTER(0x204820ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD59)
BCHP_REGISTER(0x204820f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD60)
BCHP_REGISTER(0x204820f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD61)
BCHP_REGISTER(0x204820f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD62)
BCHP_REGISTER(0x204820fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD63)
BCHP_REGISTER(0x20482100, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD64)
BCHP_REGISTER(0x20482104, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD65)
BCHP_REGISTER(0x20482108, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD66)
BCHP_REGISTER(0x2048210c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD67)
BCHP_REGISTER(0x20482110, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD68)
BCHP_REGISTER(0x20482114, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD69)
BCHP_REGISTER(0x20482118, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD70)
BCHP_REGISTER(0x2048211c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD71)
BCHP_REGISTER(0x20482120, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD72)
BCHP_REGISTER(0x20482124, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD73)
BCHP_REGISTER(0x20482128, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD74)
BCHP_REGISTER(0x2048212c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD75)
BCHP_REGISTER(0x20482130, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD76)
BCHP_REGISTER(0x20482134, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD77)
BCHP_REGISTER(0x20482138, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD78)
BCHP_REGISTER(0x2048213c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD79)
BCHP_REGISTER(0x20482140, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD80)
BCHP_REGISTER(0x20482144, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD81)
BCHP_REGISTER(0x20482148, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD82)
BCHP_REGISTER(0x2048214c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD83)
BCHP_REGISTER(0x20482150, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD84)
BCHP_REGISTER(0x20482154, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD85)
BCHP_REGISTER(0x20482158, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD86)
BCHP_REGISTER(0x2048215c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD87)
BCHP_REGISTER(0x20482160, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD88)
BCHP_REGISTER(0x20482164, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD89)
BCHP_REGISTER(0x20482168, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD90)
BCHP_REGISTER(0x2048216c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD91)
BCHP_REGISTER(0x20482170, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD92)
BCHP_REGISTER(0x20482174, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD93)
BCHP_REGISTER(0x20482178, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD94)
BCHP_REGISTER(0x2048217c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD95)
BCHP_REGISTER(0x20482180, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD96)
BCHP_REGISTER(0x20482184, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD97)
BCHP_REGISTER(0x20482188, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD98)
BCHP_REGISTER(0x2048218c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD99)
BCHP_REGISTER(0x20482190, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD100)
BCHP_REGISTER(0x20482194, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD101)
BCHP_REGISTER(0x20482198, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD102)
BCHP_REGISTER(0x2048219c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD103)
BCHP_REGISTER(0x204821a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD104)
BCHP_REGISTER(0x204821a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD105)
BCHP_REGISTER(0x204821a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD106)
BCHP_REGISTER(0x204821ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD107)
BCHP_REGISTER(0x204821b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD108)
BCHP_REGISTER(0x204821b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD109)
BCHP_REGISTER(0x204821b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD110)
BCHP_REGISTER(0x204821bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD111)
BCHP_REGISTER(0x204821c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD112)
BCHP_REGISTER(0x204821c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD113)
BCHP_REGISTER(0x204821c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD114)
BCHP_REGISTER(0x204821cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD115)
BCHP_REGISTER(0x204821d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD116)
BCHP_REGISTER(0x204821d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD117)
BCHP_REGISTER(0x204821d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD118)
BCHP_REGISTER(0x204821dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD119)
BCHP_REGISTER(0x204821e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD120)
BCHP_REGISTER(0x204821e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD121)
BCHP_REGISTER(0x204821e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD122)
BCHP_REGISTER(0x204821ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD123)
BCHP_REGISTER(0x204821f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD124)
BCHP_REGISTER(0x204821f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD125)
BCHP_REGISTER(0x204821f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD126)
BCHP_REGISTER(0x204821fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD127)
BCHP_REGISTER(0x20482200, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD128)
BCHP_REGISTER(0x20482204, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD129)
BCHP_REGISTER(0x20482208, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD130)
BCHP_REGISTER(0x2048220c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD131)
BCHP_REGISTER(0x20482210, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD132)
BCHP_REGISTER(0x20482214, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD133)
BCHP_REGISTER(0x20482218, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD134)
BCHP_REGISTER(0x2048221c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD135)
BCHP_REGISTER(0x20482220, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD136)
BCHP_REGISTER(0x20482224, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD137)
BCHP_REGISTER(0x20482228, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD138)
BCHP_REGISTER(0x2048222c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD139)
BCHP_REGISTER(0x20482230, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD140)
BCHP_REGISTER(0x20482234, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD141)
BCHP_REGISTER(0x20482238, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD142)
BCHP_REGISTER(0x2048223c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD143)
BCHP_REGISTER(0x20482240, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD144)
BCHP_REGISTER(0x20482244, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD145)
BCHP_REGISTER(0x20482248, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD146)
BCHP_REGISTER(0x2048224c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD147)
BCHP_REGISTER(0x20482250, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD148)
BCHP_REGISTER(0x20482254, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD149)
BCHP_REGISTER(0x20482258, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD150)
BCHP_REGISTER(0x2048225c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD151)
BCHP_REGISTER(0x20482260, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD152)
BCHP_REGISTER(0x20482264, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD153)
BCHP_REGISTER(0x20482268, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD154)
BCHP_REGISTER(0x2048226c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD155)
BCHP_REGISTER(0x20482270, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD156)
BCHP_REGISTER(0x20482274, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD157)
BCHP_REGISTER(0x20482278, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD158)
BCHP_REGISTER(0x2048227c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD159)
BCHP_REGISTER(0x20482280, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD160)
BCHP_REGISTER(0x20482284, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD161)
BCHP_REGISTER(0x20482288, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD162)
BCHP_REGISTER(0x2048228c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD163)
BCHP_REGISTER(0x20482290, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD164)
BCHP_REGISTER(0x20482294, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD165)
BCHP_REGISTER(0x20482298, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD166)
BCHP_REGISTER(0x2048229c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD167)
BCHP_REGISTER(0x204822a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD168)
BCHP_REGISTER(0x204822a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD169)
BCHP_REGISTER(0x204822a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD170)
BCHP_REGISTER(0x204822ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD171)
BCHP_REGISTER(0x204822b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD172)
BCHP_REGISTER(0x204822b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD173)
BCHP_REGISTER(0x204822b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD174)
BCHP_REGISTER(0x204822bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD175)
BCHP_REGISTER(0x204822c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD176)
BCHP_REGISTER(0x204822c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD177)
BCHP_REGISTER(0x204822c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD178)
BCHP_REGISTER(0x204822cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD179)
BCHP_REGISTER(0x204822d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD180)
BCHP_REGISTER(0x204822d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD181)
BCHP_REGISTER(0x204822d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD182)
BCHP_REGISTER(0x204822dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD183)
BCHP_REGISTER(0x204822e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD184)
BCHP_REGISTER(0x204822e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD185)
BCHP_REGISTER(0x204822e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD186)
BCHP_REGISTER(0x204822ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD187)
BCHP_REGISTER(0x204822f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD188)
BCHP_REGISTER(0x204822f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD189)
BCHP_REGISTER(0x204822f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD190)
BCHP_REGISTER(0x204822fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD191)
BCHP_REGISTER(0x20482300, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD192)
BCHP_REGISTER(0x20482304, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD193)
BCHP_REGISTER(0x20482308, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD194)
BCHP_REGISTER(0x2048230c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD195)
BCHP_REGISTER(0x20482310, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD196)
BCHP_REGISTER(0x20482314, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD197)
BCHP_REGISTER(0x20482318, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD198)
BCHP_REGISTER(0x2048231c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD199)
BCHP_REGISTER(0x20482320, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD200)
BCHP_REGISTER(0x20482324, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD201)
BCHP_REGISTER(0x20482328, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD202)
BCHP_REGISTER(0x2048232c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD203)
BCHP_REGISTER(0x20482330, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD204)
BCHP_REGISTER(0x20482334, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD205)
BCHP_REGISTER(0x20482338, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD206)
BCHP_REGISTER(0x2048233c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD207)
BCHP_REGISTER(0x20482340, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD208)
BCHP_REGISTER(0x20482344, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD209)
BCHP_REGISTER(0x20482348, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD210)
BCHP_REGISTER(0x2048234c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD211)
BCHP_REGISTER(0x20482350, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD212)
BCHP_REGISTER(0x20482354, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD213)
BCHP_REGISTER(0x20482358, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD214)
BCHP_REGISTER(0x2048235c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD215)
BCHP_REGISTER(0x20482360, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD216)
BCHP_REGISTER(0x20482364, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD217)
BCHP_REGISTER(0x20482368, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD218)
BCHP_REGISTER(0x2048236c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD219)
BCHP_REGISTER(0x20482370, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD220)
BCHP_REGISTER(0x20482374, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD221)
BCHP_REGISTER(0x20482378, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD222)
BCHP_REGISTER(0x2048237c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD223)
BCHP_REGISTER(0x20482380, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD224)
BCHP_REGISTER(0x20482384, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD225)
BCHP_REGISTER(0x20482388, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD226)
BCHP_REGISTER(0x2048238c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD227)
BCHP_REGISTER(0x20482390, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD228)
BCHP_REGISTER(0x20482394, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD229)
BCHP_REGISTER(0x20482398, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD230)
BCHP_REGISTER(0x2048239c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD231)
BCHP_REGISTER(0x204823a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD232)
BCHP_REGISTER(0x204823a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD233)
BCHP_REGISTER(0x204823a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD234)
BCHP_REGISTER(0x204823ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD235)
BCHP_REGISTER(0x204823b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD236)
BCHP_REGISTER(0x204823b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD237)
BCHP_REGISTER(0x204823b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD238)
BCHP_REGISTER(0x204823bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD239)
BCHP_REGISTER(0x204823c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD240)
BCHP_REGISTER(0x204823c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD241)
BCHP_REGISTER(0x204823c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD242)
BCHP_REGISTER(0x204823cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD243)
BCHP_REGISTER(0x204823d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD244)
BCHP_REGISTER(0x204823d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD245)
BCHP_REGISTER(0x204823d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD246)
BCHP_REGISTER(0x204823dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD247)
BCHP_REGISTER(0x204823e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD248)
BCHP_REGISTER(0x204823e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD249)
BCHP_REGISTER(0x204823e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD250)
BCHP_REGISTER(0x204823ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD251)
BCHP_REGISTER(0x204823f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD252)
BCHP_REGISTER(0x204823f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD253)
BCHP_REGISTER(0x204823f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD254)
BCHP_REGISTER(0x204823fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD255)
BCHP_REGISTER(0x20482400, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD256)
BCHP_REGISTER(0x20482404, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD257)
BCHP_REGISTER(0x20482408, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD258)
BCHP_REGISTER(0x2048240c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD259)
BCHP_REGISTER(0x20482410, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD260)
BCHP_REGISTER(0x20482414, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD261)
BCHP_REGISTER(0x20482418, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD262)
BCHP_REGISTER(0x2048241c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD263)
BCHP_REGISTER(0x20482420, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD264)
BCHP_REGISTER(0x20482424, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD265)
BCHP_REGISTER(0x20482428, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD266)
BCHP_REGISTER(0x2048242c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD267)
BCHP_REGISTER(0x20482430, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD268)
BCHP_REGISTER(0x20482434, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD269)
BCHP_REGISTER(0x20482438, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD270)
BCHP_REGISTER(0x2048243c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD271)
BCHP_REGISTER(0x20482440, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD272)
BCHP_REGISTER(0x20482444, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD273)
BCHP_REGISTER(0x20482448, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD274)
BCHP_REGISTER(0x2048244c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD275)
BCHP_REGISTER(0x20482450, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD276)
BCHP_REGISTER(0x20482454, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD277)
BCHP_REGISTER(0x20482458, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD278)
BCHP_REGISTER(0x2048245c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD279)
BCHP_REGISTER(0x20482460, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD280)
BCHP_REGISTER(0x20482464, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD281)
BCHP_REGISTER(0x20482468, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD282)
BCHP_REGISTER(0x2048246c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD283)
BCHP_REGISTER(0x20482470, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD284)
BCHP_REGISTER(0x20482474, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD285)
BCHP_REGISTER(0x20482478, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD286)
BCHP_REGISTER(0x2048247c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD287)
BCHP_REGISTER(0x20482480, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD288)
BCHP_REGISTER(0x20482484, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD289)
BCHP_REGISTER(0x20482488, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD290)
BCHP_REGISTER(0x2048248c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD291)
BCHP_REGISTER(0x20482490, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD292)
BCHP_REGISTER(0x20482494, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD293)
BCHP_REGISTER(0x20482498, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD294)
BCHP_REGISTER(0x2048249c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD295)
BCHP_REGISTER(0x204824a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD296)
BCHP_REGISTER(0x204824a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD297)
BCHP_REGISTER(0x204824a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD298)
BCHP_REGISTER(0x204824ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD299)
BCHP_REGISTER(0x204824b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD300)
BCHP_REGISTER(0x204824b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD301)
BCHP_REGISTER(0x204824b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD302)
BCHP_REGISTER(0x204824bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD303)
BCHP_REGISTER(0x204824c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD304)
BCHP_REGISTER(0x204824c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD305)
BCHP_REGISTER(0x204824c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD306)
BCHP_REGISTER(0x204824cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD307)
BCHP_REGISTER(0x204824d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD308)
BCHP_REGISTER(0x204824d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD309)
BCHP_REGISTER(0x204824d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD310)
BCHP_REGISTER(0x204824dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD311)
BCHP_REGISTER(0x204824e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD312)
BCHP_REGISTER(0x204824e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD313)
BCHP_REGISTER(0x204824e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD314)
BCHP_REGISTER(0x204824ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD315)
BCHP_REGISTER(0x204824f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD316)
BCHP_REGISTER(0x204824f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD317)
BCHP_REGISTER(0x204824f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD318)
BCHP_REGISTER(0x204824fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD319)
BCHP_REGISTER(0x20482500, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD320)
BCHP_REGISTER(0x20482504, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD321)
BCHP_REGISTER(0x20482508, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD322)
BCHP_REGISTER(0x2048250c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD323)
BCHP_REGISTER(0x20482510, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD324)
BCHP_REGISTER(0x20482514, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD325)
BCHP_REGISTER(0x20482518, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD326)
BCHP_REGISTER(0x2048251c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD327)
BCHP_REGISTER(0x20482520, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD328)
BCHP_REGISTER(0x20482524, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD329)
BCHP_REGISTER(0x20482528, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD330)
BCHP_REGISTER(0x2048252c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD331)
BCHP_REGISTER(0x20482530, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD332)
BCHP_REGISTER(0x20482534, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD333)
BCHP_REGISTER(0x20482538, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD334)
BCHP_REGISTER(0x2048253c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD335)
BCHP_REGISTER(0x20482540, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD336)
BCHP_REGISTER(0x20482544, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD337)
BCHP_REGISTER(0x20482548, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD338)
BCHP_REGISTER(0x2048254c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD339)
BCHP_REGISTER(0x20482550, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD340)
BCHP_REGISTER(0x20482554, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD341)
BCHP_REGISTER(0x20482558, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD342)
BCHP_REGISTER(0x2048255c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD343)
BCHP_REGISTER(0x20482560, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD344)
BCHP_REGISTER(0x20482564, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD345)
BCHP_REGISTER(0x20482568, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD346)
BCHP_REGISTER(0x2048256c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD347)
BCHP_REGISTER(0x20482570, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD348)
BCHP_REGISTER(0x20482574, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD349)
BCHP_REGISTER(0x20482578, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD350)
BCHP_REGISTER(0x2048257c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD351)
BCHP_REGISTER(0x20482580, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD352)
BCHP_REGISTER(0x20482584, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD353)
BCHP_REGISTER(0x20482588, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD354)
BCHP_REGISTER(0x2048258c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD355)
BCHP_REGISTER(0x20482590, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD356)
BCHP_REGISTER(0x20482594, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD357)
BCHP_REGISTER(0x20482598, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD358)
BCHP_REGISTER(0x2048259c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD359)
BCHP_REGISTER(0x204825a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD360)
BCHP_REGISTER(0x204825a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD361)
BCHP_REGISTER(0x204825a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD362)
BCHP_REGISTER(0x204825ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD363)
BCHP_REGISTER(0x204825b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD364)
BCHP_REGISTER(0x204825b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD365)
BCHP_REGISTER(0x204825b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD366)
BCHP_REGISTER(0x204825bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD367)
BCHP_REGISTER(0x204825c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD368)
BCHP_REGISTER(0x204825c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD369)
BCHP_REGISTER(0x204825c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD370)
BCHP_REGISTER(0x204825cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD371)
BCHP_REGISTER(0x204825d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD372)
BCHP_REGISTER(0x204825d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD373)
BCHP_REGISTER(0x204825d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD374)
BCHP_REGISTER(0x204825dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD375)
BCHP_REGISTER(0x204825e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD376)
BCHP_REGISTER(0x204825e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD377)
BCHP_REGISTER(0x204825e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD378)
BCHP_REGISTER(0x204825ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD379)
BCHP_REGISTER(0x204825f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD380)
BCHP_REGISTER(0x204825f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD381)
BCHP_REGISTER(0x204825f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD382)
BCHP_REGISTER(0x204825fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD383)
BCHP_REGISTER(0x20482600, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD384)
BCHP_REGISTER(0x20482604, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD385)
BCHP_REGISTER(0x20482608, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD386)
BCHP_REGISTER(0x2048260c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD387)
BCHP_REGISTER(0x20482610, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD388)
BCHP_REGISTER(0x20482614, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD389)
BCHP_REGISTER(0x20482618, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD390)
BCHP_REGISTER(0x2048261c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD391)
BCHP_REGISTER(0x20482620, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD392)
BCHP_REGISTER(0x20482624, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD393)
BCHP_REGISTER(0x20482628, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD394)
BCHP_REGISTER(0x2048262c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD395)
BCHP_REGISTER(0x20482630, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD396)
BCHP_REGISTER(0x20482634, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD397)
BCHP_REGISTER(0x20482638, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD398)
BCHP_REGISTER(0x2048263c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD399)
BCHP_REGISTER(0x20482640, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD400)
BCHP_REGISTER(0x20482644, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD401)
BCHP_REGISTER(0x20482648, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD402)
BCHP_REGISTER(0x2048264c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD403)
BCHP_REGISTER(0x20482650, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD404)
BCHP_REGISTER(0x20482654, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD405)
BCHP_REGISTER(0x20482658, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD406)
BCHP_REGISTER(0x2048265c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD407)
BCHP_REGISTER(0x20482660, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD408)
BCHP_REGISTER(0x20482664, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD409)
BCHP_REGISTER(0x20482668, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD410)
BCHP_REGISTER(0x2048266c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD411)
BCHP_REGISTER(0x20482670, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD412)
BCHP_REGISTER(0x20482674, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD413)
BCHP_REGISTER(0x20482678, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD414)
BCHP_REGISTER(0x2048267c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD415)
BCHP_REGISTER(0x20482680, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD416)
BCHP_REGISTER(0x20482684, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD417)
BCHP_REGISTER(0x20482688, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD418)
BCHP_REGISTER(0x2048268c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD419)
BCHP_REGISTER(0x20482690, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD420)
BCHP_REGISTER(0x20482694, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD421)
BCHP_REGISTER(0x20482698, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD422)
BCHP_REGISTER(0x2048269c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD423)
BCHP_REGISTER(0x204826a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD424)
BCHP_REGISTER(0x204826a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD425)
BCHP_REGISTER(0x204826a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD426)
BCHP_REGISTER(0x204826ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD427)
BCHP_REGISTER(0x204826b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD428)
BCHP_REGISTER(0x204826b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD429)
BCHP_REGISTER(0x204826b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD430)
BCHP_REGISTER(0x204826bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD431)
BCHP_REGISTER(0x204826c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD432)
BCHP_REGISTER(0x204826c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD433)
BCHP_REGISTER(0x204826c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD434)
BCHP_REGISTER(0x204826cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD435)
BCHP_REGISTER(0x204826d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD436)
BCHP_REGISTER(0x204826d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD437)
BCHP_REGISTER(0x204826d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD438)
BCHP_REGISTER(0x204826dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD439)
BCHP_REGISTER(0x204826e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD440)
BCHP_REGISTER(0x204826e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD441)
BCHP_REGISTER(0x204826e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD442)
BCHP_REGISTER(0x204826ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD443)
BCHP_REGISTER(0x204826f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD444)
BCHP_REGISTER(0x204826f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD445)
BCHP_REGISTER(0x204826f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD446)
BCHP_REGISTER(0x204826fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD447)
BCHP_REGISTER(0x20482700, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD448)
BCHP_REGISTER(0x20482704, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD449)
BCHP_REGISTER(0x20482708, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD450)
BCHP_REGISTER(0x2048270c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD451)
BCHP_REGISTER(0x20482710, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD452)
BCHP_REGISTER(0x20482714, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD453)
BCHP_REGISTER(0x20482718, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD454)
BCHP_REGISTER(0x2048271c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD455)
BCHP_REGISTER(0x20482720, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD456)
BCHP_REGISTER(0x20482724, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD457)
BCHP_REGISTER(0x20482728, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD458)
BCHP_REGISTER(0x2048272c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD459)
BCHP_REGISTER(0x20482730, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD460)
BCHP_REGISTER(0x20482734, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD461)
BCHP_REGISTER(0x20482738, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD462)
BCHP_REGISTER(0x2048273c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD463)
BCHP_REGISTER(0x20482740, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD464)
BCHP_REGISTER(0x20482744, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD465)
BCHP_REGISTER(0x20482748, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD466)
BCHP_REGISTER(0x2048274c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD467)
BCHP_REGISTER(0x20482750, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD468)
BCHP_REGISTER(0x20482754, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD469)
BCHP_REGISTER(0x20482758, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD470)
BCHP_REGISTER(0x2048275c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD471)
BCHP_REGISTER(0x20482760, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD472)
BCHP_REGISTER(0x20482764, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD473)
BCHP_REGISTER(0x20482768, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD474)
BCHP_REGISTER(0x2048276c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD475)
BCHP_REGISTER(0x20482770, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD476)
BCHP_REGISTER(0x20482774, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD477)
BCHP_REGISTER(0x20482778, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD478)
BCHP_REGISTER(0x2048277c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD479)
BCHP_REGISTER(0x20482780, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD480)
BCHP_REGISTER(0x20482784, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD481)
BCHP_REGISTER(0x20482788, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD482)
BCHP_REGISTER(0x2048278c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD483)
BCHP_REGISTER(0x20482790, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD484)
BCHP_REGISTER(0x20482794, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD485)
BCHP_REGISTER(0x20482798, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD486)
BCHP_REGISTER(0x2048279c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD487)
BCHP_REGISTER(0x204827a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD488)
BCHP_REGISTER(0x204827a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD489)
BCHP_REGISTER(0x204827a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD490)
BCHP_REGISTER(0x204827ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD491)
BCHP_REGISTER(0x204827b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD492)
BCHP_REGISTER(0x204827b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD493)
BCHP_REGISTER(0x204827b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD494)
BCHP_REGISTER(0x204827bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD495)
BCHP_REGISTER(0x204827c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD496)
BCHP_REGISTER(0x204827c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD497)
BCHP_REGISTER(0x204827c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD498)
BCHP_REGISTER(0x204827cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD499)
BCHP_REGISTER(0x204827d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD500)
BCHP_REGISTER(0x204827d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD501)
BCHP_REGISTER(0x204827d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD502)
BCHP_REGISTER(0x204827dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD503)
BCHP_REGISTER(0x204827e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD504)
BCHP_REGISTER(0x204827e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD505)
BCHP_REGISTER(0x204827e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD506)
BCHP_REGISTER(0x204827ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD507)
BCHP_REGISTER(0x204827f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD508)
BCHP_REGISTER(0x204827f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD509)
BCHP_REGISTER(0x204827f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD510)
BCHP_REGISTER(0x204827fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD511)
BCHP_REGISTER(0x20482800, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD512)
BCHP_REGISTER(0x20482804, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD513)
BCHP_REGISTER(0x20482808, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD514)
BCHP_REGISTER(0x2048280c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD515)
BCHP_REGISTER(0x20482810, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD516)
BCHP_REGISTER(0x20482814, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD517)
BCHP_REGISTER(0x20482818, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD518)
BCHP_REGISTER(0x2048281c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD519)
BCHP_REGISTER(0x20482820, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD520)
BCHP_REGISTER(0x20482824, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD521)
BCHP_REGISTER(0x20482828, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD522)
BCHP_REGISTER(0x2048282c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD523)
BCHP_REGISTER(0x20482830, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD524)
BCHP_REGISTER(0x20482834, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD525)
BCHP_REGISTER(0x20482838, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD526)
BCHP_REGISTER(0x2048283c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD527)
BCHP_REGISTER(0x20482840, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD528)
BCHP_REGISTER(0x20482844, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD529)
BCHP_REGISTER(0x20482848, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD530)
BCHP_REGISTER(0x2048284c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD531)
BCHP_REGISTER(0x20482850, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD532)
BCHP_REGISTER(0x20482854, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD533)
BCHP_REGISTER(0x20482858, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD534)
BCHP_REGISTER(0x2048285c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD535)
BCHP_REGISTER(0x20482860, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD536)
BCHP_REGISTER(0x20482864, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD537)
BCHP_REGISTER(0x20482868, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD538)
BCHP_REGISTER(0x2048286c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD539)
BCHP_REGISTER(0x20482870, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD540)
BCHP_REGISTER(0x20482874, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD541)
BCHP_REGISTER(0x20482878, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD542)
BCHP_REGISTER(0x2048287c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD543)
BCHP_REGISTER(0x20482880, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD544)
BCHP_REGISTER(0x20482884, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD545)
BCHP_REGISTER(0x20482888, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD546)
BCHP_REGISTER(0x2048288c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD547)
BCHP_REGISTER(0x20482890, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD548)
BCHP_REGISTER(0x20482894, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD549)
BCHP_REGISTER(0x20482898, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD550)
BCHP_REGISTER(0x2048289c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD551)
BCHP_REGISTER(0x204828a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD552)
BCHP_REGISTER(0x204828a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD553)
BCHP_REGISTER(0x204828a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD554)
BCHP_REGISTER(0x204828ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD555)
BCHP_REGISTER(0x204828b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD556)
BCHP_REGISTER(0x204828b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD557)
BCHP_REGISTER(0x204828b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD558)
BCHP_REGISTER(0x204828bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD559)
BCHP_REGISTER(0x204828c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD560)
BCHP_REGISTER(0x204828c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD561)
BCHP_REGISTER(0x204828c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD562)
BCHP_REGISTER(0x204828cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD563)
BCHP_REGISTER(0x204828d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD564)
BCHP_REGISTER(0x204828d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD565)
BCHP_REGISTER(0x204828d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD566)
BCHP_REGISTER(0x204828dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD567)
BCHP_REGISTER(0x204828e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD568)
BCHP_REGISTER(0x204828e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD569)
BCHP_REGISTER(0x204828e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD570)
BCHP_REGISTER(0x204828ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD571)
BCHP_REGISTER(0x204828f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD572)
BCHP_REGISTER(0x204828f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD573)
BCHP_REGISTER(0x204828f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD574)
BCHP_REGISTER(0x204828fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD575)
BCHP_REGISTER(0x20482900, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD576)
BCHP_REGISTER(0x20482904, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD577)
BCHP_REGISTER(0x20482908, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD578)
BCHP_REGISTER(0x2048290c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD579)
BCHP_REGISTER(0x20482910, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD580)
BCHP_REGISTER(0x20482914, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD581)
BCHP_REGISTER(0x20482918, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD582)
BCHP_REGISTER(0x2048291c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD583)
BCHP_REGISTER(0x20482920, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD584)
BCHP_REGISTER(0x20482924, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD585)
BCHP_REGISTER(0x20482928, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD586)
BCHP_REGISTER(0x2048292c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD587)
BCHP_REGISTER(0x20482930, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD588)
BCHP_REGISTER(0x20482934, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD589)
BCHP_REGISTER(0x20482938, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD590)
BCHP_REGISTER(0x2048293c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD591)
BCHP_REGISTER(0x20482940, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD592)
BCHP_REGISTER(0x20482944, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD593)
BCHP_REGISTER(0x20482948, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD594)
BCHP_REGISTER(0x2048294c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD595)
BCHP_REGISTER(0x20482950, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD596)
BCHP_REGISTER(0x20482954, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD597)
BCHP_REGISTER(0x20482958, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD598)
BCHP_REGISTER(0x2048295c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD599)
BCHP_REGISTER(0x20482960, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD600)
BCHP_REGISTER(0x20482964, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD601)
BCHP_REGISTER(0x20482968, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD602)
BCHP_REGISTER(0x2048296c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD603)
BCHP_REGISTER(0x20482970, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD604)
BCHP_REGISTER(0x20482974, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD605)
BCHP_REGISTER(0x20482978, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD606)
BCHP_REGISTER(0x2048297c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD607)
BCHP_REGISTER(0x20482980, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD608)
BCHP_REGISTER(0x20482984, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD609)
BCHP_REGISTER(0x20482988, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD610)
BCHP_REGISTER(0x2048298c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD611)
BCHP_REGISTER(0x20482990, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD612)
BCHP_REGISTER(0x20482994, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD613)
BCHP_REGISTER(0x20482998, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD614)
BCHP_REGISTER(0x2048299c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD615)
BCHP_REGISTER(0x204829a0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD616)
BCHP_REGISTER(0x204829a4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD617)
BCHP_REGISTER(0x204829a8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD618)
BCHP_REGISTER(0x204829ac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD619)
BCHP_REGISTER(0x204829b0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD620)
BCHP_REGISTER(0x204829b4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD621)
BCHP_REGISTER(0x204829b8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD622)
BCHP_REGISTER(0x204829bc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD623)
BCHP_REGISTER(0x204829c0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD624)
BCHP_REGISTER(0x204829c4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD625)
BCHP_REGISTER(0x204829c8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD626)
BCHP_REGISTER(0x204829cc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD627)
BCHP_REGISTER(0x204829d0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD628)
BCHP_REGISTER(0x204829d4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD629)
BCHP_REGISTER(0x204829d8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD630)
BCHP_REGISTER(0x204829dc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD631)
BCHP_REGISTER(0x204829e0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD632)
BCHP_REGISTER(0x204829e4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD633)
BCHP_REGISTER(0x204829e8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD634)
BCHP_REGISTER(0x204829ec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD635)
BCHP_REGISTER(0x204829f0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD636)
BCHP_REGISTER(0x204829f4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD637)
BCHP_REGISTER(0x204829f8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD638)
BCHP_REGISTER(0x204829fc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD639)
BCHP_REGISTER(0x20482a00, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD640)
BCHP_REGISTER(0x20482a04, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD641)
BCHP_REGISTER(0x20482a08, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD642)
BCHP_REGISTER(0x20482a0c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD643)
BCHP_REGISTER(0x20482a10, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD644)
BCHP_REGISTER(0x20482a14, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD645)
BCHP_REGISTER(0x20482a18, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD646)
BCHP_REGISTER(0x20482a1c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD647)
BCHP_REGISTER(0x20482a20, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD648)
BCHP_REGISTER(0x20482a24, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD649)
BCHP_REGISTER(0x20482a28, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD650)
BCHP_REGISTER(0x20482a2c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD651)
BCHP_REGISTER(0x20482a30, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD652)
BCHP_REGISTER(0x20482a34, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD653)
BCHP_REGISTER(0x20482a38, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD654)
BCHP_REGISTER(0x20482a3c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD655)
BCHP_REGISTER(0x20482a40, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD656)
BCHP_REGISTER(0x20482a44, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD657)
BCHP_REGISTER(0x20482a48, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD658)
BCHP_REGISTER(0x20482a4c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD659)
BCHP_REGISTER(0x20482a50, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD660)
BCHP_REGISTER(0x20482a54, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD661)
BCHP_REGISTER(0x20482a58, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD662)
BCHP_REGISTER(0x20482a5c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD663)
BCHP_REGISTER(0x20482a60, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD664)
BCHP_REGISTER(0x20482a64, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD665)
BCHP_REGISTER(0x20482a68, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD666)
BCHP_REGISTER(0x20482a6c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD667)
BCHP_REGISTER(0x20482a70, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD668)
BCHP_REGISTER(0x20482a74, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD669)
BCHP_REGISTER(0x20482a78, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD670)
BCHP_REGISTER(0x20482a7c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD671)
BCHP_REGISTER(0x20482a80, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD672)
BCHP_REGISTER(0x20482a84, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD673)
BCHP_REGISTER(0x20482a88, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD674)
BCHP_REGISTER(0x20482a8c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD675)
BCHP_REGISTER(0x20482a90, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD676)
BCHP_REGISTER(0x20482a94, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD677)
BCHP_REGISTER(0x20482a98, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD678)
BCHP_REGISTER(0x20482a9c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD679)
BCHP_REGISTER(0x20482aa0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD680)
BCHP_REGISTER(0x20482aa4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD681)
BCHP_REGISTER(0x20482aa8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD682)
BCHP_REGISTER(0x20482aac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD683)
BCHP_REGISTER(0x20482ab0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD684)
BCHP_REGISTER(0x20482ab4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD685)
BCHP_REGISTER(0x20482ab8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD686)
BCHP_REGISTER(0x20482abc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD687)
BCHP_REGISTER(0x20482ac0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD688)
BCHP_REGISTER(0x20482ac4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD689)
BCHP_REGISTER(0x20482ac8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD690)
BCHP_REGISTER(0x20482acc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD691)
BCHP_REGISTER(0x20482ad0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD692)
BCHP_REGISTER(0x20482ad4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD693)
BCHP_REGISTER(0x20482ad8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD694)
BCHP_REGISTER(0x20482adc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD695)
BCHP_REGISTER(0x20482ae0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD696)
BCHP_REGISTER(0x20482ae4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD697)
BCHP_REGISTER(0x20482ae8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD698)
BCHP_REGISTER(0x20482aec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD699)
BCHP_REGISTER(0x20482af0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD700)
BCHP_REGISTER(0x20482af4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD701)
BCHP_REGISTER(0x20482af8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD702)
BCHP_REGISTER(0x20482afc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD703)
BCHP_REGISTER(0x20482b00, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD704)
BCHP_REGISTER(0x20482b04, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD705)
BCHP_REGISTER(0x20482b08, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD706)
BCHP_REGISTER(0x20482b0c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD707)
BCHP_REGISTER(0x20482b10, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD708)
BCHP_REGISTER(0x20482b14, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD709)
BCHP_REGISTER(0x20482b18, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD710)
BCHP_REGISTER(0x20482b1c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD711)
BCHP_REGISTER(0x20482b20, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD712)
BCHP_REGISTER(0x20482b24, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD713)
BCHP_REGISTER(0x20482b28, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD714)
BCHP_REGISTER(0x20482b2c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD715)
BCHP_REGISTER(0x20482b30, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD716)
BCHP_REGISTER(0x20482b34, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD717)
BCHP_REGISTER(0x20482b38, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD718)
BCHP_REGISTER(0x20482b3c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD719)
BCHP_REGISTER(0x20482b40, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD720)
BCHP_REGISTER(0x20482b44, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD721)
BCHP_REGISTER(0x20482b48, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD722)
BCHP_REGISTER(0x20482b4c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD723)
BCHP_REGISTER(0x20482b50, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD724)
BCHP_REGISTER(0x20482b54, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD725)
BCHP_REGISTER(0x20482b58, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD726)
BCHP_REGISTER(0x20482b5c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD727)
BCHP_REGISTER(0x20482b60, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD728)
BCHP_REGISTER(0x20482b64, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD729)
BCHP_REGISTER(0x20482b68, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD730)
BCHP_REGISTER(0x20482b6c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD731)
BCHP_REGISTER(0x20482b70, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD732)
BCHP_REGISTER(0x20482b74, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD733)
BCHP_REGISTER(0x20482b78, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD734)
BCHP_REGISTER(0x20482b7c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD735)
BCHP_REGISTER(0x20482b80, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD736)
BCHP_REGISTER(0x20482b84, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD737)
BCHP_REGISTER(0x20482b88, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD738)
BCHP_REGISTER(0x20482b8c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD739)
BCHP_REGISTER(0x20482b90, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD740)
BCHP_REGISTER(0x20482b94, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD741)
BCHP_REGISTER(0x20482b98, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD742)
BCHP_REGISTER(0x20482b9c, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD743)
BCHP_REGISTER(0x20482ba0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD744)
BCHP_REGISTER(0x20482ba4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD745)
BCHP_REGISTER(0x20482ba8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD746)
BCHP_REGISTER(0x20482bac, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD747)
BCHP_REGISTER(0x20482bb0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD748)
BCHP_REGISTER(0x20482bb4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD749)
BCHP_REGISTER(0x20482bb8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD750)
BCHP_REGISTER(0x20482bbc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD751)
BCHP_REGISTER(0x20482bc0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD752)
BCHP_REGISTER(0x20482bc4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD753)
BCHP_REGISTER(0x20482bc8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD754)
BCHP_REGISTER(0x20482bcc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD755)
BCHP_REGISTER(0x20482bd0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD756)
BCHP_REGISTER(0x20482bd4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD757)
BCHP_REGISTER(0x20482bd8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD758)
BCHP_REGISTER(0x20482bdc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD759)
BCHP_REGISTER(0x20482be0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD760)
BCHP_REGISTER(0x20482be4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD761)
BCHP_REGISTER(0x20482be8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD762)
BCHP_REGISTER(0x20482bec, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD763)
BCHP_REGISTER(0x20482bf0, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD764)
BCHP_REGISTER(0x20482bf4, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD765)
BCHP_REGISTER(0x20482bf8, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD766)
BCHP_REGISTER(0x20482bfc, 32,  RW, GENET_0_RDMA, DESCRIPTOR_WORD767)
BCHP_REGISTER(0x20482c00, 32,  RW, GENET_0_RDMA, WRITE_POINTER0)
BCHP_REGISTER(0x20482c04, 32,  RW, GENET_0_RDMA, WRITE_POINTERH0)
BCHP_REGISTER(0x20482c08, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX0)
BCHP_REGISTER(0x20482c0c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX0)
BCHP_REGISTER(0x20482c10, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE0)
BCHP_REGISTER(0x20482c14, 32,  RW, GENET_0_RDMA, START_ADDRESS0)
BCHP_REGISTER(0x20482c18, 32,  RW, GENET_0_RDMA, START_ADDRESSH0)
BCHP_REGISTER(0x20482c1c, 32,  RW, GENET_0_RDMA, END_ADDRESS0)
BCHP_REGISTER(0x20482c20, 32,  RW, GENET_0_RDMA, END_ADDRESSH0)
BCHP_REGISTER(0x20482c24, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold0)
BCHP_REGISTER(0x20482c28, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold0)
BCHP_REGISTER(0x20482c2c, 32,  RW, GENET_0_RDMA, READ_POINTER0)
BCHP_REGISTER(0x20482c30, 32,  RW, GENET_0_RDMA, READ_POINTERH0)
BCHP_REGISTER(0x20482c34, 32,  RW, GENET_0_RDMA, UNUSED0_0)
BCHP_REGISTER(0x20482c38, 32,  RW, GENET_0_RDMA, UNUSED0_1)
BCHP_REGISTER(0x20482c3c, 32,  RW, GENET_0_RDMA, UNUSED0_2)
BCHP_REGISTER(0x20482c40, 32,  RW, GENET_0_RDMA, WRITE_POINTER1)
BCHP_REGISTER(0x20482c44, 32,  RW, GENET_0_RDMA, WRITE_POINTERH1)
BCHP_REGISTER(0x20482c48, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX1)
BCHP_REGISTER(0x20482c4c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX1)
BCHP_REGISTER(0x20482c50, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE1)
BCHP_REGISTER(0x20482c54, 32,  RW, GENET_0_RDMA, START_ADDRESS1)
BCHP_REGISTER(0x20482c58, 32,  RW, GENET_0_RDMA, START_ADDRESSH1)
BCHP_REGISTER(0x20482c5c, 32,  RW, GENET_0_RDMA, END_ADDRESS1)
BCHP_REGISTER(0x20482c60, 32,  RW, GENET_0_RDMA, END_ADDRESSH1)
BCHP_REGISTER(0x20482c64, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold1)
BCHP_REGISTER(0x20482c68, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold1)
BCHP_REGISTER(0x20482c6c, 32,  RW, GENET_0_RDMA, READ_POINTER1)
BCHP_REGISTER(0x20482c70, 32,  RW, GENET_0_RDMA, READ_POINTERH1)
BCHP_REGISTER(0x20482c74, 32,  RW, GENET_0_RDMA, UNUSED1_0)
BCHP_REGISTER(0x20482c78, 32,  RW, GENET_0_RDMA, UNUSED1_1)
BCHP_REGISTER(0x20482c7c, 32,  RW, GENET_0_RDMA, UNUSED1_2)
BCHP_REGISTER(0x20482c80, 32,  RW, GENET_0_RDMA, WRITE_POINTER2)
BCHP_REGISTER(0x20482c84, 32,  RW, GENET_0_RDMA, WRITE_POINTERH2)
BCHP_REGISTER(0x20482c88, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX2)
BCHP_REGISTER(0x20482c8c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX2)
BCHP_REGISTER(0x20482c90, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE2)
BCHP_REGISTER(0x20482c94, 32,  RW, GENET_0_RDMA, START_ADDRESS2)
BCHP_REGISTER(0x20482c98, 32,  RW, GENET_0_RDMA, START_ADDRESSH2)
BCHP_REGISTER(0x20482c9c, 32,  RW, GENET_0_RDMA, END_ADDRESS2)
BCHP_REGISTER(0x20482ca0, 32,  RW, GENET_0_RDMA, END_ADDRESSH2)
BCHP_REGISTER(0x20482ca4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold2)
BCHP_REGISTER(0x20482ca8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold2)
BCHP_REGISTER(0x20482cac, 32,  RW, GENET_0_RDMA, READ_POINTER2)
BCHP_REGISTER(0x20482cb0, 32,  RW, GENET_0_RDMA, READ_POINTERH2)
BCHP_REGISTER(0x20482cb4, 32,  RW, GENET_0_RDMA, UNUSED2_0)
BCHP_REGISTER(0x20482cb8, 32,  RW, GENET_0_RDMA, UNUSED2_1)
BCHP_REGISTER(0x20482cbc, 32,  RW, GENET_0_RDMA, UNUSED2_2)
BCHP_REGISTER(0x20482cc0, 32,  RW, GENET_0_RDMA, WRITE_POINTER3)
BCHP_REGISTER(0x20482cc4, 32,  RW, GENET_0_RDMA, WRITE_POINTERH3)
BCHP_REGISTER(0x20482cc8, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX3)
BCHP_REGISTER(0x20482ccc, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX3)
BCHP_REGISTER(0x20482cd0, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE3)
BCHP_REGISTER(0x20482cd4, 32,  RW, GENET_0_RDMA, START_ADDRESS3)
BCHP_REGISTER(0x20482cd8, 32,  RW, GENET_0_RDMA, START_ADDRESSH3)
BCHP_REGISTER(0x20482cdc, 32,  RW, GENET_0_RDMA, END_ADDRESS3)
BCHP_REGISTER(0x20482ce0, 32,  RW, GENET_0_RDMA, END_ADDRESSH3)
BCHP_REGISTER(0x20482ce4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold3)
BCHP_REGISTER(0x20482ce8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold3)
BCHP_REGISTER(0x20482cec, 32,  RW, GENET_0_RDMA, READ_POINTER3)
BCHP_REGISTER(0x20482cf0, 32,  RW, GENET_0_RDMA, READ_POINTERH3)
BCHP_REGISTER(0x20482cf4, 32,  RW, GENET_0_RDMA, UNUSED3_0)
BCHP_REGISTER(0x20482cf8, 32,  RW, GENET_0_RDMA, UNUSED3_1)
BCHP_REGISTER(0x20482cfc, 32,  RW, GENET_0_RDMA, UNUSED3_2)
BCHP_REGISTER(0x20482d00, 32,  RW, GENET_0_RDMA, WRITE_POINTER4)
BCHP_REGISTER(0x20482d04, 32,  RW, GENET_0_RDMA, WRITE_POINTERH4)
BCHP_REGISTER(0x20482d08, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX4)
BCHP_REGISTER(0x20482d0c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX4)
BCHP_REGISTER(0x20482d10, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE4)
BCHP_REGISTER(0x20482d14, 32,  RW, GENET_0_RDMA, START_ADDRESS4)
BCHP_REGISTER(0x20482d18, 32,  RW, GENET_0_RDMA, START_ADDRESSH4)
BCHP_REGISTER(0x20482d1c, 32,  RW, GENET_0_RDMA, END_ADDRESS4)
BCHP_REGISTER(0x20482d20, 32,  RW, GENET_0_RDMA, END_ADDRESSH4)
BCHP_REGISTER(0x20482d24, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold4)
BCHP_REGISTER(0x20482d28, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold4)
BCHP_REGISTER(0x20482d2c, 32,  RW, GENET_0_RDMA, READ_POINTER4)
BCHP_REGISTER(0x20482d30, 32,  RW, GENET_0_RDMA, READ_POINTERH4)
BCHP_REGISTER(0x20482d34, 32,  RW, GENET_0_RDMA, UNUSED4_0)
BCHP_REGISTER(0x20482d38, 32,  RW, GENET_0_RDMA, UNUSED4_1)
BCHP_REGISTER(0x20482d3c, 32,  RW, GENET_0_RDMA, UNUSED4_2)
BCHP_REGISTER(0x20482d40, 32,  RW, GENET_0_RDMA, WRITE_POINTER5)
BCHP_REGISTER(0x20482d44, 32,  RW, GENET_0_RDMA, WRITE_POINTERH5)
BCHP_REGISTER(0x20482d48, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX5)
BCHP_REGISTER(0x20482d4c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX5)
BCHP_REGISTER(0x20482d50, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE5)
BCHP_REGISTER(0x20482d54, 32,  RW, GENET_0_RDMA, START_ADDRESS5)
BCHP_REGISTER(0x20482d58, 32,  RW, GENET_0_RDMA, START_ADDRESSH5)
BCHP_REGISTER(0x20482d5c, 32,  RW, GENET_0_RDMA, END_ADDRESS5)
BCHP_REGISTER(0x20482d60, 32,  RW, GENET_0_RDMA, END_ADDRESSH5)
BCHP_REGISTER(0x20482d64, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold5)
BCHP_REGISTER(0x20482d68, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold5)
BCHP_REGISTER(0x20482d6c, 32,  RW, GENET_0_RDMA, READ_POINTER5)
BCHP_REGISTER(0x20482d70, 32,  RW, GENET_0_RDMA, READ_POINTERH5)
BCHP_REGISTER(0x20482d74, 32,  RW, GENET_0_RDMA, UNUSED5_0)
BCHP_REGISTER(0x20482d78, 32,  RW, GENET_0_RDMA, UNUSED5_1)
BCHP_REGISTER(0x20482d7c, 32,  RW, GENET_0_RDMA, UNUSED5_2)
BCHP_REGISTER(0x20482d80, 32,  RW, GENET_0_RDMA, WRITE_POINTER6)
BCHP_REGISTER(0x20482d84, 32,  RW, GENET_0_RDMA, WRITE_POINTERH6)
BCHP_REGISTER(0x20482d88, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX6)
BCHP_REGISTER(0x20482d8c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX6)
BCHP_REGISTER(0x20482d90, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE6)
BCHP_REGISTER(0x20482d94, 32,  RW, GENET_0_RDMA, START_ADDRESS6)
BCHP_REGISTER(0x20482d98, 32,  RW, GENET_0_RDMA, START_ADDRESSH6)
BCHP_REGISTER(0x20482d9c, 32,  RW, GENET_0_RDMA, END_ADDRESS6)
BCHP_REGISTER(0x20482da0, 32,  RW, GENET_0_RDMA, END_ADDRESSH6)
BCHP_REGISTER(0x20482da4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold6)
BCHP_REGISTER(0x20482da8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold6)
BCHP_REGISTER(0x20482dac, 32,  RW, GENET_0_RDMA, READ_POINTER6)
BCHP_REGISTER(0x20482db0, 32,  RW, GENET_0_RDMA, READ_POINTERH6)
BCHP_REGISTER(0x20482db4, 32,  RW, GENET_0_RDMA, UNUSED6_0)
BCHP_REGISTER(0x20482db8, 32,  RW, GENET_0_RDMA, UNUSED6_1)
BCHP_REGISTER(0x20482dbc, 32,  RW, GENET_0_RDMA, UNUSED6_2)
BCHP_REGISTER(0x20482dc0, 32,  RW, GENET_0_RDMA, WRITE_POINTER7)
BCHP_REGISTER(0x20482dc4, 32,  RW, GENET_0_RDMA, WRITE_POINTERH7)
BCHP_REGISTER(0x20482dc8, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX7)
BCHP_REGISTER(0x20482dcc, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX7)
BCHP_REGISTER(0x20482dd0, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE7)
BCHP_REGISTER(0x20482dd4, 32,  RW, GENET_0_RDMA, START_ADDRESS7)
BCHP_REGISTER(0x20482dd8, 32,  RW, GENET_0_RDMA, START_ADDRESSH7)
BCHP_REGISTER(0x20482ddc, 32,  RW, GENET_0_RDMA, END_ADDRESS7)
BCHP_REGISTER(0x20482de0, 32,  RW, GENET_0_RDMA, END_ADDRESSH7)
BCHP_REGISTER(0x20482de4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold7)
BCHP_REGISTER(0x20482de8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold7)
BCHP_REGISTER(0x20482dec, 32,  RW, GENET_0_RDMA, READ_POINTER7)
BCHP_REGISTER(0x20482df0, 32,  RW, GENET_0_RDMA, READ_POINTERH7)
BCHP_REGISTER(0x20482df4, 32,  RW, GENET_0_RDMA, UNUSED7_0)
BCHP_REGISTER(0x20482df8, 32,  RW, GENET_0_RDMA, UNUSED7_1)
BCHP_REGISTER(0x20482dfc, 32,  RW, GENET_0_RDMA, UNUSED7_2)
BCHP_REGISTER(0x20482e00, 32,  RW, GENET_0_RDMA, WRITE_POINTER8)
BCHP_REGISTER(0x20482e04, 32,  RW, GENET_0_RDMA, WRITE_POINTERH8)
BCHP_REGISTER(0x20482e08, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX8)
BCHP_REGISTER(0x20482e0c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX8)
BCHP_REGISTER(0x20482e10, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE8)
BCHP_REGISTER(0x20482e14, 32,  RW, GENET_0_RDMA, START_ADDRESS8)
BCHP_REGISTER(0x20482e18, 32,  RW, GENET_0_RDMA, START_ADDRESSH8)
BCHP_REGISTER(0x20482e1c, 32,  RW, GENET_0_RDMA, END_ADDRESS8)
BCHP_REGISTER(0x20482e20, 32,  RW, GENET_0_RDMA, END_ADDRESSH8)
BCHP_REGISTER(0x20482e24, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold8)
BCHP_REGISTER(0x20482e28, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold8)
BCHP_REGISTER(0x20482e2c, 32,  RW, GENET_0_RDMA, READ_POINTER8)
BCHP_REGISTER(0x20482e30, 32,  RW, GENET_0_RDMA, READ_POINTERH8)
BCHP_REGISTER(0x20482e34, 32,  RW, GENET_0_RDMA, UNUSED8_0)
BCHP_REGISTER(0x20482e38, 32,  RW, GENET_0_RDMA, UNUSED8_1)
BCHP_REGISTER(0x20482e3c, 32,  RW, GENET_0_RDMA, UNUSED8_2)
BCHP_REGISTER(0x20482e40, 32,  RW, GENET_0_RDMA, WRITE_POINTER9)
BCHP_REGISTER(0x20482e44, 32,  RW, GENET_0_RDMA, WRITE_POINTERH9)
BCHP_REGISTER(0x20482e48, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX9)
BCHP_REGISTER(0x20482e4c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX9)
BCHP_REGISTER(0x20482e50, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE9)
BCHP_REGISTER(0x20482e54, 32,  RW, GENET_0_RDMA, START_ADDRESS9)
BCHP_REGISTER(0x20482e58, 32,  RW, GENET_0_RDMA, START_ADDRESSH9)
BCHP_REGISTER(0x20482e5c, 32,  RW, GENET_0_RDMA, END_ADDRESS9)
BCHP_REGISTER(0x20482e60, 32,  RW, GENET_0_RDMA, END_ADDRESSH9)
BCHP_REGISTER(0x20482e64, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold9)
BCHP_REGISTER(0x20482e68, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold9)
BCHP_REGISTER(0x20482e6c, 32,  RW, GENET_0_RDMA, READ_POINTER9)
BCHP_REGISTER(0x20482e70, 32,  RW, GENET_0_RDMA, READ_POINTERH9)
BCHP_REGISTER(0x20482e74, 32,  RW, GENET_0_RDMA, UNUSED9_0)
BCHP_REGISTER(0x20482e78, 32,  RW, GENET_0_RDMA, UNUSED9_1)
BCHP_REGISTER(0x20482e7c, 32,  RW, GENET_0_RDMA, UNUSED9_2)
BCHP_REGISTER(0x20482e80, 32,  RW, GENET_0_RDMA, WRITE_POINTER10)
BCHP_REGISTER(0x20482e84, 32,  RW, GENET_0_RDMA, WRITE_POINTERH10)
BCHP_REGISTER(0x20482e88, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX10)
BCHP_REGISTER(0x20482e8c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX10)
BCHP_REGISTER(0x20482e90, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE10)
BCHP_REGISTER(0x20482e94, 32,  RW, GENET_0_RDMA, START_ADDRESS10)
BCHP_REGISTER(0x20482e98, 32,  RW, GENET_0_RDMA, START_ADDRESSH10)
BCHP_REGISTER(0x20482e9c, 32,  RW, GENET_0_RDMA, END_ADDRESS10)
BCHP_REGISTER(0x20482ea0, 32,  RW, GENET_0_RDMA, END_ADDRESSH10)
BCHP_REGISTER(0x20482ea4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold10)
BCHP_REGISTER(0x20482ea8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold10)
BCHP_REGISTER(0x20482eac, 32,  RW, GENET_0_RDMA, READ_POINTER10)
BCHP_REGISTER(0x20482eb0, 32,  RW, GENET_0_RDMA, READ_POINTERH10)
BCHP_REGISTER(0x20482eb4, 32,  RW, GENET_0_RDMA, UNUSED10_0)
BCHP_REGISTER(0x20482eb8, 32,  RW, GENET_0_RDMA, UNUSED10_1)
BCHP_REGISTER(0x20482ebc, 32,  RW, GENET_0_RDMA, UNUSED10_2)
BCHP_REGISTER(0x20482ec0, 32,  RW, GENET_0_RDMA, WRITE_POINTER11)
BCHP_REGISTER(0x20482ec4, 32,  RW, GENET_0_RDMA, WRITE_POINTERH11)
BCHP_REGISTER(0x20482ec8, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX11)
BCHP_REGISTER(0x20482ecc, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX11)
BCHP_REGISTER(0x20482ed0, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE11)
BCHP_REGISTER(0x20482ed4, 32,  RW, GENET_0_RDMA, START_ADDRESS11)
BCHP_REGISTER(0x20482ed8, 32,  RW, GENET_0_RDMA, START_ADDRESSH11)
BCHP_REGISTER(0x20482edc, 32,  RW, GENET_0_RDMA, END_ADDRESS11)
BCHP_REGISTER(0x20482ee0, 32,  RW, GENET_0_RDMA, END_ADDRESSH11)
BCHP_REGISTER(0x20482ee4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold11)
BCHP_REGISTER(0x20482ee8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold11)
BCHP_REGISTER(0x20482eec, 32,  RW, GENET_0_RDMA, READ_POINTER11)
BCHP_REGISTER(0x20482ef0, 32,  RW, GENET_0_RDMA, READ_POINTERH11)
BCHP_REGISTER(0x20482ef4, 32,  RW, GENET_0_RDMA, UNUSED11_0)
BCHP_REGISTER(0x20482ef8, 32,  RW, GENET_0_RDMA, UNUSED11_1)
BCHP_REGISTER(0x20482efc, 32,  RW, GENET_0_RDMA, UNUSED11_2)
BCHP_REGISTER(0x20482f00, 32,  RW, GENET_0_RDMA, WRITE_POINTER12)
BCHP_REGISTER(0x20482f04, 32,  RW, GENET_0_RDMA, WRITE_POINTERH12)
BCHP_REGISTER(0x20482f08, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX12)
BCHP_REGISTER(0x20482f0c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX12)
BCHP_REGISTER(0x20482f10, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE12)
BCHP_REGISTER(0x20482f14, 32,  RW, GENET_0_RDMA, START_ADDRESS12)
BCHP_REGISTER(0x20482f18, 32,  RW, GENET_0_RDMA, START_ADDRESSH12)
BCHP_REGISTER(0x20482f1c, 32,  RW, GENET_0_RDMA, END_ADDRESS12)
BCHP_REGISTER(0x20482f20, 32,  RW, GENET_0_RDMA, END_ADDRESSH12)
BCHP_REGISTER(0x20482f24, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold12)
BCHP_REGISTER(0x20482f28, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold12)
BCHP_REGISTER(0x20482f2c, 32,  RW, GENET_0_RDMA, READ_POINTER12)
BCHP_REGISTER(0x20482f30, 32,  RW, GENET_0_RDMA, READ_POINTERH12)
BCHP_REGISTER(0x20482f34, 32,  RW, GENET_0_RDMA, UNUSED12_0)
BCHP_REGISTER(0x20482f38, 32,  RW, GENET_0_RDMA, UNUSED12_1)
BCHP_REGISTER(0x20482f3c, 32,  RW, GENET_0_RDMA, UNUSED12_2)
BCHP_REGISTER(0x20482f40, 32,  RW, GENET_0_RDMA, WRITE_POINTER13)
BCHP_REGISTER(0x20482f44, 32,  RW, GENET_0_RDMA, WRITE_POINTERH13)
BCHP_REGISTER(0x20482f48, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX13)
BCHP_REGISTER(0x20482f4c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX13)
BCHP_REGISTER(0x20482f50, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE13)
BCHP_REGISTER(0x20482f54, 32,  RW, GENET_0_RDMA, START_ADDRESS13)
BCHP_REGISTER(0x20482f58, 32,  RW, GENET_0_RDMA, START_ADDRESSH13)
BCHP_REGISTER(0x20482f5c, 32,  RW, GENET_0_RDMA, END_ADDRESS13)
BCHP_REGISTER(0x20482f60, 32,  RW, GENET_0_RDMA, END_ADDRESSH13)
BCHP_REGISTER(0x20482f64, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold13)
BCHP_REGISTER(0x20482f68, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold13)
BCHP_REGISTER(0x20482f6c, 32,  RW, GENET_0_RDMA, READ_POINTER13)
BCHP_REGISTER(0x20482f70, 32,  RW, GENET_0_RDMA, READ_POINTERH13)
BCHP_REGISTER(0x20482f74, 32,  RW, GENET_0_RDMA, UNUSED13_0)
BCHP_REGISTER(0x20482f78, 32,  RW, GENET_0_RDMA, UNUSED13_1)
BCHP_REGISTER(0x20482f7c, 32,  RW, GENET_0_RDMA, UNUSED13_2)
BCHP_REGISTER(0x20482f80, 32,  RW, GENET_0_RDMA, WRITE_POINTER14)
BCHP_REGISTER(0x20482f84, 32,  RW, GENET_0_RDMA, WRITE_POINTERH14)
BCHP_REGISTER(0x20482f88, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX14)
BCHP_REGISTER(0x20482f8c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX14)
BCHP_REGISTER(0x20482f90, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE14)
BCHP_REGISTER(0x20482f94, 32,  RW, GENET_0_RDMA, START_ADDRESS14)
BCHP_REGISTER(0x20482f98, 32,  RW, GENET_0_RDMA, START_ADDRESSH14)
BCHP_REGISTER(0x20482f9c, 32,  RW, GENET_0_RDMA, END_ADDRESS14)
BCHP_REGISTER(0x20482fa0, 32,  RW, GENET_0_RDMA, END_ADDRESSH14)
BCHP_REGISTER(0x20482fa4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold14)
BCHP_REGISTER(0x20482fa8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold14)
BCHP_REGISTER(0x20482fac, 32,  RW, GENET_0_RDMA, READ_POINTER14)
BCHP_REGISTER(0x20482fb0, 32,  RW, GENET_0_RDMA, READ_POINTERH14)
BCHP_REGISTER(0x20482fb4, 32,  RW, GENET_0_RDMA, UNUSED14_0)
BCHP_REGISTER(0x20482fb8, 32,  RW, GENET_0_RDMA, UNUSED14_1)
BCHP_REGISTER(0x20482fbc, 32,  RW, GENET_0_RDMA, UNUSED14_2)
BCHP_REGISTER(0x20482fc0, 32,  RW, GENET_0_RDMA, WRITE_POINTER15)
BCHP_REGISTER(0x20482fc4, 32,  RW, GENET_0_RDMA, WRITE_POINTERH15)
BCHP_REGISTER(0x20482fc8, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX15)
BCHP_REGISTER(0x20482fcc, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX15)
BCHP_REGISTER(0x20482fd0, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE15)
BCHP_REGISTER(0x20482fd4, 32,  RW, GENET_0_RDMA, START_ADDRESS15)
BCHP_REGISTER(0x20482fd8, 32,  RW, GENET_0_RDMA, START_ADDRESSH15)
BCHP_REGISTER(0x20482fdc, 32,  RW, GENET_0_RDMA, END_ADDRESS15)
BCHP_REGISTER(0x20482fe0, 32,  RW, GENET_0_RDMA, END_ADDRESSH15)
BCHP_REGISTER(0x20482fe4, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold15)
BCHP_REGISTER(0x20482fe8, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold15)
BCHP_REGISTER(0x20482fec, 32,  RW, GENET_0_RDMA, READ_POINTER15)
BCHP_REGISTER(0x20482ff0, 32,  RW, GENET_0_RDMA, READ_POINTERH15)
BCHP_REGISTER(0x20482ff4, 32,  RW, GENET_0_RDMA, UNUSED15_0)
BCHP_REGISTER(0x20482ff8, 32,  RW, GENET_0_RDMA, UNUSED15_1)
BCHP_REGISTER(0x20482ffc, 32,  RW, GENET_0_RDMA, UNUSED15_2)
BCHP_REGISTER(0x20483000, 32,  RW, GENET_0_RDMA, WRITE_POINTER16)
BCHP_REGISTER(0x20483004, 32,  RW, GENET_0_RDMA, WRITE_POINTERH16)
BCHP_REGISTER(0x20483008, 32,  RW, GENET_0_RDMA, PRODUCER_INDEX16)
BCHP_REGISTER(0x2048300c, 32,  RW, GENET_0_RDMA, CONSUMER_INDEX16)
BCHP_REGISTER(0x20483010, 32,  RW, GENET_0_RDMA, RING_BUF_SIZE16)
BCHP_REGISTER(0x20483014, 32,  RW, GENET_0_RDMA, START_ADDRESS16)
BCHP_REGISTER(0x20483018, 32,  RW, GENET_0_RDMA, START_ADDRESSH16)
BCHP_REGISTER(0x2048301c, 32,  RW, GENET_0_RDMA, END_ADDRESS16)
BCHP_REGISTER(0x20483020, 32,  RW, GENET_0_RDMA, END_ADDRESSH16)
BCHP_REGISTER(0x20483024, 32,  RW, GENET_0_RDMA, Multiple_Buffers_Done_Interrupt_Threshold16)
BCHP_REGISTER(0x20483028, 32,  RW, GENET_0_RDMA, XON_XOFF_Threshold16)
BCHP_REGISTER(0x2048302c, 32,  RW, GENET_0_RDMA, READ_POINTER16)
BCHP_REGISTER(0x20483030, 32,  RW, GENET_0_RDMA, READ_POINTERH16)
BCHP_REGISTER(0x20483034, 32,  RW, GENET_0_RDMA, UNUSED16_0)
BCHP_REGISTER(0x20483038, 32,  RW, GENET_0_RDMA, UNUSED16_1)
BCHP_REGISTER(0x2048303c, 32,  RW, GENET_0_RDMA, UNUSED16_2)
BCHP_REGISTER(0x20483040, 32,  RW, GENET_0_RDMA, RING_CFG)
BCHP_REGISTER(0x20483044, 32,  RW, GENET_0_RDMA, CONTROL)
BCHP_REGISTER(0x20483048, 32,  RO, GENET_0_RDMA, STATUS)
BCHP_REGISTER(0x2048304c, 32,  RW, GENET_0_RDMA, SCB_BURST_SIZE)
BCHP_REGISTER(0x20483050, 32,  RO, GENET_0_RDMA, ACTIVITY)
BCHP_REGISTER(0x20483054, 32,  RW, GENET_0_RDMA, MASK)
BCHP_REGISTER(0x20483058, 32,  RW, GENET_0_RDMA, MAP0)
BCHP_REGISTER(0x2048305c, 32,  RW, GENET_0_RDMA, MAP1)
BCHP_REGISTER(0x20483060, 32,  RW, GENET_0_RDMA, MAP2)
BCHP_REGISTER(0x20483064, 32,  RO, GENET_0_RDMA, BACK_STATUS)
BCHP_REGISTER(0x20483068, 32,  RW, GENET_0_RDMA, OVERRIDE)
BCHP_REGISTER(0x2048306c, 32,  RW, GENET_0_RDMA, TIMEOUT0)
BCHP_REGISTER(0x20483070, 32,  RW, GENET_0_RDMA, TIMEOUT1)
BCHP_REGISTER(0x20483074, 32,  RW, GENET_0_RDMA, TIMEOUT2)
BCHP_REGISTER(0x20483078, 32,  RW, GENET_0_RDMA, TIMEOUT3)
BCHP_REGISTER(0x2048307c, 32,  RW, GENET_0_RDMA, TIMEOUT4)
BCHP_REGISTER(0x20483080, 32,  RW, GENET_0_RDMA, TIMEOUT5)
BCHP_REGISTER(0x20483084, 32,  RW, GENET_0_RDMA, TIMEOUT6)
BCHP_REGISTER(0x20483088, 32,  RW, GENET_0_RDMA, TIMEOUT7)
BCHP_REGISTER(0x2048308c, 32,  RW, GENET_0_RDMA, TIMEOUT8)
BCHP_REGISTER(0x20483090, 32,  RW, GENET_0_RDMA, TIMEOUT9)
BCHP_REGISTER(0x20483094, 32,  RW, GENET_0_RDMA, TIMEOUT10)
BCHP_REGISTER(0x20483098, 32,  RW, GENET_0_RDMA, TIMEOUT11)
BCHP_REGISTER(0x2048309c, 32,  RW, GENET_0_RDMA, TIMEOUT12)
BCHP_REGISTER(0x204830a0, 32,  RW, GENET_0_RDMA, TIMEOUT13)
BCHP_REGISTER(0x204830a4, 32,  RW, GENET_0_RDMA, TIMEOUT14)
BCHP_REGISTER(0x204830a8, 32,  RW, GENET_0_RDMA, TIMEOUT15)
BCHP_REGISTER(0x204830ac, 32,  RW, GENET_0_RDMA, TIMEOUT16)
BCHP_REGISTER(0x204830b0, 32,  RW, GENET_0_RDMA, INDEX2RING0)
BCHP_REGISTER(0x204830b4, 32,  RW, GENET_0_RDMA, INDEX2RING1)
BCHP_REGISTER(0x204830b8, 32,  RW, GENET_0_RDMA, INDEX2RING2)
BCHP_REGISTER(0x204830bc, 32,  RW, GENET_0_RDMA, INDEX2RING3)
BCHP_REGISTER(0x204830c0, 32,  RW, GENET_0_RDMA, INDEX2RING4)
BCHP_REGISTER(0x204830c4, 32,  RW, GENET_0_RDMA, INDEX2RING5)
BCHP_REGISTER(0x204830c8, 32,  RW, GENET_0_RDMA, INDEX2RING6)
BCHP_REGISTER(0x204830cc, 32,  RW, GENET_0_RDMA, INDEX2RING7)
BCHP_REGISTER(0x204830d0, 32,  RW, GENET_0_RDMA, TEST)
BCHP_REGISTER(0x204830d4, 32,  RO, GENET_0_RDMA, DEBUG)
BCHP_REGISTER(0x20484000, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD0)
BCHP_REGISTER(0x20484004, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD1)
BCHP_REGISTER(0x20484008, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD2)
BCHP_REGISTER(0x2048400c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD3)
BCHP_REGISTER(0x20484010, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD4)
BCHP_REGISTER(0x20484014, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD5)
BCHP_REGISTER(0x20484018, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD6)
BCHP_REGISTER(0x2048401c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD7)
BCHP_REGISTER(0x20484020, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD8)
BCHP_REGISTER(0x20484024, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD9)
BCHP_REGISTER(0x20484028, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD10)
BCHP_REGISTER(0x2048402c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD11)
BCHP_REGISTER(0x20484030, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD12)
BCHP_REGISTER(0x20484034, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD13)
BCHP_REGISTER(0x20484038, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD14)
BCHP_REGISTER(0x2048403c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD15)
BCHP_REGISTER(0x20484040, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD16)
BCHP_REGISTER(0x20484044, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD17)
BCHP_REGISTER(0x20484048, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD18)
BCHP_REGISTER(0x2048404c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD19)
BCHP_REGISTER(0x20484050, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD20)
BCHP_REGISTER(0x20484054, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD21)
BCHP_REGISTER(0x20484058, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD22)
BCHP_REGISTER(0x2048405c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD23)
BCHP_REGISTER(0x20484060, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD24)
BCHP_REGISTER(0x20484064, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD25)
BCHP_REGISTER(0x20484068, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD26)
BCHP_REGISTER(0x2048406c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD27)
BCHP_REGISTER(0x20484070, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD28)
BCHP_REGISTER(0x20484074, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD29)
BCHP_REGISTER(0x20484078, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD30)
BCHP_REGISTER(0x2048407c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD31)
BCHP_REGISTER(0x20484080, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD32)
BCHP_REGISTER(0x20484084, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD33)
BCHP_REGISTER(0x20484088, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD34)
BCHP_REGISTER(0x2048408c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD35)
BCHP_REGISTER(0x20484090, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD36)
BCHP_REGISTER(0x20484094, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD37)
BCHP_REGISTER(0x20484098, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD38)
BCHP_REGISTER(0x2048409c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD39)
BCHP_REGISTER(0x204840a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD40)
BCHP_REGISTER(0x204840a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD41)
BCHP_REGISTER(0x204840a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD42)
BCHP_REGISTER(0x204840ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD43)
BCHP_REGISTER(0x204840b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD44)
BCHP_REGISTER(0x204840b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD45)
BCHP_REGISTER(0x204840b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD46)
BCHP_REGISTER(0x204840bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD47)
BCHP_REGISTER(0x204840c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD48)
BCHP_REGISTER(0x204840c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD49)
BCHP_REGISTER(0x204840c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD50)
BCHP_REGISTER(0x204840cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD51)
BCHP_REGISTER(0x204840d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD52)
BCHP_REGISTER(0x204840d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD53)
BCHP_REGISTER(0x204840d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD54)
BCHP_REGISTER(0x204840dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD55)
BCHP_REGISTER(0x204840e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD56)
BCHP_REGISTER(0x204840e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD57)
BCHP_REGISTER(0x204840e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD58)
BCHP_REGISTER(0x204840ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD59)
BCHP_REGISTER(0x204840f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD60)
BCHP_REGISTER(0x204840f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD61)
BCHP_REGISTER(0x204840f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD62)
BCHP_REGISTER(0x204840fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD63)
BCHP_REGISTER(0x20484100, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD64)
BCHP_REGISTER(0x20484104, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD65)
BCHP_REGISTER(0x20484108, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD66)
BCHP_REGISTER(0x2048410c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD67)
BCHP_REGISTER(0x20484110, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD68)
BCHP_REGISTER(0x20484114, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD69)
BCHP_REGISTER(0x20484118, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD70)
BCHP_REGISTER(0x2048411c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD71)
BCHP_REGISTER(0x20484120, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD72)
BCHP_REGISTER(0x20484124, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD73)
BCHP_REGISTER(0x20484128, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD74)
BCHP_REGISTER(0x2048412c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD75)
BCHP_REGISTER(0x20484130, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD76)
BCHP_REGISTER(0x20484134, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD77)
BCHP_REGISTER(0x20484138, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD78)
BCHP_REGISTER(0x2048413c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD79)
BCHP_REGISTER(0x20484140, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD80)
BCHP_REGISTER(0x20484144, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD81)
BCHP_REGISTER(0x20484148, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD82)
BCHP_REGISTER(0x2048414c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD83)
BCHP_REGISTER(0x20484150, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD84)
BCHP_REGISTER(0x20484154, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD85)
BCHP_REGISTER(0x20484158, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD86)
BCHP_REGISTER(0x2048415c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD87)
BCHP_REGISTER(0x20484160, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD88)
BCHP_REGISTER(0x20484164, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD89)
BCHP_REGISTER(0x20484168, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD90)
BCHP_REGISTER(0x2048416c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD91)
BCHP_REGISTER(0x20484170, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD92)
BCHP_REGISTER(0x20484174, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD93)
BCHP_REGISTER(0x20484178, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD94)
BCHP_REGISTER(0x2048417c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD95)
BCHP_REGISTER(0x20484180, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD96)
BCHP_REGISTER(0x20484184, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD97)
BCHP_REGISTER(0x20484188, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD98)
BCHP_REGISTER(0x2048418c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD99)
BCHP_REGISTER(0x20484190, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD100)
BCHP_REGISTER(0x20484194, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD101)
BCHP_REGISTER(0x20484198, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD102)
BCHP_REGISTER(0x2048419c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD103)
BCHP_REGISTER(0x204841a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD104)
BCHP_REGISTER(0x204841a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD105)
BCHP_REGISTER(0x204841a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD106)
BCHP_REGISTER(0x204841ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD107)
BCHP_REGISTER(0x204841b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD108)
BCHP_REGISTER(0x204841b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD109)
BCHP_REGISTER(0x204841b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD110)
BCHP_REGISTER(0x204841bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD111)
BCHP_REGISTER(0x204841c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD112)
BCHP_REGISTER(0x204841c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD113)
BCHP_REGISTER(0x204841c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD114)
BCHP_REGISTER(0x204841cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD115)
BCHP_REGISTER(0x204841d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD116)
BCHP_REGISTER(0x204841d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD117)
BCHP_REGISTER(0x204841d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD118)
BCHP_REGISTER(0x204841dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD119)
BCHP_REGISTER(0x204841e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD120)
BCHP_REGISTER(0x204841e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD121)
BCHP_REGISTER(0x204841e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD122)
BCHP_REGISTER(0x204841ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD123)
BCHP_REGISTER(0x204841f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD124)
BCHP_REGISTER(0x204841f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD125)
BCHP_REGISTER(0x204841f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD126)
BCHP_REGISTER(0x204841fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD127)
BCHP_REGISTER(0x20484200, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD128)
BCHP_REGISTER(0x20484204, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD129)
BCHP_REGISTER(0x20484208, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD130)
BCHP_REGISTER(0x2048420c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD131)
BCHP_REGISTER(0x20484210, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD132)
BCHP_REGISTER(0x20484214, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD133)
BCHP_REGISTER(0x20484218, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD134)
BCHP_REGISTER(0x2048421c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD135)
BCHP_REGISTER(0x20484220, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD136)
BCHP_REGISTER(0x20484224, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD137)
BCHP_REGISTER(0x20484228, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD138)
BCHP_REGISTER(0x2048422c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD139)
BCHP_REGISTER(0x20484230, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD140)
BCHP_REGISTER(0x20484234, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD141)
BCHP_REGISTER(0x20484238, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD142)
BCHP_REGISTER(0x2048423c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD143)
BCHP_REGISTER(0x20484240, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD144)
BCHP_REGISTER(0x20484244, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD145)
BCHP_REGISTER(0x20484248, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD146)
BCHP_REGISTER(0x2048424c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD147)
BCHP_REGISTER(0x20484250, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD148)
BCHP_REGISTER(0x20484254, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD149)
BCHP_REGISTER(0x20484258, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD150)
BCHP_REGISTER(0x2048425c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD151)
BCHP_REGISTER(0x20484260, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD152)
BCHP_REGISTER(0x20484264, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD153)
BCHP_REGISTER(0x20484268, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD154)
BCHP_REGISTER(0x2048426c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD155)
BCHP_REGISTER(0x20484270, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD156)
BCHP_REGISTER(0x20484274, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD157)
BCHP_REGISTER(0x20484278, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD158)
BCHP_REGISTER(0x2048427c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD159)
BCHP_REGISTER(0x20484280, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD160)
BCHP_REGISTER(0x20484284, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD161)
BCHP_REGISTER(0x20484288, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD162)
BCHP_REGISTER(0x2048428c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD163)
BCHP_REGISTER(0x20484290, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD164)
BCHP_REGISTER(0x20484294, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD165)
BCHP_REGISTER(0x20484298, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD166)
BCHP_REGISTER(0x2048429c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD167)
BCHP_REGISTER(0x204842a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD168)
BCHP_REGISTER(0x204842a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD169)
BCHP_REGISTER(0x204842a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD170)
BCHP_REGISTER(0x204842ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD171)
BCHP_REGISTER(0x204842b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD172)
BCHP_REGISTER(0x204842b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD173)
BCHP_REGISTER(0x204842b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD174)
BCHP_REGISTER(0x204842bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD175)
BCHP_REGISTER(0x204842c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD176)
BCHP_REGISTER(0x204842c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD177)
BCHP_REGISTER(0x204842c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD178)
BCHP_REGISTER(0x204842cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD179)
BCHP_REGISTER(0x204842d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD180)
BCHP_REGISTER(0x204842d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD181)
BCHP_REGISTER(0x204842d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD182)
BCHP_REGISTER(0x204842dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD183)
BCHP_REGISTER(0x204842e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD184)
BCHP_REGISTER(0x204842e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD185)
BCHP_REGISTER(0x204842e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD186)
BCHP_REGISTER(0x204842ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD187)
BCHP_REGISTER(0x204842f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD188)
BCHP_REGISTER(0x204842f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD189)
BCHP_REGISTER(0x204842f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD190)
BCHP_REGISTER(0x204842fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD191)
BCHP_REGISTER(0x20484300, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD192)
BCHP_REGISTER(0x20484304, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD193)
BCHP_REGISTER(0x20484308, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD194)
BCHP_REGISTER(0x2048430c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD195)
BCHP_REGISTER(0x20484310, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD196)
BCHP_REGISTER(0x20484314, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD197)
BCHP_REGISTER(0x20484318, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD198)
BCHP_REGISTER(0x2048431c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD199)
BCHP_REGISTER(0x20484320, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD200)
BCHP_REGISTER(0x20484324, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD201)
BCHP_REGISTER(0x20484328, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD202)
BCHP_REGISTER(0x2048432c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD203)
BCHP_REGISTER(0x20484330, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD204)
BCHP_REGISTER(0x20484334, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD205)
BCHP_REGISTER(0x20484338, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD206)
BCHP_REGISTER(0x2048433c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD207)
BCHP_REGISTER(0x20484340, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD208)
BCHP_REGISTER(0x20484344, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD209)
BCHP_REGISTER(0x20484348, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD210)
BCHP_REGISTER(0x2048434c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD211)
BCHP_REGISTER(0x20484350, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD212)
BCHP_REGISTER(0x20484354, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD213)
BCHP_REGISTER(0x20484358, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD214)
BCHP_REGISTER(0x2048435c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD215)
BCHP_REGISTER(0x20484360, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD216)
BCHP_REGISTER(0x20484364, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD217)
BCHP_REGISTER(0x20484368, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD218)
BCHP_REGISTER(0x2048436c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD219)
BCHP_REGISTER(0x20484370, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD220)
BCHP_REGISTER(0x20484374, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD221)
BCHP_REGISTER(0x20484378, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD222)
BCHP_REGISTER(0x2048437c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD223)
BCHP_REGISTER(0x20484380, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD224)
BCHP_REGISTER(0x20484384, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD225)
BCHP_REGISTER(0x20484388, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD226)
BCHP_REGISTER(0x2048438c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD227)
BCHP_REGISTER(0x20484390, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD228)
BCHP_REGISTER(0x20484394, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD229)
BCHP_REGISTER(0x20484398, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD230)
BCHP_REGISTER(0x2048439c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD231)
BCHP_REGISTER(0x204843a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD232)
BCHP_REGISTER(0x204843a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD233)
BCHP_REGISTER(0x204843a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD234)
BCHP_REGISTER(0x204843ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD235)
BCHP_REGISTER(0x204843b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD236)
BCHP_REGISTER(0x204843b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD237)
BCHP_REGISTER(0x204843b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD238)
BCHP_REGISTER(0x204843bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD239)
BCHP_REGISTER(0x204843c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD240)
BCHP_REGISTER(0x204843c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD241)
BCHP_REGISTER(0x204843c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD242)
BCHP_REGISTER(0x204843cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD243)
BCHP_REGISTER(0x204843d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD244)
BCHP_REGISTER(0x204843d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD245)
BCHP_REGISTER(0x204843d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD246)
BCHP_REGISTER(0x204843dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD247)
BCHP_REGISTER(0x204843e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD248)
BCHP_REGISTER(0x204843e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD249)
BCHP_REGISTER(0x204843e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD250)
BCHP_REGISTER(0x204843ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD251)
BCHP_REGISTER(0x204843f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD252)
BCHP_REGISTER(0x204843f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD253)
BCHP_REGISTER(0x204843f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD254)
BCHP_REGISTER(0x204843fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD255)
BCHP_REGISTER(0x20484400, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD256)
BCHP_REGISTER(0x20484404, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD257)
BCHP_REGISTER(0x20484408, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD258)
BCHP_REGISTER(0x2048440c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD259)
BCHP_REGISTER(0x20484410, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD260)
BCHP_REGISTER(0x20484414, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD261)
BCHP_REGISTER(0x20484418, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD262)
BCHP_REGISTER(0x2048441c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD263)
BCHP_REGISTER(0x20484420, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD264)
BCHP_REGISTER(0x20484424, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD265)
BCHP_REGISTER(0x20484428, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD266)
BCHP_REGISTER(0x2048442c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD267)
BCHP_REGISTER(0x20484430, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD268)
BCHP_REGISTER(0x20484434, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD269)
BCHP_REGISTER(0x20484438, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD270)
BCHP_REGISTER(0x2048443c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD271)
BCHP_REGISTER(0x20484440, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD272)
BCHP_REGISTER(0x20484444, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD273)
BCHP_REGISTER(0x20484448, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD274)
BCHP_REGISTER(0x2048444c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD275)
BCHP_REGISTER(0x20484450, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD276)
BCHP_REGISTER(0x20484454, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD277)
BCHP_REGISTER(0x20484458, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD278)
BCHP_REGISTER(0x2048445c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD279)
BCHP_REGISTER(0x20484460, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD280)
BCHP_REGISTER(0x20484464, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD281)
BCHP_REGISTER(0x20484468, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD282)
BCHP_REGISTER(0x2048446c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD283)
BCHP_REGISTER(0x20484470, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD284)
BCHP_REGISTER(0x20484474, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD285)
BCHP_REGISTER(0x20484478, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD286)
BCHP_REGISTER(0x2048447c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD287)
BCHP_REGISTER(0x20484480, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD288)
BCHP_REGISTER(0x20484484, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD289)
BCHP_REGISTER(0x20484488, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD290)
BCHP_REGISTER(0x2048448c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD291)
BCHP_REGISTER(0x20484490, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD292)
BCHP_REGISTER(0x20484494, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD293)
BCHP_REGISTER(0x20484498, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD294)
BCHP_REGISTER(0x2048449c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD295)
BCHP_REGISTER(0x204844a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD296)
BCHP_REGISTER(0x204844a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD297)
BCHP_REGISTER(0x204844a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD298)
BCHP_REGISTER(0x204844ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD299)
BCHP_REGISTER(0x204844b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD300)
BCHP_REGISTER(0x204844b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD301)
BCHP_REGISTER(0x204844b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD302)
BCHP_REGISTER(0x204844bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD303)
BCHP_REGISTER(0x204844c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD304)
BCHP_REGISTER(0x204844c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD305)
BCHP_REGISTER(0x204844c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD306)
BCHP_REGISTER(0x204844cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD307)
BCHP_REGISTER(0x204844d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD308)
BCHP_REGISTER(0x204844d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD309)
BCHP_REGISTER(0x204844d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD310)
BCHP_REGISTER(0x204844dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD311)
BCHP_REGISTER(0x204844e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD312)
BCHP_REGISTER(0x204844e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD313)
BCHP_REGISTER(0x204844e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD314)
BCHP_REGISTER(0x204844ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD315)
BCHP_REGISTER(0x204844f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD316)
BCHP_REGISTER(0x204844f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD317)
BCHP_REGISTER(0x204844f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD318)
BCHP_REGISTER(0x204844fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD319)
BCHP_REGISTER(0x20484500, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD320)
BCHP_REGISTER(0x20484504, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD321)
BCHP_REGISTER(0x20484508, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD322)
BCHP_REGISTER(0x2048450c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD323)
BCHP_REGISTER(0x20484510, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD324)
BCHP_REGISTER(0x20484514, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD325)
BCHP_REGISTER(0x20484518, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD326)
BCHP_REGISTER(0x2048451c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD327)
BCHP_REGISTER(0x20484520, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD328)
BCHP_REGISTER(0x20484524, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD329)
BCHP_REGISTER(0x20484528, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD330)
BCHP_REGISTER(0x2048452c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD331)
BCHP_REGISTER(0x20484530, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD332)
BCHP_REGISTER(0x20484534, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD333)
BCHP_REGISTER(0x20484538, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD334)
BCHP_REGISTER(0x2048453c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD335)
BCHP_REGISTER(0x20484540, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD336)
BCHP_REGISTER(0x20484544, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD337)
BCHP_REGISTER(0x20484548, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD338)
BCHP_REGISTER(0x2048454c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD339)
BCHP_REGISTER(0x20484550, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD340)
BCHP_REGISTER(0x20484554, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD341)
BCHP_REGISTER(0x20484558, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD342)
BCHP_REGISTER(0x2048455c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD343)
BCHP_REGISTER(0x20484560, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD344)
BCHP_REGISTER(0x20484564, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD345)
BCHP_REGISTER(0x20484568, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD346)
BCHP_REGISTER(0x2048456c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD347)
BCHP_REGISTER(0x20484570, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD348)
BCHP_REGISTER(0x20484574, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD349)
BCHP_REGISTER(0x20484578, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD350)
BCHP_REGISTER(0x2048457c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD351)
BCHP_REGISTER(0x20484580, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD352)
BCHP_REGISTER(0x20484584, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD353)
BCHP_REGISTER(0x20484588, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD354)
BCHP_REGISTER(0x2048458c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD355)
BCHP_REGISTER(0x20484590, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD356)
BCHP_REGISTER(0x20484594, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD357)
BCHP_REGISTER(0x20484598, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD358)
BCHP_REGISTER(0x2048459c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD359)
BCHP_REGISTER(0x204845a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD360)
BCHP_REGISTER(0x204845a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD361)
BCHP_REGISTER(0x204845a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD362)
BCHP_REGISTER(0x204845ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD363)
BCHP_REGISTER(0x204845b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD364)
BCHP_REGISTER(0x204845b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD365)
BCHP_REGISTER(0x204845b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD366)
BCHP_REGISTER(0x204845bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD367)
BCHP_REGISTER(0x204845c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD368)
BCHP_REGISTER(0x204845c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD369)
BCHP_REGISTER(0x204845c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD370)
BCHP_REGISTER(0x204845cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD371)
BCHP_REGISTER(0x204845d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD372)
BCHP_REGISTER(0x204845d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD373)
BCHP_REGISTER(0x204845d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD374)
BCHP_REGISTER(0x204845dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD375)
BCHP_REGISTER(0x204845e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD376)
BCHP_REGISTER(0x204845e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD377)
BCHP_REGISTER(0x204845e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD378)
BCHP_REGISTER(0x204845ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD379)
BCHP_REGISTER(0x204845f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD380)
BCHP_REGISTER(0x204845f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD381)
BCHP_REGISTER(0x204845f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD382)
BCHP_REGISTER(0x204845fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD383)
BCHP_REGISTER(0x20484600, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD384)
BCHP_REGISTER(0x20484604, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD385)
BCHP_REGISTER(0x20484608, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD386)
BCHP_REGISTER(0x2048460c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD387)
BCHP_REGISTER(0x20484610, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD388)
BCHP_REGISTER(0x20484614, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD389)
BCHP_REGISTER(0x20484618, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD390)
BCHP_REGISTER(0x2048461c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD391)
BCHP_REGISTER(0x20484620, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD392)
BCHP_REGISTER(0x20484624, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD393)
BCHP_REGISTER(0x20484628, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD394)
BCHP_REGISTER(0x2048462c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD395)
BCHP_REGISTER(0x20484630, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD396)
BCHP_REGISTER(0x20484634, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD397)
BCHP_REGISTER(0x20484638, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD398)
BCHP_REGISTER(0x2048463c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD399)
BCHP_REGISTER(0x20484640, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD400)
BCHP_REGISTER(0x20484644, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD401)
BCHP_REGISTER(0x20484648, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD402)
BCHP_REGISTER(0x2048464c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD403)
BCHP_REGISTER(0x20484650, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD404)
BCHP_REGISTER(0x20484654, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD405)
BCHP_REGISTER(0x20484658, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD406)
BCHP_REGISTER(0x2048465c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD407)
BCHP_REGISTER(0x20484660, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD408)
BCHP_REGISTER(0x20484664, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD409)
BCHP_REGISTER(0x20484668, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD410)
BCHP_REGISTER(0x2048466c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD411)
BCHP_REGISTER(0x20484670, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD412)
BCHP_REGISTER(0x20484674, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD413)
BCHP_REGISTER(0x20484678, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD414)
BCHP_REGISTER(0x2048467c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD415)
BCHP_REGISTER(0x20484680, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD416)
BCHP_REGISTER(0x20484684, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD417)
BCHP_REGISTER(0x20484688, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD418)
BCHP_REGISTER(0x2048468c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD419)
BCHP_REGISTER(0x20484690, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD420)
BCHP_REGISTER(0x20484694, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD421)
BCHP_REGISTER(0x20484698, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD422)
BCHP_REGISTER(0x2048469c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD423)
BCHP_REGISTER(0x204846a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD424)
BCHP_REGISTER(0x204846a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD425)
BCHP_REGISTER(0x204846a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD426)
BCHP_REGISTER(0x204846ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD427)
BCHP_REGISTER(0x204846b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD428)
BCHP_REGISTER(0x204846b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD429)
BCHP_REGISTER(0x204846b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD430)
BCHP_REGISTER(0x204846bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD431)
BCHP_REGISTER(0x204846c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD432)
BCHP_REGISTER(0x204846c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD433)
BCHP_REGISTER(0x204846c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD434)
BCHP_REGISTER(0x204846cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD435)
BCHP_REGISTER(0x204846d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD436)
BCHP_REGISTER(0x204846d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD437)
BCHP_REGISTER(0x204846d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD438)
BCHP_REGISTER(0x204846dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD439)
BCHP_REGISTER(0x204846e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD440)
BCHP_REGISTER(0x204846e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD441)
BCHP_REGISTER(0x204846e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD442)
BCHP_REGISTER(0x204846ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD443)
BCHP_REGISTER(0x204846f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD444)
BCHP_REGISTER(0x204846f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD445)
BCHP_REGISTER(0x204846f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD446)
BCHP_REGISTER(0x204846fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD447)
BCHP_REGISTER(0x20484700, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD448)
BCHP_REGISTER(0x20484704, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD449)
BCHP_REGISTER(0x20484708, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD450)
BCHP_REGISTER(0x2048470c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD451)
BCHP_REGISTER(0x20484710, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD452)
BCHP_REGISTER(0x20484714, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD453)
BCHP_REGISTER(0x20484718, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD454)
BCHP_REGISTER(0x2048471c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD455)
BCHP_REGISTER(0x20484720, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD456)
BCHP_REGISTER(0x20484724, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD457)
BCHP_REGISTER(0x20484728, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD458)
BCHP_REGISTER(0x2048472c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD459)
BCHP_REGISTER(0x20484730, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD460)
BCHP_REGISTER(0x20484734, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD461)
BCHP_REGISTER(0x20484738, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD462)
BCHP_REGISTER(0x2048473c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD463)
BCHP_REGISTER(0x20484740, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD464)
BCHP_REGISTER(0x20484744, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD465)
BCHP_REGISTER(0x20484748, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD466)
BCHP_REGISTER(0x2048474c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD467)
BCHP_REGISTER(0x20484750, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD468)
BCHP_REGISTER(0x20484754, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD469)
BCHP_REGISTER(0x20484758, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD470)
BCHP_REGISTER(0x2048475c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD471)
BCHP_REGISTER(0x20484760, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD472)
BCHP_REGISTER(0x20484764, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD473)
BCHP_REGISTER(0x20484768, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD474)
BCHP_REGISTER(0x2048476c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD475)
BCHP_REGISTER(0x20484770, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD476)
BCHP_REGISTER(0x20484774, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD477)
BCHP_REGISTER(0x20484778, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD478)
BCHP_REGISTER(0x2048477c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD479)
BCHP_REGISTER(0x20484780, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD480)
BCHP_REGISTER(0x20484784, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD481)
BCHP_REGISTER(0x20484788, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD482)
BCHP_REGISTER(0x2048478c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD483)
BCHP_REGISTER(0x20484790, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD484)
BCHP_REGISTER(0x20484794, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD485)
BCHP_REGISTER(0x20484798, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD486)
BCHP_REGISTER(0x2048479c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD487)
BCHP_REGISTER(0x204847a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD488)
BCHP_REGISTER(0x204847a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD489)
BCHP_REGISTER(0x204847a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD490)
BCHP_REGISTER(0x204847ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD491)
BCHP_REGISTER(0x204847b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD492)
BCHP_REGISTER(0x204847b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD493)
BCHP_REGISTER(0x204847b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD494)
BCHP_REGISTER(0x204847bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD495)
BCHP_REGISTER(0x204847c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD496)
BCHP_REGISTER(0x204847c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD497)
BCHP_REGISTER(0x204847c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD498)
BCHP_REGISTER(0x204847cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD499)
BCHP_REGISTER(0x204847d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD500)
BCHP_REGISTER(0x204847d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD501)
BCHP_REGISTER(0x204847d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD502)
BCHP_REGISTER(0x204847dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD503)
BCHP_REGISTER(0x204847e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD504)
BCHP_REGISTER(0x204847e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD505)
BCHP_REGISTER(0x204847e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD506)
BCHP_REGISTER(0x204847ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD507)
BCHP_REGISTER(0x204847f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD508)
BCHP_REGISTER(0x204847f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD509)
BCHP_REGISTER(0x204847f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD510)
BCHP_REGISTER(0x204847fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD511)
BCHP_REGISTER(0x20484800, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD512)
BCHP_REGISTER(0x20484804, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD513)
BCHP_REGISTER(0x20484808, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD514)
BCHP_REGISTER(0x2048480c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD515)
BCHP_REGISTER(0x20484810, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD516)
BCHP_REGISTER(0x20484814, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD517)
BCHP_REGISTER(0x20484818, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD518)
BCHP_REGISTER(0x2048481c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD519)
BCHP_REGISTER(0x20484820, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD520)
BCHP_REGISTER(0x20484824, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD521)
BCHP_REGISTER(0x20484828, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD522)
BCHP_REGISTER(0x2048482c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD523)
BCHP_REGISTER(0x20484830, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD524)
BCHP_REGISTER(0x20484834, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD525)
BCHP_REGISTER(0x20484838, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD526)
BCHP_REGISTER(0x2048483c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD527)
BCHP_REGISTER(0x20484840, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD528)
BCHP_REGISTER(0x20484844, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD529)
BCHP_REGISTER(0x20484848, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD530)
BCHP_REGISTER(0x2048484c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD531)
BCHP_REGISTER(0x20484850, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD532)
BCHP_REGISTER(0x20484854, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD533)
BCHP_REGISTER(0x20484858, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD534)
BCHP_REGISTER(0x2048485c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD535)
BCHP_REGISTER(0x20484860, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD536)
BCHP_REGISTER(0x20484864, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD537)
BCHP_REGISTER(0x20484868, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD538)
BCHP_REGISTER(0x2048486c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD539)
BCHP_REGISTER(0x20484870, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD540)
BCHP_REGISTER(0x20484874, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD541)
BCHP_REGISTER(0x20484878, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD542)
BCHP_REGISTER(0x2048487c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD543)
BCHP_REGISTER(0x20484880, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD544)
BCHP_REGISTER(0x20484884, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD545)
BCHP_REGISTER(0x20484888, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD546)
BCHP_REGISTER(0x2048488c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD547)
BCHP_REGISTER(0x20484890, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD548)
BCHP_REGISTER(0x20484894, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD549)
BCHP_REGISTER(0x20484898, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD550)
BCHP_REGISTER(0x2048489c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD551)
BCHP_REGISTER(0x204848a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD552)
BCHP_REGISTER(0x204848a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD553)
BCHP_REGISTER(0x204848a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD554)
BCHP_REGISTER(0x204848ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD555)
BCHP_REGISTER(0x204848b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD556)
BCHP_REGISTER(0x204848b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD557)
BCHP_REGISTER(0x204848b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD558)
BCHP_REGISTER(0x204848bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD559)
BCHP_REGISTER(0x204848c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD560)
BCHP_REGISTER(0x204848c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD561)
BCHP_REGISTER(0x204848c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD562)
BCHP_REGISTER(0x204848cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD563)
BCHP_REGISTER(0x204848d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD564)
BCHP_REGISTER(0x204848d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD565)
BCHP_REGISTER(0x204848d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD566)
BCHP_REGISTER(0x204848dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD567)
BCHP_REGISTER(0x204848e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD568)
BCHP_REGISTER(0x204848e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD569)
BCHP_REGISTER(0x204848e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD570)
BCHP_REGISTER(0x204848ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD571)
BCHP_REGISTER(0x204848f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD572)
BCHP_REGISTER(0x204848f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD573)
BCHP_REGISTER(0x204848f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD574)
BCHP_REGISTER(0x204848fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD575)
BCHP_REGISTER(0x20484900, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD576)
BCHP_REGISTER(0x20484904, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD577)
BCHP_REGISTER(0x20484908, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD578)
BCHP_REGISTER(0x2048490c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD579)
BCHP_REGISTER(0x20484910, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD580)
BCHP_REGISTER(0x20484914, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD581)
BCHP_REGISTER(0x20484918, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD582)
BCHP_REGISTER(0x2048491c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD583)
BCHP_REGISTER(0x20484920, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD584)
BCHP_REGISTER(0x20484924, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD585)
BCHP_REGISTER(0x20484928, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD586)
BCHP_REGISTER(0x2048492c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD587)
BCHP_REGISTER(0x20484930, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD588)
BCHP_REGISTER(0x20484934, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD589)
BCHP_REGISTER(0x20484938, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD590)
BCHP_REGISTER(0x2048493c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD591)
BCHP_REGISTER(0x20484940, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD592)
BCHP_REGISTER(0x20484944, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD593)
BCHP_REGISTER(0x20484948, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD594)
BCHP_REGISTER(0x2048494c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD595)
BCHP_REGISTER(0x20484950, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD596)
BCHP_REGISTER(0x20484954, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD597)
BCHP_REGISTER(0x20484958, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD598)
BCHP_REGISTER(0x2048495c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD599)
BCHP_REGISTER(0x20484960, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD600)
BCHP_REGISTER(0x20484964, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD601)
BCHP_REGISTER(0x20484968, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD602)
BCHP_REGISTER(0x2048496c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD603)
BCHP_REGISTER(0x20484970, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD604)
BCHP_REGISTER(0x20484974, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD605)
BCHP_REGISTER(0x20484978, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD606)
BCHP_REGISTER(0x2048497c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD607)
BCHP_REGISTER(0x20484980, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD608)
BCHP_REGISTER(0x20484984, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD609)
BCHP_REGISTER(0x20484988, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD610)
BCHP_REGISTER(0x2048498c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD611)
BCHP_REGISTER(0x20484990, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD612)
BCHP_REGISTER(0x20484994, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD613)
BCHP_REGISTER(0x20484998, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD614)
BCHP_REGISTER(0x2048499c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD615)
BCHP_REGISTER(0x204849a0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD616)
BCHP_REGISTER(0x204849a4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD617)
BCHP_REGISTER(0x204849a8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD618)
BCHP_REGISTER(0x204849ac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD619)
BCHP_REGISTER(0x204849b0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD620)
BCHP_REGISTER(0x204849b4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD621)
BCHP_REGISTER(0x204849b8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD622)
BCHP_REGISTER(0x204849bc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD623)
BCHP_REGISTER(0x204849c0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD624)
BCHP_REGISTER(0x204849c4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD625)
BCHP_REGISTER(0x204849c8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD626)
BCHP_REGISTER(0x204849cc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD627)
BCHP_REGISTER(0x204849d0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD628)
BCHP_REGISTER(0x204849d4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD629)
BCHP_REGISTER(0x204849d8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD630)
BCHP_REGISTER(0x204849dc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD631)
BCHP_REGISTER(0x204849e0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD632)
BCHP_REGISTER(0x204849e4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD633)
BCHP_REGISTER(0x204849e8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD634)
BCHP_REGISTER(0x204849ec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD635)
BCHP_REGISTER(0x204849f0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD636)
BCHP_REGISTER(0x204849f4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD637)
BCHP_REGISTER(0x204849f8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD638)
BCHP_REGISTER(0x204849fc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD639)
BCHP_REGISTER(0x20484a00, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD640)
BCHP_REGISTER(0x20484a04, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD641)
BCHP_REGISTER(0x20484a08, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD642)
BCHP_REGISTER(0x20484a0c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD643)
BCHP_REGISTER(0x20484a10, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD644)
BCHP_REGISTER(0x20484a14, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD645)
BCHP_REGISTER(0x20484a18, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD646)
BCHP_REGISTER(0x20484a1c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD647)
BCHP_REGISTER(0x20484a20, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD648)
BCHP_REGISTER(0x20484a24, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD649)
BCHP_REGISTER(0x20484a28, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD650)
BCHP_REGISTER(0x20484a2c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD651)
BCHP_REGISTER(0x20484a30, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD652)
BCHP_REGISTER(0x20484a34, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD653)
BCHP_REGISTER(0x20484a38, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD654)
BCHP_REGISTER(0x20484a3c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD655)
BCHP_REGISTER(0x20484a40, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD656)
BCHP_REGISTER(0x20484a44, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD657)
BCHP_REGISTER(0x20484a48, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD658)
BCHP_REGISTER(0x20484a4c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD659)
BCHP_REGISTER(0x20484a50, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD660)
BCHP_REGISTER(0x20484a54, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD661)
BCHP_REGISTER(0x20484a58, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD662)
BCHP_REGISTER(0x20484a5c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD663)
BCHP_REGISTER(0x20484a60, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD664)
BCHP_REGISTER(0x20484a64, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD665)
BCHP_REGISTER(0x20484a68, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD666)
BCHP_REGISTER(0x20484a6c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD667)
BCHP_REGISTER(0x20484a70, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD668)
BCHP_REGISTER(0x20484a74, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD669)
BCHP_REGISTER(0x20484a78, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD670)
BCHP_REGISTER(0x20484a7c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD671)
BCHP_REGISTER(0x20484a80, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD672)
BCHP_REGISTER(0x20484a84, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD673)
BCHP_REGISTER(0x20484a88, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD674)
BCHP_REGISTER(0x20484a8c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD675)
BCHP_REGISTER(0x20484a90, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD676)
BCHP_REGISTER(0x20484a94, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD677)
BCHP_REGISTER(0x20484a98, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD678)
BCHP_REGISTER(0x20484a9c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD679)
BCHP_REGISTER(0x20484aa0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD680)
BCHP_REGISTER(0x20484aa4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD681)
BCHP_REGISTER(0x20484aa8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD682)
BCHP_REGISTER(0x20484aac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD683)
BCHP_REGISTER(0x20484ab0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD684)
BCHP_REGISTER(0x20484ab4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD685)
BCHP_REGISTER(0x20484ab8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD686)
BCHP_REGISTER(0x20484abc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD687)
BCHP_REGISTER(0x20484ac0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD688)
BCHP_REGISTER(0x20484ac4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD689)
BCHP_REGISTER(0x20484ac8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD690)
BCHP_REGISTER(0x20484acc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD691)
BCHP_REGISTER(0x20484ad0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD692)
BCHP_REGISTER(0x20484ad4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD693)
BCHP_REGISTER(0x20484ad8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD694)
BCHP_REGISTER(0x20484adc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD695)
BCHP_REGISTER(0x20484ae0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD696)
BCHP_REGISTER(0x20484ae4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD697)
BCHP_REGISTER(0x20484ae8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD698)
BCHP_REGISTER(0x20484aec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD699)
BCHP_REGISTER(0x20484af0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD700)
BCHP_REGISTER(0x20484af4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD701)
BCHP_REGISTER(0x20484af8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD702)
BCHP_REGISTER(0x20484afc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD703)
BCHP_REGISTER(0x20484b00, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD704)
BCHP_REGISTER(0x20484b04, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD705)
BCHP_REGISTER(0x20484b08, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD706)
BCHP_REGISTER(0x20484b0c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD707)
BCHP_REGISTER(0x20484b10, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD708)
BCHP_REGISTER(0x20484b14, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD709)
BCHP_REGISTER(0x20484b18, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD710)
BCHP_REGISTER(0x20484b1c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD711)
BCHP_REGISTER(0x20484b20, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD712)
BCHP_REGISTER(0x20484b24, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD713)
BCHP_REGISTER(0x20484b28, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD714)
BCHP_REGISTER(0x20484b2c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD715)
BCHP_REGISTER(0x20484b30, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD716)
BCHP_REGISTER(0x20484b34, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD717)
BCHP_REGISTER(0x20484b38, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD718)
BCHP_REGISTER(0x20484b3c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD719)
BCHP_REGISTER(0x20484b40, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD720)
BCHP_REGISTER(0x20484b44, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD721)
BCHP_REGISTER(0x20484b48, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD722)
BCHP_REGISTER(0x20484b4c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD723)
BCHP_REGISTER(0x20484b50, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD724)
BCHP_REGISTER(0x20484b54, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD725)
BCHP_REGISTER(0x20484b58, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD726)
BCHP_REGISTER(0x20484b5c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD727)
BCHP_REGISTER(0x20484b60, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD728)
BCHP_REGISTER(0x20484b64, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD729)
BCHP_REGISTER(0x20484b68, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD730)
BCHP_REGISTER(0x20484b6c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD731)
BCHP_REGISTER(0x20484b70, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD732)
BCHP_REGISTER(0x20484b74, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD733)
BCHP_REGISTER(0x20484b78, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD734)
BCHP_REGISTER(0x20484b7c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD735)
BCHP_REGISTER(0x20484b80, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD736)
BCHP_REGISTER(0x20484b84, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD737)
BCHP_REGISTER(0x20484b88, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD738)
BCHP_REGISTER(0x20484b8c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD739)
BCHP_REGISTER(0x20484b90, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD740)
BCHP_REGISTER(0x20484b94, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD741)
BCHP_REGISTER(0x20484b98, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD742)
BCHP_REGISTER(0x20484b9c, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD743)
BCHP_REGISTER(0x20484ba0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD744)
BCHP_REGISTER(0x20484ba4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD745)
BCHP_REGISTER(0x20484ba8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD746)
BCHP_REGISTER(0x20484bac, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD747)
BCHP_REGISTER(0x20484bb0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD748)
BCHP_REGISTER(0x20484bb4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD749)
BCHP_REGISTER(0x20484bb8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD750)
BCHP_REGISTER(0x20484bbc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD751)
BCHP_REGISTER(0x20484bc0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD752)
BCHP_REGISTER(0x20484bc4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD753)
BCHP_REGISTER(0x20484bc8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD754)
BCHP_REGISTER(0x20484bcc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD755)
BCHP_REGISTER(0x20484bd0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD756)
BCHP_REGISTER(0x20484bd4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD757)
BCHP_REGISTER(0x20484bd8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD758)
BCHP_REGISTER(0x20484bdc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD759)
BCHP_REGISTER(0x20484be0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD760)
BCHP_REGISTER(0x20484be4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD761)
BCHP_REGISTER(0x20484be8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD762)
BCHP_REGISTER(0x20484bec, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD763)
BCHP_REGISTER(0x20484bf0, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD764)
BCHP_REGISTER(0x20484bf4, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD765)
BCHP_REGISTER(0x20484bf8, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD766)
BCHP_REGISTER(0x20484bfc, 32,  RW, GENET_0_TDMA, DESCRIPTOR_WORD767)
BCHP_REGISTER(0x20484c00, 32,  RW, GENET_0_TDMA, READ_POINTER0)
BCHP_REGISTER(0x20484c04, 32,  RW, GENET_0_TDMA, READ_POINTERH0)
BCHP_REGISTER(0x20484c08, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX0)
BCHP_REGISTER(0x20484c0c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX0)
BCHP_REGISTER(0x20484c10, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE0)
BCHP_REGISTER(0x20484c14, 32,  RW, GENET_0_TDMA, START_ADDRESS0)
BCHP_REGISTER(0x20484c18, 32,  RW, GENET_0_TDMA, START_ADDRESSH0)
BCHP_REGISTER(0x20484c1c, 32,  RW, GENET_0_TDMA, END_ADDRESS0)
BCHP_REGISTER(0x20484c20, 32,  RW, GENET_0_TDMA, END_ADDRESSH0)
BCHP_REGISTER(0x20484c24, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold0)
BCHP_REGISTER(0x20484c28, 32,  RW, GENET_0_TDMA, FLOW_PERIOD0)
BCHP_REGISTER(0x20484c2c, 32,  RW, GENET_0_TDMA, WRITE_POINTER0)
BCHP_REGISTER(0x20484c30, 32,  RW, GENET_0_TDMA, WRITE_POINTERH0)
BCHP_REGISTER(0x20484c34, 32,  RW, GENET_0_TDMA, UNUSED0_0)
BCHP_REGISTER(0x20484c38, 32,  RW, GENET_0_TDMA, UNUSED0_1)
BCHP_REGISTER(0x20484c3c, 32,  RW, GENET_0_TDMA, UNUSED0_2)
BCHP_REGISTER(0x20484c40, 32,  RW, GENET_0_TDMA, READ_POINTER1)
BCHP_REGISTER(0x20484c44, 32,  RW, GENET_0_TDMA, READ_POINTERH1)
BCHP_REGISTER(0x20484c48, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX1)
BCHP_REGISTER(0x20484c4c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX1)
BCHP_REGISTER(0x20484c50, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE1)
BCHP_REGISTER(0x20484c54, 32,  RW, GENET_0_TDMA, START_ADDRESS1)
BCHP_REGISTER(0x20484c58, 32,  RW, GENET_0_TDMA, START_ADDRESSH1)
BCHP_REGISTER(0x20484c5c, 32,  RW, GENET_0_TDMA, END_ADDRESS1)
BCHP_REGISTER(0x20484c60, 32,  RW, GENET_0_TDMA, END_ADDRESSH1)
BCHP_REGISTER(0x20484c64, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold1)
BCHP_REGISTER(0x20484c68, 32,  RW, GENET_0_TDMA, FLOW_PERIOD1)
BCHP_REGISTER(0x20484c6c, 32,  RW, GENET_0_TDMA, WRITE_POINTER1)
BCHP_REGISTER(0x20484c70, 32,  RW, GENET_0_TDMA, WRITE_POINTERH1)
BCHP_REGISTER(0x20484c74, 32,  RW, GENET_0_TDMA, UNUSED1_0)
BCHP_REGISTER(0x20484c78, 32,  RW, GENET_0_TDMA, UNUSED1_1)
BCHP_REGISTER(0x20484c7c, 32,  RW, GENET_0_TDMA, UNUSED1_2)
BCHP_REGISTER(0x20484c80, 32,  RW, GENET_0_TDMA, READ_POINTER2)
BCHP_REGISTER(0x20484c84, 32,  RW, GENET_0_TDMA, READ_POINTERH2)
BCHP_REGISTER(0x20484c88, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX2)
BCHP_REGISTER(0x20484c8c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX2)
BCHP_REGISTER(0x20484c90, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE2)
BCHP_REGISTER(0x20484c94, 32,  RW, GENET_0_TDMA, START_ADDRESS2)
BCHP_REGISTER(0x20484c98, 32,  RW, GENET_0_TDMA, START_ADDRESSH2)
BCHP_REGISTER(0x20484c9c, 32,  RW, GENET_0_TDMA, END_ADDRESS2)
BCHP_REGISTER(0x20484ca0, 32,  RW, GENET_0_TDMA, END_ADDRESSH2)
BCHP_REGISTER(0x20484ca4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold2)
BCHP_REGISTER(0x20484ca8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD2)
BCHP_REGISTER(0x20484cac, 32,  RW, GENET_0_TDMA, WRITE_POINTER2)
BCHP_REGISTER(0x20484cb0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH2)
BCHP_REGISTER(0x20484cb4, 32,  RW, GENET_0_TDMA, UNUSED2_0)
BCHP_REGISTER(0x20484cb8, 32,  RW, GENET_0_TDMA, UNUSED2_1)
BCHP_REGISTER(0x20484cbc, 32,  RW, GENET_0_TDMA, UNUSED2_2)
BCHP_REGISTER(0x20484cc0, 32,  RW, GENET_0_TDMA, READ_POINTER3)
BCHP_REGISTER(0x20484cc4, 32,  RW, GENET_0_TDMA, READ_POINTERH3)
BCHP_REGISTER(0x20484cc8, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX3)
BCHP_REGISTER(0x20484ccc, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX3)
BCHP_REGISTER(0x20484cd0, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE3)
BCHP_REGISTER(0x20484cd4, 32,  RW, GENET_0_TDMA, START_ADDRESS3)
BCHP_REGISTER(0x20484cd8, 32,  RW, GENET_0_TDMA, START_ADDRESSH3)
BCHP_REGISTER(0x20484cdc, 32,  RW, GENET_0_TDMA, END_ADDRESS3)
BCHP_REGISTER(0x20484ce0, 32,  RW, GENET_0_TDMA, END_ADDRESSH3)
BCHP_REGISTER(0x20484ce4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold3)
BCHP_REGISTER(0x20484ce8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD3)
BCHP_REGISTER(0x20484cec, 32,  RW, GENET_0_TDMA, WRITE_POINTER3)
BCHP_REGISTER(0x20484cf0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH3)
BCHP_REGISTER(0x20484cf4, 32,  RW, GENET_0_TDMA, UNUSED3_0)
BCHP_REGISTER(0x20484cf8, 32,  RW, GENET_0_TDMA, UNUSED3_1)
BCHP_REGISTER(0x20484cfc, 32,  RW, GENET_0_TDMA, UNUSED3_2)
BCHP_REGISTER(0x20484d00, 32,  RW, GENET_0_TDMA, READ_POINTER4)
BCHP_REGISTER(0x20484d04, 32,  RW, GENET_0_TDMA, READ_POINTERH4)
BCHP_REGISTER(0x20484d08, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX4)
BCHP_REGISTER(0x20484d0c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX4)
BCHP_REGISTER(0x20484d10, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE4)
BCHP_REGISTER(0x20484d14, 32,  RW, GENET_0_TDMA, START_ADDRESS4)
BCHP_REGISTER(0x20484d18, 32,  RW, GENET_0_TDMA, START_ADDRESSH4)
BCHP_REGISTER(0x20484d1c, 32,  RW, GENET_0_TDMA, END_ADDRESS4)
BCHP_REGISTER(0x20484d20, 32,  RW, GENET_0_TDMA, END_ADDRESSH4)
BCHP_REGISTER(0x20484d24, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold4)
BCHP_REGISTER(0x20484d28, 32,  RW, GENET_0_TDMA, FLOW_PERIOD4)
BCHP_REGISTER(0x20484d2c, 32,  RW, GENET_0_TDMA, WRITE_POINTER4)
BCHP_REGISTER(0x20484d30, 32,  RW, GENET_0_TDMA, WRITE_POINTERH4)
BCHP_REGISTER(0x20484d34, 32,  RW, GENET_0_TDMA, UNUSED4_0)
BCHP_REGISTER(0x20484d38, 32,  RW, GENET_0_TDMA, UNUSED4_1)
BCHP_REGISTER(0x20484d3c, 32,  RW, GENET_0_TDMA, UNUSED4_2)
BCHP_REGISTER(0x20484d40, 32,  RW, GENET_0_TDMA, READ_POINTER5)
BCHP_REGISTER(0x20484d44, 32,  RW, GENET_0_TDMA, READ_POINTERH5)
BCHP_REGISTER(0x20484d48, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX5)
BCHP_REGISTER(0x20484d4c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX5)
BCHP_REGISTER(0x20484d50, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE5)
BCHP_REGISTER(0x20484d54, 32,  RW, GENET_0_TDMA, START_ADDRESS5)
BCHP_REGISTER(0x20484d58, 32,  RW, GENET_0_TDMA, START_ADDRESSH5)
BCHP_REGISTER(0x20484d5c, 32,  RW, GENET_0_TDMA, END_ADDRESS5)
BCHP_REGISTER(0x20484d60, 32,  RW, GENET_0_TDMA, END_ADDRESSH5)
BCHP_REGISTER(0x20484d64, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold5)
BCHP_REGISTER(0x20484d68, 32,  RW, GENET_0_TDMA, FLOW_PERIOD5)
BCHP_REGISTER(0x20484d6c, 32,  RW, GENET_0_TDMA, WRITE_POINTER5)
BCHP_REGISTER(0x20484d70, 32,  RW, GENET_0_TDMA, WRITE_POINTERH5)
BCHP_REGISTER(0x20484d74, 32,  RW, GENET_0_TDMA, UNUSED5_0)
BCHP_REGISTER(0x20484d78, 32,  RW, GENET_0_TDMA, UNUSED5_1)
BCHP_REGISTER(0x20484d7c, 32,  RW, GENET_0_TDMA, UNUSED5_2)
BCHP_REGISTER(0x20484d80, 32,  RW, GENET_0_TDMA, READ_POINTER6)
BCHP_REGISTER(0x20484d84, 32,  RW, GENET_0_TDMA, READ_POINTERH6)
BCHP_REGISTER(0x20484d88, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX6)
BCHP_REGISTER(0x20484d8c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX6)
BCHP_REGISTER(0x20484d90, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE6)
BCHP_REGISTER(0x20484d94, 32,  RW, GENET_0_TDMA, START_ADDRESS6)
BCHP_REGISTER(0x20484d98, 32,  RW, GENET_0_TDMA, START_ADDRESSH6)
BCHP_REGISTER(0x20484d9c, 32,  RW, GENET_0_TDMA, END_ADDRESS6)
BCHP_REGISTER(0x20484da0, 32,  RW, GENET_0_TDMA, END_ADDRESSH6)
BCHP_REGISTER(0x20484da4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold6)
BCHP_REGISTER(0x20484da8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD6)
BCHP_REGISTER(0x20484dac, 32,  RW, GENET_0_TDMA, WRITE_POINTER6)
BCHP_REGISTER(0x20484db0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH6)
BCHP_REGISTER(0x20484db4, 32,  RW, GENET_0_TDMA, UNUSED6_0)
BCHP_REGISTER(0x20484db8, 32,  RW, GENET_0_TDMA, UNUSED6_1)
BCHP_REGISTER(0x20484dbc, 32,  RW, GENET_0_TDMA, UNUSED6_2)
BCHP_REGISTER(0x20484dc0, 32,  RW, GENET_0_TDMA, READ_POINTER7)
BCHP_REGISTER(0x20484dc4, 32,  RW, GENET_0_TDMA, READ_POINTERH7)
BCHP_REGISTER(0x20484dc8, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX7)
BCHP_REGISTER(0x20484dcc, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX7)
BCHP_REGISTER(0x20484dd0, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE7)
BCHP_REGISTER(0x20484dd4, 32,  RW, GENET_0_TDMA, START_ADDRESS7)
BCHP_REGISTER(0x20484dd8, 32,  RW, GENET_0_TDMA, START_ADDRESSH7)
BCHP_REGISTER(0x20484ddc, 32,  RW, GENET_0_TDMA, END_ADDRESS7)
BCHP_REGISTER(0x20484de0, 32,  RW, GENET_0_TDMA, END_ADDRESSH7)
BCHP_REGISTER(0x20484de4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold7)
BCHP_REGISTER(0x20484de8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD7)
BCHP_REGISTER(0x20484dec, 32,  RW, GENET_0_TDMA, WRITE_POINTER7)
BCHP_REGISTER(0x20484df0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH7)
BCHP_REGISTER(0x20484df4, 32,  RW, GENET_0_TDMA, UNUSED7_0)
BCHP_REGISTER(0x20484df8, 32,  RW, GENET_0_TDMA, UNUSED7_1)
BCHP_REGISTER(0x20484dfc, 32,  RW, GENET_0_TDMA, UNUSED7_2)
BCHP_REGISTER(0x20484e00, 32,  RW, GENET_0_TDMA, READ_POINTER8)
BCHP_REGISTER(0x20484e04, 32,  RW, GENET_0_TDMA, READ_POINTERH8)
BCHP_REGISTER(0x20484e08, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX8)
BCHP_REGISTER(0x20484e0c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX8)
BCHP_REGISTER(0x20484e10, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE8)
BCHP_REGISTER(0x20484e14, 32,  RW, GENET_0_TDMA, START_ADDRESS8)
BCHP_REGISTER(0x20484e18, 32,  RW, GENET_0_TDMA, START_ADDRESSH8)
BCHP_REGISTER(0x20484e1c, 32,  RW, GENET_0_TDMA, END_ADDRESS8)
BCHP_REGISTER(0x20484e20, 32,  RW, GENET_0_TDMA, END_ADDRESSH8)
BCHP_REGISTER(0x20484e24, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold8)
BCHP_REGISTER(0x20484e28, 32,  RW, GENET_0_TDMA, FLOW_PERIOD8)
BCHP_REGISTER(0x20484e2c, 32,  RW, GENET_0_TDMA, WRITE_POINTER8)
BCHP_REGISTER(0x20484e30, 32,  RW, GENET_0_TDMA, WRITE_POINTERH8)
BCHP_REGISTER(0x20484e34, 32,  RW, GENET_0_TDMA, UNUSED8_0)
BCHP_REGISTER(0x20484e38, 32,  RW, GENET_0_TDMA, UNUSED8_1)
BCHP_REGISTER(0x20484e3c, 32,  RW, GENET_0_TDMA, UNUSED8_2)
BCHP_REGISTER(0x20484e40, 32,  RW, GENET_0_TDMA, READ_POINTER9)
BCHP_REGISTER(0x20484e44, 32,  RW, GENET_0_TDMA, READ_POINTERH9)
BCHP_REGISTER(0x20484e48, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX9)
BCHP_REGISTER(0x20484e4c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX9)
BCHP_REGISTER(0x20484e50, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE9)
BCHP_REGISTER(0x20484e54, 32,  RW, GENET_0_TDMA, START_ADDRESS9)
BCHP_REGISTER(0x20484e58, 32,  RW, GENET_0_TDMA, START_ADDRESSH9)
BCHP_REGISTER(0x20484e5c, 32,  RW, GENET_0_TDMA, END_ADDRESS9)
BCHP_REGISTER(0x20484e60, 32,  RW, GENET_0_TDMA, END_ADDRESSH9)
BCHP_REGISTER(0x20484e64, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold9)
BCHP_REGISTER(0x20484e68, 32,  RW, GENET_0_TDMA, FLOW_PERIOD9)
BCHP_REGISTER(0x20484e6c, 32,  RW, GENET_0_TDMA, WRITE_POINTER9)
BCHP_REGISTER(0x20484e70, 32,  RW, GENET_0_TDMA, WRITE_POINTERH9)
BCHP_REGISTER(0x20484e74, 32,  RW, GENET_0_TDMA, UNUSED9_0)
BCHP_REGISTER(0x20484e78, 32,  RW, GENET_0_TDMA, UNUSED9_1)
BCHP_REGISTER(0x20484e7c, 32,  RW, GENET_0_TDMA, UNUSED9_2)
BCHP_REGISTER(0x20484e80, 32,  RW, GENET_0_TDMA, READ_POINTER10)
BCHP_REGISTER(0x20484e84, 32,  RW, GENET_0_TDMA, READ_POINTERH10)
BCHP_REGISTER(0x20484e88, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX10)
BCHP_REGISTER(0x20484e8c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX10)
BCHP_REGISTER(0x20484e90, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE10)
BCHP_REGISTER(0x20484e94, 32,  RW, GENET_0_TDMA, START_ADDRESS10)
BCHP_REGISTER(0x20484e98, 32,  RW, GENET_0_TDMA, START_ADDRESSH10)
BCHP_REGISTER(0x20484e9c, 32,  RW, GENET_0_TDMA, END_ADDRESS10)
BCHP_REGISTER(0x20484ea0, 32,  RW, GENET_0_TDMA, END_ADDRESSH10)
BCHP_REGISTER(0x20484ea4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold10)
BCHP_REGISTER(0x20484ea8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD10)
BCHP_REGISTER(0x20484eac, 32,  RW, GENET_0_TDMA, WRITE_POINTER10)
BCHP_REGISTER(0x20484eb0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH10)
BCHP_REGISTER(0x20484eb4, 32,  RW, GENET_0_TDMA, UNUSED10_0)
BCHP_REGISTER(0x20484eb8, 32,  RW, GENET_0_TDMA, UNUSED10_1)
BCHP_REGISTER(0x20484ebc, 32,  RW, GENET_0_TDMA, UNUSED10_2)
BCHP_REGISTER(0x20484ec0, 32,  RW, GENET_0_TDMA, READ_POINTER11)
BCHP_REGISTER(0x20484ec4, 32,  RW, GENET_0_TDMA, READ_POINTERH11)
BCHP_REGISTER(0x20484ec8, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX11)
BCHP_REGISTER(0x20484ecc, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX11)
BCHP_REGISTER(0x20484ed0, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE11)
BCHP_REGISTER(0x20484ed4, 32,  RW, GENET_0_TDMA, START_ADDRESS11)
BCHP_REGISTER(0x20484ed8, 32,  RW, GENET_0_TDMA, START_ADDRESSH11)
BCHP_REGISTER(0x20484edc, 32,  RW, GENET_0_TDMA, END_ADDRESS11)
BCHP_REGISTER(0x20484ee0, 32,  RW, GENET_0_TDMA, END_ADDRESSH11)
BCHP_REGISTER(0x20484ee4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold11)
BCHP_REGISTER(0x20484ee8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD11)
BCHP_REGISTER(0x20484eec, 32,  RW, GENET_0_TDMA, WRITE_POINTER11)
BCHP_REGISTER(0x20484ef0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH11)
BCHP_REGISTER(0x20484ef4, 32,  RW, GENET_0_TDMA, UNUSED11_0)
BCHP_REGISTER(0x20484ef8, 32,  RW, GENET_0_TDMA, UNUSED11_1)
BCHP_REGISTER(0x20484efc, 32,  RW, GENET_0_TDMA, UNUSED11_2)
BCHP_REGISTER(0x20484f00, 32,  RW, GENET_0_TDMA, READ_POINTER12)
BCHP_REGISTER(0x20484f04, 32,  RW, GENET_0_TDMA, READ_POINTERH12)
BCHP_REGISTER(0x20484f08, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX12)
BCHP_REGISTER(0x20484f0c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX12)
BCHP_REGISTER(0x20484f10, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE12)
BCHP_REGISTER(0x20484f14, 32,  RW, GENET_0_TDMA, START_ADDRESS12)
BCHP_REGISTER(0x20484f18, 32,  RW, GENET_0_TDMA, START_ADDRESSH12)
BCHP_REGISTER(0x20484f1c, 32,  RW, GENET_0_TDMA, END_ADDRESS12)
BCHP_REGISTER(0x20484f20, 32,  RW, GENET_0_TDMA, END_ADDRESSH12)
BCHP_REGISTER(0x20484f24, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold12)
BCHP_REGISTER(0x20484f28, 32,  RW, GENET_0_TDMA, FLOW_PERIOD12)
BCHP_REGISTER(0x20484f2c, 32,  RW, GENET_0_TDMA, WRITE_POINTER12)
BCHP_REGISTER(0x20484f30, 32,  RW, GENET_0_TDMA, WRITE_POINTERH12)
BCHP_REGISTER(0x20484f34, 32,  RW, GENET_0_TDMA, UNUSED12_0)
BCHP_REGISTER(0x20484f38, 32,  RW, GENET_0_TDMA, UNUSED12_1)
BCHP_REGISTER(0x20484f3c, 32,  RW, GENET_0_TDMA, UNUSED12_2)
BCHP_REGISTER(0x20484f40, 32,  RW, GENET_0_TDMA, READ_POINTER13)
BCHP_REGISTER(0x20484f44, 32,  RW, GENET_0_TDMA, READ_POINTERH13)
BCHP_REGISTER(0x20484f48, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX13)
BCHP_REGISTER(0x20484f4c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX13)
BCHP_REGISTER(0x20484f50, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE13)
BCHP_REGISTER(0x20484f54, 32,  RW, GENET_0_TDMA, START_ADDRESS13)
BCHP_REGISTER(0x20484f58, 32,  RW, GENET_0_TDMA, START_ADDRESSH13)
BCHP_REGISTER(0x20484f5c, 32,  RW, GENET_0_TDMA, END_ADDRESS13)
BCHP_REGISTER(0x20484f60, 32,  RW, GENET_0_TDMA, END_ADDRESSH13)
BCHP_REGISTER(0x20484f64, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold13)
BCHP_REGISTER(0x20484f68, 32,  RW, GENET_0_TDMA, FLOW_PERIOD13)
BCHP_REGISTER(0x20484f6c, 32,  RW, GENET_0_TDMA, WRITE_POINTER13)
BCHP_REGISTER(0x20484f70, 32,  RW, GENET_0_TDMA, WRITE_POINTERH13)
BCHP_REGISTER(0x20484f74, 32,  RW, GENET_0_TDMA, UNUSED13_0)
BCHP_REGISTER(0x20484f78, 32,  RW, GENET_0_TDMA, UNUSED13_1)
BCHP_REGISTER(0x20484f7c, 32,  RW, GENET_0_TDMA, UNUSED13_2)
BCHP_REGISTER(0x20484f80, 32,  RW, GENET_0_TDMA, READ_POINTER14)
BCHP_REGISTER(0x20484f84, 32,  RW, GENET_0_TDMA, READ_POINTERH14)
BCHP_REGISTER(0x20484f88, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX14)
BCHP_REGISTER(0x20484f8c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX14)
BCHP_REGISTER(0x20484f90, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE14)
BCHP_REGISTER(0x20484f94, 32,  RW, GENET_0_TDMA, START_ADDRESS14)
BCHP_REGISTER(0x20484f98, 32,  RW, GENET_0_TDMA, START_ADDRESSH14)
BCHP_REGISTER(0x20484f9c, 32,  RW, GENET_0_TDMA, END_ADDRESS14)
BCHP_REGISTER(0x20484fa0, 32,  RW, GENET_0_TDMA, END_ADDRESSH14)
BCHP_REGISTER(0x20484fa4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold14)
BCHP_REGISTER(0x20484fa8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD14)
BCHP_REGISTER(0x20484fac, 32,  RW, GENET_0_TDMA, WRITE_POINTER14)
BCHP_REGISTER(0x20484fb0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH14)
BCHP_REGISTER(0x20484fb4, 32,  RW, GENET_0_TDMA, UNUSED14_0)
BCHP_REGISTER(0x20484fb8, 32,  RW, GENET_0_TDMA, UNUSED14_1)
BCHP_REGISTER(0x20484fbc, 32,  RW, GENET_0_TDMA, UNUSED14_2)
BCHP_REGISTER(0x20484fc0, 32,  RW, GENET_0_TDMA, READ_POINTER15)
BCHP_REGISTER(0x20484fc4, 32,  RW, GENET_0_TDMA, READ_POINTERH15)
BCHP_REGISTER(0x20484fc8, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX15)
BCHP_REGISTER(0x20484fcc, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX15)
BCHP_REGISTER(0x20484fd0, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE15)
BCHP_REGISTER(0x20484fd4, 32,  RW, GENET_0_TDMA, START_ADDRESS15)
BCHP_REGISTER(0x20484fd8, 32,  RW, GENET_0_TDMA, START_ADDRESSH15)
BCHP_REGISTER(0x20484fdc, 32,  RW, GENET_0_TDMA, END_ADDRESS15)
BCHP_REGISTER(0x20484fe0, 32,  RW, GENET_0_TDMA, END_ADDRESSH15)
BCHP_REGISTER(0x20484fe4, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold15)
BCHP_REGISTER(0x20484fe8, 32,  RW, GENET_0_TDMA, FLOW_PERIOD15)
BCHP_REGISTER(0x20484fec, 32,  RW, GENET_0_TDMA, WRITE_POINTER15)
BCHP_REGISTER(0x20484ff0, 32,  RW, GENET_0_TDMA, WRITE_POINTERH15)
BCHP_REGISTER(0x20484ff4, 32,  RW, GENET_0_TDMA, UNUSED15_0)
BCHP_REGISTER(0x20484ff8, 32,  RW, GENET_0_TDMA, UNUSED15_1)
BCHP_REGISTER(0x20484ffc, 32,  RW, GENET_0_TDMA, UNUSED15_2)
BCHP_REGISTER(0x20485000, 32,  RW, GENET_0_TDMA, READ_POINTER16)
BCHP_REGISTER(0x20485004, 32,  RW, GENET_0_TDMA, READ_POINTERH16)
BCHP_REGISTER(0x20485008, 32,  RW, GENET_0_TDMA, CONSUMER_INDEX16)
BCHP_REGISTER(0x2048500c, 32,  RW, GENET_0_TDMA, PRODUCER_INDEX16)
BCHP_REGISTER(0x20485010, 32,  RW, GENET_0_TDMA, RING_BUF_SIZE16)
BCHP_REGISTER(0x20485014, 32,  RW, GENET_0_TDMA, START_ADDRESS16)
BCHP_REGISTER(0x20485018, 32,  RW, GENET_0_TDMA, START_ADDRESSH16)
BCHP_REGISTER(0x2048501c, 32,  RW, GENET_0_TDMA, END_ADDRESS16)
BCHP_REGISTER(0x20485020, 32,  RW, GENET_0_TDMA, END_ADDRESSH16)
BCHP_REGISTER(0x20485024, 32,  RW, GENET_0_TDMA, Multiple_Buffers_Done_Interrupt_Threshold16)
BCHP_REGISTER(0x20485028, 32,  RW, GENET_0_TDMA, FLOW_PERIOD16)
BCHP_REGISTER(0x2048502c, 32,  RW, GENET_0_TDMA, WRITE_POINTER16)
BCHP_REGISTER(0x20485030, 32,  RW, GENET_0_TDMA, WRITE_POINTERH16)
BCHP_REGISTER(0x20485034, 32,  RW, GENET_0_TDMA, UNUSED16_0)
BCHP_REGISTER(0x20485038, 32,  RW, GENET_0_TDMA, UNUSED16_1)
BCHP_REGISTER(0x2048503c, 32,  RW, GENET_0_TDMA, UNUSED16_2)
BCHP_REGISTER(0x20485040, 32,  RW, GENET_0_TDMA, RING_CFG)
BCHP_REGISTER(0x20485044, 32,  RW, GENET_0_TDMA, CONTROL)
BCHP_REGISTER(0x20485048, 32,  RO, GENET_0_TDMA, STATUS)
BCHP_REGISTER(0x2048504c, 32,  RW, GENET_0_TDMA, SCB_BURST_SIZE)
BCHP_REGISTER(0x20485050, 32,  RO, GENET_0_TDMA, ACTIVITY)
BCHP_REGISTER(0x20485054, 32,  RW, GENET_0_TDMA, MASK)
BCHP_REGISTER(0x20485058, 32,  RW, GENET_0_TDMA, MAP0)
BCHP_REGISTER(0x2048505c, 32,  RW, GENET_0_TDMA, MAP1)
BCHP_REGISTER(0x20485060, 32,  RO, GENET_0_TDMA, BACK_STATUS)
BCHP_REGISTER(0x20485064, 32,  RW, GENET_0_TDMA, OVERRIDE)
BCHP_REGISTER(0x20485068, 32,  RW, GENET_0_TDMA, RATE_LIMIT_CTRL)
BCHP_REGISTER(0x2048506c, 32,  RW, GENET_0_TDMA, ARB_CTRL)
BCHP_REGISTER(0x20485070, 32,  RW, GENET_0_TDMA, PRIORITY0)
BCHP_REGISTER(0x20485074, 32,  RW, GENET_0_TDMA, PRIORITY1)
BCHP_REGISTER(0x20485078, 32,  RW, GENET_0_TDMA, PRIORITY2)
BCHP_REGISTER(0x2048507c, 32,  RW, GENET_0_TDMA, RATE_ADJ)
BCHP_REGISTER(0x20485080, 32,  RW, GENET_0_TDMA, TEST)
BCHP_REGISTER(0x20485084, 32,  RO, GENET_0_TDMA, DEBUG)
BCHP_REGISTER(0x2048fc00, 32,  RW, GENET_0_HFB, CNTRL)
BCHP_REGISTER(0x2048fc04, 32,  RW, GENET_0_HFB, FLT_ENBLE_1)
BCHP_REGISTER(0x2048fc08, 32,  RW, GENET_0_HFB, FLT_ENBLE_0)
BCHP_REGISTER(0x2048fc1c, 32,  RW, GENET_0_HFB, FLTR_LEN_11)
BCHP_REGISTER(0x2048fc20, 32,  RW, GENET_0_HFB, FLTR_LEN_10)
BCHP_REGISTER(0x2048fc24, 32,  RW, GENET_0_HFB, FLTR_LEN_9)
BCHP_REGISTER(0x2048fc28, 32,  RW, GENET_0_HFB, FLTR_LEN_8)
BCHP_REGISTER(0x2048fc2c, 32,  RW, GENET_0_HFB, FLTR_LEN_7)
BCHP_REGISTER(0x2048fc30, 32,  RW, GENET_0_HFB, FLTR_LEN_6)
BCHP_REGISTER(0x2048fc34, 32,  RW, GENET_0_HFB, FLTR_LEN_5)
BCHP_REGISTER(0x2048fc38, 32,  RW, GENET_0_HFB, FLTR_LEN_4)
BCHP_REGISTER(0x2048fc3c, 32,  RW, GENET_0_HFB, FLTR_LEN_3)
BCHP_REGISTER(0x2048fc40, 32,  RW, GENET_0_HFB, FLTR_LEN_2)
BCHP_REGISTER(0x2048fc44, 32,  RW, GENET_0_HFB, FLTR_LEN_1)
BCHP_REGISTER(0x2048fc48, 32,  RW, GENET_0_HFB, FLTR_LEN_0)
BCHP_REGISTER(0x204c8000, 32,  RO, AVS_CPU_CORE_REGS, R0)
BCHP_REGISTER(0x204c8004, 32,  RO, AVS_CPU_CORE_REGS, R1)
BCHP_REGISTER(0x204c8008, 32,  RO, AVS_CPU_CORE_REGS, R2)
BCHP_REGISTER(0x204c800c, 32,  RO, AVS_CPU_CORE_REGS, R3)
BCHP_REGISTER(0x204c8010, 32,  RO, AVS_CPU_CORE_REGS, R4)
BCHP_REGISTER(0x204c8014, 32,  RO, AVS_CPU_CORE_REGS, R5)
BCHP_REGISTER(0x204c8018, 32,  RO, AVS_CPU_CORE_REGS, R6)
BCHP_REGISTER(0x204c801c, 32,  RO, AVS_CPU_CORE_REGS, R7)
BCHP_REGISTER(0x204c8020, 32,  RO, AVS_CPU_CORE_REGS, R8)
BCHP_REGISTER(0x204c8024, 32,  RO, AVS_CPU_CORE_REGS, R9)
BCHP_REGISTER(0x204c8028, 32,  RO, AVS_CPU_CORE_REGS, R10)
BCHP_REGISTER(0x204c802c, 32,  RO, AVS_CPU_CORE_REGS, R11)
BCHP_REGISTER(0x204c8030, 32,  RO, AVS_CPU_CORE_REGS, R12)
BCHP_REGISTER(0x204c8034, 32,  RO, AVS_CPU_CORE_REGS, R13)
BCHP_REGISTER(0x204c8038, 32,  RO, AVS_CPU_CORE_REGS, R14)
BCHP_REGISTER(0x204c803c, 32,  RO, AVS_CPU_CORE_REGS, R15)
BCHP_REGISTER(0x204c8040, 32,  RO, AVS_CPU_CORE_REGS, R16)
BCHP_REGISTER(0x204c8044, 32,  RO, AVS_CPU_CORE_REGS, R17)
BCHP_REGISTER(0x204c8048, 32,  RO, AVS_CPU_CORE_REGS, R18)
BCHP_REGISTER(0x204c804c, 32,  RO, AVS_CPU_CORE_REGS, R19)
BCHP_REGISTER(0x204c8050, 32,  RO, AVS_CPU_CORE_REGS, R20)
BCHP_REGISTER(0x204c8054, 32,  RO, AVS_CPU_CORE_REGS, R21)
BCHP_REGISTER(0x204c8058, 32,  RO, AVS_CPU_CORE_REGS, R22)
BCHP_REGISTER(0x204c805c, 32,  RO, AVS_CPU_CORE_REGS, R23)
BCHP_REGISTER(0x204c8060, 32,  RO, AVS_CPU_CORE_REGS, R24)
BCHP_REGISTER(0x204c8064, 32,  RO, AVS_CPU_CORE_REGS, R25)
BCHP_REGISTER(0x204c8068, 32,  RO, AVS_CPU_CORE_REGS, R26)
BCHP_REGISTER(0x204c806c, 32,  RO, AVS_CPU_CORE_REGS, R27)
BCHP_REGISTER(0x204c8070, 32,  RO, AVS_CPU_CORE_REGS, R28)
BCHP_REGISTER(0x204c8074, 32,  RO, AVS_CPU_CORE_REGS, R29)
BCHP_REGISTER(0x204c8078, 32,  RO, AVS_CPU_CORE_REGS, R30)
BCHP_REGISTER(0x204c807c, 32,  RO, AVS_CPU_CORE_REGS, R31)
BCHP_REGISTER(0x204c80f0, 32,  RO, AVS_CPU_CORE_REGS, R60)
BCHP_REGISTER(0x204c80f8, 32,  RO, AVS_CPU_CORE_REGS, R62)
BCHP_REGISTER(0x204c80fc, 32,  RO, AVS_CPU_CORE_REGS, R63)
BCHP_REGISTER(0x204ca000, 32,  RO, AVS_CPU_AUX_REGS, STATUS)
BCHP_REGISTER(0x204ca004, 32,  RW, AVS_CPU_AUX_REGS, SEMAPHORE)
BCHP_REGISTER(0x204ca008, 32,  RW, AVS_CPU_AUX_REGS, LP_START)
BCHP_REGISTER(0x204ca00c, 32,  RW, AVS_CPU_AUX_REGS, LP_END)
BCHP_REGISTER(0x204ca010, 32,  RO, AVS_CPU_AUX_REGS, IDENTITY)
BCHP_REGISTER(0x204ca014, 32,  RW, AVS_CPU_AUX_REGS, DEBUG_AVS)
BCHP_REGISTER(0x204ca018, 32,  RO, AVS_CPU_AUX_REGS, PC)
BCHP_REGISTER(0x204ca028, 32,  RO, AVS_CPU_AUX_REGS, STATUS32)
BCHP_REGISTER(0x204ca02c, 32,  RW, AVS_CPU_AUX_REGS, STATUS32_L1)
BCHP_REGISTER(0x204ca030, 32,  RW, AVS_CPU_AUX_REGS, STATUS32_L2)
BCHP_REGISTER(0x204ca060, 32,  RW, AVS_CPU_AUX_REGS, AUX_DCCM)
BCHP_REGISTER(0x204ca084, 32,  RW, AVS_CPU_AUX_REGS, TIMER0_COUNT)
BCHP_REGISTER(0x204ca088, 32,  RW, AVS_CPU_AUX_REGS, TIMER0_CONTROL)
BCHP_REGISTER(0x204ca08c, 32,  RW, AVS_CPU_AUX_REGS, TIMER0_LIMIT)
BCHP_REGISTER(0x204ca094, 32,  RW, AVS_CPU_AUX_REGS, INT_VEC_BASE)
BCHP_REGISTER(0x204ca10c, 32,  RW, AVS_CPU_AUX_REGS, AUX_IRQ_LV12)
BCHP_REGISTER(0x204ca188, 32,  RO, AVS_CPU_AUX_REGS, CRC_BUILD_BCR)
BCHP_REGISTER(0x204ca190, 32,  RO, AVS_CPU_AUX_REGS, DVBF_BUILD)
BCHP_REGISTER(0x204ca194, 32,  RO, AVS_CPU_AUX_REGS, EXT_ARITH_BUILD)
BCHP_REGISTER(0x204ca198, 32,  RO, AVS_CPU_AUX_REGS, DATASPACE)
BCHP_REGISTER(0x204ca19c, 32,  RO, AVS_CPU_AUX_REGS, MEMSUBSYS)
BCHP_REGISTER(0x204ca1a0, 32,  RO, AVS_CPU_AUX_REGS, VECBASE_AC_BUILD)
BCHP_REGISTER(0x204ca1a4, 32,  RO, AVS_CPU_AUX_REGS, P_BASE_ADDR)
BCHP_REGISTER(0x204ca1b4, 32,  RO, AVS_CPU_AUX_REGS, MPU_BUILD)
BCHP_REGISTER(0x204ca1b8, 32,  RO, AVS_CPU_AUX_REGS, RF_BUILD)
BCHP_REGISTER(0x204ca1c8, 32,  RO, AVS_CPU_AUX_REGS, D_CACHE_BUILD)
BCHP_REGISTER(0x204ca1cc, 32,  RO, AVS_CPU_AUX_REGS, MADI_BUILD)
BCHP_REGISTER(0x204ca1d0, 32,  RO, AVS_CPU_AUX_REGS, DCCM_BUILD)
BCHP_REGISTER(0x204ca1d4, 32,  RO, AVS_CPU_AUX_REGS, TIMER_BUILD)
BCHP_REGISTER(0x204ca1d8, 32,  RO, AVS_CPU_AUX_REGS, AP_BUILD)
BCHP_REGISTER(0x204ca1dc, 32,  RO, AVS_CPU_AUX_REGS, I_CACHE_BUILD)
BCHP_REGISTER(0x204ca1e0, 32,  RO, AVS_CPU_AUX_REGS, ICCM_BUILD)
BCHP_REGISTER(0x204ca1e4, 32,  RO, AVS_CPU_AUX_REGS, DSPRAM_BUILD)
BCHP_REGISTER(0x204ca1e8, 32,  RO, AVS_CPU_AUX_REGS, MAC_BUILD)
BCHP_REGISTER(0x204ca1ec, 32,  RO, AVS_CPU_AUX_REGS, MULTIPLY_BUILD)
BCHP_REGISTER(0x204ca1f0, 32,  RO, AVS_CPU_AUX_REGS, SWAP_BUILD)
BCHP_REGISTER(0x204ca1f4, 32,  RO, AVS_CPU_AUX_REGS, NORM_BUILD)
BCHP_REGISTER(0x204ca1f8, 32,  RO, AVS_CPU_AUX_REGS, MINMAX_BUILD)
BCHP_REGISTER(0x204ca1fc, 32,  RO, AVS_CPU_AUX_REGS, BARREL_BUILD)
BCHP_REGISTER(0x204ca304, 32,  RO, AVS_CPU_AUX_REGS, ARC600_BUILD)
BCHP_REGISTER(0x204ca308, 32,  RW, AVS_CPU_AUX_REGS, AUX_SYSTEM_BUILD)
BCHP_REGISTER(0x204ca310, 32,  RO, AVS_CPU_AUX_REGS, MCD_BCR)
BCHP_REGISTER(0x204ca3f8, 32,  RO, AVS_CPU_AUX_REGS, IFETCHQUEUE_BUILD)
BCHP_REGISTER(0x204ca400, 32,  RW, AVS_CPU_AUX_REGS, TIMER1_COUNT)
BCHP_REGISTER(0x204ca404, 32,  RW, AVS_CPU_AUX_REGS, TIMER1_CONTROL)
BCHP_REGISTER(0x204ca408, 32,  RW, AVS_CPU_AUX_REGS, TIMER1_LIMIT)
BCHP_REGISTER(0x204ca800, 32,  RW, AVS_CPU_AUX_REGS, AUX_IRQ_LEV)
BCHP_REGISTER(0x204ca804, 32,  RW, AVS_CPU_AUX_REGS, AUX_IRQ_HINT)
BCHP_REGISTER(0x204ca808, 32,  RW, AVS_CPU_AUX_REGS, AUX_ALIGN_CTRL)
BCHP_REGISTER(0x204caa00, 32,  RO, AVS_CPU_AUX_REGS, AUX_INTER_CORE_INTERRUPT)
BCHP_REGISTER(0x204caa04, 32,  RO, AVS_CPU_AUX_REGS, AX_IPC_SEM_N)
BCHP_REGISTER(0x204caa08, 32,  RO, AVS_CPU_AUX_REGS, AUX_INTER_CORE_ACK)
BCHP_REGISTER(0x204d0000, 32,  RW, AVS_UART, UARTDR)
BCHP_REGISTER(0x204d0004, 32,  RW, AVS_UART, UARTRSR)
BCHP_REGISTER(0x204d0018, 32,  RO, AVS_UART, UARTFR)
BCHP_REGISTER(0x204d0020, 32,  RW, AVS_UART, UARTILPR)
BCHP_REGISTER(0x204d0024, 32,  RW, AVS_UART, UARTIBRD)
BCHP_REGISTER(0x204d0028, 32,  RW, AVS_UART, UARTFBRD)
BCHP_REGISTER(0x204d002c, 32,  RW, AVS_UART, UARTLCR_H)
BCHP_REGISTER(0x204d0030, 32,  RW, AVS_UART, UARTCR)
BCHP_REGISTER(0x204d0034, 32,  RW, AVS_UART, UARTIFLS)
BCHP_REGISTER(0x204d0038, 32,  RW, AVS_UART, UARTIMSC)
BCHP_REGISTER(0x204d003c, 32,  RO, AVS_UART, UARTRIS)
BCHP_REGISTER(0x204d0040, 32,  RO, AVS_UART, UARTMIS)
BCHP_REGISTER(0x204d0044, 32,  WO, AVS_UART, UARTICR)
BCHP_REGISTER(0x204d0048, 32,  RW, AVS_UART, UARTDMACR)
BCHP_REGISTER(0x204d0fe0, 32,  RO, AVS_UART, UARTPERIPHID0)
BCHP_REGISTER(0x204d0fe4, 32,  RO, AVS_UART, UARTPERIPHID1)
BCHP_REGISTER(0x204d0fe8, 32,  RO, AVS_UART, UARTPERIPHID2)
BCHP_REGISTER(0x204d0fec, 32,  RO, AVS_UART, UARTPERIPHID3)
BCHP_REGISTER(0x204d0ff0, 32,  RO, AVS_UART, UARTPCELLID0)
BCHP_REGISTER(0x204d0ff4, 32,  RO, AVS_UART, UARTPCELLID1)
BCHP_REGISTER(0x204d0ff8, 32,  RO, AVS_UART, UARTPCELLID2)
BCHP_REGISTER(0x204d0ffc, 32,  RO, AVS_UART, UARTPCELLID3)
BCHP_REGISTER(0x204d1100, 32,  RO, AVS_CPU_L2, STATUS0)
BCHP_REGISTER(0x204d1104, 32,  WO, AVS_CPU_L2, SET0)
BCHP_REGISTER(0x204d1108, 32,  WO, AVS_CPU_L2, CLEAR0)
BCHP_REGISTER(0x204d110c, 32,  RO, AVS_CPU_L2, MASK_STATUS0)
BCHP_REGISTER(0x204d1110, 32,  WO, AVS_CPU_L2, MASK_SET0)
BCHP_REGISTER(0x204d1114, 32,  WO, AVS_CPU_L2, MASK_CLEAR0)
BCHP_REGISTER(0x204d1118, 32,  RO, AVS_CPU_L2, STATUS1)
BCHP_REGISTER(0x204d111c, 32,  WO, AVS_CPU_L2, SET1)
BCHP_REGISTER(0x204d1120, 32,  WO, AVS_CPU_L2, CLEAR1)
BCHP_REGISTER(0x204d1124, 32,  RO, AVS_CPU_L2, MASK_STATUS1)
BCHP_REGISTER(0x204d1128, 32,  WO, AVS_CPU_L2, MASK_SET1)
BCHP_REGISTER(0x204d112c, 32,  WO, AVS_CPU_L2, MASK_CLEAR1)
BCHP_REGISTER(0x204d1200, 32,  RO, AVS_HOST_L2, STATUS0)
BCHP_REGISTER(0x204d1204, 32,  WO, AVS_HOST_L2, SET0)
BCHP_REGISTER(0x204d1208, 32,  WO, AVS_HOST_L2, CLEAR0)
BCHP_REGISTER(0x204d120c, 32,  RO, AVS_HOST_L2, MASK_STATUS0)
BCHP_REGISTER(0x204d1210, 32,  WO, AVS_HOST_L2, MASK_SET0)
BCHP_REGISTER(0x204d1214, 32,  WO, AVS_HOST_L2, MASK_CLEAR0)
BCHP_REGISTER(0x204d1218, 32,  RO, AVS_HOST_L2, STATUS1)
BCHP_REGISTER(0x204d121c, 32,  WO, AVS_HOST_L2, SET1)
BCHP_REGISTER(0x204d1220, 32,  WO, AVS_HOST_L2, CLEAR1)
BCHP_REGISTER(0x204d1224, 32,  RO, AVS_HOST_L2, MASK_STATUS1)
BCHP_REGISTER(0x204d1228, 32,  WO, AVS_HOST_L2, MASK_SET1)
BCHP_REGISTER(0x204d122c, 32,  WO, AVS_HOST_L2, MASK_CLEAR1)
BCHP_REGISTER(0x204d1230, 32,  RO, AVS_HOST_L2, STATUS2)
BCHP_REGISTER(0x204d1234, 32,  WO, AVS_HOST_L2, SET2)
BCHP_REGISTER(0x204d1238, 32,  WO, AVS_HOST_L2, CLEAR2)
BCHP_REGISTER(0x204d123c, 32,  RO, AVS_HOST_L2, MASK_STATUS2)
BCHP_REGISTER(0x204d1240, 32,  WO, AVS_HOST_L2, MASK_SET2)
BCHP_REGISTER(0x204d1244, 32,  WO, AVS_HOST_L2, MASK_CLEAR2)
BCHP_REGISTER(0x204d1300, 32,  RO, AVS_CPU_CTRL, REVID)
BCHP_REGISTER(0x204d1304, 32,  RW, AVS_CPU_CTRL, CTRL)
BCHP_REGISTER(0x204d1308, 32,  RW, AVS_CPU_CTRL, ACCESS_LOCK)
BCHP_REGISTER(0x204d1310, 32,  RW, AVS_CPU_CTRL, SW_SPARE0)
BCHP_REGISTER(0x204d1314, 32,  RW, AVS_CPU_CTRL, SW_SPARE1)
BCHP_REGISTER(0x204d1318, 32,  RW, AVS_CPU_CTRL, SW_SPARE2)
BCHP_REGISTER(0x204d131c, 32,  RW, AVS_CPU_CTRL, SW_SPARE3)
BCHP_REGISTER(0x204d1320, 32,  RW, AVS_CPU_CTRL, RBUS_ERR_ADDR)
BCHP_REGISTER(0x204d1324, 32,  RW, AVS_CPU_CTRL, RBUS_ERR_DATA)
BCHP_REGISTER(0x204d1328, 32,  RW, AVS_CPU_CTRL, RBUS_ERR_XAC)
BCHP_REGISTER(0x204d132c, 32,  RW, AVS_CPU_CTRL, RBUS_ERR_CTRL)
BCHP_REGISTER(0x204d1330, 32,  RW, AVS_CPU_CTRL, SYS_ADDR_OFFSET)
BCHP_REGISTER(0x204d1340, 32,  RW, AVS_CPU_CTRL, TIMER0)
BCHP_REGISTER(0x204d1344, 32,  RO, AVS_CPU_CTRL, TIMER0_COUNT)
BCHP_REGISTER(0x204d1348, 32,  RW, AVS_CPU_CTRL, TIMER1)
BCHP_REGISTER(0x204d134c, 32,  RO, AVS_CPU_CTRL, TIMER1_COUNT)
BCHP_REGISTER(0x204d1350, 32,  RW, AVS_CPU_CTRL, TIMER2)
BCHP_REGISTER(0x204d1354, 32,  RO, AVS_CPU_CTRL, TIMER2_COUNT)
BCHP_REGISTER(0x204d1358, 32,  RW, AVS_CPU_CTRL, TIMER3)
BCHP_REGISTER(0x204d135c, 32,  RO, AVS_CPU_CTRL, TIMER3_COUNT)
BCHP_REGISTER(0x204d1400, 32,  RW, AVS_BSTI, BSTI_CMD_ADDR_WDATA)
BCHP_REGISTER(0x204d1404, 32,  RO, AVS_BSTI, BSTI_STATUS_RDATA)
BCHP_REGISTER(0x204d1500, 32,  RO, AVS_TMON, TEMPERATURE_MEASUREMENT_STATUS)
BCHP_REGISTER(0x204d1504, 32,  RW, AVS_TMON, ENABLE_OVER_TEMPERATURE_RESET)
BCHP_REGISTER(0x204d1508, 32,  RW, AVS_TMON, TEMPERATURE_RESET_THRESHOLD)
BCHP_REGISTER(0x204d1510, 32,  RW, AVS_TMON, TEMPERATURE_INTERRUPT_IDLE_TIME)
BCHP_REGISTER(0x204d1514, 32,  RW, AVS_TMON, ENABLE_TEMPERATURE_INTERRUPT_SOURCES)
BCHP_REGISTER(0x204d1518, 32,  RW, AVS_TMON, TEMPERATURE_INTERRUPT_THRESHOLDS)
BCHP_REGISTER(0x204d151c, 32,  RO, AVS_TMON, TEMPERATURE_INTERRUPT_TEMPERATURE)
BCHP_REGISTER(0x204d1520, 32,  RW, AVS_TMON, TP_TMON_TEST_ENABLE)
BCHP_REGISTER(0x204d1524, 32,  RW, AVS_TMON, SPARE_0)
BCHP_REGISTER(0x204d1800, 32,  RW, AVS_TOP_CTRL, MEMORY_ASSIST)
BCHP_REGISTER(0x204d1804, 32,  RO, AVS_TOP_CTRL, MEMORY_ASSIST_STATUS)
BCHP_REGISTER(0x204d1808, 32,  RW, AVS_TOP_CTRL, VOLTAGE_REGULATOR_PWRDN)
BCHP_REGISTER(0x204d180c, 32,  RO, AVS_TOP_CTRL, VOLTAGE_REGULATOR_STATUS)
BCHP_REGISTER(0x204d1810, 32,  RO, AVS_TOP_CTRL, S2_STANDBY_STATUS)
BCHP_REGISTER(0x204d1814, 32,  RO, AVS_TOP_CTRL, VTRAP_STATUS)
BCHP_REGISTER(0x204d1818, 32,  RW, AVS_TOP_CTRL, VTRAP_STATUS_CLEAR)
BCHP_REGISTER(0x204d181c, 32,  RW, AVS_TOP_CTRL, START_AVS_CPU)
BCHP_REGISTER(0x204d1820, 32,  RO, AVS_TOP_CTRL, OTP_STATUS)
BCHP_REGISTER(0x204d1824, 32,  RO, AVS_TOP_CTRL, OTP_AVS_INFO)
BCHP_REGISTER(0x204d1828, 32,  RW, AVS_TOP_CTRL, RMON_HZ)
BCHP_REGISTER(0x204d182c, 32,  RW, AVS_TOP_CTRL, RMON_VT)
BCHP_REGISTER(0x204d1830, 32,  RW, AVS_TOP_CTRL, RMON_RAWR_INT_HZ)
BCHP_REGISTER(0x204d1834, 32,  RW, AVS_TOP_CTRL, RMON_RAWR_INT_VT)
BCHP_REGISTER(0x204d1838, 32,  RW, AVS_TOP_CTRL, RMON_RAWR_EXT)
BCHP_REGISTER(0x204d183c, 32,  RW, AVS_TOP_CTRL, AVS_CONVERGENCE_STATUS)
BCHP_REGISTER(0x204d1840, 32,  RO, AVS_TOP_CTRL, REVID)
BCHP_REGISTER(0x204d1844, 32,  RW, AVS_TOP_CTRL, SPARE_LOW)
BCHP_REGISTER(0x204d1848, 32,  RW, AVS_TOP_CTRL, SPARE_HIGH)
BCHP_REGISTER(0x204d184c, 32,  RW, AVS_TOP_CTRL, AVS_STATUS_OUT)
BCHP_REGISTER(0x204d1850, 32,  RO, AVS_TOP_CTRL, AVS_STATUS_IN)
BCHP_REGISTER(0x204d1854, 32,  RW, AVS_TOP_CTRL, ADC_SEL)
BCHP_REGISTER(0x204d1858, 32,  RW, AVS_TOP_CTRL, PVT_MNTR1_DAC_CODE)
BCHP_REGISTER(0x204d186c, 32,  RW, AVS_TOP_CTRL, PVT_MNTR1_CTRL)
BCHP_REGISTER(0x204d1880, 32,  RW, AVS_TOP_CTRL, MEMORY_ASSIST_1)
BCHP_REGISTER(0x204d1884, 32,  RO, AVS_TOP_CTRL, MEMORY_ASSIST_STATUS_1)
BCHP_REGISTER(0x204d18a8, 32,  RO, AVS_TOP_CTRL, VTRAP_STATUS_1)
BCHP_REGISTER(0x204d18ac, 32,  RW, AVS_TOP_CTRL, VTRAP_STATUS_1_CLEAR)
BCHP_REGISTER(0x204d2000, 32,  RW, AVS_HW_MNTR, SW_CONTROLS)
BCHP_REGISTER(0x204d2004, 32,  RO, AVS_HW_MNTR, SW_MEASUREMENT_UNIT_BUSY)
BCHP_REGISTER(0x204d2008, 32,  RW, AVS_HW_MNTR, MEASUREMENTS_INIT_PVT_MNTR)
BCHP_REGISTER(0x204d200c, 32,  RW, AVS_HW_MNTR, MEASUREMENTS_INIT_CEN_ROSC_0)
BCHP_REGISTER(0x204d2010, 32,  RW, AVS_HW_MNTR, MEASUREMENTS_INIT_CEN_ROSC_1)
BCHP_REGISTER(0x204d2034, 32,  RW, AVS_HW_MNTR, MEASUREMENTS_INIT_POW_WDOG)
BCHP_REGISTER(0x204d2038, 32,  RW, AVS_HW_MNTR, SEQUENCER_INIT)
BCHP_REGISTER(0x204d203c, 32,  RW, AVS_HW_MNTR, SEQUENCER_MASK_PVT_MNTR)
BCHP_REGISTER(0x204d2040, 32,  RW, AVS_HW_MNTR, SEQUENCER_MASK_CEN_ROSC_0)
BCHP_REGISTER(0x204d2044, 32,  RW, AVS_HW_MNTR, SEQUENCER_MASK_CEN_ROSC_1)
BCHP_REGISTER(0x204d2068, 32,  RW, AVS_HW_MNTR, ENABLE_DEFAULT_PVT_MNTR)
BCHP_REGISTER(0x204d206c, 32,  RW, AVS_HW_MNTR, ENABLE_DEFAULT_CEN_ROSC_0)
BCHP_REGISTER(0x204d2070, 32,  RW, AVS_HW_MNTR, ENABLE_DEFAULT_CEN_ROSC_1)
BCHP_REGISTER(0x204d2074, 32,  RW, AVS_HW_MNTR, ROSC_MEASUREMENT_TIME_CONTROL)
BCHP_REGISTER(0x204d2078, 32,  RW, AVS_HW_MNTR, ROSC_COUNTING_MODE)
BCHP_REGISTER(0x204d207c, 32,  RW, AVS_HW_MNTR, INTERRUPT_POW_WDOG_EN)
BCHP_REGISTER(0x204d2080, 32,  RW, AVS_HW_MNTR, INTERRUPT_POW_WDOG_EN_1)
BCHP_REGISTER(0x204d2084, 32,  RW, AVS_HW_MNTR, INTERRUPT_POW_WDOG_EN_2)
BCHP_REGISTER(0x204d2088, 32,  RW, AVS_HW_MNTR, INTERRUPT_POW_WDOG_EN_3)
BCHP_REGISTER(0x204d208c, 32,  RW, AVS_HW_MNTR, INTERRUPT_SW_MEASUREMENT_DONE_EN)
BCHP_REGISTER(0x204d2090, 32,  RO, AVS_HW_MNTR, LAST_MEASURED_SENSOR)
BCHP_REGISTER(0x204d2094, 32,  RO, AVS_HW_MNTR, AVS_INTERRUPT_FLAGS)
BCHP_REGISTER(0x204d2098, 32,  RW, AVS_HW_MNTR, AVS_INTERRUPT_FLAGS_CLEAR)
BCHP_REGISTER(0x204d20ac, 32,  RW, AVS_HW_MNTR, AVS_REGISTERS_LOCKS)
BCHP_REGISTER(0x204d20b0, 32,  RW, AVS_HW_MNTR, TEMPERATURE_RESET_ENABLE)
BCHP_REGISTER(0x204d20b4, 32,  RW, AVS_HW_MNTR, TEMPERATURE_THRESHOLD)
BCHP_REGISTER(0x204d20b8, 32,  RW, AVS_HW_MNTR, IDLE_STATE_0_CEN_ROSC_0)
BCHP_REGISTER(0x204d20bc, 32,  RW, AVS_HW_MNTR, IDLE_STATE_0_CEN_ROSC_1)
BCHP_REGISTER(0x204d20c0, 32,  RW, AVS_HW_MNTR, ADC_SETTLING_TIME)
BCHP_REGISTER(0x204d20c4, 32,  RW, AVS_HW_MNTR, AVS_SPARE_0)
BCHP_REGISTER(0x204d20c8, 32,  RW, AVS_HW_MNTR, AVS_SPARE_1)
BCHP_REGISTER(0x204d2100, 32,  RW, AVS_PVT_MNTR_CONFIG, PVT_MNTR_CTRL)
BCHP_REGISTER(0x204d2108, 32,  RW, AVS_PVT_MNTR_CONFIG, PVT_MNTR_TP_MODE_ENABLE)
BCHP_REGISTER(0x204d2110, 32,  RW, AVS_PVT_MNTR_CONFIG, DAC_CODE_PROGRAMMING_ENABLE)
BCHP_REGISTER(0x204d2114, 32,  RW, AVS_PVT_MNTR_CONFIG, DAC_CODE)
BCHP_REGISTER(0x204d2118, 32,  RW, AVS_PVT_MNTR_CONFIG, MIN_DAC_CODE)
BCHP_REGISTER(0x204d211c, 32,  RW, AVS_PVT_MNTR_CONFIG, MAX_DAC_CODE)
BCHP_REGISTER(0x204d2120, 32,  RW, AVS_PVT_MNTR_CONFIG, PVT_MNTR_SW_RESETB)
BCHP_REGISTER(0x204d2124, 32,  RW, AVS_PVT_MNTR_CONFIG, AVS_TOP_ANALOG_SRAM_INDICATOR)
BCHP_REGISTER(0x204d2200, 32,  RO, AVS_RO_REGISTERS_0, PVT_TEMPERATURE_MNTR_STATUS)
BCHP_REGISTER(0x204d2204, 32,  RO, AVS_RO_REGISTERS_0, PVT_0P85V_0_MNTR_STATUS)
BCHP_REGISTER(0x204d2208, 32,  RO, AVS_RO_REGISTERS_0, PVT_0P85V_1_MNTR_STATUS)
BCHP_REGISTER(0x204d220c, 32,  RO, AVS_RO_REGISTERS_0, PVT_1V_0_MNTR_STATUS)
BCHP_REGISTER(0x204d2210, 32,  RO, AVS_RO_REGISTERS_0, PVT_1V_1_MNTR_STATUS)
BCHP_REGISTER(0x204d2214, 32,  RO, AVS_RO_REGISTERS_0, PVT_1p8V_MNTR_STATUS)
BCHP_REGISTER(0x204d2218, 32,  RO, AVS_RO_REGISTERS_0, PVT_3p3V_MNTR_STATUS)
BCHP_REGISTER(0x204d221c, 32,  RO, AVS_RO_REGISTERS_0, PVT_TESTMODE_MNTR_STATUS)
BCHP_REGISTER(0x204d2220, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_0)
BCHP_REGISTER(0x204d2224, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_1)
BCHP_REGISTER(0x204d2228, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_2)
BCHP_REGISTER(0x204d222c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_3)
BCHP_REGISTER(0x204d2230, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_4)
BCHP_REGISTER(0x204d2234, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_5)
BCHP_REGISTER(0x204d2238, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_6)
BCHP_REGISTER(0x204d223c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_7)
BCHP_REGISTER(0x204d2240, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_8)
BCHP_REGISTER(0x204d2244, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_9)
BCHP_REGISTER(0x204d2248, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_10)
BCHP_REGISTER(0x204d224c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_11)
BCHP_REGISTER(0x204d2250, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_12)
BCHP_REGISTER(0x204d2254, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_13)
BCHP_REGISTER(0x204d2258, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_14)
BCHP_REGISTER(0x204d225c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_15)
BCHP_REGISTER(0x204d2260, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_16)
BCHP_REGISTER(0x204d2264, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_17)
BCHP_REGISTER(0x204d2268, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_18)
BCHP_REGISTER(0x204d226c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_19)
BCHP_REGISTER(0x204d2270, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_20)
BCHP_REGISTER(0x204d2274, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_21)
BCHP_REGISTER(0x204d2278, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_22)
BCHP_REGISTER(0x204d227c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_23)
BCHP_REGISTER(0x204d2280, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_24)
BCHP_REGISTER(0x204d2284, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_25)
BCHP_REGISTER(0x204d2288, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_26)
BCHP_REGISTER(0x204d228c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_27)
BCHP_REGISTER(0x204d2290, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_28)
BCHP_REGISTER(0x204d2294, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_29)
BCHP_REGISTER(0x204d2298, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_30)
BCHP_REGISTER(0x204d229c, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_31)
BCHP_REGISTER(0x204d22a0, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_32)
BCHP_REGISTER(0x204d22a4, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_33)
BCHP_REGISTER(0x204d22a8, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_34)
BCHP_REGISTER(0x204d22ac, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_STATUS_35)
BCHP_REGISTER(0x204d22e0, 32,  RO, AVS_RO_REGISTERS_0, CEN_ROSC_ALL_IDL_HI_LOW_ROSCS)
BCHP_REGISTER(0x204d2800, 32,  RO, AVS_RO_REGISTERS_1, POW_WDOG_FAILURE_STATUS)
BCHP_REGISTER(0x204d2804, 32,  RO, AVS_RO_REGISTERS_1, INTERRUPT_STATUS_FAULTY_POW_WDOG)
BCHP_REGISTER(0x204d2808, 32,  RO, AVS_RO_REGISTERS_1, INTERRUPT_STATUS_FAULTY_POW_WDOG_1)
BCHP_REGISTER(0x204d280c, 32,  RO, AVS_RO_REGISTERS_1, INTERRUPT_STATUS_FAULTY_POW_WDOG_2)
BCHP_REGISTER(0x204d2810, 32,  RO, AVS_RO_REGISTERS_1, INTERRUPT_STATUS_FAULTY_POW_WDOG_3)
BCHP_REGISTER(0x204d2d00, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_0)
BCHP_REGISTER(0x204d2d04, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_1)
BCHP_REGISTER(0x204d2d08, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_2)
BCHP_REGISTER(0x204d2d0c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_3)
BCHP_REGISTER(0x204d2d10, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_4)
BCHP_REGISTER(0x204d2d14, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_5)
BCHP_REGISTER(0x204d2d18, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_6)
BCHP_REGISTER(0x204d2d1c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_7)
BCHP_REGISTER(0x204d2d20, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_8)
BCHP_REGISTER(0x204d2d24, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_9)
BCHP_REGISTER(0x204d2d28, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_10)
BCHP_REGISTER(0x204d2d2c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_11)
BCHP_REGISTER(0x204d2d30, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_12)
BCHP_REGISTER(0x204d2d34, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_13)
BCHP_REGISTER(0x204d2d38, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_14)
BCHP_REGISTER(0x204d2d3c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_15)
BCHP_REGISTER(0x204d2d40, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_16)
BCHP_REGISTER(0x204d2d44, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_17)
BCHP_REGISTER(0x204d2d48, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_18)
BCHP_REGISTER(0x204d2d4c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_19)
BCHP_REGISTER(0x204d2d50, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_20)
BCHP_REGISTER(0x204d2d54, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_21)
BCHP_REGISTER(0x204d2d58, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_22)
BCHP_REGISTER(0x204d2d5c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_23)
BCHP_REGISTER(0x204d2d60, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_24)
BCHP_REGISTER(0x204d2d64, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_25)
BCHP_REGISTER(0x204d2d68, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_26)
BCHP_REGISTER(0x204d2d6c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_27)
BCHP_REGISTER(0x204d2d70, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_28)
BCHP_REGISTER(0x204d2d74, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_29)
BCHP_REGISTER(0x204d2d78, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_30)
BCHP_REGISTER(0x204d2d7c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_31)
BCHP_REGISTER(0x204d2d80, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_32)
BCHP_REGISTER(0x204d2d84, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_33)
BCHP_REGISTER(0x204d2d88, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_34)
BCHP_REGISTER(0x204d2d8c, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_CEN_ROSC_35)
BCHP_REGISTER(0x204d2dd0, 32,  RW, AVS_ROSC_THRESHOLD_1, CEN_ROSC_THRESHOLD1_EN_0)
BCHP_REGISTER(0x204d2dd4, 32,  RW, AVS_ROSC_THRESHOLD_1, CEN_ROSC_THRESHOLD1_EN_1)
BCHP_REGISTER(0x204d2df8, 32,  RW, AVS_ROSC_THRESHOLD_1, THRESHOLD1_DIRECTION)
BCHP_REGISTER(0x204d2dfc, 32,  RO, AVS_ROSC_THRESHOLD_1, INTERRUPT_STATUS_THRESHOLD1_FAULTY_SENSOR)
BCHP_REGISTER(0x204d2e00, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_0)
BCHP_REGISTER(0x204d2e04, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_1)
BCHP_REGISTER(0x204d2e08, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_2)
BCHP_REGISTER(0x204d2e0c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_3)
BCHP_REGISTER(0x204d2e10, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_4)
BCHP_REGISTER(0x204d2e14, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_5)
BCHP_REGISTER(0x204d2e18, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_6)
BCHP_REGISTER(0x204d2e1c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_7)
BCHP_REGISTER(0x204d2e20, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_8)
BCHP_REGISTER(0x204d2e24, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_9)
BCHP_REGISTER(0x204d2e28, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_10)
BCHP_REGISTER(0x204d2e2c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_11)
BCHP_REGISTER(0x204d2e30, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_12)
BCHP_REGISTER(0x204d2e34, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_13)
BCHP_REGISTER(0x204d2e38, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_14)
BCHP_REGISTER(0x204d2e3c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_15)
BCHP_REGISTER(0x204d2e40, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_16)
BCHP_REGISTER(0x204d2e44, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_17)
BCHP_REGISTER(0x204d2e48, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_18)
BCHP_REGISTER(0x204d2e4c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_19)
BCHP_REGISTER(0x204d2e50, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_20)
BCHP_REGISTER(0x204d2e54, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_21)
BCHP_REGISTER(0x204d2e58, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_22)
BCHP_REGISTER(0x204d2e5c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_23)
BCHP_REGISTER(0x204d2e60, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_24)
BCHP_REGISTER(0x204d2e64, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_25)
BCHP_REGISTER(0x204d2e68, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_26)
BCHP_REGISTER(0x204d2e6c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_27)
BCHP_REGISTER(0x204d2e70, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_28)
BCHP_REGISTER(0x204d2e74, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_29)
BCHP_REGISTER(0x204d2e78, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_30)
BCHP_REGISTER(0x204d2e7c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_31)
BCHP_REGISTER(0x204d2e80, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_32)
BCHP_REGISTER(0x204d2e84, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_33)
BCHP_REGISTER(0x204d2e88, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_34)
BCHP_REGISTER(0x204d2e8c, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_CEN_ROSC_35)
BCHP_REGISTER(0x204d2ed0, 32,  RW, AVS_ROSC_THRESHOLD_2, CEN_ROSC_THRESHOLD2_EN_0)
BCHP_REGISTER(0x204d2ed4, 32,  RW, AVS_ROSC_THRESHOLD_2, CEN_ROSC_THRESHOLD2_EN_1)
BCHP_REGISTER(0x204d2ef8, 32,  RW, AVS_ROSC_THRESHOLD_2, THRESHOLD2_DIRECTION)
BCHP_REGISTER(0x204d2efc, 32,  RO, AVS_ROSC_THRESHOLD_2, INTERRUPT_STATUS_THRESHOLD2_FAULTY_SENSOR)
BCHP_REGISTER(0x204d3000, 32,  RW, AVS_WDOG, WDOGLOAD)
BCHP_REGISTER(0x204d3004, 32,  RO, AVS_WDOG, WDOGVALUE)
BCHP_REGISTER(0x204d3008, 32,  RW, AVS_WDOG, WDOGCONTROL)
BCHP_REGISTER(0x204d300c, 32,  WO, AVS_WDOG, WDOGINTCLR)
BCHP_REGISTER(0x204d3010, 32,  RO, AVS_WDOG, WDOGRIS)
BCHP_REGISTER(0x204d3014, 32,  RO, AVS_WDOG, WDOGMIS)
BCHP_REGISTER(0x204d3c00, 32,  RW, AVS_WDOG, WDOGLOCK)
BCHP_REGISTER(0x204d3f00, 32,  RW, AVS_WDOG, WDOGITCR)
BCHP_REGISTER(0x204d3f04, 32,  WO, AVS_WDOG, WDOGITOP)
BCHP_REGISTER(0x204d3fe0, 32,  RO, AVS_WDOG, WDOGPERIPHID0)
BCHP_REGISTER(0x204d3fe4, 32,  RO, AVS_WDOG, WDOGPERIPHID1)
BCHP_REGISTER(0x204d3fe8, 32,  RO, AVS_WDOG, WDOGPERIPHID2)
BCHP_REGISTER(0x204d3fec, 32,  RO, AVS_WDOG, WDOGPERIPHID3)
BCHP_REGISTER(0x204d3ff0, 32,  RO, AVS_WDOG, WDOGPCELLID0)
BCHP_REGISTER(0x204d3ff4, 32,  RO, AVS_WDOG, WDOGPCELLID1)
BCHP_REGISTER(0x204d3ff8, 32,  RO, AVS_WDOG, WDOGPCELLID2)
BCHP_REGISTER(0x204d3ffc, 32,  RO, AVS_WDOG, WDOGPCELLID3)
BCHP_REGISTER(0x204d4000, 32,  RW, AVS_BSC, CHIP_ADDRESS)
BCHP_REGISTER(0x204d4004, 32,  RW, AVS_BSC, DATA_IN0)
BCHP_REGISTER(0x204d4008, 32,  RW, AVS_BSC, DATA_IN1)
BCHP_REGISTER(0x204d400c, 32,  RW, AVS_BSC, DATA_IN2)
BCHP_REGISTER(0x204d4010, 32,  RW, AVS_BSC, DATA_IN3)
BCHP_REGISTER(0x204d4014, 32,  RW, AVS_BSC, DATA_IN4)
BCHP_REGISTER(0x204d4018, 32,  RW, AVS_BSC, DATA_IN5)
BCHP_REGISTER(0x204d401c, 32,  RW, AVS_BSC, DATA_IN6)
BCHP_REGISTER(0x204d4020, 32,  RW, AVS_BSC, DATA_IN7)
BCHP_REGISTER(0x204d4024, 32,  RW, AVS_BSC, CNT_REG)
BCHP_REGISTER(0x204d4028, 32,  RW, AVS_BSC, CTL_REG)
BCHP_REGISTER(0x204d402c, 32,  RW, AVS_BSC, IIC_ENABLE)
BCHP_REGISTER(0x204d4030, 32,  RO, AVS_BSC, DATA_OUT0)
BCHP_REGISTER(0x204d4034, 32,  RO, AVS_BSC, DATA_OUT1)
BCHP_REGISTER(0x204d4038, 32,  RO, AVS_BSC, DATA_OUT2)
BCHP_REGISTER(0x204d403c, 32,  RO, AVS_BSC, DATA_OUT3)
BCHP_REGISTER(0x204d4040, 32,  RO, AVS_BSC, DATA_OUT4)
BCHP_REGISTER(0x204d4044, 32,  RO, AVS_BSC, DATA_OUT5)
BCHP_REGISTER(0x204d4048, 32,  RO, AVS_BSC, DATA_OUT6)
BCHP_REGISTER(0x204d404c, 32,  RO, AVS_BSC, DATA_OUT7)
BCHP_REGISTER(0x204d4050, 32,  RW, AVS_BSC, CTLHI_REG)
BCHP_REGISTER(0x204d4054, 32,  RW, AVS_BSC, SCL_PARAM)
BCHP_REGISTER(0x204d8000, 32,  RO, AVS_PMB_S_000, BPCM_ID)
BCHP_REGISTER(0x204d8004, 32,  RO, AVS_PMB_S_000, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8008, 32,  RW, AVS_PMB_S_000, BPCM_CONTROL)
BCHP_REGISTER(0x204d800c, 32,  RO, AVS_PMB_S_000, BPCM_STATUS)
BCHP_REGISTER(0x204d8010, 32,  RW, AVS_PMB_S_000, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8014, 32,  RW, AVS_PMB_S_000, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8018, 32,  RW, AVS_PMB_S_000, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d801c, 32,  RO, AVS_PMB_S_000, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8020, 32,  RW, AVS_PMB_S_000, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8024, 32,  RW, AVS_PMB_S_000, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8040, 32,  RO, AVS_PMB_S_001, BPCM_ID)
BCHP_REGISTER(0x204d8044, 32,  RO, AVS_PMB_S_001, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8048, 32,  RW, AVS_PMB_S_001, BPCM_CONTROL)
BCHP_REGISTER(0x204d804c, 32,  RO, AVS_PMB_S_001, BPCM_STATUS)
BCHP_REGISTER(0x204d8050, 32,  RW, AVS_PMB_S_001, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8054, 32,  RW, AVS_PMB_S_001, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8058, 32,  RW, AVS_PMB_S_001, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d805c, 32,  RO, AVS_PMB_S_001, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8060, 32,  RW, AVS_PMB_S_001, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8064, 32,  RW, AVS_PMB_S_001, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8080, 32,  RO, AVS_PMB_S_002, BPCM_ID)
BCHP_REGISTER(0x204d8084, 32,  RO, AVS_PMB_S_002, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8088, 32,  RW, AVS_PMB_S_002, BPCM_CONTROL)
BCHP_REGISTER(0x204d808c, 32,  RO, AVS_PMB_S_002, BPCM_STATUS)
BCHP_REGISTER(0x204d8090, 32,  RW, AVS_PMB_S_002, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8094, 32,  RW, AVS_PMB_S_002, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8098, 32,  RW, AVS_PMB_S_002, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d809c, 32,  RO, AVS_PMB_S_002, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d80a0, 32,  RW, AVS_PMB_S_002, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d80a4, 32,  RW, AVS_PMB_S_002, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d80c0, 32,  RO, AVS_PMB_S_003, BPCM_ID)
BCHP_REGISTER(0x204d80c4, 32,  RO, AVS_PMB_S_003, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d80c8, 32,  RW, AVS_PMB_S_003, BPCM_CONTROL)
BCHP_REGISTER(0x204d80cc, 32,  RO, AVS_PMB_S_003, BPCM_STATUS)
BCHP_REGISTER(0x204d80d0, 32,  RW, AVS_PMB_S_003, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d80d4, 32,  RW, AVS_PMB_S_003, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d80d8, 32,  RW, AVS_PMB_S_003, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d80dc, 32,  RO, AVS_PMB_S_003, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d80e0, 32,  RW, AVS_PMB_S_003, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d80e4, 32,  RW, AVS_PMB_S_003, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8100, 32,  RO, AVS_PMB_S_004, BPCM_ID)
BCHP_REGISTER(0x204d8104, 32,  RO, AVS_PMB_S_004, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8108, 32,  RW, AVS_PMB_S_004, BPCM_CONTROL)
BCHP_REGISTER(0x204d810c, 32,  RO, AVS_PMB_S_004, BPCM_STATUS)
BCHP_REGISTER(0x204d8110, 32,  RW, AVS_PMB_S_004, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8114, 32,  RW, AVS_PMB_S_004, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8118, 32,  RW, AVS_PMB_S_004, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d811c, 32,  RO, AVS_PMB_S_004, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8120, 32,  RW, AVS_PMB_S_004, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8124, 32,  RW, AVS_PMB_S_004, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8140, 32,  RO, AVS_PMB_S_005, BPCM_ID)
BCHP_REGISTER(0x204d8144, 32,  RO, AVS_PMB_S_005, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8148, 32,  RW, AVS_PMB_S_005, BPCM_CONTROL)
BCHP_REGISTER(0x204d814c, 32,  RO, AVS_PMB_S_005, BPCM_STATUS)
BCHP_REGISTER(0x204d8150, 32,  RW, AVS_PMB_S_005, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8154, 32,  RW, AVS_PMB_S_005, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8158, 32,  RW, AVS_PMB_S_005, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d815c, 32,  RO, AVS_PMB_S_005, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8160, 32,  RW, AVS_PMB_S_005, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8164, 32,  RW, AVS_PMB_S_005, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8180, 32,  RO, AVS_PMB_S_006, BPCM_ID)
BCHP_REGISTER(0x204d8184, 32,  RO, AVS_PMB_S_006, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8188, 32,  RW, AVS_PMB_S_006, BPCM_CONTROL)
BCHP_REGISTER(0x204d818c, 32,  RO, AVS_PMB_S_006, BPCM_STATUS)
BCHP_REGISTER(0x204d8190, 32,  RW, AVS_PMB_S_006, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8194, 32,  RW, AVS_PMB_S_006, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8198, 32,  RW, AVS_PMB_S_006, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d819c, 32,  RO, AVS_PMB_S_006, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d81a0, 32,  RW, AVS_PMB_S_006, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d81a4, 32,  RW, AVS_PMB_S_006, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d81c0, 32,  RO, AVS_PMB_S_007, BPCM_ID)
BCHP_REGISTER(0x204d81c4, 32,  RO, AVS_PMB_S_007, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d81c8, 32,  RW, AVS_PMB_S_007, BPCM_CONTROL)
BCHP_REGISTER(0x204d81cc, 32,  RO, AVS_PMB_S_007, BPCM_STATUS)
BCHP_REGISTER(0x204d81d0, 32,  RW, AVS_PMB_S_007, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d81d4, 32,  RW, AVS_PMB_S_007, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d81d8, 32,  RW, AVS_PMB_S_007, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d81dc, 32,  RO, AVS_PMB_S_007, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d81e0, 32,  RW, AVS_PMB_S_007, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d81e4, 32,  RW, AVS_PMB_S_007, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8200, 32,  RO, AVS_PMB_S_008, BPCM_ID)
BCHP_REGISTER(0x204d8204, 32,  RO, AVS_PMB_S_008, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8208, 32,  RW, AVS_PMB_S_008, BPCM_CONTROL)
BCHP_REGISTER(0x204d820c, 32,  RO, AVS_PMB_S_008, BPCM_STATUS)
BCHP_REGISTER(0x204d8210, 32,  RW, AVS_PMB_S_008, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8214, 32,  RW, AVS_PMB_S_008, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8218, 32,  RW, AVS_PMB_S_008, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d821c, 32,  RO, AVS_PMB_S_008, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8220, 32,  RW, AVS_PMB_S_008, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8224, 32,  RW, AVS_PMB_S_008, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8240, 32,  RO, AVS_PMB_S_009, BPCM_ID)
BCHP_REGISTER(0x204d8244, 32,  RO, AVS_PMB_S_009, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8248, 32,  RW, AVS_PMB_S_009, BPCM_CONTROL)
BCHP_REGISTER(0x204d824c, 32,  RO, AVS_PMB_S_009, BPCM_STATUS)
BCHP_REGISTER(0x204d8250, 32,  RW, AVS_PMB_S_009, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8254, 32,  RW, AVS_PMB_S_009, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8258, 32,  RW, AVS_PMB_S_009, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d825c, 32,  RO, AVS_PMB_S_009, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8260, 32,  RW, AVS_PMB_S_009, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8264, 32,  RW, AVS_PMB_S_009, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8280, 32,  RO, AVS_PMB_S_010, BPCM_ID)
BCHP_REGISTER(0x204d8284, 32,  RO, AVS_PMB_S_010, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8288, 32,  RW, AVS_PMB_S_010, BPCM_CONTROL)
BCHP_REGISTER(0x204d828c, 32,  RO, AVS_PMB_S_010, BPCM_STATUS)
BCHP_REGISTER(0x204d8290, 32,  RW, AVS_PMB_S_010, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8294, 32,  RW, AVS_PMB_S_010, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8298, 32,  RW, AVS_PMB_S_010, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d829c, 32,  RO, AVS_PMB_S_010, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d82a0, 32,  RW, AVS_PMB_S_010, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d82a4, 32,  RW, AVS_PMB_S_010, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d82c0, 32,  RO, AVS_PMB_S_011, BPCM_ID)
BCHP_REGISTER(0x204d82c4, 32,  RO, AVS_PMB_S_011, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d82c8, 32,  RW, AVS_PMB_S_011, BPCM_CONTROL)
BCHP_REGISTER(0x204d82cc, 32,  RO, AVS_PMB_S_011, BPCM_STATUS)
BCHP_REGISTER(0x204d82d0, 32,  RW, AVS_PMB_S_011, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d82d4, 32,  RW, AVS_PMB_S_011, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d82d8, 32,  RW, AVS_PMB_S_011, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d82dc, 32,  RO, AVS_PMB_S_011, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d82e0, 32,  RW, AVS_PMB_S_011, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d82e4, 32,  RW, AVS_PMB_S_011, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8300, 32,  RO, AVS_PMB_S_012, BPCM_ID)
BCHP_REGISTER(0x204d8304, 32,  RO, AVS_PMB_S_012, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8308, 32,  RW, AVS_PMB_S_012, BPCM_CONTROL)
BCHP_REGISTER(0x204d830c, 32,  RO, AVS_PMB_S_012, BPCM_STATUS)
BCHP_REGISTER(0x204d8310, 32,  RW, AVS_PMB_S_012, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8314, 32,  RW, AVS_PMB_S_012, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8318, 32,  RW, AVS_PMB_S_012, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d831c, 32,  RO, AVS_PMB_S_012, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8320, 32,  RW, AVS_PMB_S_012, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8324, 32,  RW, AVS_PMB_S_012, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8340, 32,  RO, AVS_PMB_S_013, BPCM_ID)
BCHP_REGISTER(0x204d8344, 32,  RO, AVS_PMB_S_013, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8348, 32,  RW, AVS_PMB_S_013, BPCM_CONTROL)
BCHP_REGISTER(0x204d834c, 32,  RO, AVS_PMB_S_013, BPCM_STATUS)
BCHP_REGISTER(0x204d8350, 32,  RW, AVS_PMB_S_013, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8354, 32,  RW, AVS_PMB_S_013, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8358, 32,  RW, AVS_PMB_S_013, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d835c, 32,  RO, AVS_PMB_S_013, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8360, 32,  RW, AVS_PMB_S_013, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8364, 32,  RW, AVS_PMB_S_013, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8380, 32,  RO, AVS_PMB_S_014, BPCM_ID)
BCHP_REGISTER(0x204d8384, 32,  RO, AVS_PMB_S_014, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8388, 32,  RW, AVS_PMB_S_014, BPCM_CONTROL)
BCHP_REGISTER(0x204d838c, 32,  RO, AVS_PMB_S_014, BPCM_STATUS)
BCHP_REGISTER(0x204d8390, 32,  RW, AVS_PMB_S_014, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8394, 32,  RW, AVS_PMB_S_014, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8398, 32,  RW, AVS_PMB_S_014, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d839c, 32,  RO, AVS_PMB_S_014, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d83a0, 32,  RW, AVS_PMB_S_014, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d83a4, 32,  RW, AVS_PMB_S_014, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d83c0, 32,  RO, AVS_PMB_S_015, BPCM_ID)
BCHP_REGISTER(0x204d83c4, 32,  RO, AVS_PMB_S_015, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d83c8, 32,  RW, AVS_PMB_S_015, BPCM_CONTROL)
BCHP_REGISTER(0x204d83cc, 32,  RO, AVS_PMB_S_015, BPCM_STATUS)
BCHP_REGISTER(0x204d83d0, 32,  RW, AVS_PMB_S_015, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d83d4, 32,  RW, AVS_PMB_S_015, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d83d8, 32,  RW, AVS_PMB_S_015, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d83dc, 32,  RO, AVS_PMB_S_015, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d83e0, 32,  RW, AVS_PMB_S_015, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d83e4, 32,  RW, AVS_PMB_S_015, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8400, 32,  RO, AVS_PMB_S_016, BPCM_ID)
BCHP_REGISTER(0x204d8404, 32,  RO, AVS_PMB_S_016, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8408, 32,  RW, AVS_PMB_S_016, BPCM_CONTROL)
BCHP_REGISTER(0x204d840c, 32,  RO, AVS_PMB_S_016, BPCM_STATUS)
BCHP_REGISTER(0x204d8410, 32,  RW, AVS_PMB_S_016, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8414, 32,  RW, AVS_PMB_S_016, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8418, 32,  RW, AVS_PMB_S_016, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d841c, 32,  RO, AVS_PMB_S_016, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8420, 32,  RW, AVS_PMB_S_016, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8424, 32,  RW, AVS_PMB_S_016, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8440, 32,  RO, AVS_PMB_S_017, BPCM_ID)
BCHP_REGISTER(0x204d8444, 32,  RO, AVS_PMB_S_017, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8448, 32,  RW, AVS_PMB_S_017, BPCM_CONTROL)
BCHP_REGISTER(0x204d844c, 32,  RO, AVS_PMB_S_017, BPCM_STATUS)
BCHP_REGISTER(0x204d8450, 32,  RW, AVS_PMB_S_017, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8454, 32,  RW, AVS_PMB_S_017, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8458, 32,  RW, AVS_PMB_S_017, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d845c, 32,  RO, AVS_PMB_S_017, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8460, 32,  RW, AVS_PMB_S_017, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8464, 32,  RW, AVS_PMB_S_017, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8480, 32,  RO, AVS_PMB_S_018, BPCM_ID)
BCHP_REGISTER(0x204d8484, 32,  RO, AVS_PMB_S_018, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8488, 32,  RW, AVS_PMB_S_018, BPCM_CONTROL)
BCHP_REGISTER(0x204d848c, 32,  RO, AVS_PMB_S_018, BPCM_STATUS)
BCHP_REGISTER(0x204d8490, 32,  RW, AVS_PMB_S_018, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8494, 32,  RW, AVS_PMB_S_018, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8498, 32,  RW, AVS_PMB_S_018, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d849c, 32,  RO, AVS_PMB_S_018, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d84a0, 32,  RW, AVS_PMB_S_018, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d84a4, 32,  RW, AVS_PMB_S_018, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d84c0, 32,  RO, AVS_PMB_S_019, BPCM_ID)
BCHP_REGISTER(0x204d84c4, 32,  RO, AVS_PMB_S_019, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d84c8, 32,  RW, AVS_PMB_S_019, BPCM_CONTROL)
BCHP_REGISTER(0x204d84cc, 32,  RO, AVS_PMB_S_019, BPCM_STATUS)
BCHP_REGISTER(0x204d84d0, 32,  RW, AVS_PMB_S_019, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d84d4, 32,  RW, AVS_PMB_S_019, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d84d8, 32,  RW, AVS_PMB_S_019, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d84dc, 32,  RO, AVS_PMB_S_019, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d84e0, 32,  RW, AVS_PMB_S_019, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d84e4, 32,  RW, AVS_PMB_S_019, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8500, 32,  RO, AVS_PMB_S_020, BPCM_ID)
BCHP_REGISTER(0x204d8504, 32,  RO, AVS_PMB_S_020, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8508, 32,  RW, AVS_PMB_S_020, BPCM_CONTROL)
BCHP_REGISTER(0x204d850c, 32,  RO, AVS_PMB_S_020, BPCM_STATUS)
BCHP_REGISTER(0x204d8510, 32,  RW, AVS_PMB_S_020, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8514, 32,  RW, AVS_PMB_S_020, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8518, 32,  RW, AVS_PMB_S_020, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d851c, 32,  RO, AVS_PMB_S_020, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8520, 32,  RW, AVS_PMB_S_020, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8524, 32,  RW, AVS_PMB_S_020, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8540, 32,  RO, AVS_PMB_S_021, BPCM_ID)
BCHP_REGISTER(0x204d8544, 32,  RO, AVS_PMB_S_021, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8548, 32,  RW, AVS_PMB_S_021, BPCM_CONTROL)
BCHP_REGISTER(0x204d854c, 32,  RO, AVS_PMB_S_021, BPCM_STATUS)
BCHP_REGISTER(0x204d8550, 32,  RW, AVS_PMB_S_021, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8554, 32,  RW, AVS_PMB_S_021, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8558, 32,  RW, AVS_PMB_S_021, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d855c, 32,  RO, AVS_PMB_S_021, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8560, 32,  RW, AVS_PMB_S_021, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8564, 32,  RW, AVS_PMB_S_021, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8580, 32,  RO, AVS_PMB_S_022, BPCM_ID)
BCHP_REGISTER(0x204d8584, 32,  RO, AVS_PMB_S_022, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8588, 32,  RW, AVS_PMB_S_022, BPCM_CONTROL)
BCHP_REGISTER(0x204d858c, 32,  RO, AVS_PMB_S_022, BPCM_STATUS)
BCHP_REGISTER(0x204d8590, 32,  RW, AVS_PMB_S_022, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8594, 32,  RW, AVS_PMB_S_022, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8598, 32,  RW, AVS_PMB_S_022, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d859c, 32,  RO, AVS_PMB_S_022, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d85a0, 32,  RW, AVS_PMB_S_022, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d85a4, 32,  RW, AVS_PMB_S_022, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d85c0, 32,  RO, AVS_PMB_S_023, BPCM_ID)
BCHP_REGISTER(0x204d85c4, 32,  RO, AVS_PMB_S_023, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d85c8, 32,  RW, AVS_PMB_S_023, BPCM_CONTROL)
BCHP_REGISTER(0x204d85cc, 32,  RO, AVS_PMB_S_023, BPCM_STATUS)
BCHP_REGISTER(0x204d85d0, 32,  RW, AVS_PMB_S_023, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d85d4, 32,  RW, AVS_PMB_S_023, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d85d8, 32,  RW, AVS_PMB_S_023, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d85dc, 32,  RO, AVS_PMB_S_023, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d85e0, 32,  RW, AVS_PMB_S_023, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d85e4, 32,  RW, AVS_PMB_S_023, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204d8600, 32,  RO, AVS_PMB_S_024, BPCM_ID)
BCHP_REGISTER(0x204d8604, 32,  RO, AVS_PMB_S_024, BPCM_CAPABILITY)
BCHP_REGISTER(0x204d8608, 32,  RW, AVS_PMB_S_024, BPCM_CONTROL)
BCHP_REGISTER(0x204d860c, 32,  RO, AVS_PMB_S_024, BPCM_STATUS)
BCHP_REGISTER(0x204d8610, 32,  RW, AVS_PMB_S_024, AVS_ROSC_CONTROL)
BCHP_REGISTER(0x204d8614, 32,  RW, AVS_PMB_S_024, AVS_ROSC_H_THRESHOLD)
BCHP_REGISTER(0x204d8618, 32,  RW, AVS_PMB_S_024, AVS_ROSC_S_THRESHOLD)
BCHP_REGISTER(0x204d861c, 32,  RO, AVS_PMB_S_024, AVS_ROSC_COUNT)
BCHP_REGISTER(0x204d8620, 32,  RW, AVS_PMB_S_024, AVS_PWD_CONTROL)
BCHP_REGISTER(0x204d8624, 32,  RW, AVS_PMB_S_024, AVS_PWD_ACC_CONTROL)
BCHP_REGISTER(0x204da000, 32,  RW, AVS_PMB_REGISTERS, PMB_TIMEOUT)
BCHP_REGISTER(0x204da004, 32,  RW, AVS_PMB_REGISTERS, CLEAR_PMB_ERROR_STATUS)
BCHP_REGISTER(0x204da008, 32,  RO, AVS_PMB_REGISTERS, PMB_ERROR_STATUS)
BCHP_REGISTER(0x204e0000, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0004, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e0008, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e000c, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_3)
BCHP_REGISTER(0x204e0010, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_4)
BCHP_REGISTER(0x204e0014, 32,  RW, CLKGEN, PLL_AVX_PLL_CHANNEL_CTRL_CH_5)
BCHP_REGISTER(0x204e0018, 32,  RW, CLKGEN, PLL_AVX_PLL_DIV)
BCHP_REGISTER(0x204e001c, 32,  RW, CLKGEN, PLL_AVX_PLL_FRAC)
BCHP_REGISTER(0x204e0020, 32,  RW, CLKGEN, PLL_AVX_PLL_GAIN)
BCHP_REGISTER(0x204e0024, 32,  RW, CLKGEN, PLL_AVX_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e0028, 32,  RO, CLKGEN, PLL_AVX_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e002c, 32,  RW, CLKGEN, PLL_AVX_PLL_MISC)
BCHP_REGISTER(0x204e0030, 32,  RW, CLKGEN, PLL_AVX_PLL_MISC2)
BCHP_REGISTER(0x204e0034, 32,  RW, CLKGEN, PLL_AVX_PLL_PWRON)
BCHP_REGISTER(0x204e0038, 32,  RW, CLKGEN, PLL_AVX_PLL_RESET)
BCHP_REGISTER(0x204e003c, 32,  RW, CLKGEN, PLL_AVX_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0040, 32,  RW, CLKGEN, PLL_AVX_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e0044, 32,  RO, CLKGEN, PLL_AVX_PLL_STATUS)
BCHP_REGISTER(0x204e0048, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e004c, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e0050, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e0054, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_3)
BCHP_REGISTER(0x204e0058, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_4)
BCHP_REGISTER(0x204e005c, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_5)
BCHP_REGISTER(0x204e0060, 32,  RW, CLKGEN, PLL_CPU_PLL_DIV)
BCHP_REGISTER(0x204e0064, 32,  RW, CLKGEN, PLL_CPU_PLL_FRAC)
BCHP_REGISTER(0x204e0068, 32,  RW, CLKGEN, PLL_CPU_PLL_GAIN)
BCHP_REGISTER(0x204e006c, 32,  RW, CLKGEN, PLL_CPU_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e0070, 32,  RO, CLKGEN, PLL_CPU_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e0074, 32,  RW, CLKGEN, PLL_CPU_PLL_MISC)
BCHP_REGISTER(0x204e0078, 32,  RW, CLKGEN, PLL_CPU_PLL_MISC2)
BCHP_REGISTER(0x204e007c, 32,  RW, CLKGEN, PLL_CPU_PLL_PWRON)
BCHP_REGISTER(0x204e0080, 32,  RW, CLKGEN, PLL_CPU_PLL_RESET)
BCHP_REGISTER(0x204e0084, 32,  RW, CLKGEN, PLL_CPU_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0088, 32,  RW, CLKGEN, PLL_CPU_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e008c, 32,  RO, CLKGEN, PLL_CPU_PLL_STATUS)
BCHP_REGISTER(0x204e0090, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0094, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e0098, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e009c, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_3)
BCHP_REGISTER(0x204e00a0, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_4)
BCHP_REGISTER(0x204e00a4, 32,  RW, CLKGEN, PLL_NETWORK_PLL_CHANNEL_CTRL_CH_5)
BCHP_REGISTER(0x204e00a8, 32,  RW, CLKGEN, PLL_NETWORK_PLL_DIV)
BCHP_REGISTER(0x204e00ac, 32,  RW, CLKGEN, PLL_NETWORK_PLL_GAIN)
BCHP_REGISTER(0x204e00b0, 32,  RW, CLKGEN, PLL_NETWORK_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e00b4, 32,  RO, CLKGEN, PLL_NETWORK_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e00b8, 32,  RW, CLKGEN, PLL_NETWORK_PLL_MISC)
BCHP_REGISTER(0x204e00bc, 32,  RW, CLKGEN, PLL_NETWORK_PLL_MISC2)
BCHP_REGISTER(0x204e00c0, 32,  RW, CLKGEN, PLL_NETWORK_PLL_PWRON)
BCHP_REGISTER(0x204e00c4, 32,  RW, CLKGEN, PLL_NETWORK_PLL_RESET)
BCHP_REGISTER(0x204e00c8, 32,  RW, CLKGEN, PLL_NETWORK_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e00cc, 32,  RW, CLKGEN, PLL_NETWORK_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e00d0, 32,  RO, CLKGEN, PLL_NETWORK_PLL_STATUS)
BCHP_REGISTER(0x204e00d4, 32,  RW, CLKGEN, PLL_RAAGA_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e00d8, 32,  RW, CLKGEN, PLL_RAAGA_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e00dc, 32,  RW, CLKGEN, PLL_RAAGA_PLL_DIV)
BCHP_REGISTER(0x204e00e0, 32,  RW, CLKGEN, PLL_RAAGA_PLL_GAIN)
BCHP_REGISTER(0x204e00e4, 32,  RW, CLKGEN, PLL_RAAGA_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e00e8, 32,  RO, CLKGEN, PLL_RAAGA_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e00ec, 32,  RW, CLKGEN, PLL_RAAGA_PLL_MISC)
BCHP_REGISTER(0x204e00f0, 32,  RW, CLKGEN, PLL_RAAGA_PLL_MISC2)
BCHP_REGISTER(0x204e00f4, 32,  RW, CLKGEN, PLL_RAAGA_PLL_PWRON)
BCHP_REGISTER(0x204e00f8, 32,  RW, CLKGEN, PLL_RAAGA_PLL_RESET)
BCHP_REGISTER(0x204e00fc, 32,  RW, CLKGEN, PLL_RAAGA_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0100, 32,  RW, CLKGEN, PLL_RAAGA_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e0104, 32,  RO, CLKGEN, PLL_RAAGA_PLL_STATUS)
BCHP_REGISTER(0x204e0108, 32,  RW, CLKGEN, PLL_SC0_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e010c, 32,  RW, CLKGEN, PLL_SC0_PLL_DIV)
BCHP_REGISTER(0x204e0110, 32,  RW, CLKGEN, PLL_SC0_PLL_FRAC)
BCHP_REGISTER(0x204e0114, 32,  RW, CLKGEN, PLL_SC0_PLL_GAIN)
BCHP_REGISTER(0x204e0118, 32,  RW, CLKGEN, PLL_SC0_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e011c, 32,  RO, CLKGEN, PLL_SC0_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e0120, 32,  RW, CLKGEN, PLL_SC0_PLL_MISC)
BCHP_REGISTER(0x204e0124, 32,  RW, CLKGEN, PLL_SC0_PLL_MISC2)
BCHP_REGISTER(0x204e0128, 32,  RW, CLKGEN, PLL_SC0_PLL_PWRON)
BCHP_REGISTER(0x204e012c, 32,  RW, CLKGEN, PLL_SC0_PLL_RESET)
BCHP_REGISTER(0x204e0130, 32,  RW, CLKGEN, PLL_SC0_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0134, 32,  RW, CLKGEN, PLL_SC0_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e0138, 32,  RO, CLKGEN, PLL_SC0_PLL_STATUS)
BCHP_REGISTER(0x204e013c, 32,  RW, CLKGEN, PLL_SC1_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0140, 32,  RW, CLKGEN, PLL_SC1_PLL_DIV)
BCHP_REGISTER(0x204e0144, 32,  RW, CLKGEN, PLL_SC1_PLL_FRAC)
BCHP_REGISTER(0x204e0148, 32,  RW, CLKGEN, PLL_SC1_PLL_GAIN)
BCHP_REGISTER(0x204e014c, 32,  RW, CLKGEN, PLL_SC1_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e0150, 32,  RO, CLKGEN, PLL_SC1_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e0154, 32,  RW, CLKGEN, PLL_SC1_PLL_MISC)
BCHP_REGISTER(0x204e0158, 32,  RW, CLKGEN, PLL_SC1_PLL_MISC2)
BCHP_REGISTER(0x204e015c, 32,  RW, CLKGEN, PLL_SC1_PLL_PWRON)
BCHP_REGISTER(0x204e0160, 32,  RW, CLKGEN, PLL_SC1_PLL_RESET)
BCHP_REGISTER(0x204e0164, 32,  RW, CLKGEN, PLL_SC1_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0168, 32,  RW, CLKGEN, PLL_SC1_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e016c, 32,  RO, CLKGEN, PLL_SC1_PLL_STATUS)
BCHP_REGISTER(0x204e0170, 32,  RW, CLKGEN, PLL_SYS0_PLL_BG_PWRON)
BCHP_REGISTER(0x204e0174, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0178, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e017c, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e0180, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_3)
BCHP_REGISTER(0x204e0184, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_4)
BCHP_REGISTER(0x204e0188, 32,  RW, CLKGEN, PLL_SYS0_PLL_CHANNEL_CTRL_CH_5)
BCHP_REGISTER(0x204e018c, 32,  RW, CLKGEN, PLL_SYS0_PLL_DIV)
BCHP_REGISTER(0x204e0190, 32,  RW, CLKGEN, PLL_SYS0_PLL_GAIN)
BCHP_REGISTER(0x204e0194, 32,  RW, CLKGEN, PLL_SYS0_PLL_HOLD_CH_ALL)
BCHP_REGISTER(0x204e0198, 32,  RW, CLKGEN, PLL_SYS0_PLL_LDO_CTRL)
BCHP_REGISTER(0x204e019c, 32,  RW, CLKGEN, PLL_SYS0_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e01a0, 32,  RO, CLKGEN, PLL_SYS0_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e01a4, 32,  RW, CLKGEN, PLL_SYS0_PLL_MISC)
BCHP_REGISTER(0x204e01a8, 32,  RW, CLKGEN, PLL_SYS0_PLL_MISC2)
BCHP_REGISTER(0x204e01ac, 32,  RW, CLKGEN, PLL_SYS0_PLL_PWRON)
BCHP_REGISTER(0x204e01b0, 32,  RW, CLKGEN, PLL_SYS0_PLL_RESET)
BCHP_REGISTER(0x204e01b4, 32,  RW, CLKGEN, PLL_SYS0_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e01b8, 32,  RW, CLKGEN, PLL_SYS0_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e01bc, 32,  RO, CLKGEN, PLL_SYS0_PLL_STATUS)
BCHP_REGISTER(0x204e01c0, 32,  RW, CLKGEN, PLL_V3D_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e01c4, 32,  RW, CLKGEN, PLL_V3D_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e01c8, 32,  RW, CLKGEN, PLL_V3D_PLL_DIV)
BCHP_REGISTER(0x204e01cc, 32,  RW, CLKGEN, PLL_V3D_PLL_FRAC)
BCHP_REGISTER(0x204e01d0, 32,  RW, CLKGEN, PLL_V3D_PLL_GAIN)
BCHP_REGISTER(0x204e01d4, 32,  RW, CLKGEN, PLL_V3D_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e01d8, 32,  RO, CLKGEN, PLL_V3D_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e01dc, 32,  RW, CLKGEN, PLL_V3D_PLL_MISC)
BCHP_REGISTER(0x204e01e0, 32,  RW, CLKGEN, PLL_V3D_PLL_MISC2)
BCHP_REGISTER(0x204e01e4, 32,  RW, CLKGEN, PLL_V3D_PLL_PWRON)
BCHP_REGISTER(0x204e01e8, 32,  RW, CLKGEN, PLL_V3D_PLL_RESET)
BCHP_REGISTER(0x204e01ec, 32,  RW, CLKGEN, PLL_V3D_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e01f0, 32,  RW, CLKGEN, PLL_V3D_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e01f4, 32,  RO, CLKGEN, PLL_V3D_PLL_STATUS)
BCHP_REGISTER(0x204e01f8, 32,  RW, CLKGEN, PLL_VCXO0_PLL_BG_PWRON)
BCHP_REGISTER(0x204e01fc, 32,  RW, CLKGEN, PLL_VCXO0_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0200, 32,  RW, CLKGEN, PLL_VCXO0_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e0204, 32,  RW, CLKGEN, PLL_VCXO0_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e0208, 32,  RW, CLKGEN, PLL_VCXO0_PLL_DIV)
BCHP_REGISTER(0x204e020c, 32,  RW, CLKGEN, PLL_VCXO0_PLL_FRAC)
BCHP_REGISTER(0x204e0210, 32,  RW, CLKGEN, PLL_VCXO0_PLL_GAIN)
BCHP_REGISTER(0x204e0214, 32,  RW, CLKGEN, PLL_VCXO0_PLL_HOLD_CH_ALL)
BCHP_REGISTER(0x204e0218, 32,  RW, CLKGEN, PLL_VCXO0_PLL_LDO_CTRL)
BCHP_REGISTER(0x204e021c, 32,  RW, CLKGEN, PLL_VCXO0_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e0220, 32,  RO, CLKGEN, PLL_VCXO0_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e0224, 32,  RW, CLKGEN, PLL_VCXO0_PLL_MISC)
BCHP_REGISTER(0x204e0228, 32,  RW, CLKGEN, PLL_VCXO0_PLL_MISC2)
BCHP_REGISTER(0x204e022c, 32,  RW, CLKGEN, PLL_VCXO0_PLL_PWRON)
BCHP_REGISTER(0x204e0230, 32,  RW, CLKGEN, PLL_VCXO0_PLL_RESET)
BCHP_REGISTER(0x204e0234, 32,  RW, CLKGEN, PLL_VCXO0_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0238, 32,  RW, CLKGEN, PLL_VCXO0_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e023c, 32,  RO, CLKGEN, PLL_VCXO0_PLL_STATUS)
BCHP_REGISTER(0x204e0240, 32,  RW, CLKGEN, PLL_VCXO1_PLL_BG_PWRON)
BCHP_REGISTER(0x204e0244, 32,  RW, CLKGEN, PLL_VCXO1_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e0248, 32,  RW, CLKGEN, PLL_VCXO1_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e024c, 32,  RW, CLKGEN, PLL_VCXO1_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e0250, 32,  RW, CLKGEN, PLL_VCXO1_PLL_DIV)
BCHP_REGISTER(0x204e0254, 32,  RW, CLKGEN, PLL_VCXO1_PLL_FRAC)
BCHP_REGISTER(0x204e0258, 32,  RW, CLKGEN, PLL_VCXO1_PLL_GAIN)
BCHP_REGISTER(0x204e025c, 32,  RW, CLKGEN, PLL_VCXO1_PLL_HOLD_CH_ALL)
BCHP_REGISTER(0x204e0260, 32,  RW, CLKGEN, PLL_VCXO1_PLL_LDO_CTRL)
BCHP_REGISTER(0x204e0264, 32,  RW, CLKGEN, PLL_VCXO1_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e0268, 32,  RO, CLKGEN, PLL_VCXO1_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e026c, 32,  RW, CLKGEN, PLL_VCXO1_PLL_MISC)
BCHP_REGISTER(0x204e0270, 32,  RW, CLKGEN, PLL_VCXO1_PLL_MISC2)
BCHP_REGISTER(0x204e0274, 32,  RW, CLKGEN, PLL_VCXO1_PLL_PWRON)
BCHP_REGISTER(0x204e0278, 32,  RW, CLKGEN, PLL_VCXO1_PLL_RESET)
BCHP_REGISTER(0x204e027c, 32,  RW, CLKGEN, PLL_VCXO1_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e0280, 32,  RW, CLKGEN, PLL_VCXO1_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e0284, 32,  RO, CLKGEN, PLL_VCXO1_PLL_STATUS)
BCHP_REGISTER(0x204e0288, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_0)
BCHP_REGISTER(0x204e028c, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_1)
BCHP_REGISTER(0x204e0290, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_2)
BCHP_REGISTER(0x204e0294, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_3)
BCHP_REGISTER(0x204e0298, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_4)
BCHP_REGISTER(0x204e029c, 32,  RW, CLKGEN, PLL_XPT_PLL_CHANNEL_CTRL_CH_5)
BCHP_REGISTER(0x204e02a0, 32,  RW, CLKGEN, PLL_XPT_PLL_DIV)
BCHP_REGISTER(0x204e02a4, 32,  RW, CLKGEN, PLL_XPT_PLL_GAIN)
BCHP_REGISTER(0x204e02a8, 32,  RW, CLKGEN, PLL_XPT_PLL_LDO_PWRON)
BCHP_REGISTER(0x204e02ac, 32,  RO, CLKGEN, PLL_XPT_PLL_LOCK_STATUS)
BCHP_REGISTER(0x204e02b0, 32,  RW, CLKGEN, PLL_XPT_PLL_MISC)
BCHP_REGISTER(0x204e02b4, 32,  RW, CLKGEN, PLL_XPT_PLL_MISC2)
BCHP_REGISTER(0x204e02b8, 32,  RW, CLKGEN, PLL_XPT_PLL_PWRON)
BCHP_REGISTER(0x204e02bc, 32,  RW, CLKGEN, PLL_XPT_PLL_RESET)
BCHP_REGISTER(0x204e02c0, 32,  RW, CLKGEN, PLL_XPT_PLL_SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x204e02c4, 32,  RW, CLKGEN, PLL_XPT_PLL_SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x204e02c8, 32,  RO, CLKGEN, PLL_XPT_PLL_STATUS)
BCHP_REGISTER(0x204e02cc, 32,  RW, CLKGEN, AON_SYS_AON_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e02d0, 32,  RO, CLKGEN, AON_SYS_AON_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e02d4, 32,  RW, CLKGEN, AON_SYS_AON_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e02d8, 32,  RW, CLKGEN, CLKGEN_CLOCK_DISABLE)
BCHP_REGISTER(0x204e02dc, 32,  RO, CLKGEN, CLKGEN_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e02e0, 32,  RW, CLKGEN, BSPI_CLOCK_SELECT)
BCHP_REGISTER(0x204e02e4, 32,  RW, CLKGEN, CLKGEN_INST_CTRL)
BCHP_REGISTER(0x204e02e8, 32,  RW, CLKGEN, CLOCK_MONITOR_CONTROL)
BCHP_REGISTER(0x204e02ec, 32,  RW, CLKGEN, CLOCK_MONITOR_MAX_COUNT)
BCHP_REGISTER(0x204e02f0, 32,  RO, CLKGEN, CLOCK_MONITOR_REF_COUNTER)
BCHP_REGISTER(0x204e02f4, 32,  RO, CLKGEN, CLOCK_MONITOR_REF_DONE)
BCHP_REGISTER(0x204e02f8, 32,  RO, CLKGEN, CLOCK_MONITOR_VIEW_COUNTER)
BCHP_REGISTER(0x204e02fc, 32,  RW, CLKGEN, CPU_ORION_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0300, 32,  RO, CLKGEN, CPU_ORION_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0304, 32,  RW, CLKGEN, CPU_ORION_TOP_INST_CLOCK_SELECT)
BCHP_REGISTER(0x204e0308, 32,  RW, CLKGEN, CPU_ORION_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e030c, 32,  RW, CLKGEN, DISABLE_AVS_TOP_DURING_S2)
BCHP_REGISTER(0x204e0310, 32,  RW, CLKGEN, DISABLE_AVS_TOP_DURING_S2_SECURE)
BCHP_REGISTER(0x204e0314, 32,  RW, CLKGEN, INTERNAL_MUX_SELECT)
BCHP_REGISTER(0x204e0318, 32,  RW, CLKGEN, ITU656_0_MUX_SELECT)
BCHP_REGISTER(0x204e031c, 32,  RW, CLKGEN, PAD_CLK_OUT0_OBSERVATION)
BCHP_REGISTER(0x204e0320, 32,  RW, CLKGEN, PAD_CLK_OUT1_OBSERVATION)
BCHP_REGISTER(0x204e0324, 32,  RW, CLKGEN, PAD_CLOCK_DISABLE)
BCHP_REGISTER(0x204e0328, 32,  RO, CLKGEN, PAD_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e032c, 32,  RW, CLKGEN, PAD_MUX_SELECT)
BCHP_REGISTER(0x204e0330, 32,  RO, CLKGEN, PLL_AVX_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0334, 32,  RW, CLKGEN, PLL_CPU_CHANNEL0_WFI_SM_CONTROL)
BCHP_REGISTER(0x204e0338, 32,  RW, CLKGEN, PLL_CPU_CHANNEL0_WFI_SM_MDIV_ALTERNATE)
BCHP_REGISTER(0x204e033c, 32,  RO, CLKGEN, PLL_CPU_CHANNEL0_WFI_SM_STATUS)
BCHP_REGISTER(0x204e0340, 32,  RO, CLKGEN, PLL_NETWORK_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0344, 32,  RO, CLKGEN, PLL_RAAGA_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0348, 32,  RO, CLKGEN, PLL_SC0_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e034c, 32,  RW, CLKGEN, PLL_SC0_RDB_MACRO_CTRL)
BCHP_REGISTER(0x204e0350, 32,  RO, CLKGEN, PLL_SC1_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0354, 32,  RW, CLKGEN, PLL_SC1_RDB_MACRO_CTRL)
BCHP_REGISTER(0x204e0358, 32,  RW, CLKGEN, PLL_STRAP_OVERRIDE)
BCHP_REGISTER(0x204e035c, 32,  RO, CLKGEN, PLL_V3D_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0360, 32,  RO, CLKGEN, PLL_VCXO0_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0364, 32,  RO, CLKGEN, PLL_VCXO1_PLL_RESET_STATUS)
BCHP_REGISTER(0x204e0368, 32,  RW, CLKGEN, PM_CLOCK_Async_ALIVE_SEL)
BCHP_REGISTER(0x204e036c, 32,  RW, CLKGEN, PM_PLL_ALIVE_SEL)
BCHP_REGISTER(0x204e0370, 32,  RW, CLKGEN, PM_PLL_LDO_POWERUP)
BCHP_REGISTER(0x204e0374, 32,  RW, CLKGEN, SMARTCARD_MUX_SELECT)
BCHP_REGISTER(0x204e0378, 32,  RW, CLKGEN, SPARE)
BCHP_REGISTER(0x204e037c, 32,  RW, CLKGEN, STB_ANA_SDAC_TS28HPM_6MX_2MR_FC_H_E_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e0380, 32,  RO, CLKGEN, STB_ANA_SDAC_TS28HPM_6MX_2MR_FC_H_E_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e0384, 32,  RW, CLKGEN, STB_BVN_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0388, 32,  RO, CLKGEN, STB_BVN_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e038c, 32,  RW, CLKGEN, STB_CORE_XPT_HIF_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e0390, 32,  RO, CLKGEN, STB_CORE_XPT_HIF_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e0394, 32,  RW, CLKGEN, STB_CORE_XPT_HIF_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0398, 32,  RO, CLKGEN, STB_CORE_XPT_HIF_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e039c, 32,  RW, CLKGEN, STB_CORE_XPT_HIF_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e03a0, 32,  RW, CLKGEN, SYS_AON_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e03a4, 32,  RO, CLKGEN, SYS_AON_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e03a8, 32,  RW, CLKGEN, STB_DVP_HR_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e03ac, 32,  RW, CLKGEN, STB_UFE_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e03b0, 32,  RO, CLKGEN, STB_UFE_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e03b4, 32,  RW, CLKGEN, STB_DVP_HR_INST_CLOCK_ENABLE2)
BCHP_REGISTER(0x204e03b8, 32,  RO, CLKGEN, STB_DVP_HR_INST_CLOCK_ENABLE2_STATUS)
BCHP_REGISTER(0x204e03bc, 32,  RO, CLKGEN, STB_DVP_HR_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e03c0, 32,  RW, CLKGEN, STB_UFE_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e03c4, 32,  RW, CLKGEN, STB_DVP_MHT_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e03c8, 32,  RO, CLKGEN, STB_DVP_MHT_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e03cc, 32,  RW, CLKGEN, STB_DVP_MHT_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e03d0, 32,  RO, CLKGEN, STB_DVP_MHT_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e03d4, 32,  RW, CLKGEN, STB_DVP_MHT_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e03d8, 32,  RW, CLKGEN, STB_GENET_TOP_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e03dc, 32,  RO, CLKGEN, STB_GENET_TOP_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e03e0, 32,  RW, CLKGEN, STB_GENET_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e03e4, 32,  RO, CLKGEN, STB_GENET_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e03e8, 32,  RW, CLKGEN, STB_GENET_TOP_INST_CLOCK_SELECT)
BCHP_REGISTER(0x204e03ec, 32,  RW, CLKGEN, STB_GENET_TOP_INST_CLOCK_SELECT_GENET0)
BCHP_REGISTER(0x204e03f0, 32,  RW, CLKGEN, STB_GENET_TOP_INST_CLOCK_SELECT_GENET1)
BCHP_REGISTER(0x204e03f4, 32,  RW, CLKGEN, STB_GENET_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e03f8, 32,  RW, CLKGEN, STB_HVDP0_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e03fc, 32,  RO, CLKGEN, STB_HVDP0_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0400, 32,  RW, CLKGEN, STB_HVDP0_TOP_INST_CLOCK_SELECT)
BCHP_REGISTER(0x204e0404, 32,  RW, CLKGEN, STB_HVDP0_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0408, 32,  RW, CLKGEN, STB_HVDS0_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e040c, 32,  RO, CLKGEN, STB_HVDS0_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0410, 32,  RW, CLKGEN, STB_HVDS0_TOP_INST_CLOCK_SELECT)
BCHP_REGISTER(0x204e0414, 32,  RW, CLKGEN, STB_HVDS0_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0418, 32,  RW, CLKGEN, STB_MEMSYS_32_0_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e041c, 32,  RO, CLKGEN, STB_MEMSYS_32_0_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0420, 32,  RW, CLKGEN, STB_MEMSYS_32_0_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0424, 32,  RO, CLKGEN, STB_MEMSYS_32_0_INST_STATUS)
BCHP_REGISTER(0x204e0428, 32,  RW, CLKGEN, STB_PROD_OTP_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e042c, 32,  RO, CLKGEN, STB_PROD_OTP_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e0430, 32,  RW, CLKGEN, STB_PROD_OTP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0434, 32,  RO, CLKGEN, STB_PROD_OTP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0438, 32,  RW, CLKGEN, STB_DS_TOP_INST_CLOCK_ENABLE_DS)
BCHP_REGISTER(0x204e043c, 32,  RO, CLKGEN, STB_DS_TOP_INST_CLOCK_ENABLE_DS_STATUS)
BCHP_REGISTER(0x204e0440, 32,  RW, CLKGEN, STB_LEAP_TOP_INST_CLOCK_ENABLE_LEAP)
BCHP_REGISTER(0x204e0444, 32,  RO, CLKGEN, STB_LEAP_TOP_INST_CLOCK_ENABLE_LEAP_STATUS)
BCHP_REGISTER(0x204e0448, 32,  RW, CLKGEN, STB_LEAP_TOP_INST_DISABLE_CLOCK)
BCHP_REGISTER(0x204e044c, 32,  RW, CLKGEN, STB_RAAGA_DSP_TOP_0_INST_RAAGA0)
BCHP_REGISTER(0x204e0450, 32,  RW, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e0454, 32,  RO, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e0458, 32,  RW, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_ENABLE_PCIE0)
BCHP_REGISTER(0x204e045c, 32,  RO, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_ENABLE_PCIE0_STATUS)
BCHP_REGISTER(0x204e0460, 32,  RW, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_ENABLE_SATA30)
BCHP_REGISTER(0x204e0464, 32,  RO, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_ENABLE_SATA30_STATUS)
BCHP_REGISTER(0x204e0468, 32,  RW, CLKGEN, STB_SATA3_PCIE_TOP_INST_CLOCK_SELECT_SATA30)
BCHP_REGISTER(0x204e046c, 32,  RW, CLKGEN, STB_SATA3_PCIE_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0470, 32,  RW, CLKGEN, STB_SECTOP_INST_CLOCK_ENABLE_SECTOP_XPT)
BCHP_REGISTER(0x204e0474, 32,  RO, CLKGEN, STB_SECTOP_INST_CLOCK_ENABLE_SECTOP_XPT_STATUS)
BCHP_REGISTER(0x204e0478, 32,  RW, CLKGEN, STB_SECTOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e047c, 32,  RW, CLKGEN, STB_SFE_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0480, 32,  RO, CLKGEN, STB_SFE_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0484, 32,  RW, CLKGEN, STB_SFE_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0488, 32,  RW, CLKGEN, STB_SYS_CTRL_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e048c, 32,  RO, CLKGEN, STB_SYS_CTRL_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e0490, 32,  RW, CLKGEN, STB_SYS_CTRL_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e0494, 32,  RO, CLKGEN, STB_SYS_CTRL_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e0498, 32,  RW, CLKGEN, STB_SYS_CTRL_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e049c, 32,  RW, CLKGEN, STB_USB0_TOP_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e04a0, 32,  RO, CLKGEN, STB_USB0_TOP_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e04a4, 32,  RW, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e04a8, 32,  RO, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e04ac, 32,  RW, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USB20)
BCHP_REGISTER(0x204e04b0, 32,  RO, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USB20_STATUS)
BCHP_REGISTER(0x204e04b4, 32,  RW, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USB30)
BCHP_REGISTER(0x204e04b8, 32,  RO, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USB30_STATUS)
BCHP_REGISTER(0x204e04bc, 32,  RW, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USBD)
BCHP_REGISTER(0x204e04c0, 32,  RO, CLKGEN, STB_USB0_TOP_INST_CLOCK_ENABLE_USBD_STATUS)
BCHP_REGISTER(0x204e04c4, 32,  RW, CLKGEN, STB_USB0_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e04c8, 32,  RW, CLKGEN, STB_V3D_TOP_INST_CLOCK_ENABLE)
BCHP_REGISTER(0x204e04cc, 32,  RO, CLKGEN, STB_V3D_TOP_INST_CLOCK_ENABLE_STATUS)
BCHP_REGISTER(0x204e04d0, 32,  RW, CLKGEN, STB_V3D_TOP_INST_CLOCK_SELECT)
BCHP_REGISTER(0x204e04d4, 32,  RW, CLKGEN, STB_V3D_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e04d8, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_DISABLE)
BCHP_REGISTER(0x204e04dc, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_DISABLE_STATUS)
BCHP_REGISTER(0x204e04e0, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_AIO)
BCHP_REGISTER(0x204e04e4, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_AIO_STATUS)
BCHP_REGISTER(0x204e04e8, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_M2MC0)
BCHP_REGISTER(0x204e04ec, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_M2MC0_STATUS)
BCHP_REGISTER(0x204e04f0, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VDAC)
BCHP_REGISTER(0x204e04f4, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VDAC_STATUS)
BCHP_REGISTER(0x204e04f8, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VEC)
BCHP_REGISTER(0x204e04fc, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VEC_AIO)
BCHP_REGISTER(0x204e0500, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VEC_AIO_STATUS)
BCHP_REGISTER(0x204e0504, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VEC_STATUS)
BCHP_REGISTER(0x204e0508, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VIP)
BCHP_REGISTER(0x204e050c, 32,  RO, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_CLOCK_ENABLE_VIP_STATUS)
BCHP_REGISTER(0x204e0510, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_M2MC0)
BCHP_REGISTER(0x204e0514, 32,  RW, CLKGEN, STB_VEC_AIO_GFX_TOP_INST_OBSERVE_CLOCK)
BCHP_REGISTER(0x204e0518, 32,  RW, CLKGEN, TESTPORT)
BCHP_REGISTER(0x204e051c, 32,  RW, CLKGEN, UART_0_CLOCK_MUX_SELECT)
BCHP_REGISTER(0x204e0520, 32,  RW, CLKGEN, UART_1_CLOCK_MUX_SELECT)
BCHP_REGISTER(0x204e0524, 32,  RW, CLKGEN, UART_2_CLOCK_MUX_SELECT)
BCHP_REGISTER(0x204e0528, 32,  RW, CLKGEN, STB_CLKGEN_BVB_MUX_SELECT)
BCHP_REGISTER(0x204e1000, 32,  RW, CLKGEN, PLL_CPU_DVFS_SM_ARRAY)
BCHP_REGISTER(0x204e1004, 32,  RW, CLKGEN, PLL_CPU_DVFS_SM_CONTROL0)
BCHP_REGISTER(0x204e1008, 32,  RW, CLKGEN, PLL_CPU_DVFS_SM_CONTROL1)
BCHP_REGISTER(0x204e100c, 32,  RO, CLKGEN, PLL_CPU_DVFS_SM_STATUS)
BCHP_REGISTER(0x204e1010, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_0_4K)
BCHP_REGISTER(0x204e1014, 32,  RW, CLKGEN, PLL_CPU_PLL_CHANNEL_CTRL_CH_1_4K)
BCHP_REGISTER(0x204e1018, 32,  RW, CLKGEN, PLL_CPU_PLL_DIV_4K)
BCHP_REGISTER(0x204e2800, 32,  RW, VCXO_0_RM, CONTROL)
BCHP_REGISTER(0x204e2804, 32,  RW, VCXO_0_RM, RATE_RATIO)
BCHP_REGISTER(0x204e2808, 32,  RW, VCXO_0_RM, SAMPLE_INC)
BCHP_REGISTER(0x204e280c, 32,  RW, VCXO_0_RM, PHASE_INC)
BCHP_REGISTER(0x204e2810, 32,  WO, VCXO_0_RM, INTEGRATOR_HI)
BCHP_REGISTER(0x204e2814, 32,  WO, VCXO_0_RM, INTEGRATOR_LO)
BCHP_REGISTER(0x204e2818, 32,  RW, VCXO_0_RM, OFFSET)
BCHP_REGISTER(0x204e281c, 32,  RW, VCXO_0_RM, FORMAT)
BCHP_REGISTER(0x204e2820, 32,  RW, VCXO_0_RM, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x204e2824, 32,  RW, VCXO_0_RM, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x204e2828, 32,  RW, VCXO_0_RM, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x204e282c, 32,  RO, VCXO_0_RM, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x204e2830, 32,  RO, VCXO_0_RM, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x204e2834, 32,  RO, VCXO_0_RM, STATUS)
BCHP_REGISTER(0x204e2838, 32,  RW, VCXO_0_RM, STATUS_CLEAR)
BCHP_REGISTER(0x204e2880, 32,  RW, VCXO_1_RM, CONTROL)
BCHP_REGISTER(0x204e2884, 32,  RW, VCXO_1_RM, RATE_RATIO)
BCHP_REGISTER(0x204e2888, 32,  RW, VCXO_1_RM, SAMPLE_INC)
BCHP_REGISTER(0x204e288c, 32,  RW, VCXO_1_RM, PHASE_INC)
BCHP_REGISTER(0x204e2890, 32,  WO, VCXO_1_RM, INTEGRATOR_HI)
BCHP_REGISTER(0x204e2894, 32,  WO, VCXO_1_RM, INTEGRATOR_LO)
BCHP_REGISTER(0x204e2898, 32,  RW, VCXO_1_RM, OFFSET)
BCHP_REGISTER(0x204e289c, 32,  RW, VCXO_1_RM, FORMAT)
BCHP_REGISTER(0x204e28a0, 32,  RW, VCXO_1_RM, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x204e28a4, 32,  RW, VCXO_1_RM, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x204e28a8, 32,  RW, VCXO_1_RM, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x204e28ac, 32,  RO, VCXO_1_RM, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x204e28b0, 32,  RO, VCXO_1_RM, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x204e28b4, 32,  RO, VCXO_1_RM, STATUS)
BCHP_REGISTER(0x204e28b8, 32,  RW, VCXO_1_RM, STATUS_CLEAR)
BCHP_REGISTER(0x204e3000, 32,  RO, CLKGEN_RGR, REVISION)
BCHP_REGISTER(0x204e3004, 32,  RW, CLKGEN_RGR, CTRL)
BCHP_REGISTER(0x204e3008, 32,  RW, CLKGEN_RGR, RBUS_TIMER)
BCHP_REGISTER(0x204e300c, 32,  RW, CLKGEN_RGR, SW_INIT_0)
BCHP_REGISTER(0x204e3010, 32,  RW, CLKGEN_RGR, SW_INIT_1)
BCHP_REGISTER(0x204e4800, 32,  RO, CLKGEN_INTR2, CPU_STATUS)
BCHP_REGISTER(0x204e4804, 32,  WO, CLKGEN_INTR2, CPU_SET)
BCHP_REGISTER(0x204e4808, 32,  WO, CLKGEN_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x204e480c, 32,  RO, CLKGEN_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x204e4810, 32,  WO, CLKGEN_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x204e4814, 32,  WO, CLKGEN_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x204e4818, 32,  RO, CLKGEN_INTR2, PCI_STATUS)
BCHP_REGISTER(0x204e481c, 32,  WO, CLKGEN_INTR2, PCI_SET)
BCHP_REGISTER(0x204e4820, 32,  WO, CLKGEN_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x204e4824, 32,  RO, CLKGEN_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x204e4828, 32,  WO, CLKGEN_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x204e482c, 32,  WO, CLKGEN_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x204e4830, 32,  RO, CLKGEN_INTR2, SCPU_STATUS)
BCHP_REGISTER(0x204e4834, 32,  WO, CLKGEN_INTR2, SCPU_SET)
BCHP_REGISTER(0x204e4838, 32,  WO, CLKGEN_INTR2, SCPU_CLEAR)
BCHP_REGISTER(0x204e483c, 32,  RO, CLKGEN_INTR2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x204e4840, 32,  WO, CLKGEN_INTR2, SCPU_MASK_SET)
BCHP_REGISTER(0x204e4844, 32,  WO, CLKGEN_INTR2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x204e5000, 32,  RW, AVS_RANGE_BLOCKER, RSV_0)
BCHP_REGISTER(0x204e5058, 32,  RO, AVS_RANGE_BLOCKER, RSV_22)
BCHP_REGISTER(0x204e6000, 32,  RO, PROD_OTP_GRB, REVISION)
BCHP_REGISTER(0x204e6004, 32,  RW, PROD_OTP_GRB, CTRL)
BCHP_REGISTER(0x204e6008, 32,  RW, PROD_OTP_GRB, SW_INIT_0)
BCHP_REGISTER(0x204e600c, 32,  RW, PROD_OTP_GRB, SW_INIT_1)
BCHP_REGISTER(0x204e6100, 32,  RW, JTAG_OTP, GENERAL_CTRL_0)
BCHP_REGISTER(0x204e6104, 32,  RW, JTAG_OTP, GENERAL_CTRL_1)
BCHP_REGISTER(0x204e6108, 32,  RW, JTAG_OTP, GENERAL_CTRL_2)
BCHP_REGISTER(0x204e610c, 32,  RW, JTAG_OTP, GENERAL_CTRL_3)
BCHP_REGISTER(0x204e6110, 32,  RW, JTAG_OTP, GENERAL_CTRL_4)
BCHP_REGISTER(0x204e6114, 32,  RO, JTAG_OTP, GENERAL_STATUS_0)
BCHP_REGISTER(0x204e6118, 32,  RO, JTAG_OTP, GENERAL_STATUS_1)
BCHP_REGISTER(0x204e611c, 32,  RO, JTAG_OTP, GENERAL_STATUS_2)
BCHP_REGISTER(0x204e6120, 32,  RO, JTAG_OTP, GENERAL_STATUS_3)
BCHP_REGISTER(0x204e6124, 32,  RO, JTAG_OTP, GENERAL_STATUS_4)
BCHP_REGISTER(0x204e6128, 32,  RO, JTAG_OTP, GENERAL_STATUS_5)
BCHP_REGISTER(0x204e612c, 32,  RO, JTAG_OTP, GENERAL_STATUS_6)
BCHP_REGISTER(0x204e6130, 32,  RO, JTAG_OTP, GENERAL_STATUS_7)
BCHP_REGISTER(0x204e6134, 32,  RO, JTAG_OTP, GENERAL_STATUS_8)
BCHP_REGISTER(0x204e6138, 32,  RO, JTAG_OTP, GENERAL_STATUS_9)
BCHP_REGISTER(0x204e613c, 32,  RO, JTAG_OTP, GENERAL_STATUS_10)
BCHP_REGISTER(0x204e6140, 32,  RO, JTAG_OTP, GENERAL_STATUS_11)
BCHP_REGISTER(0x204e6144, 32,  RO, JTAG_OTP, GENERAL_STATUS_12)
BCHP_REGISTER(0x204e6148, 32,  RO, JTAG_OTP, GENERAL_STATUS_13)
BCHP_REGISTER(0x204e614c, 32,  RO, JTAG_OTP, GENERAL_STATUS_14)
BCHP_REGISTER(0x204e6150, 32,  RO, JTAG_OTP, GENERAL_STATUS_15)
BCHP_REGISTER(0x204e6154, 32,  RO, JTAG_OTP, GENERAL_STATUS_16)
BCHP_REGISTER(0x204e6158, 32,  RO, JTAG_OTP, GENERAL_STATUS_17)
BCHP_REGISTER(0x204e615c, 32,  RO, JTAG_OTP, GENERAL_STATUS_18)
BCHP_REGISTER(0x20600000, 32,  RO, MFD_0, REVISION_ID)
BCHP_REGISTER(0x20600004, 32,  RO, MFD_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20600008, 32, CFG, MFD_0, FEEDER_CNTL)
BCHP_REGISTER(0x2060000c, 32, CFG, MFD_0, LAC_CNTL)
BCHP_REGISTER(0x20600010, 32, CFG, MFD_0, FIXED_COLOUR)
BCHP_REGISTER(0x20600014, 32, CFG, MFD_0, STRIDE)
BCHP_REGISTER(0x20600018, 32, CFG, MFD_0, DISP_HSIZE)
BCHP_REGISTER(0x2060001c, 32, CFG, MFD_0, DISP_VSIZE)
BCHP_REGISTER(0x20600020, 32, CFG, MFD_0, DATA_MODE)
BCHP_REGISTER(0x20600024, 32, CFG, MFD_0, DITHER_CTRL)
BCHP_REGISTER(0x20600028, 32, CFG, MFD_0, DITHER_LFSR_INIT)
BCHP_REGISTER(0x2060002c, 32, CFG, MFD_0, DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20600030, 32, CFG, MFD_0, COMP_ORDER)
BCHP_REGISTER(0x20600040, 64, CFG, MFD_0, PICTURE0_LINE_ADDR_0)
BCHP_REGISTER(0x20600048, 64, CFG, MFD_0, PICTURE0_LINE_ADDR_0_R)
BCHP_REGISTER(0x20600050, 64, CFG, MFD_0, PICTURE0_LINE_ADDR_1)
BCHP_REGISTER(0x20600058, 64, CFG, MFD_0, PICTURE0_LINE_ADDR_1_R)
BCHP_REGISTER(0x20600060, 64, CFG, MFD_0, PICTURE1_LINE_ADDR_0)
BCHP_REGISTER(0x20600068, 64, CFG, MFD_0, PICTURE1_LINE_ADDR_0_R)
BCHP_REGISTER(0x20600070, 64, CFG, MFD_0, PICTURE1_LINE_ADDR_1)
BCHP_REGISTER(0x20600078, 64, CFG, MFD_0, PICTURE1_LINE_ADDR_1_R)
BCHP_REGISTER(0x20600080, 32, CFG, MFD_0, LUMA_NMBY)
BCHP_REGISTER(0x20600084, 32, CFG, MFD_0, CHROMA_NMBY)
BCHP_REGISTER(0x20600088, 32, CFG, MFD_0, PIC_OFFSET)
BCHP_REGISTER(0x2060008c, 32, CFG, MFD_0, RANGE_EXP_REMAP_CNTL)
BCHP_REGISTER(0x20600090, 32, CFG, MFD_0, CHROMA_SAMPLING_CNTL)
BCHP_REGISTER(0x20600094, 32, CFG, MFD_0, CHROMA_REPOSITION_DERING_ENABLE)
BCHP_REGISTER(0x20600098, 32,  RW, MFD_0, PIC_FEED_CMD)
BCHP_REGISTER(0x2060009c, 32,  RO, MFD_0, FEED_STATUS)
BCHP_REGISTER(0x206000c0, 32,  RO, MFD_0, FEEDER_ERROR_INTERRUPT_STATUS)
BCHP_REGISTER(0x206000c4, 32,  WO, MFD_0, FEEDER_ERROR_INTERRUPT_STATUS_CLR)
BCHP_REGISTER(0x206000c8, 32,  RO, MFD_0, FEEDER_BVB_STATUS)
BCHP_REGISTER(0x206000cc, 32,  WO, MFD_0, FEEDER_BVB_STATUS_CLR)
BCHP_REGISTER(0x206000d0, 32, CFG, MFD_0, TEST_MODE_CNTL)
BCHP_REGISTER(0x206000d4, 32,  RO, MFD_0, BVB_SAMPLE_DATA)
BCHP_REGISTER(0x206000e0, 32,  RO, MFD_0, SCB_STATUS)
BCHP_REGISTER(0x206000e4, 32, CFG, MFD_0, DEMO_SETTING)
BCHP_REGISTER(0x206001b8, 32, CFG, MFD_0, CCA_CONFIG)
BCHP_REGISTER(0x206001c0, 32, CFG, MFD_0, CRC_CTRL)
BCHP_REGISTER(0x206001c4, 32, CFG, MFD_0, CRC_SEED)
BCHP_REGISTER(0x206001c8, 32,  RO, MFD_0, LUMA_CRC)
BCHP_REGISTER(0x206001cc, 32,  RO, MFD_0, CHROMA_CRC)
BCHP_REGISTER(0x206001d0, 32,  RO, MFD_0, CHROMA_1_CRC)
BCHP_REGISTER(0x206001d4, 32,  RO, MFD_0, LUMA_CRC_R)
BCHP_REGISTER(0x206001d8, 32,  RO, MFD_0, CHROMA_CRC_R)
BCHP_REGISTER(0x206001dc, 32,  RO, MFD_0, CHROMA_1_CRC_R)
BCHP_REGISTER(0x206001ec, 32, CFG, MFD_0, MTG_FRAME_SIZE)
BCHP_REGISTER(0x206001f0, 32,  WO, MFD_0, MTG_FORCE)
BCHP_REGISTER(0x206001f4, 32,  RW, MFD_0, MTG_CONTROL)
BCHP_REGISTER(0x206001f8, 32, CFG, MFD_0, SCRATCH_REGISTER_0)
BCHP_REGISTER(0x206001fc, 32, CFG, MFD_0, SCRATCH_REGISTER_1)
BCHP_REGISTER(0x20602000, 32,  RO, VFD_0, REVISION_ID)
BCHP_REGISTER(0x20602004, 32,  RO, VFD_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20602008, 32, CFG, VFD_0, FEEDER_CNTL)
BCHP_REGISTER(0x2060200c, 32, CFG, VFD_0, LAC_CNTL)
BCHP_REGISTER(0x20602010, 32, CFG, VFD_0, FIXED_COLOUR)
BCHP_REGISTER(0x20602014, 32, CFG, VFD_0, STRIDE)
BCHP_REGISTER(0x20602018, 32, CFG, VFD_0, DISP_HSIZE)
BCHP_REGISTER(0x2060201c, 32, CFG, VFD_0, DISP_VSIZE)
BCHP_REGISTER(0x20602020, 32, CFG, VFD_0, DATA_MODE)
BCHP_REGISTER(0x20602024, 32, CFG, VFD_0, DITHER_CTRL)
BCHP_REGISTER(0x20602028, 32, CFG, VFD_0, DITHER_LFSR_INIT)
BCHP_REGISTER(0x2060202c, 32, CFG, VFD_0, DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20602030, 32, CFG, VFD_0, COMP_ORDER)
BCHP_REGISTER(0x20602040, 64, CFG, VFD_0, PICTURE0_LINE_ADDR_0)
BCHP_REGISTER(0x20602048, 64, CFG, VFD_0, PICTURE0_LINE_ADDR_0_R)
BCHP_REGISTER(0x20602098, 32,  RW, VFD_0, PIC_FEED_CMD)
BCHP_REGISTER(0x2060209c, 32,  RO, VFD_0, FEED_STATUS)
BCHP_REGISTER(0x206020c0, 32,  RO, VFD_0, FEEDER_ERROR_INTERRUPT_STATUS)
BCHP_REGISTER(0x206020c4, 32,  WO, VFD_0, FEEDER_ERROR_INTERRUPT_STATUS_CLR)
BCHP_REGISTER(0x206020c8, 32,  RO, VFD_0, FEEDER_BVB_STATUS)
BCHP_REGISTER(0x206020cc, 32,  WO, VFD_0, FEEDER_BVB_STATUS_CLR)
BCHP_REGISTER(0x206020d0, 32, CFG, VFD_0, TEST_MODE_CNTL)
BCHP_REGISTER(0x206020d4, 32,  RO, VFD_0, BVB_SAMPLE_DATA)
BCHP_REGISTER(0x206020e0, 32,  RO, VFD_0, SCB_STATUS)
BCHP_REGISTER(0x206020e4, 32, CFG, VFD_0, DEMO_SETTING)
BCHP_REGISTER(0x20602100, 32, CFG, VFD_0, DCDM_CFG)
BCHP_REGISTER(0x20602104, 32, CFG, VFD_0, DCDM_RCTRL_FIRST)
BCHP_REGISTER(0x20602108, 32, CFG, VFD_0, DCDM_RCTRL)
BCHP_REGISTER(0x2060210c, 32, CFG, VFD_0, DCDM_RECT_BIT_RATE)
BCHP_REGISTER(0x20602110, 32, CFG, VFD_0, DCDM_RECT_CTRL)
BCHP_REGISTER(0x20602114, 32, CFG, VFD_0, DCDM_RECT_ENABLE_MASK)
BCHP_REGISTER(0x206021f8, 32, CFG, VFD_0, SCRATCH_REGISTER_0)
BCHP_REGISTER(0x206021fc, 32, CFG, VFD_0, SCRATCH_REGISTER_1)
BCHP_REGISTER(0x20603000, 32,  RO, RDC, revision_id)
BCHP_REGISTER(0x20603004, 32,  RO, RDC, hw_configuration)
BCHP_REGISTER(0x20603008, 32,  RW, RDC, config)
BCHP_REGISTER(0x2060300c, 32,  WO, RDC, force_trigger)
BCHP_REGISTER(0x20603010, 32,  RW, RDC, error_status)
BCHP_REGISTER(0x20603014, 32,  RO, RDC, desc_stalled_status)
BCHP_REGISTER(0x2060301c, 32, CFG, RDC, eop_timer_threshold)
BCHP_REGISTER(0x20603020, 32,  RO, RDC, eop_timeout_status)
BCHP_REGISTER(0x20603024, 32,  RO, RDC, scb_init_status)
BCHP_REGISTER(0x20603028, 32, CFG, RDC, stc_flag_0)
BCHP_REGISTER(0x20603040, 32, CFG, RDC, debug_ctrl)
BCHP_REGISTER(0x20603044, 32, CFG, RDC, hdmi_sync_sel)
BCHP_REGISTER(0x20603048, 32, CFG, RDC, itm0_sync_sel)
BCHP_REGISTER(0x20603080, 64,  RW, RDC, data_0)
BCHP_REGISTER(0x20603088, 64,  RW, RDC, data_1)
BCHP_REGISTER(0x20603090, 64,  RW, RDC, data_2)
BCHP_REGISTER(0x20603098, 64,  RW, RDC, data_3)
BCHP_REGISTER(0x206030a0, 64,  RW, RDC, data_4)
BCHP_REGISTER(0x206030a8, 64,  RW, RDC, data_5)
BCHP_REGISTER(0x206030b0, 64,  RW, RDC, data_6)
BCHP_REGISTER(0x206030b8, 64,  RW, RDC, data_7)
BCHP_REGISTER(0x206030c0, 64,  RW, RDC, data_8)
BCHP_REGISTER(0x206030c8, 64,  RW, RDC, data_9)
BCHP_REGISTER(0x206030d0, 64,  RW, RDC, data_10)
BCHP_REGISTER(0x206030d8, 64,  RW, RDC, data_11)
BCHP_REGISTER(0x206030e0, 64,  RW, RDC, data_12)
BCHP_REGISTER(0x206030e8, 64,  RW, RDC, data_13)
BCHP_REGISTER(0x206030f0, 64,  RW, RDC, data_14)
BCHP_REGISTER(0x206030f8, 64,  RW, RDC, data_15)
BCHP_REGISTER(0x20603100, 32, CFG, RDC, comb_mask_0)
BCHP_REGISTER(0x20603104, 32, CFG, RDC, comb_mask_0_hi)
BCHP_REGISTER(0x20603108, 32, CFG, RDC, comb_mask_0_hi2)
BCHP_REGISTER(0x2060310c, 32,  RW, RDC, comb_status_0)
BCHP_REGISTER(0x20603110, 32,  RW, RDC, comb_status_0_hi)
BCHP_REGISTER(0x20603114, 32,  RW, RDC, comb_status_0_hi2)
BCHP_REGISTER(0x20603118, 32, CFG, RDC, comb_mask_1)
BCHP_REGISTER(0x2060311c, 32, CFG, RDC, comb_mask_1_hi)
BCHP_REGISTER(0x20603120, 32, CFG, RDC, comb_mask_1_hi2)
BCHP_REGISTER(0x20603124, 32,  RW, RDC, comb_status_1)
BCHP_REGISTER(0x20603128, 32,  RW, RDC, comb_status_1_hi)
BCHP_REGISTER(0x2060312c, 32,  RW, RDC, comb_status_1_hi2)
BCHP_REGISTER(0x20603130, 32, CFG, RDC, comb_mask_2)
BCHP_REGISTER(0x20603134, 32, CFG, RDC, comb_mask_2_hi)
BCHP_REGISTER(0x20603138, 32, CFG, RDC, comb_mask_2_hi2)
BCHP_REGISTER(0x2060313c, 32,  RW, RDC, comb_status_2)
BCHP_REGISTER(0x20603140, 32,  RW, RDC, comb_status_2_hi)
BCHP_REGISTER(0x20603144, 32,  RW, RDC, comb_status_2_hi2)
BCHP_REGISTER(0x20603148, 32, CFG, RDC, comb_mask_3)
BCHP_REGISTER(0x2060314c, 32, CFG, RDC, comb_mask_3_hi)
BCHP_REGISTER(0x20603150, 32, CFG, RDC, comb_mask_3_hi2)
BCHP_REGISTER(0x20603154, 32,  RW, RDC, comb_status_3)
BCHP_REGISTER(0x20603158, 32,  RW, RDC, comb_status_3_hi)
BCHP_REGISTER(0x2060315c, 32,  RW, RDC, comb_status_3_hi2)
BCHP_REGISTER(0x206031c0, 32,  RW, RDC, wt_config)
BCHP_REGISTER(0x206031c4, 32,  RW, RDC, wt_count)
BCHP_REGISTER(0x206031c8, 32,  RW, RDC, wt_mask)
BCHP_REGISTER(0x206031d0, 32,  RO, RDC, timer_data)
BCHP_REGISTER(0x20603200, 32, CFG, RDC, br_0_start_addr)
BCHP_REGISTER(0x20603204, 32, CFG, RDC, br_0_end_addr)
BCHP_REGISTER(0x20603208, 32, CFG, RDC, br_0_enable)
BCHP_REGISTER(0x2060320c, 32, CFG, RDC, br_1_start_addr)
BCHP_REGISTER(0x20603210, 32, CFG, RDC, br_1_end_addr)
BCHP_REGISTER(0x20603214, 32, CFG, RDC, br_1_enable)
BCHP_REGISTER(0x20603218, 32, CFG, RDC, br_2_start_addr)
BCHP_REGISTER(0x2060321c, 32, CFG, RDC, br_2_end_addr)
BCHP_REGISTER(0x20603220, 32, CFG, RDC, br_2_enable)
BCHP_REGISTER(0x20603224, 32, CFG, RDC, br_3_start_addr)
BCHP_REGISTER(0x20603228, 32, CFG, RDC, br_3_end_addr)
BCHP_REGISTER(0x2060322c, 32, CFG, RDC, br_3_enable)
BCHP_REGISTER(0x20603230, 32, CFG, RDC, br_4_start_addr)
BCHP_REGISTER(0x20603234, 32, CFG, RDC, br_4_end_addr)
BCHP_REGISTER(0x20603238, 32, CFG, RDC, br_4_enable)
BCHP_REGISTER(0x2060323c, 32, CFG, RDC, br_5_start_addr)
BCHP_REGISTER(0x20603240, 32, CFG, RDC, br_5_end_addr)
BCHP_REGISTER(0x20603244, 32, CFG, RDC, br_5_enable)
BCHP_REGISTER(0x20603248, 32, CFG, RDC, br_6_start_addr)
BCHP_REGISTER(0x2060324c, 32, CFG, RDC, br_6_end_addr)
BCHP_REGISTER(0x20603250, 32, CFG, RDC, br_6_enable)
BCHP_REGISTER(0x20603254, 32, CFG, RDC, br_7_start_addr)
BCHP_REGISTER(0x20603258, 32, CFG, RDC, br_7_end_addr)
BCHP_REGISTER(0x2060325c, 32, CFG, RDC, br_7_enable)
BCHP_REGISTER(0x20603260, 32,  RO, RDC, eop_flopped_0)
BCHP_REGISTER(0x20603264, 32,  RO, RDC, eop_flopped_1)
BCHP_REGISTER(0x20603268, 32,  RO, RDC, eop_flopped_2)
BCHP_REGISTER(0x2060326c, 32,  RO, RDC, eop_flopped_3)
BCHP_REGISTER(0x20603270, 32,  RO, RDC, eop_flopped_4)
BCHP_REGISTER(0x20603274, 32,  RO, RDC, eop_flopped_5)
BCHP_REGISTER(0x20603278, 32,  RO, RDC, eop_flopped_6)
BCHP_REGISTER(0x2060327c, 32,  RO, RDC, eop_flopped_7)
BCHP_REGISTER(0x20603300, 32,  RO, RDC, desc_0_tm_snapshot)
BCHP_REGISTER(0x20603304, 32,  RO, RDC, desc_1_tm_snapshot)
BCHP_REGISTER(0x20603308, 32,  RO, RDC, desc_2_tm_snapshot)
BCHP_REGISTER(0x2060330c, 32,  RO, RDC, desc_3_tm_snapshot)
BCHP_REGISTER(0x20603310, 32,  RO, RDC, desc_4_tm_snapshot)
BCHP_REGISTER(0x20603314, 32,  RO, RDC, desc_5_tm_snapshot)
BCHP_REGISTER(0x20603318, 32,  RO, RDC, desc_6_tm_snapshot)
BCHP_REGISTER(0x2060331c, 32,  RO, RDC, desc_7_tm_snapshot)
BCHP_REGISTER(0x20603320, 32,  RO, RDC, desc_8_tm_snapshot)
BCHP_REGISTER(0x20603324, 32,  RO, RDC, desc_9_tm_snapshot)
BCHP_REGISTER(0x20603328, 32,  RO, RDC, desc_10_tm_snapshot)
BCHP_REGISTER(0x2060332c, 32,  RO, RDC, desc_11_tm_snapshot)
BCHP_REGISTER(0x20603330, 32,  RO, RDC, desc_12_tm_snapshot)
BCHP_REGISTER(0x20603334, 32,  RO, RDC, desc_13_tm_snapshot)
BCHP_REGISTER(0x20603338, 32,  RO, RDC, desc_14_tm_snapshot)
BCHP_REGISTER(0x2060333c, 32,  RO, RDC, desc_15_tm_snapshot)
BCHP_REGISTER(0x20603340, 32,  RO, RDC, desc_16_tm_snapshot)
BCHP_REGISTER(0x20603800, 64,  RW, RDC, scratch64_0)
BCHP_REGISTER(0x20603808, 64,  RW, RDC, scratch64_1)
BCHP_REGISTER(0x20603810, 64,  RW, RDC, scratch64_2)
BCHP_REGISTER(0x20603818, 64,  RW, RDC, scratch64_3)
BCHP_REGISTER(0x20603820, 64,  RW, RDC, scratch64_4)
BCHP_REGISTER(0x20603828, 64,  RW, RDC, scratch64_5)
BCHP_REGISTER(0x20603830, 64,  RW, RDC, scratch64_6)
BCHP_REGISTER(0x20603838, 64,  RW, RDC, scratch64_7)
BCHP_REGISTER(0x20603840, 64,  RW, RDC, scratch64_8)
BCHP_REGISTER(0x20603848, 64,  RW, RDC, scratch64_9)
BCHP_REGISTER(0x20603850, 64,  RW, RDC, scratch64_10)
BCHP_REGISTER(0x20603858, 64,  RW, RDC, scratch64_11)
BCHP_REGISTER(0x20603860, 64,  RW, RDC, scratch64_12)
BCHP_REGISTER(0x20603868, 64,  RW, RDC, scratch64_13)
BCHP_REGISTER(0x20603870, 64,  RW, RDC, scratch64_14)
BCHP_REGISTER(0x20603878, 64,  RW, RDC, scratch64_15)
BCHP_REGISTER(0x20603880, 64,  RW, RDC, scratch64_16)
BCHP_REGISTER(0x20603888, 64,  RW, RDC, scratch64_17)
BCHP_REGISTER(0x20603890, 64,  RW, RDC, scratch64_18)
BCHP_REGISTER(0x20603898, 64,  RW, RDC, scratch64_19)
BCHP_REGISTER(0x206038a0, 64,  RW, RDC, scratch64_20)
BCHP_REGISTER(0x206038a8, 64,  RW, RDC, scratch64_21)
BCHP_REGISTER(0x206038b0, 64,  RW, RDC, scratch64_22)
BCHP_REGISTER(0x206038b8, 64,  RW, RDC, scratch64_23)
BCHP_REGISTER(0x206038c0, 64,  RW, RDC, scratch64_24)
BCHP_REGISTER(0x206038c8, 64,  RW, RDC, scratch64_25)
BCHP_REGISTER(0x206038d0, 64,  RW, RDC, scratch64_26)
BCHP_REGISTER(0x206038d8, 64,  RW, RDC, scratch64_27)
BCHP_REGISTER(0x206038e0, 64,  RW, RDC, scratch64_28)
BCHP_REGISTER(0x206038e8, 64,  RW, RDC, scratch64_29)
BCHP_REGISTER(0x206038f0, 64,  RW, RDC, scratch64_30)
BCHP_REGISTER(0x206038f8, 64,  RW, RDC, scratch64_31)
BCHP_REGISTER(0x20603900, 64,  RW, RDC, scratch64_32)
BCHP_REGISTER(0x20603908, 64,  RW, RDC, scratch64_33)
BCHP_REGISTER(0x20603910, 64,  RW, RDC, scratch64_34)
BCHP_REGISTER(0x20603918, 64,  RW, RDC, scratch64_35)
BCHP_REGISTER(0x20603920, 64,  RW, RDC, scratch64_36)
BCHP_REGISTER(0x20603928, 64,  RW, RDC, scratch64_37)
BCHP_REGISTER(0x20603930, 64,  RW, RDC, scratch64_38)
BCHP_REGISTER(0x20603938, 64,  RW, RDC, scratch64_39)
BCHP_REGISTER(0x20603940, 64,  RW, RDC, scratch64_40)
BCHP_REGISTER(0x20603948, 64,  RW, RDC, scratch64_41)
BCHP_REGISTER(0x20603950, 64,  RW, RDC, scratch64_42)
BCHP_REGISTER(0x20603958, 64,  RW, RDC, scratch64_43)
BCHP_REGISTER(0x20603960, 64,  RW, RDC, scratch64_44)
BCHP_REGISTER(0x20603968, 64,  RW, RDC, scratch64_45)
BCHP_REGISTER(0x20603970, 64,  RW, RDC, scratch64_46)
BCHP_REGISTER(0x20603978, 64,  RW, RDC, scratch64_47)
BCHP_REGISTER(0x20603980, 64,  RW, RDC, scratch64_48)
BCHP_REGISTER(0x20603988, 64,  RW, RDC, scratch64_49)
BCHP_REGISTER(0x20603990, 64,  RW, RDC, scratch64_50)
BCHP_REGISTER(0x20603998, 64,  RW, RDC, scratch64_51)
BCHP_REGISTER(0x206039a0, 64,  RW, RDC, scratch64_52)
BCHP_REGISTER(0x206039a8, 64,  RW, RDC, scratch64_53)
BCHP_REGISTER(0x206039b0, 64,  RW, RDC, scratch64_54)
BCHP_REGISTER(0x206039b8, 64,  RW, RDC, scratch64_55)
BCHP_REGISTER(0x206039c0, 64,  RW, RDC, scratch64_56)
BCHP_REGISTER(0x206039c8, 64,  RW, RDC, scratch64_57)
BCHP_REGISTER(0x206039d0, 64,  RW, RDC, scratch64_58)
BCHP_REGISTER(0x206039d8, 64,  RW, RDC, scratch64_59)
BCHP_REGISTER(0x206039e0, 64,  RW, RDC, scratch64_60)
BCHP_REGISTER(0x206039e8, 64,  RW, RDC, scratch64_61)
BCHP_REGISTER(0x206039f0, 64,  RW, RDC, scratch64_62)
BCHP_REGISTER(0x206039f8, 64,  RW, RDC, scratch64_63)
BCHP_REGISTER(0x20603a00, 64,  RW, RDC, scratch64_64)
BCHP_REGISTER(0x20603a08, 64,  RW, RDC, scratch64_65)
BCHP_REGISTER(0x20603a10, 64,  RW, RDC, scratch64_66)
BCHP_REGISTER(0x20603a18, 64,  RW, RDC, scratch64_67)
BCHP_REGISTER(0x20603a20, 64,  RW, RDC, scratch64_68)
BCHP_REGISTER(0x20603a28, 64,  RW, RDC, scratch64_69)
BCHP_REGISTER(0x20603a30, 64,  RW, RDC, scratch64_70)
BCHP_REGISTER(0x20603a38, 64,  RW, RDC, scratch64_71)
BCHP_REGISTER(0x20603a40, 64,  RW, RDC, scratch64_72)
BCHP_REGISTER(0x20603a48, 64,  RW, RDC, scratch64_73)
BCHP_REGISTER(0x20603a50, 64,  RW, RDC, scratch64_74)
BCHP_REGISTER(0x20603a58, 64,  RW, RDC, scratch64_75)
BCHP_REGISTER(0x20603a60, 64,  RW, RDC, scratch64_76)
BCHP_REGISTER(0x20603a68, 64,  RW, RDC, scratch64_77)
BCHP_REGISTER(0x20603a70, 64,  RW, RDC, scratch64_78)
BCHP_REGISTER(0x20603a78, 64,  RW, RDC, scratch64_79)
BCHP_REGISTER(0x20603a80, 64,  RW, RDC, scratch64_80)
BCHP_REGISTER(0x20603a88, 64,  RW, RDC, scratch64_81)
BCHP_REGISTER(0x20603a90, 64,  RW, RDC, scratch64_82)
BCHP_REGISTER(0x20603a98, 64,  RW, RDC, scratch64_83)
BCHP_REGISTER(0x20603aa0, 64,  RW, RDC, scratch64_84)
BCHP_REGISTER(0x20603aa8, 64,  RW, RDC, scratch64_85)
BCHP_REGISTER(0x20603ab0, 64,  RW, RDC, scratch64_86)
BCHP_REGISTER(0x20603ab8, 64,  RW, RDC, scratch64_87)
BCHP_REGISTER(0x20603ac0, 64,  RW, RDC, scratch64_88)
BCHP_REGISTER(0x20603ac8, 64,  RW, RDC, scratch64_89)
BCHP_REGISTER(0x20603ad0, 64,  RW, RDC, scratch64_90)
BCHP_REGISTER(0x20603ad8, 64,  RW, RDC, scratch64_91)
BCHP_REGISTER(0x20603ae0, 64,  RW, RDC, scratch64_92)
BCHP_REGISTER(0x20603ae8, 64,  RW, RDC, scratch64_93)
BCHP_REGISTER(0x20603af0, 64,  RW, RDC, scratch64_94)
BCHP_REGISTER(0x20603af8, 64,  RW, RDC, scratch64_95)
BCHP_REGISTER(0x20603b00, 64,  RW, RDC, scratch64_96)
BCHP_REGISTER(0x20603b08, 64,  RW, RDC, scratch64_97)
BCHP_REGISTER(0x20603b10, 64,  RW, RDC, scratch64_98)
BCHP_REGISTER(0x20603b18, 64,  RW, RDC, scratch64_99)
BCHP_REGISTER(0x20603b20, 64,  RW, RDC, scratch64_100)
BCHP_REGISTER(0x20603b28, 64,  RW, RDC, scratch64_101)
BCHP_REGISTER(0x20603b30, 64,  RW, RDC, scratch64_102)
BCHP_REGISTER(0x20603b38, 64,  RW, RDC, scratch64_103)
BCHP_REGISTER(0x20603b40, 64,  RW, RDC, scratch64_104)
BCHP_REGISTER(0x20603b48, 64,  RW, RDC, scratch64_105)
BCHP_REGISTER(0x20603b50, 64,  RW, RDC, scratch64_106)
BCHP_REGISTER(0x20603b58, 64,  RW, RDC, scratch64_107)
BCHP_REGISTER(0x20603b60, 64,  RW, RDC, scratch64_108)
BCHP_REGISTER(0x20603b68, 64,  RW, RDC, scratch64_109)
BCHP_REGISTER(0x20603b70, 64,  RW, RDC, scratch64_110)
BCHP_REGISTER(0x20603b78, 64,  RW, RDC, scratch64_111)
BCHP_REGISTER(0x20603b80, 64,  RW, RDC, scratch64_112)
BCHP_REGISTER(0x20603b88, 64,  RW, RDC, scratch64_113)
BCHP_REGISTER(0x20603b90, 64,  RW, RDC, scratch64_114)
BCHP_REGISTER(0x20603b98, 64,  RW, RDC, scratch64_115)
BCHP_REGISTER(0x20603ba0, 64,  RW, RDC, scratch64_116)
BCHP_REGISTER(0x20603ba8, 64,  RW, RDC, scratch64_117)
BCHP_REGISTER(0x20603bb0, 64,  RW, RDC, scratch64_118)
BCHP_REGISTER(0x20603bb8, 64,  RW, RDC, scratch64_119)
BCHP_REGISTER(0x20603bc0, 64,  RW, RDC, scratch64_120)
BCHP_REGISTER(0x20603bc8, 64,  RW, RDC, scratch64_121)
BCHP_REGISTER(0x20603bd0, 64,  RW, RDC, scratch64_122)
BCHP_REGISTER(0x20603bd8, 64,  RW, RDC, scratch64_123)
BCHP_REGISTER(0x20603be0, 64,  RW, RDC, scratch64_124)
BCHP_REGISTER(0x20603be8, 64,  RW, RDC, scratch64_125)
BCHP_REGISTER(0x20603bf0, 64,  RW, RDC, scratch64_126)
BCHP_REGISTER(0x20603bf8, 64,  RW, RDC, scratch64_127)
BCHP_REGISTER(0x20603c00, 64,  RW, RDC, scratch64_128)
BCHP_REGISTER(0x20603c08, 64,  RW, RDC, scratch64_129)
BCHP_REGISTER(0x20603c10, 64,  RW, RDC, scratch64_130)
BCHP_REGISTER(0x20603c18, 64,  RW, RDC, scratch64_131)
BCHP_REGISTER(0x20603c20, 64,  RW, RDC, scratch64_132)
BCHP_REGISTER(0x20603c28, 64,  RW, RDC, scratch64_133)
BCHP_REGISTER(0x20603c30, 64,  RW, RDC, scratch64_134)
BCHP_REGISTER(0x20603c38, 64,  RW, RDC, scratch64_135)
BCHP_REGISTER(0x20603c40, 64,  RW, RDC, scratch64_136)
BCHP_REGISTER(0x20603c48, 64,  RW, RDC, scratch64_137)
BCHP_REGISTER(0x20603c50, 64,  RW, RDC, scratch64_138)
BCHP_REGISTER(0x20603c58, 64,  RW, RDC, scratch64_139)
BCHP_REGISTER(0x20603c60, 64,  RW, RDC, scratch64_140)
BCHP_REGISTER(0x20603c68, 64,  RW, RDC, scratch64_141)
BCHP_REGISTER(0x20603c70, 64,  RW, RDC, scratch64_142)
BCHP_REGISTER(0x20603c78, 64,  RW, RDC, scratch64_143)
BCHP_REGISTER(0x20603c80, 64,  RW, RDC, scratch64_144)
BCHP_REGISTER(0x20603c88, 64,  RW, RDC, scratch64_145)
BCHP_REGISTER(0x20603c90, 64,  RW, RDC, scratch64_146)
BCHP_REGISTER(0x20603c98, 64,  RW, RDC, scratch64_147)
BCHP_REGISTER(0x20603ca0, 64,  RW, RDC, scratch64_148)
BCHP_REGISTER(0x20603ca8, 64,  RW, RDC, scratch64_149)
BCHP_REGISTER(0x20603cb0, 64,  RW, RDC, scratch64_150)
BCHP_REGISTER(0x20603cb8, 64,  RW, RDC, scratch64_151)
BCHP_REGISTER(0x20603cc0, 64,  RW, RDC, scratch64_152)
BCHP_REGISTER(0x20603cc8, 64,  RW, RDC, scratch64_153)
BCHP_REGISTER(0x20603cd0, 64,  RW, RDC, scratch64_154)
BCHP_REGISTER(0x20603cd8, 64,  RW, RDC, scratch64_155)
BCHP_REGISTER(0x20603ce0, 64,  RW, RDC, scratch64_156)
BCHP_REGISTER(0x20603ce8, 64,  RW, RDC, scratch64_157)
BCHP_REGISTER(0x20603cf0, 64,  RW, RDC, scratch64_158)
BCHP_REGISTER(0x20603cf8, 64,  RW, RDC, scratch64_159)
BCHP_REGISTER(0x20603d00, 64,  RW, RDC, scratch64_160)
BCHP_REGISTER(0x20603d08, 64,  RW, RDC, scratch64_161)
BCHP_REGISTER(0x20603d10, 64,  RW, RDC, scratch64_162)
BCHP_REGISTER(0x20603d18, 64,  RW, RDC, scratch64_163)
BCHP_REGISTER(0x20603d20, 64,  RW, RDC, scratch64_164)
BCHP_REGISTER(0x20603d28, 64,  RW, RDC, scratch64_165)
BCHP_REGISTER(0x20603d30, 64,  RW, RDC, scratch64_166)
BCHP_REGISTER(0x20603d38, 64,  RW, RDC, scratch64_167)
BCHP_REGISTER(0x20603d40, 64,  RW, RDC, scratch64_168)
BCHP_REGISTER(0x20603d48, 64,  RW, RDC, scratch64_169)
BCHP_REGISTER(0x20603d50, 64,  RW, RDC, scratch64_170)
BCHP_REGISTER(0x20603d58, 64,  RW, RDC, scratch64_171)
BCHP_REGISTER(0x20603d60, 64,  RW, RDC, scratch64_172)
BCHP_REGISTER(0x20603d68, 64,  RW, RDC, scratch64_173)
BCHP_REGISTER(0x20603d70, 64,  RW, RDC, scratch64_174)
BCHP_REGISTER(0x20603d78, 64,  RW, RDC, scratch64_175)
BCHP_REGISTER(0x20603d80, 64,  RW, RDC, scratch64_176)
BCHP_REGISTER(0x20603d88, 64,  RW, RDC, scratch64_177)
BCHP_REGISTER(0x20603d90, 64,  RW, RDC, scratch64_178)
BCHP_REGISTER(0x20603d98, 64,  RW, RDC, scratch64_179)
BCHP_REGISTER(0x20603da0, 64,  RW, RDC, scratch64_180)
BCHP_REGISTER(0x20603da8, 64,  RW, RDC, scratch64_181)
BCHP_REGISTER(0x20603db0, 64,  RW, RDC, scratch64_182)
BCHP_REGISTER(0x20603db8, 64,  RW, RDC, scratch64_183)
BCHP_REGISTER(0x20603dc0, 64,  RW, RDC, scratch64_184)
BCHP_REGISTER(0x20603dc8, 64,  RW, RDC, scratch64_185)
BCHP_REGISTER(0x20603dd0, 64,  RW, RDC, scratch64_186)
BCHP_REGISTER(0x20603dd8, 64,  RW, RDC, scratch64_187)
BCHP_REGISTER(0x20603de0, 64,  RW, RDC, scratch64_188)
BCHP_REGISTER(0x20603de8, 64,  RW, RDC, scratch64_189)
BCHP_REGISTER(0x20603df0, 64,  RW, RDC, scratch64_190)
BCHP_REGISTER(0x20603df8, 64,  RW, RDC, scratch64_191)
BCHP_REGISTER(0x20603e00, 64,  RW, RDC, scratch64_192)
BCHP_REGISTER(0x20603e08, 64,  RW, RDC, scratch64_193)
BCHP_REGISTER(0x20603e10, 64,  RW, RDC, scratch64_194)
BCHP_REGISTER(0x20603e18, 64,  RW, RDC, scratch64_195)
BCHP_REGISTER(0x20603e20, 64,  RW, RDC, scratch64_196)
BCHP_REGISTER(0x20603e28, 64,  RW, RDC, scratch64_197)
BCHP_REGISTER(0x20603e30, 64,  RW, RDC, scratch64_198)
BCHP_REGISTER(0x20603e38, 64,  RW, RDC, scratch64_199)
BCHP_REGISTER(0x20603e40, 64,  RW, RDC, scratch64_200)
BCHP_REGISTER(0x20603e48, 64,  RW, RDC, scratch64_201)
BCHP_REGISTER(0x20603e50, 64,  RW, RDC, scratch64_202)
BCHP_REGISTER(0x20603e58, 64,  RW, RDC, scratch64_203)
BCHP_REGISTER(0x20603e60, 64,  RW, RDC, scratch64_204)
BCHP_REGISTER(0x20603e68, 64,  RW, RDC, scratch64_205)
BCHP_REGISTER(0x20603e70, 64,  RW, RDC, scratch64_206)
BCHP_REGISTER(0x20603e78, 64,  RW, RDC, scratch64_207)
BCHP_REGISTER(0x20603e80, 64,  RW, RDC, scratch64_208)
BCHP_REGISTER(0x20603e88, 64,  RW, RDC, scratch64_209)
BCHP_REGISTER(0x20603e90, 64,  RW, RDC, scratch64_210)
BCHP_REGISTER(0x20603e98, 64,  RW, RDC, scratch64_211)
BCHP_REGISTER(0x20603ea0, 64,  RW, RDC, scratch64_212)
BCHP_REGISTER(0x20603ea8, 64,  RW, RDC, scratch64_213)
BCHP_REGISTER(0x20603eb0, 64,  RW, RDC, scratch64_214)
BCHP_REGISTER(0x20603eb8, 64,  RW, RDC, scratch64_215)
BCHP_REGISTER(0x20603ec0, 64,  RW, RDC, scratch64_216)
BCHP_REGISTER(0x20603ec8, 64,  RW, RDC, scratch64_217)
BCHP_REGISTER(0x20603ed0, 64,  RW, RDC, scratch64_218)
BCHP_REGISTER(0x20603ed8, 64,  RW, RDC, scratch64_219)
BCHP_REGISTER(0x20603ee0, 64,  RW, RDC, scratch64_220)
BCHP_REGISTER(0x20603ee8, 64,  RW, RDC, scratch64_221)
BCHP_REGISTER(0x20603ef0, 64,  RW, RDC, scratch64_222)
BCHP_REGISTER(0x20603ef8, 64,  RW, RDC, scratch64_223)
BCHP_REGISTER(0x20603f00, 64,  RW, RDC, scratch64_224)
BCHP_REGISTER(0x20603f08, 64,  RW, RDC, scratch64_225)
BCHP_REGISTER(0x20603f10, 64,  RW, RDC, scratch64_226)
BCHP_REGISTER(0x20603f18, 64,  RW, RDC, scratch64_227)
BCHP_REGISTER(0x20603f20, 64,  RW, RDC, scratch64_228)
BCHP_REGISTER(0x20603f28, 64,  RW, RDC, scratch64_229)
BCHP_REGISTER(0x20603f30, 64,  RW, RDC, scratch64_230)
BCHP_REGISTER(0x20603f38, 64,  RW, RDC, scratch64_231)
BCHP_REGISTER(0x20603f40, 64,  RW, RDC, scratch64_232)
BCHP_REGISTER(0x20603f48, 64,  RW, RDC, scratch64_233)
BCHP_REGISTER(0x20603f50, 64,  RW, RDC, scratch64_234)
BCHP_REGISTER(0x20603f58, 64,  RW, RDC, scratch64_235)
BCHP_REGISTER(0x20603f60, 64,  RW, RDC, scratch64_236)
BCHP_REGISTER(0x20603f68, 64,  RW, RDC, scratch64_237)
BCHP_REGISTER(0x20603f70, 64,  RW, RDC, scratch64_238)
BCHP_REGISTER(0x20603f78, 64,  RW, RDC, scratch64_239)
BCHP_REGISTER(0x20603f80, 64,  RW, RDC, scratch64_240)
BCHP_REGISTER(0x20603f88, 64,  RW, RDC, scratch64_241)
BCHP_REGISTER(0x20603f90, 64,  RW, RDC, scratch64_242)
BCHP_REGISTER(0x20603f98, 64,  RW, RDC, scratch64_243)
BCHP_REGISTER(0x20603fa0, 64,  RW, RDC, scratch64_244)
BCHP_REGISTER(0x20603fa8, 64,  RW, RDC, scratch64_245)
BCHP_REGISTER(0x20603fb0, 64,  RW, RDC, scratch64_246)
BCHP_REGISTER(0x20603fb8, 64,  RW, RDC, scratch64_247)
BCHP_REGISTER(0x20603fc0, 64,  RW, RDC, scratch64_248)
BCHP_REGISTER(0x20603fc8, 64,  RW, RDC, scratch64_249)
BCHP_REGISTER(0x20603fd0, 64,  RW, RDC, scratch64_250)
BCHP_REGISTER(0x20603fd8, 64,  RW, RDC, scratch64_251)
BCHP_REGISTER(0x20603fe0, 64,  RW, RDC, scratch64_252)
BCHP_REGISTER(0x20603fe8, 64,  RW, RDC, scratch64_253)
BCHP_REGISTER(0x20603ff0, 64,  RW, RDC, scratch64_254)
BCHP_REGISTER(0x20603ff8, 64,  RW, RDC, scratch64_255)
BCHP_REGISTER(0x20604000, 64,  RW, RDC, desc_0_addr)
BCHP_REGISTER(0x20604008, 32,  RW, RDC, desc_0_count)
BCHP_REGISTER(0x20604010, 32,  RW, RDC, desc_0_config)
BCHP_REGISTER(0x20604018, 32,  RW, RDC, desc_0_count_direct)
BCHP_REGISTER(0x20604020, 32,  WO, RDC, desc_0_immediate)
BCHP_REGISTER(0x20604028, 32,  RW, RDC, desc_0_status)
BCHP_REGISTER(0x20604040, 64,  RW, RDC, desc_1_addr)
BCHP_REGISTER(0x20604048, 32,  RW, RDC, desc_1_count)
BCHP_REGISTER(0x20604050, 32,  RW, RDC, desc_1_config)
BCHP_REGISTER(0x20604058, 32,  RW, RDC, desc_1_count_direct)
BCHP_REGISTER(0x20604060, 32,  WO, RDC, desc_1_immediate)
BCHP_REGISTER(0x20604068, 32,  RW, RDC, desc_1_status)
BCHP_REGISTER(0x20604080, 64,  RW, RDC, desc_2_addr)
BCHP_REGISTER(0x20604088, 32,  RW, RDC, desc_2_count)
BCHP_REGISTER(0x20604090, 32,  RW, RDC, desc_2_config)
BCHP_REGISTER(0x20604098, 32,  RW, RDC, desc_2_count_direct)
BCHP_REGISTER(0x206040a0, 32,  WO, RDC, desc_2_immediate)
BCHP_REGISTER(0x206040a8, 32,  RW, RDC, desc_2_status)
BCHP_REGISTER(0x206040c0, 64,  RW, RDC, desc_3_addr)
BCHP_REGISTER(0x206040c8, 32,  RW, RDC, desc_3_count)
BCHP_REGISTER(0x206040d0, 32,  RW, RDC, desc_3_config)
BCHP_REGISTER(0x206040d8, 32,  RW, RDC, desc_3_count_direct)
BCHP_REGISTER(0x206040e0, 32,  WO, RDC, desc_3_immediate)
BCHP_REGISTER(0x206040e8, 32,  RW, RDC, desc_3_status)
BCHP_REGISTER(0x20604100, 64,  RW, RDC, desc_4_addr)
BCHP_REGISTER(0x20604108, 32,  RW, RDC, desc_4_count)
BCHP_REGISTER(0x20604110, 32,  RW, RDC, desc_4_config)
BCHP_REGISTER(0x20604118, 32,  RW, RDC, desc_4_count_direct)
BCHP_REGISTER(0x20604120, 32,  WO, RDC, desc_4_immediate)
BCHP_REGISTER(0x20604128, 32,  RW, RDC, desc_4_status)
BCHP_REGISTER(0x20604140, 64,  RW, RDC, desc_5_addr)
BCHP_REGISTER(0x20604148, 32,  RW, RDC, desc_5_count)
BCHP_REGISTER(0x20604150, 32,  RW, RDC, desc_5_config)
BCHP_REGISTER(0x20604158, 32,  RW, RDC, desc_5_count_direct)
BCHP_REGISTER(0x20604160, 32,  WO, RDC, desc_5_immediate)
BCHP_REGISTER(0x20604168, 32,  RW, RDC, desc_5_status)
BCHP_REGISTER(0x20604180, 64,  RW, RDC, desc_6_addr)
BCHP_REGISTER(0x20604188, 32,  RW, RDC, desc_6_count)
BCHP_REGISTER(0x20604190, 32,  RW, RDC, desc_6_config)
BCHP_REGISTER(0x20604198, 32,  RW, RDC, desc_6_count_direct)
BCHP_REGISTER(0x206041a0, 32,  WO, RDC, desc_6_immediate)
BCHP_REGISTER(0x206041a8, 32,  RW, RDC, desc_6_status)
BCHP_REGISTER(0x206041c0, 64,  RW, RDC, desc_7_addr)
BCHP_REGISTER(0x206041c8, 32,  RW, RDC, desc_7_count)
BCHP_REGISTER(0x206041d0, 32,  RW, RDC, desc_7_config)
BCHP_REGISTER(0x206041d8, 32,  RW, RDC, desc_7_count_direct)
BCHP_REGISTER(0x206041e0, 32,  WO, RDC, desc_7_immediate)
BCHP_REGISTER(0x206041e8, 32,  RW, RDC, desc_7_status)
BCHP_REGISTER(0x20604200, 64,  RW, RDC, desc_8_addr)
BCHP_REGISTER(0x20604208, 32,  RW, RDC, desc_8_count)
BCHP_REGISTER(0x20604210, 32,  RW, RDC, desc_8_config)
BCHP_REGISTER(0x20604218, 32,  RW, RDC, desc_8_count_direct)
BCHP_REGISTER(0x20604220, 32,  WO, RDC, desc_8_immediate)
BCHP_REGISTER(0x20604228, 32,  RW, RDC, desc_8_status)
BCHP_REGISTER(0x20604240, 64,  RW, RDC, desc_9_addr)
BCHP_REGISTER(0x20604248, 32,  RW, RDC, desc_9_count)
BCHP_REGISTER(0x20604250, 32,  RW, RDC, desc_9_config)
BCHP_REGISTER(0x20604258, 32,  RW, RDC, desc_9_count_direct)
BCHP_REGISTER(0x20604260, 32,  WO, RDC, desc_9_immediate)
BCHP_REGISTER(0x20604268, 32,  RW, RDC, desc_9_status)
BCHP_REGISTER(0x20604280, 64,  RW, RDC, desc_10_addr)
BCHP_REGISTER(0x20604288, 32,  RW, RDC, desc_10_count)
BCHP_REGISTER(0x20604290, 32,  RW, RDC, desc_10_config)
BCHP_REGISTER(0x20604298, 32,  RW, RDC, desc_10_count_direct)
BCHP_REGISTER(0x206042a0, 32,  WO, RDC, desc_10_immediate)
BCHP_REGISTER(0x206042a8, 32,  RW, RDC, desc_10_status)
BCHP_REGISTER(0x206042c0, 64,  RW, RDC, desc_11_addr)
BCHP_REGISTER(0x206042c8, 32,  RW, RDC, desc_11_count)
BCHP_REGISTER(0x206042d0, 32,  RW, RDC, desc_11_config)
BCHP_REGISTER(0x206042d8, 32,  RW, RDC, desc_11_count_direct)
BCHP_REGISTER(0x206042e0, 32,  WO, RDC, desc_11_immediate)
BCHP_REGISTER(0x206042e8, 32,  RW, RDC, desc_11_status)
BCHP_REGISTER(0x20604300, 64,  RW, RDC, desc_12_addr)
BCHP_REGISTER(0x20604308, 32,  RW, RDC, desc_12_count)
BCHP_REGISTER(0x20604310, 32,  RW, RDC, desc_12_config)
BCHP_REGISTER(0x20604318, 32,  RW, RDC, desc_12_count_direct)
BCHP_REGISTER(0x20604320, 32,  WO, RDC, desc_12_immediate)
BCHP_REGISTER(0x20604328, 32,  RW, RDC, desc_12_status)
BCHP_REGISTER(0x20604340, 64,  RW, RDC, desc_13_addr)
BCHP_REGISTER(0x20604348, 32,  RW, RDC, desc_13_count)
BCHP_REGISTER(0x20604350, 32,  RW, RDC, desc_13_config)
BCHP_REGISTER(0x20604358, 32,  RW, RDC, desc_13_count_direct)
BCHP_REGISTER(0x20604360, 32,  WO, RDC, desc_13_immediate)
BCHP_REGISTER(0x20604368, 32,  RW, RDC, desc_13_status)
BCHP_REGISTER(0x20604380, 64,  RW, RDC, desc_14_addr)
BCHP_REGISTER(0x20604388, 32,  RW, RDC, desc_14_count)
BCHP_REGISTER(0x20604390, 32,  RW, RDC, desc_14_config)
BCHP_REGISTER(0x20604398, 32,  RW, RDC, desc_14_count_direct)
BCHP_REGISTER(0x206043a0, 32,  WO, RDC, desc_14_immediate)
BCHP_REGISTER(0x206043a8, 32,  RW, RDC, desc_14_status)
BCHP_REGISTER(0x206043c0, 64,  RW, RDC, desc_15_addr)
BCHP_REGISTER(0x206043c8, 32,  RW, RDC, desc_15_count)
BCHP_REGISTER(0x206043d0, 32,  RW, RDC, desc_15_config)
BCHP_REGISTER(0x206043d8, 32,  RW, RDC, desc_15_count_direct)
BCHP_REGISTER(0x206043e0, 32,  WO, RDC, desc_15_immediate)
BCHP_REGISTER(0x206043e8, 32,  RW, RDC, desc_15_status)
BCHP_REGISTER(0x20605000, 32,  RW, RDC, sync_0_arm)
BCHP_REGISTER(0x20605004, 32,  RO, RDC, sync_0_status)
BCHP_REGISTER(0x20605008, 32,  RW, RDC, sync_1_arm)
BCHP_REGISTER(0x2060500c, 32,  RO, RDC, sync_1_status)
BCHP_REGISTER(0x20605010, 32,  RW, RDC, sync_2_arm)
BCHP_REGISTER(0x20605014, 32,  RO, RDC, sync_2_status)
BCHP_REGISTER(0x20605018, 32,  RW, RDC, sync_3_arm)
BCHP_REGISTER(0x2060501c, 32,  RO, RDC, sync_3_status)
BCHP_REGISTER(0x20605020, 32,  RW, RDC, sync_4_arm)
BCHP_REGISTER(0x20605024, 32,  RO, RDC, sync_4_status)
BCHP_REGISTER(0x20605028, 32,  RW, RDC, sync_5_arm)
BCHP_REGISTER(0x2060502c, 32,  RO, RDC, sync_5_status)
BCHP_REGISTER(0x20605030, 32,  RW, RDC, sync_6_arm)
BCHP_REGISTER(0x20605034, 32,  RO, RDC, sync_6_status)
BCHP_REGISTER(0x20605038, 32,  RW, RDC, sync_7_arm)
BCHP_REGISTER(0x2060503c, 32,  RO, RDC, sync_7_status)
BCHP_REGISTER(0x20605040, 32,  RW, RDC, sync_8_arm)
BCHP_REGISTER(0x20605044, 32,  RO, RDC, sync_8_status)
BCHP_REGISTER(0x20605048, 32,  RW, RDC, sync_9_arm)
BCHP_REGISTER(0x2060504c, 32,  RO, RDC, sync_9_status)
BCHP_REGISTER(0x20605050, 32,  RW, RDC, sync_10_arm)
BCHP_REGISTER(0x20605054, 32,  RO, RDC, sync_10_status)
BCHP_REGISTER(0x20605058, 32,  RW, RDC, sync_11_arm)
BCHP_REGISTER(0x2060505c, 32,  RO, RDC, sync_11_status)
BCHP_REGISTER(0x20605060, 32,  RW, RDC, sync_12_arm)
BCHP_REGISTER(0x20605064, 32,  RO, RDC, sync_12_status)
BCHP_REGISTER(0x20605068, 32,  RW, RDC, sync_13_arm)
BCHP_REGISTER(0x2060506c, 32,  RO, RDC, sync_13_status)
BCHP_REGISTER(0x20605070, 32,  RW, RDC, sync_14_arm)
BCHP_REGISTER(0x20605074, 32,  RO, RDC, sync_14_status)
BCHP_REGISTER(0x20605078, 32,  RW, RDC, sync_15_arm)
BCHP_REGISTER(0x2060507c, 32,  RO, RDC, sync_15_status)
BCHP_REGISTER(0x20606000, 32,  RO, BVNF_INTR2_0, R5F_STATUS)
BCHP_REGISTER(0x20606004, 32,  WO, BVNF_INTR2_0, R5F_SET)
BCHP_REGISTER(0x20606008, 32,  WO, BVNF_INTR2_0, R5F_CLEAR)
BCHP_REGISTER(0x2060600c, 32,  RO, BVNF_INTR2_0, R5F_MASK_STATUS)
BCHP_REGISTER(0x20606010, 32,  WO, BVNF_INTR2_0, R5F_MASK_SET)
BCHP_REGISTER(0x20606014, 32,  WO, BVNF_INTR2_0, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20606018, 32,  RO, BVNF_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x2060601c, 32,  WO, BVNF_INTR2_0, PCI_SET)
BCHP_REGISTER(0x20606020, 32,  WO, BVNF_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x20606024, 32,  RO, BVNF_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x20606028, 32,  WO, BVNF_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x2060602c, 32,  WO, BVNF_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20606100, 32,  RO, BVNF_INTR2_1, R5F_STATUS)
BCHP_REGISTER(0x20606104, 32,  WO, BVNF_INTR2_1, R5F_SET)
BCHP_REGISTER(0x20606108, 32,  WO, BVNF_INTR2_1, R5F_CLEAR)
BCHP_REGISTER(0x2060610c, 32,  RO, BVNF_INTR2_1, R5F_MASK_STATUS)
BCHP_REGISTER(0x20606110, 32,  WO, BVNF_INTR2_1, R5F_MASK_SET)
BCHP_REGISTER(0x20606114, 32,  WO, BVNF_INTR2_1, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20606118, 32,  RO, BVNF_INTR2_1, PCI_STATUS)
BCHP_REGISTER(0x2060611c, 32,  WO, BVNF_INTR2_1, PCI_SET)
BCHP_REGISTER(0x20606120, 32,  WO, BVNF_INTR2_1, PCI_CLEAR)
BCHP_REGISTER(0x20606124, 32,  RO, BVNF_INTR2_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x20606128, 32,  WO, BVNF_INTR2_1, PCI_MASK_SET)
BCHP_REGISTER(0x2060612c, 32,  WO, BVNF_INTR2_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20606300, 32,  RO, BVNF_INTR2_3, HVD0_STATUS)
BCHP_REGISTER(0x20606304, 32,  WO, BVNF_INTR2_3, HVD0_SET)
BCHP_REGISTER(0x20606308, 32,  WO, BVNF_INTR2_3, HVD0_CLEAR)
BCHP_REGISTER(0x2060630c, 32,  RO, BVNF_INTR2_3, HVD0_MASK_STATUS)
BCHP_REGISTER(0x20606310, 32,  WO, BVNF_INTR2_3, HVD0_MASK_SET)
BCHP_REGISTER(0x20606314, 32,  WO, BVNF_INTR2_3, HVD0_MASK_CLEAR)
BCHP_REGISTER(0x20606318, 32,  RO, BVNF_INTR2_3, HVD1_STATUS)
BCHP_REGISTER(0x2060631c, 32,  WO, BVNF_INTR2_3, HVD1_SET)
BCHP_REGISTER(0x20606320, 32,  WO, BVNF_INTR2_3, HVD1_CLEAR)
BCHP_REGISTER(0x20606324, 32,  RO, BVNF_INTR2_3, HVD1_MASK_STATUS)
BCHP_REGISTER(0x20606328, 32,  WO, BVNF_INTR2_3, HVD1_MASK_SET)
BCHP_REGISTER(0x2060632c, 32,  WO, BVNF_INTR2_3, HVD1_MASK_CLEAR)
BCHP_REGISTER(0x20606500, 32,  RO, BVNF_INTR2_5, R5F_STATUS)
BCHP_REGISTER(0x20606504, 32,  WO, BVNF_INTR2_5, R5F_SET)
BCHP_REGISTER(0x20606508, 32,  WO, BVNF_INTR2_5, R5F_CLEAR)
BCHP_REGISTER(0x2060650c, 32,  RO, BVNF_INTR2_5, R5F_MASK_STATUS)
BCHP_REGISTER(0x20606510, 32,  WO, BVNF_INTR2_5, R5F_MASK_SET)
BCHP_REGISTER(0x20606514, 32,  WO, BVNF_INTR2_5, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20606518, 32,  RO, BVNF_INTR2_5, PCI_STATUS)
BCHP_REGISTER(0x2060651c, 32,  WO, BVNF_INTR2_5, PCI_SET)
BCHP_REGISTER(0x20606520, 32,  WO, BVNF_INTR2_5, PCI_CLEAR)
BCHP_REGISTER(0x20606524, 32,  RO, BVNF_INTR2_5, PCI_MASK_STATUS)
BCHP_REGISTER(0x20606528, 32,  WO, BVNF_INTR2_5, PCI_MASK_SET)
BCHP_REGISTER(0x2060652c, 32,  WO, BVNF_INTR2_5, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20606900, 32,  RO, BVNF_INTR2_9, R5F_STATUS)
BCHP_REGISTER(0x20606904, 32,  WO, BVNF_INTR2_9, R5F_SET)
BCHP_REGISTER(0x20606908, 32,  WO, BVNF_INTR2_9, R5F_CLEAR)
BCHP_REGISTER(0x2060690c, 32,  RO, BVNF_INTR2_9, R5F_MASK_STATUS)
BCHP_REGISTER(0x20606910, 32,  WO, BVNF_INTR2_9, R5F_MASK_SET)
BCHP_REGISTER(0x20606914, 32,  WO, BVNF_INTR2_9, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20606918, 32,  RO, BVNF_INTR2_9, PCI_STATUS)
BCHP_REGISTER(0x2060691c, 32,  WO, BVNF_INTR2_9, PCI_SET)
BCHP_REGISTER(0x20606920, 32,  WO, BVNF_INTR2_9, PCI_CLEAR)
BCHP_REGISTER(0x20606924, 32,  RO, BVNF_INTR2_9, PCI_MASK_STATUS)
BCHP_REGISTER(0x20606928, 32,  WO, BVNF_INTR2_9, PCI_MASK_SET)
BCHP_REGISTER(0x2060692c, 32,  WO, BVNF_INTR2_9, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20607000, 32,  RO, BVNF_INTR2_16, R5F_STATUS)
BCHP_REGISTER(0x20607004, 32,  WO, BVNF_INTR2_16, R5F_SET)
BCHP_REGISTER(0x20607008, 32,  WO, BVNF_INTR2_16, R5F_CLEAR)
BCHP_REGISTER(0x2060700c, 32,  RO, BVNF_INTR2_16, R5F_MASK_STATUS)
BCHP_REGISTER(0x20607010, 32,  WO, BVNF_INTR2_16, R5F_MASK_SET)
BCHP_REGISTER(0x20607014, 32,  WO, BVNF_INTR2_16, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20607018, 32,  RO, BVNF_INTR2_16, PCI_STATUS)
BCHP_REGISTER(0x2060701c, 32,  WO, BVNF_INTR2_16, PCI_SET)
BCHP_REGISTER(0x20607020, 32,  WO, BVNF_INTR2_16, PCI_CLEAR)
BCHP_REGISTER(0x20607024, 32,  RO, BVNF_INTR2_16, PCI_MASK_STATUS)
BCHP_REGISTER(0x20607028, 32,  WO, BVNF_INTR2_16, PCI_MASK_SET)
BCHP_REGISTER(0x2060702c, 32,  WO, BVNF_INTR2_16, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20608000, 32, CFG, FMISC, SW_INIT)
BCHP_REGISTER(0x2060800c, 32, CFG, FMISC, BVN_PDA_CTRL)
BCHP_REGISTER(0x20608010, 32,  RO, FMISC, BVNF_PDA_OUT_STATUS)
BCHP_REGISTER(0x20608014, 32,  RO, FMISC, BVNF_PDA_PWR_UP_STATUS)
BCHP_REGISTER(0x20608018, 32, CFG, FMISC, BVNF_CLOCK_CTRL)
BCHP_REGISTER(0x20608020, 32, CFG, FMISC, SCRATCH_0)
BCHP_REGISTER(0x20620000, 32,  RO, SCL_0, REVISION_ID)
BCHP_REGISTER(0x20620004, 32,  RO, SCL_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20620008, 32,  RW, SCL_0, DERINGING)
BCHP_REGISTER(0x2062000c, 32,  RW, SCL_0, DERING_DEMO_SETTING)
BCHP_REGISTER(0x20620010, 32,  RW, SCL_0, DEJAGGING)
BCHP_REGISTER(0x20620014, 32,  RW, SCL_0, DEJAGGING_DEMO_SETTING)
BCHP_REGISTER(0x20620018, 32,  RW, SCL_0, VIDEO_3D_MODE)
BCHP_REGISTER(0x2062001c, 32, CFG, SCL_0, VERT_CONTROL)
BCHP_REGISTER(0x20620020, 32, CFG, SCL_0, HORIZ_CONTROL)
BCHP_REGISTER(0x20620024, 32, CFG, SCL_0, BVB_IN_SIZE)
BCHP_REGISTER(0x20620028, 32, CFG, SCL_0, PIC_OFFSET)
BCHP_REGISTER(0x2062002c, 32,  RW, SCL_0, PIC_OFFSET_R)
BCHP_REGISTER(0x20620030, 32, CFG, SCL_0, SRC_PIC_SIZE)
BCHP_REGISTER(0x20620034, 32, CFG, SCL_0, DEST_PIC_SIZE)
BCHP_REGISTER(0x20620038, 32, CFG, SCL_0, SRC_PIC_HORIZ_PAN_SCAN)
BCHP_REGISTER(0x2062003c, 32, CFG, SCL_0, HORIZ_FIR_LUMA_SRC_PIC_OFFSET)
BCHP_REGISTER(0x20620040, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_SRC_PIC_OFFSET)
BCHP_REGISTER(0x20620044, 32, CFG, SCL_0, HORIZ_FIR_INIT_PHASE_ACC)
BCHP_REGISTER(0x20620048, 32,  RW, SCL_0, HORIZ_FIR_INIT_PHASE_ACC_R)
BCHP_REGISTER(0x2062004c, 32, CFG, SCL_0, HORIZ_FIR_INIT_STEP_FRAC)
BCHP_REGISTER(0x20620050, 32, CFG, SCL_0, HORIZ_FIR_INIT_STEP_INT)
BCHP_REGISTER(0x20620054, 32, CFG, SCL_0, HORIZ_FIR_DEST_PIC_REGION_0_STEP_DELTA)
BCHP_REGISTER(0x20620058, 32, CFG, SCL_0, HORIZ_FIR_DEST_PIC_REGION_2_STEP_DELTA)
BCHP_REGISTER(0x2062005c, 32, CFG, SCL_0, HORIZ_FIR_DEST_PIC_REGION_0_STEP_EPSILON)
BCHP_REGISTER(0x20620060, 32, CFG, SCL_0, HORIZ_FIR_DEST_PIC_REGION_2_STEP_EPSILON)
BCHP_REGISTER(0x20620064, 32, CFG, SCL_0, HORIZ_DEST_PIC_REGION_N1_END)
BCHP_REGISTER(0x20620068, 32, CFG, SCL_0, HORIZ_DEST_PIC_REGION_0_END)
BCHP_REGISTER(0x2062006c, 32, CFG, SCL_0, HORIZ_DEST_PIC_REGION_1_END)
BCHP_REGISTER(0x20620070, 32, CFG, SCL_0, HORIZ_DEST_PIC_REGION_2_END)
BCHP_REGISTER(0x20620074, 32, CFG, SCL_0, HORIZ_DEST_PIC_REGION_3_END)
BCHP_REGISTER(0x20620078, 32, CFG, SCL_0, VERT_FIR_COEFF_00)
BCHP_REGISTER(0x2062007c, 32, CFG, SCL_0, HORIZ_FIR_COEFF_00)
BCHP_REGISTER(0x20620080, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x20620084, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x20620088, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE2_00_01)
BCHP_REGISTER(0x2062008c, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE3_00_01)
BCHP_REGISTER(0x20620090, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE4_00_01)
BCHP_REGISTER(0x20620094, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE5_00_01)
BCHP_REGISTER(0x20620098, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE6_00_01)
BCHP_REGISTER(0x2062009c, 32, CFG, SCL_0, VERT_FIR_LUMA_COEFF_PHASE7_00_01)
BCHP_REGISTER(0x206200a0, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x206200a4, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x206200a8, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE2_00_01)
BCHP_REGISTER(0x206200ac, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE3_00_01)
BCHP_REGISTER(0x206200b0, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE4_00_01)
BCHP_REGISTER(0x206200b4, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE5_00_01)
BCHP_REGISTER(0x206200b8, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE6_00_01)
BCHP_REGISTER(0x206200bc, 32, CFG, SCL_0, VERT_FIR_CHROMA_COEFF_PHASE7_00_01)
BCHP_REGISTER(0x206200c0, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x206200c4, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE0_02_03)
BCHP_REGISTER(0x206200c8, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE0_04_05)
BCHP_REGISTER(0x206200cc, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x206200d0, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE1_02_03)
BCHP_REGISTER(0x206200d4, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE1_04_05)
BCHP_REGISTER(0x206200d8, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE2_00_01)
BCHP_REGISTER(0x206200dc, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE2_02_03)
BCHP_REGISTER(0x206200e0, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE2_04_05)
BCHP_REGISTER(0x206200e4, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE3_00_01)
BCHP_REGISTER(0x206200e8, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE3_02_03)
BCHP_REGISTER(0x206200ec, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE3_04_05)
BCHP_REGISTER(0x206200f0, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE4_00_01)
BCHP_REGISTER(0x206200f4, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE4_02_03)
BCHP_REGISTER(0x206200f8, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE4_04_05)
BCHP_REGISTER(0x206200fc, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE5_00_01)
BCHP_REGISTER(0x20620100, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE5_02_03)
BCHP_REGISTER(0x20620104, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE5_04_05)
BCHP_REGISTER(0x20620108, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE6_00_01)
BCHP_REGISTER(0x2062010c, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE6_02_03)
BCHP_REGISTER(0x20620110, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE6_04_05)
BCHP_REGISTER(0x20620114, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE7_00_01)
BCHP_REGISTER(0x20620118, 32, CFG, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE7_02_03)
BCHP_REGISTER(0x2062011c, 32,  RW, SCL_0, HORIZ_FIR_LUMA_COEFF_PHASE7_04_05)
BCHP_REGISTER(0x20620120, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x20620124, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE0_02_03)
BCHP_REGISTER(0x20620128, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE0_04_05)
BCHP_REGISTER(0x2062012c, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x20620130, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE1_02_03)
BCHP_REGISTER(0x20620134, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE1_04_05)
BCHP_REGISTER(0x20620138, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE2_00_01)
BCHP_REGISTER(0x2062013c, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE2_02_03)
BCHP_REGISTER(0x20620140, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE2_04_05)
BCHP_REGISTER(0x20620144, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE3_00_01)
BCHP_REGISTER(0x20620148, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE3_02_03)
BCHP_REGISTER(0x2062014c, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE3_04_05)
BCHP_REGISTER(0x20620150, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE4_00_01)
BCHP_REGISTER(0x20620154, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE4_02_03)
BCHP_REGISTER(0x20620158, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE4_04_05)
BCHP_REGISTER(0x2062015c, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE5_00_01)
BCHP_REGISTER(0x20620160, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE5_02_03)
BCHP_REGISTER(0x20620164, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE5_04_05)
BCHP_REGISTER(0x20620168, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE6_00_01)
BCHP_REGISTER(0x2062016c, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE6_02_03)
BCHP_REGISTER(0x20620170, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE6_04_05)
BCHP_REGISTER(0x20620174, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE7_00_01)
BCHP_REGISTER(0x20620178, 32, CFG, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE7_02_03)
BCHP_REGISTER(0x2062017c, 32,  RW, SCL_0, HORIZ_FIR_CHROMA_COEFF_PHASE7_04_05)
BCHP_REGISTER(0x20620180, 32, CFG, SCL_0, TOP_CONTROL)
BCHP_REGISTER(0x20620184, 32, CFG, SCL_0, SRC_PIC_VERT_PAN_SCAN)
BCHP_REGISTER(0x20620188, 32, CFG, SCL_0, VERT_FIR_SRC_PIC_OFFSET_INT)
BCHP_REGISTER(0x2062018c, 32, CFG, SCL_0, VERT_FIR_SRC_PIC_OFFSET_FRAC)
BCHP_REGISTER(0x20620190, 32, CFG, SCL_0, VERT_FIR_INIT_PIC_STEP)
BCHP_REGISTER(0x20620194, 32, CFG, SCL_0, ENABLE)
BCHP_REGISTER(0x20620198, 32, CFG, SCL_0, SCRATCH_0)
BCHP_REGISTER(0x2062019c, 32, CFG, SCL_0, SCRATCH_1)
BCHP_REGISTER(0x206201a0, 32, CFG, SCL_0, TEST_PORT_CONTROL)
BCHP_REGISTER(0x206201a4, 32,  RO, SCL_0, TEST_PORT_DATA)
BCHP_REGISTER(0x206201a8, 32,  WO, SCL_0, BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x206201ac, 32,  RO, SCL_0, BVB_IN_STATUS)
BCHP_REGISTER(0x20622000, 32,  RO, VNET_F, REVISION)
BCHP_REGISTER(0x20622004, 32, CFG, VNET_F, OUTPUT_EOP_DELAY_CFG0)
BCHP_REGISTER(0x20622008, 32, CFG, VNET_F, OUTPUT_EOP_DELAY_CFG1)
BCHP_REGISTER(0x2062200c, 32, CFG, VNET_F, OUTPUT_EOP_DELAY_CFG2)
BCHP_REGISTER(0x20622010, 32, CFG, VNET_F, OUTPUT_EOP_DELAY_CFG3)
BCHP_REGISTER(0x20622018, 32,  RW, VNET_F, MFD_0_ENABLE)
BCHP_REGISTER(0x2062201c, 32,  RW, VNET_F, VFD_0_ENABLE)
BCHP_REGISTER(0x20622020, 32,  RW, VNET_F, LPB_0_ENABLE)
BCHP_REGISTER(0x20622024, 32,  RW, VNET_F, LPB_1_ENABLE)
BCHP_REGISTER(0x20622028, 32,  RW, VNET_F, LPB_2_ENABLE)
BCHP_REGISTER(0x2062202c, 32, CFG, VNET_F, SCL_0_SRC)
BCHP_REGISTER(0x20622030, 32, CFG, VNET_F, MVP_0_SRC)
BCHP_REGISTER(0x20622034, 32, CFG, VNET_F, DNR_0_SRC)
BCHP_REGISTER(0x20622038, 32, CFG, VNET_F, ITM_0_SRC)
BCHP_REGISTER(0x2062203c, 32, CFG, VNET_F, FCH_0_SRC)
BCHP_REGISTER(0x20622040, 32, CFG, VNET_F, FCH_1_SRC)
BCHP_REGISTER(0x20622044, 32, CFG, VNET_F, DRAIN_0_SRC)
BCHP_REGISTER(0x20622048, 32, CFG, VNET_F, DRAIN_1_SRC)
BCHP_REGISTER(0x2062204c, 32,  RO, VNET_F, DRAIN_0_PIC_SIZE_CNT)
BCHP_REGISTER(0x20622050, 32, CFG, VNET_F, DRAIN_0_DEBUG_CTRL)
BCHP_REGISTER(0x20622054, 32,  RW, VNET_F, DRAIN_0_ERR_STATUS)
BCHP_REGISTER(0x20622058, 32,  RO, VNET_F, DRAIN_0_SEQ_ERR_LOG)
BCHP_REGISTER(0x2062205c, 32,  RO, VNET_F, DRAIN_1_PIC_SIZE_CNT)
BCHP_REGISTER(0x20622060, 32, CFG, VNET_F, DRAIN_1_DEBUG_CTRL)
BCHP_REGISTER(0x20622064, 32,  RW, VNET_F, DRAIN_1_ERR_STATUS)
BCHP_REGISTER(0x20622068, 32,  RO, VNET_F, DRAIN_1_SEQ_ERR_LOG)
BCHP_REGISTER(0x206221c0, 32,  RO, VNET_F, INPUT_READY_STATUS_LO)
BCHP_REGISTER(0x206221c4, 32,  RO, VNET_F, INPUT_ACCEPT_STATUS_LO)
BCHP_REGISTER(0x206221c8, 32,  RO, VNET_F, INPUT_STATUS_LO)
BCHP_REGISTER(0x206221cc, 32,  WO, VNET_F, INPUT_STATUS_CLEAR_LO)
BCHP_REGISTER(0x206221fc, 32, CFG, VNET_F, SCRATCH_REGISTER)
BCHP_REGISTER(0x20622200, 32,  RO, VNET_B, REVISION)
BCHP_REGISTER(0x20622204, 32, CFG, VNET_B, OUTPUT_EOP_DELAY_CFG0)
BCHP_REGISTER(0x20622208, 32, CFG, VNET_B, OUTPUT_EOP_DELAY_CFG1)
BCHP_REGISTER(0x2062220c, 32, CFG, VNET_B, OUTPUT_EOP_DELAY_CFG2)
BCHP_REGISTER(0x20622210, 32, CFG, VNET_B, OUTPUT_EOP_DELAY_CFG3)
BCHP_REGISTER(0x20622218, 32,  RW, VNET_B, SCL_0_ENABLE)
BCHP_REGISTER(0x2062221c, 32,  RW, VNET_B, MVP_0_ENABLE)
BCHP_REGISTER(0x20622220, 32,  RW, VNET_B, DNR_0_ENABLE)
BCHP_REGISTER(0x20622224, 32,  RW, VNET_B, ITM_0_ENABLE)
BCHP_REGISTER(0x20622228, 32,  RW, VNET_B, FDTHR_0_ENABLE)
BCHP_REGISTER(0x2062222c, 32,  RW, VNET_B, FDTHR_1_ENABLE)
BCHP_REGISTER(0x20622230, 32, CFG, VNET_B, CAP_0_SRC)
BCHP_REGISTER(0x20622234, 32, CFG, VNET_B, CMP_0_V0_SRC)
BCHP_REGISTER(0x20622238, 32, CFG, VNET_B, LOOPBACK_0_SRC)
BCHP_REGISTER(0x2062223c, 32, CFG, VNET_B, LOOPBACK_1_SRC)
BCHP_REGISTER(0x20622240, 32, CFG, VNET_B, LOOPBACK_2_SRC)
BCHP_REGISTER(0x20622244, 32, CFG, VNET_B, CRC_SRC)
BCHP_REGISTER(0x20622248, 32, CFG, VNET_B, DRAIN_0_SRC)
BCHP_REGISTER(0x2062224c, 32, CFG, VNET_B, CRC_CTRL)
BCHP_REGISTER(0x20622250, 32,  RO, VNET_B, CRC_Y_STATUS)
BCHP_REGISTER(0x20622254, 32,  RO, VNET_B, CRC_C_STATUS)
BCHP_REGISTER(0x20622258, 32,  RO, VNET_B, DRAIN_0_PIC_SIZE_CNT)
BCHP_REGISTER(0x2062225c, 32, CFG, VNET_B, DRAIN_0_DEBUG_CTRL)
BCHP_REGISTER(0x20622260, 32,  RW, VNET_B, DRAIN_0_ERR_STATUS)
BCHP_REGISTER(0x20622264, 32,  RO, VNET_B, DRAIN_0_SEQ_ERR_LOG)
BCHP_REGISTER(0x206223c0, 32,  RO, VNET_B, INPUT_READY_STATUS_LO)
BCHP_REGISTER(0x206223c4, 32,  RO, VNET_B, INPUT_ACCEPT_STATUS_LO)
BCHP_REGISTER(0x206223c8, 32,  RO, VNET_B, INPUT_STATUS_LO)
BCHP_REGISTER(0x206223cc, 32,  WO, VNET_B, INPUT_STATUS_CLEAR_LO)
BCHP_REGISTER(0x206223fc, 32, CFG, VNET_B, SCRATCH_REGISTER)
BCHP_REGISTER(0x20622800, 32, CFG, MMISC, SW_INIT)
BCHP_REGISTER(0x2062280c, 32, CFG, MMISC, VNET_F_CHANNEL_SW_INIT)
BCHP_REGISTER(0x20622810, 32, CFG, MMISC, VNET_B_CHANNEL_SW_INIT)
BCHP_REGISTER(0x20622814, 32, CFG, MMISC, VNET_B_CHANNEL_SW_INIT_1)
BCHP_REGISTER(0x20622818, 32, CFG, MMISC, SCRATCH_0)
BCHP_REGISTER(0x20622820, 32, CFG, MMISC, BVNM_CLOCK_CTRL)
BCHP_REGISTER(0x20622824, 32,  RO, MMISC, BVNM_PDA_OUT_STATUS)
BCHP_REGISTER(0x20622828, 32,  RO, MMISC, BVNM_PDA_PWR_UP_STATUS)
BCHP_REGISTER(0x20626000, 32,  RO, DNR_0, REVISION)
BCHP_REGISTER(0x20626004, 32,  RO, DNR_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20626008, 32, CFG, DNR_0, BNR_CTRL)
BCHP_REGISTER(0x2062600c, 32, CFG, DNR_0, VBNR_CONFIG)
BCHP_REGISTER(0x20626010, 32, CFG, DNR_0, MNR_CTRL)
BCHP_REGISTER(0x20626014, 32, CFG, DNR_0, MNR_CONFIG)
BCHP_REGISTER(0x20626018, 32, CFG, DNR_0, DCR_CTRL)
BCHP_REGISTER(0x2062601c, 32, CFG, DNR_0, DCR_FILT_LIMIT)
BCHP_REGISTER(0x20626020, 32, CFG, DNR_0, DCR_FILT_CONFIG)
BCHP_REGISTER(0x20626024, 32, CFG, DNR_0, DNR_VIDEO_MODE)
BCHP_REGISTER(0x20626028, 32, CFG, DNR_0, DNR_DEMO_SETTING)
BCHP_REGISTER(0x2062602c, 32, CFG, DNR_0, DNR_DEMO_CTRL)
BCHP_REGISTER(0x20626030, 32, CFG, DNR_0, DCR_DITH_ORDER_PATTERN)
BCHP_REGISTER(0x20626034, 32, CFG, DNR_0, DCR_DITH_ORDER_VALUE)
BCHP_REGISTER(0x20626038, 32, CFG, DNR_0, DCR_DITH_RANDOM_PATTERN)
BCHP_REGISTER(0x2062603c, 32, CFG, DNR_0, DCR_DITH_RANDOM_VALUE)
BCHP_REGISTER(0x20626040, 32, CFG, DNR_0, DCR_DITH_OUT_CTRL)
BCHP_REGISTER(0x20626044, 32, CFG, DNR_0, SRC_PIC_SIZE)
BCHP_REGISTER(0x20626048, 32, CFG, DNR_0, SRC_SCAN_SETTING)
BCHP_REGISTER(0x2062604c, 32,  RW, DNR_0, DNR_TOP_CTRL)
BCHP_REGISTER(0x20626050, 32, CFG, DNR_0, SCRATCH_REGISTER)
BCHP_REGISTER(0x20626054, 32,  RO, DNR_0, FILT_EFFECT_STATUS)
BCHP_REGISTER(0x20626058, 32,  RO, DNR_0, BVB_IN_STATUS)
BCHP_REGISTER(0x2062605c, 32,  WO, DNR_0, BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x20627000, 32,  RO, BVNM_INTR2_0, R5F_STATUS)
BCHP_REGISTER(0x20627004, 32,  WO, BVNM_INTR2_0, R5F_SET)
BCHP_REGISTER(0x20627008, 32,  WO, BVNM_INTR2_0, R5F_CLEAR)
BCHP_REGISTER(0x2062700c, 32,  RO, BVNM_INTR2_0, R5F_MASK_STATUS)
BCHP_REGISTER(0x20627010, 32,  WO, BVNM_INTR2_0, R5F_MASK_SET)
BCHP_REGISTER(0x20627014, 32,  WO, BVNM_INTR2_0, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20627018, 32,  RO, BVNM_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x2062701c, 32,  WO, BVNM_INTR2_0, PCI_SET)
BCHP_REGISTER(0x20627020, 32,  WO, BVNM_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x20627024, 32,  RO, BVNM_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x20627028, 32,  WO, BVNM_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x2062702c, 32,  WO, BVNM_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20627100, 32,  RO, BVNM_INTR2_1, R5F_STATUS)
BCHP_REGISTER(0x20627104, 32,  WO, BVNM_INTR2_1, R5F_SET)
BCHP_REGISTER(0x20627108, 32,  WO, BVNM_INTR2_1, R5F_CLEAR)
BCHP_REGISTER(0x2062710c, 32,  RO, BVNM_INTR2_1, R5F_MASK_STATUS)
BCHP_REGISTER(0x20627110, 32,  WO, BVNM_INTR2_1, R5F_MASK_SET)
BCHP_REGISTER(0x20627114, 32,  WO, BVNM_INTR2_1, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20627118, 32,  RO, BVNM_INTR2_1, PCI_STATUS)
BCHP_REGISTER(0x2062711c, 32,  WO, BVNM_INTR2_1, PCI_SET)
BCHP_REGISTER(0x20627120, 32,  WO, BVNM_INTR2_1, PCI_CLEAR)
BCHP_REGISTER(0x20627124, 32,  RO, BVNM_INTR2_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x20627128, 32,  WO, BVNM_INTR2_1, PCI_MASK_SET)
BCHP_REGISTER(0x2062712c, 32,  WO, BVNM_INTR2_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20628000, 32,  RO, ITM_0, REVISION_ID)
BCHP_REGISTER(0x20628004, 32,  RO, ITM_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20628008, 32, CFG, ITM_0, US_422_TO_444_CONV)
BCHP_REGISTER(0x2062800c, 32, CFG, ITM_0, DS_444_TO_422_CONV)
BCHP_REGISTER(0x20628010, 32, CFG, ITM_0, BANK_SELECT_CONTROL)
BCHP_REGISTER(0x20628014, 32, CFG, ITM_0, BANK_PROGRAMMED)
BCHP_REGISTER(0x20628018, 32,  RW, ITM_0, TOP_CONTROL)
BCHP_REGISTER(0x2062801c, 32,  RO, ITM_0, BANK_SELECT_STATUS)
BCHP_REGISTER(0x20628020, 32, CFG, ITM_0, SCRATCH_0)
BCHP_REGISTER(0x20628024, 32,  RO, ITM_0, BVB_IN_STATUS)
BCHP_REGISTER(0x20628028, 32,  WO, ITM_0, BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x2062802c, 32, CFG, ITM_0, OTP_SYNC_SEL)
BCHP_REGISTER(0x20628040, 32, CFG, ITM_0, TOP_CONFIG)
BCHP_REGISTER(0x20628044, 32, CFG, ITM_0, VIDEO_MODE)
BCHP_REGISTER(0x20628048, 32, CFG, ITM_0, SRC_PIC_SIZE)
BCHP_REGISTER(0x2062804c, 32, CFG, ITM_0, INPUT_LUMA_RANGE_TH)
BCHP_REGISTER(0x20628050, 32, CFG, ITM_0, INPUT_CHROMA_RANGE_TH)
BCHP_REGISTER(0x20628054, 32, CFG, ITM_0, INPUT_CHROMA_MIDPOINT)
BCHP_REGISTER(0x20628058, 32, CFG, ITM_0, OUTPUT_LUMA_RANGE_TH)
BCHP_REGISTER(0x2062805c, 32, CFG, ITM_0, OUTPUT_CHROMA_RANGE_TH)
BCHP_REGISTER(0x20628060, 32, CFG, ITM_0, OUTPUT_CHROMA_MIDPOINT)
BCHP_REGISTER(0x20628064, 32, CFG, ITM_0, FILTER_K01)
BCHP_REGISTER(0x20628068, 32, CFG, ITM_0, FILTER_K23)
BCHP_REGISTER(0x2062806c, 32, CFG, ITM_0, DEBANDING_THRESHOLDS)
BCHP_REGISTER(0x20628070, 32, CFG, ITM_0, DEBANDING_CLAMP)
BCHP_REGISTER(0x20628074, 32, CFG, ITM_0, PRBS_LUT_0_7)
BCHP_REGISTER(0x20628078, 32, CFG, ITM_0, PRBS_LUT_8_15)
BCHP_REGISTER(0x2062807c, 32, CFG, ITM_0, DENOISING_THRESHOLDS)
BCHP_REGISTER(0x20628080, 32, CFG, ITM_0, NOISE_DIFF_THRESHOLDS)
BCHP_REGISTER(0x20628084, 32, CFG, ITM_0, ENV_POINT12)
BCHP_REGISTER(0x20628088, 32, CFG, ITM_0, ENV_POINT34)
BCHP_REGISTER(0x2062808c, 32, CFG, ITM_0, ENV_SLOPE_P012)
BCHP_REGISTER(0x20628090, 32, CFG, ITM_0, ENV_SLOPE_P234)
BCHP_REGISTER(0x20628094, 32, CFG, ITM_0, ENV_SLOPE_P45)
BCHP_REGISTER(0x20628098, 32, CFG, ITM_0, ENV_LEVEL_P012)
BCHP_REGISTER(0x2062809c, 32, CFG, ITM_0, ENV_LEVEL_P34)
BCHP_REGISTER(0x206280a0, 32, CFG, ITM_0, Y_LUT_OFFSET)
BCHP_REGISTER(0x206280a4, 32, CFG, ITM_0, YF_LUT_OFFSET)
BCHP_REGISTER(0x20640000, 32,  RO, CAP_0, REVISION)
BCHP_REGISTER(0x20640004, 32,  RO, CAP_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20640008, 64, CFG, CAP_0, MSTART)
BCHP_REGISTER(0x20640010, 64, CFG, CAP_0, MSTART_R)
BCHP_REGISTER(0x20640018, 32, CFG, CAP_0, MODE)
BCHP_REGISTER(0x2064001c, 32, CFG, CAP_0, COMP_ORDER)
BCHP_REGISTER(0x20640020, 32, CFG, CAP_0, RX_CTRL)
BCHP_REGISTER(0x20640024, 32, CFG, CAP_0, TRIG_CTRL)
BCHP_REGISTER(0x20640028, 32, CFG, CAP_0, BVB_TRIG_0_CFG)
BCHP_REGISTER(0x2064002c, 32, CFG, CAP_0, BVB_TRIG_1_CFG)
BCHP_REGISTER(0x20640030, 32, CFG, CAP_0, DITHER_LFSR_INIT)
BCHP_REGISTER(0x20640034, 32, CFG, CAP_0, DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20640038, 32, CFG, CAP_0, DITHER_CTRL)
BCHP_REGISTER(0x2064003c, 32, CFG, CAP_0, DCEM_CFG)
BCHP_REGISTER(0x20640040, 32, CFG, CAP_0, DCEM_RCTRL_FIRST)
BCHP_REGISTER(0x20640044, 32, CFG, CAP_0, DCEM_RCTRL)
BCHP_REGISTER(0x206400d8, 32, CFG, CAP_0, PIC_SIZE)
BCHP_REGISTER(0x206400dc, 32, CFG, CAP_0, PIC_OFFSET)
BCHP_REGISTER(0x206400e0, 32, CFG, CAP_0, PIC_OFFSET_R)
BCHP_REGISTER(0x206400e4, 32, CFG, CAP_0, BVB_IN_SIZE)
BCHP_REGISTER(0x206400e8, 32, CFG, CAP_0, PITCH)
BCHP_REGISTER(0x206400ec, 32, CFG, CAP_0, CTRL)
BCHP_REGISTER(0x206400f0, 32,  RO, CAP_0, STATUS)
BCHP_REGISTER(0x206400f4, 32,  RO, CAP_0, BVB_STATUS)
BCHP_REGISTER(0x206400f8, 32,  WO, CAP_0, BVB_STATUS_CLEAR)
BCHP_REGISTER(0x206400fc, 32,  RO, CAP_0, FIFO_STATUS)
BCHP_REGISTER(0x20640100, 32,  WO, CAP_0, FIFO_STATUS_CLEAR)
BCHP_REGISTER(0x20640104, 32,  RO, CAP_0, DEBUG_STATUS)
BCHP_REGISTER(0x20640108, 32,  RO, CAP_0, DCEM_DIAG)
BCHP_REGISTER(0x2064010c, 32, CFG, CAP_0, SCRATCH)
BCHP_REGISTER(0x20641000, 32,  RO, GFD_0, REVISION)
BCHP_REGISTER(0x20641004, 32,  RO, GFD_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20641008, 32,  RO, GFD_0, HDR_HW_CONFIGURATION)
BCHP_REGISTER(0x20641010, 64, CFG, GFD_0, LUT_DESC_ADDR)
BCHP_REGISTER(0x20641018, 64, CFG, GFD_0, SRC_START_R)
BCHP_REGISTER(0x20641020, 64, CFG, GFD_0, SRC_START)
BCHP_REGISTER(0x20641028, 64, CFG, GFD_0, PALETTE_START)
BCHP_REGISTER(0x20641030, 32, CFG, GFD_0, PALETTE_SIZE)
BCHP_REGISTER(0x20641034, 32,  RW, GFD_0, LOAD_PALETTE)
BCHP_REGISTER(0x20641038, 32, CFG, GFD_0, KEY_MAX)
BCHP_REGISTER(0x2064103c, 32, CFG, GFD_0, KEY_MIN)
BCHP_REGISTER(0x20641040, 32, CFG, GFD_0, KEY_MASK)
BCHP_REGISTER(0x20641044, 32, CFG, GFD_0, KEY_ALPHA)
BCHP_REGISTER(0x20641048, 32, CFG, GFD_0, CSC_DITHER_CTRL)
BCHP_REGISTER(0x2064104c, 32, CFG, GFD_0, CSC_DITHER_LFSR_INIT)
BCHP_REGISTER(0x20641050, 32, CFG, GFD_0, CSC_DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20641054, 32, CFG, GFD_0, CTRL)
BCHP_REGISTER(0x20641058, 32, CFG, GFD_0, CROP_CFG)
BCHP_REGISTER(0x2064105c, 32, CFG, GFD_0, GSCL_CFG)
BCHP_REGISTER(0x20641060, 32, CFG, GFD_0, SRC_VSIZE)
BCHP_REGISTER(0x20641064, 32, CFG, GFD_0, VERT_FIR_INIT_PHASE)
BCHP_REGISTER(0x20641068, 32, CFG, GFD_0, VERT_FIR_SRC_STEP)
BCHP_REGISTER(0x2064106c, 32, CFG, GFD_0, VERT_FIR_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x20641070, 32, CFG, GFD_0, VERT_FIR_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x20641074, 32, CFG, GFD_0, DEJAGGING)
BCHP_REGISTER(0x20641078, 32, CFG, GFD_0, DERINGING)
BCHP_REGISTER(0x2064107c, 32, CFG, GFD_0, DEJAGGING_DEMO_SETTING)
BCHP_REGISTER(0x20641080, 32, CFG, GFD_0, DERINGING_DEMO_SETTING)
BCHP_REGISTER(0x20641084, 32, CFG, GFD_0, HORIZ_FIR_INIT_PHASE_R)
BCHP_REGISTER(0x20641088, 32, CFG, GFD_0, HORIZ_FIR_INIT_PHASE)
BCHP_REGISTER(0x2064108c, 32, CFG, GFD_0, HORIZ_FIR_SRC_STEP)
BCHP_REGISTER(0x20641090, 32, CFG, GFD_0, HORIZ_FIR_COEFF_PHASE0_00_01)
BCHP_REGISTER(0x20641094, 32, CFG, GFD_0, HORIZ_FIR_COEFF_PHASE0_02)
BCHP_REGISTER(0x20641098, 32, CFG, GFD_0, HORIZ_FIR_COEFF_PHASE1_00_01)
BCHP_REGISTER(0x2064109c, 32, CFG, GFD_0, HORIZ_FIR_COEFF_PHASE1_02)
BCHP_REGISTER(0x206410a0, 32, CFG, GFD_0, SRC_HSIZE)
BCHP_REGISTER(0x206410a4, 32, CFG, GFD_0, SRC_OFFSET)
BCHP_REGISTER(0x206410a8, 32, CFG, GFD_0, SRC_PITCH)
BCHP_REGISTER(0x206410ac, 32, CFG, GFD_0, DISP_PIC_SIZE)
BCHP_REGISTER(0x206410b0, 32, CFG, GFD_0, FORMAT_DEF_1)
BCHP_REGISTER(0x206410b4, 32, CFG, GFD_0, FORMAT_DEF_2)
BCHP_REGISTER(0x206410b8, 32, CFG, GFD_0, WIN_COLOR)
BCHP_REGISTER(0x206410bc, 32, CFG, GFD_0, W_ALPHA)
BCHP_REGISTER(0x206410c0, 32, CFG, GFD_0, CSC_COEFF_C00)
BCHP_REGISTER(0x206410c4, 32, CFG, GFD_0, CSC_COEFF_C01)
BCHP_REGISTER(0x206410c8, 32, CFG, GFD_0, CSC_COEFF_C02)
BCHP_REGISTER(0x206410cc, 32, CFG, GFD_0, CSC_COEFF_C03)
BCHP_REGISTER(0x206410d0, 32, CFG, GFD_0, CSC_COEFF_C04)
BCHP_REGISTER(0x206410d4, 32, CFG, GFD_0, CSC_COEFF_C10)
BCHP_REGISTER(0x206410d8, 32, CFG, GFD_0, CSC_COEFF_C11)
BCHP_REGISTER(0x206410dc, 32, CFG, GFD_0, CSC_COEFF_C12)
BCHP_REGISTER(0x206410e0, 32, CFG, GFD_0, CSC_COEFF_C13)
BCHP_REGISTER(0x206410e4, 32, CFG, GFD_0, CSC_COEFF_C14)
BCHP_REGISTER(0x206410e8, 32, CFG, GFD_0, CSC_COEFF_C20)
BCHP_REGISTER(0x206410ec, 32, CFG, GFD_0, CSC_COEFF_C21)
BCHP_REGISTER(0x206410f0, 32, CFG, GFD_0, CSC_COEFF_C22)
BCHP_REGISTER(0x206410f4, 32, CFG, GFD_0, CSC_COEFF_C23)
BCHP_REGISTER(0x206410f8, 32, CFG, GFD_0, CSC_COEFF_C24)
BCHP_REGISTER(0x206410fc, 32,  RW, GFD_0, ENABLE)
BCHP_REGISTER(0x20641100, 32, CFG, GFD_0, SCRATCH0)
BCHP_REGISTER(0x20641104, 32, CFG, GFD_0, SCRATCH1)
BCHP_REGISTER(0x20641108, 32,  WO, GFD_0, STATUS_CLEAR)
BCHP_REGISTER(0x2064110c, 32,  RO, GFD_0, STATUS)
BCHP_REGISTER(0x20641110, 32,  RO, GFD_0, SCB_CLNT_STATUS)
BCHP_REGISTER(0x20641114, 32,  RO, GFD_0, VSCL_DIAG)
BCHP_REGISTER(0x20641118, 32, CFG, GFD_0, NL_CSC_CTRL)
BCHP_REGISTER(0x2064111c, 32,  RW, GFD_0, LUT_DESC_CFG)
BCHP_REGISTER(0x20641120, 32, CFG, GFD_0, LRANGE_LIMIT_EN)
BCHP_REGISTER(0x20641124, 32, CFG, GFD_0, LRANGE_MAX)
BCHP_REGISTER(0x20641128, 32, CFG, GFD_0, LRANGE_MIN)
BCHP_REGISTER(0x2064116c, 32, CFG, GFD_0, CSC_R0_MA_COEFF_LSHF)
BCHP_REGISTER(0x20641170, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C00)
BCHP_REGISTER(0x20641174, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C01)
BCHP_REGISTER(0x20641178, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C02)
BCHP_REGISTER(0x2064117c, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C03)
BCHP_REGISTER(0x20641180, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C04)
BCHP_REGISTER(0x20641184, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C10)
BCHP_REGISTER(0x20641188, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C11)
BCHP_REGISTER(0x2064118c, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C12)
BCHP_REGISTER(0x20641190, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C13)
BCHP_REGISTER(0x20641194, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C14)
BCHP_REGISTER(0x20641198, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C20)
BCHP_REGISTER(0x2064119c, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C21)
BCHP_REGISTER(0x206411a0, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C22)
BCHP_REGISTER(0x206411a4, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C23)
BCHP_REGISTER(0x206411a8, 32, CFG, GFD_0, CSC_R0_MA_COEFF_C24)
BCHP_REGISTER(0x206411ac, 32, CFG, GFD_0, CSC_R0_MB_COEFF_LSHF)
BCHP_REGISTER(0x206411b0, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C00)
BCHP_REGISTER(0x206411b4, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C01)
BCHP_REGISTER(0x206411b8, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C02)
BCHP_REGISTER(0x206411bc, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C03)
BCHP_REGISTER(0x206411c0, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C10)
BCHP_REGISTER(0x206411c4, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C11)
BCHP_REGISTER(0x206411c8, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C12)
BCHP_REGISTER(0x206411cc, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C13)
BCHP_REGISTER(0x206411d0, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C20)
BCHP_REGISTER(0x206411d4, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C21)
BCHP_REGISTER(0x206411d8, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C22)
BCHP_REGISTER(0x206411dc, 32, CFG, GFD_0, CSC_R0_MB_COEFF_C23)
BCHP_REGISTER(0x206411e0, 32, CFG, GFD_0, CSC_R0_MB2_COEFF_C00)
BCHP_REGISTER(0x206411e4, 32, CFG, GFD_0, CSC_R0_MB2_COEFF_C01)
BCHP_REGISTER(0x206411e8, 32, CFG, GFD_0, CSC_R0_MB2_COEFF_C02)
BCHP_REGISTER(0x206411ec, 32, CFG, GFD_0, CSC_R0_MB2_COEFF_C03)
BCHP_REGISTER(0x206411f0, 32, CFG, GFD_0, CSC_R0_MC_COEFF_LSHF)
BCHP_REGISTER(0x206411f4, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C00)
BCHP_REGISTER(0x206411f8, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C01)
BCHP_REGISTER(0x206411fc, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C02)
BCHP_REGISTER(0x20641200, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C03)
BCHP_REGISTER(0x20641204, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C04)
BCHP_REGISTER(0x20641208, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C10)
BCHP_REGISTER(0x2064120c, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C11)
BCHP_REGISTER(0x20641210, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C12)
BCHP_REGISTER(0x20641214, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C13)
BCHP_REGISTER(0x20641218, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C14)
BCHP_REGISTER(0x2064121c, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C20)
BCHP_REGISTER(0x20641220, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C21)
BCHP_REGISTER(0x20641224, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C22)
BCHP_REGISTER(0x20641228, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C23)
BCHP_REGISTER(0x2064122c, 32, CFG, GFD_0, CSC_R0_MC_COEFF_C24)
BCHP_REGISTER(0x20641230, 32, CFG, GFD_0, NL2L_LUT_CTRL)
BCHP_REGISTER(0x20641250, 32, CFG, GFD_0, L2NL_LUT_CTRL)
BCHP_REGISTER(0x20641270, 32, CFG, GFD_0, LMR_LUT_CTRL)
BCHP_REGISTER(0x20641290, 32, CFG, GFD_0, LMR_MULT_COEFF)
BCHP_REGISTER(0x20641294, 32, CFG, GFD_0, LMR_ADD_COEFF)
BCHP_REGISTER(0x20643fcc, 32,  RO, GFD_0, LUT_DESC_DONE_STATUS)
BCHP_REGISTER(0x20643fd0, 32,  RO, GFD_0, HDR_SCB_RUL_STATUS)
BCHP_REGISTER(0x20645000, 32,  RO, GFD_1, REVISION)
BCHP_REGISTER(0x20645004, 32,  RO, GFD_1, HW_CONFIGURATION)
BCHP_REGISTER(0x20645018, 64, CFG, GFD_1, SRC_START_R)
BCHP_REGISTER(0x20645020, 64, CFG, GFD_1, SRC_START)
BCHP_REGISTER(0x20645028, 64, CFG, GFD_1, PALETTE_START)
BCHP_REGISTER(0x20645030, 32, CFG, GFD_1, PALETTE_SIZE)
BCHP_REGISTER(0x20645034, 32,  RW, GFD_1, LOAD_PALETTE)
BCHP_REGISTER(0x20645038, 32, CFG, GFD_1, KEY_MAX)
BCHP_REGISTER(0x2064503c, 32, CFG, GFD_1, KEY_MIN)
BCHP_REGISTER(0x20645040, 32, CFG, GFD_1, KEY_MASK)
BCHP_REGISTER(0x20645044, 32, CFG, GFD_1, KEY_ALPHA)
BCHP_REGISTER(0x20645048, 32, CFG, GFD_1, CSC_DITHER_CTRL)
BCHP_REGISTER(0x2064504c, 32, CFG, GFD_1, CSC_DITHER_LFSR_INIT)
BCHP_REGISTER(0x20645050, 32, CFG, GFD_1, CSC_DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20645054, 32, CFG, GFD_1, CTRL)
BCHP_REGISTER(0x206450a4, 32, CFG, GFD_1, SRC_OFFSET)
BCHP_REGISTER(0x206450a8, 32, CFG, GFD_1, SRC_PITCH)
BCHP_REGISTER(0x206450ac, 32, CFG, GFD_1, DISP_PIC_SIZE)
BCHP_REGISTER(0x206450b0, 32, CFG, GFD_1, FORMAT_DEF_1)
BCHP_REGISTER(0x206450b4, 32, CFG, GFD_1, FORMAT_DEF_2)
BCHP_REGISTER(0x206450b8, 32, CFG, GFD_1, WIN_COLOR)
BCHP_REGISTER(0x206450bc, 32, CFG, GFD_1, W_ALPHA)
BCHP_REGISTER(0x206450c0, 32, CFG, GFD_1, CSC_COEFF_C00)
BCHP_REGISTER(0x206450c4, 32, CFG, GFD_1, CSC_COEFF_C01)
BCHP_REGISTER(0x206450c8, 32, CFG, GFD_1, CSC_COEFF_C02)
BCHP_REGISTER(0x206450cc, 32, CFG, GFD_1, CSC_COEFF_C03)
BCHP_REGISTER(0x206450d0, 32, CFG, GFD_1, CSC_COEFF_C04)
BCHP_REGISTER(0x206450d4, 32, CFG, GFD_1, CSC_COEFF_C10)
BCHP_REGISTER(0x206450d8, 32, CFG, GFD_1, CSC_COEFF_C11)
BCHP_REGISTER(0x206450dc, 32, CFG, GFD_1, CSC_COEFF_C12)
BCHP_REGISTER(0x206450e0, 32, CFG, GFD_1, CSC_COEFF_C13)
BCHP_REGISTER(0x206450e4, 32, CFG, GFD_1, CSC_COEFF_C14)
BCHP_REGISTER(0x206450e8, 32, CFG, GFD_1, CSC_COEFF_C20)
BCHP_REGISTER(0x206450ec, 32, CFG, GFD_1, CSC_COEFF_C21)
BCHP_REGISTER(0x206450f0, 32, CFG, GFD_1, CSC_COEFF_C22)
BCHP_REGISTER(0x206450f4, 32, CFG, GFD_1, CSC_COEFF_C23)
BCHP_REGISTER(0x206450f8, 32, CFG, GFD_1, CSC_COEFF_C24)
BCHP_REGISTER(0x206450fc, 32,  RW, GFD_1, ENABLE)
BCHP_REGISTER(0x20645100, 32, CFG, GFD_1, SCRATCH0)
BCHP_REGISTER(0x20645104, 32, CFG, GFD_1, SCRATCH1)
BCHP_REGISTER(0x20645108, 32,  WO, GFD_1, STATUS_CLEAR)
BCHP_REGISTER(0x2064510c, 32,  RO, GFD_1, STATUS)
BCHP_REGISTER(0x20645110, 32,  RO, GFD_1, SCB_CLNT_STATUS)
BCHP_REGISTER(0x20645800, 32,  RO, CMP_0, REVISION)
BCHP_REGISTER(0x20645804, 32,  RO, CMP_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20645808, 32,  RW, CMP_0, CANVAS_CTRL)
BCHP_REGISTER(0x2064580c, 32, CFG, CMP_0, CANVAS_SIZE)
BCHP_REGISTER(0x20645810, 32, CFG, CMP_0, BG_COLOR)
BCHP_REGISTER(0x20645814, 32, CFG, CMP_0, BLEND_0_CTRL)
BCHP_REGISTER(0x20645818, 32, CFG, CMP_0, BLEND_1_CTRL)
BCHP_REGISTER(0x20645828, 32, CFG, CMP_0, CMP_CTRL)
BCHP_REGISTER(0x2064582c, 32, CFG, CMP_0, COLOR_CLIP_CTRL)
BCHP_REGISTER(0x20645830, 32, CFG, CMP_0, CB_LUMA_SLOPE)
BCHP_REGISTER(0x20645834, 32, CFG, CMP_0, CR_LUMA_SLOPE)
BCHP_REGISTER(0x20645838, 32, CFG, CMP_0, CB_CR_SLOPE_JOINT)
BCHP_REGISTER(0x2064583c, 32,  RO, CMP_0, COLOR_CLIP_COUNT)
BCHP_REGISTER(0x20645840, 32, CFG, CMP_0, CMP_OUT_CTRL)
BCHP_REGISTER(0x20645844, 32, CFG, CMP_0, CRC_CTRL)
BCHP_REGISTER(0x20645848, 32,  RO, CMP_0, CRC_Y_STATUS)
BCHP_REGISTER(0x2064584c, 32,  RO, CMP_0, CRC_CB_STATUS)
BCHP_REGISTER(0x20645850, 32,  RO, CMP_0, CRC_CR_STATUS)
BCHP_REGISTER(0x20645854, 32, CFG, CMP_0, READBACK_POSITION)
BCHP_REGISTER(0x20645858, 64,  RO, CMP_0, READBACK_VALUE)
BCHP_REGISTER(0x20645860, 32, CFG, CMP_0, CSC_DEMO_SETTING)
BCHP_REGISTER(0x20645864, 32, CFG, CMP_0, SCRATCH_REGISTER)
BCHP_REGISTER(0x2064586c, 32, CFG, CMP_0, TEST_REGISTER)
BCHP_REGISTER(0x20645870, 32,  RO, CMP_0, TEST_REGISTER1)
BCHP_REGISTER(0x20645880, 32,  WO, CMP_0, CMP_STATUS_CLEAR)
BCHP_REGISTER(0x20645884, 32,  RO, CMP_0, CMP_STATUS)
BCHP_REGISTER(0x20645980, 32, CFG, CMP_0, G0_SURFACE_SIZE)
BCHP_REGISTER(0x20645984, 32, CFG, CMP_0, G0_SURFACE_OFFSET)
BCHP_REGISTER(0x20645988, 32, CFG, CMP_0, G0_DISPLAY_SIZE)
BCHP_REGISTER(0x2064598c, 32, CFG, CMP_0, G0_CANVAS_OFFSET)
BCHP_REGISTER(0x20645990, 32, CFG, CMP_0, G0_CANVAS_X_OFFSET_R)
BCHP_REGISTER(0x20645994, 32, CFG, CMP_0, G0_SURFACE_CTRL)
BCHP_REGISTER(0x20645998, 32,  WO, CMP_0, G0_BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x2064599c, 32,  RO, CMP_0, G0_BVB_IN_STATUS)
BCHP_REGISTER(0x20645a00, 32, CFG, CMP_0, V0_SURFACE_SIZE)
BCHP_REGISTER(0x20645a04, 32, CFG, CMP_0, V0_SURFACE_OFFSET)
BCHP_REGISTER(0x20645a08, 32, CFG, CMP_0, V0_DISPLAY_SIZE)
BCHP_REGISTER(0x20645a0c, 32, CFG, CMP_0, V0_CANVAS_OFFSET)
BCHP_REGISTER(0x20645a10, 32, CFG, CMP_0, V0_CANVAS_X_OFFSET_R)
BCHP_REGISTER(0x20645a14, 32, CFG, CMP_0, V0_SURFACE_CTRL)
BCHP_REGISTER(0x20645a18, 32,  WO, CMP_0, V0_BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x20645a1c, 32,  RO, CMP_0, V0_BVB_IN_STATUS)
BCHP_REGISTER(0x20645a20, 32, CFG, CMP_0, V0_CONST_COLOR)
BCHP_REGISTER(0x20645a24, 32, CFG, CMP_0, V0_CB_KEYING)
BCHP_REGISTER(0x20645a28, 32, CFG, CMP_0, V0_CR_KEYING)
BCHP_REGISTER(0x20645a2c, 32, CFG, CMP_0, V0_LUMA_KEYING)
BCHP_REGISTER(0x20645ad0, 32, CFG, CMP_0, V0_NL_CSC_CTRL)
BCHP_REGISTER(0x20645ad4, 32, CFG, CMP_0, V0_REV_CCA_CTRL)
BCHP_REGISTER(0x20645d00, 32, CFG, CMP_0, V0_R0_MC_COEFF_LSHF)
BCHP_REGISTER(0x20645d04, 32, CFG, CMP_0, V0_R0_MC_COEFF_C00)
BCHP_REGISTER(0x20645d08, 32, CFG, CMP_0, V0_R0_MC_COEFF_C01)
BCHP_REGISTER(0x20645d0c, 32, CFG, CMP_0, V0_R0_MC_COEFF_C02)
BCHP_REGISTER(0x20645d10, 32, CFG, CMP_0, V0_R0_MC_COEFF_C03)
BCHP_REGISTER(0x20645d14, 32, CFG, CMP_0, V0_R0_MC_COEFF_C10)
BCHP_REGISTER(0x20645d18, 32, CFG, CMP_0, V0_R0_MC_COEFF_C11)
BCHP_REGISTER(0x20645d1c, 32, CFG, CMP_0, V0_R0_MC_COEFF_C12)
BCHP_REGISTER(0x20645d20, 32, CFG, CMP_0, V0_R0_MC_COEFF_C13)
BCHP_REGISTER(0x20645d24, 32, CFG, CMP_0, V0_R0_MC_COEFF_C20)
BCHP_REGISTER(0x20645d28, 32, CFG, CMP_0, V0_R0_MC_COEFF_C21)
BCHP_REGISTER(0x20645d2c, 32, CFG, CMP_0, V0_R0_MC_COEFF_C22)
BCHP_REGISTER(0x20645d30, 32, CFG, CMP_0, V0_R0_MC_COEFF_C23)
BCHP_REGISTER(0x20645d34, 32, CFG, CMP_0, V0_R1_MC_COEFF_LSHF)
BCHP_REGISTER(0x20645d38, 32, CFG, CMP_0, V0_R1_MC_COEFF_C00)
BCHP_REGISTER(0x20645d3c, 32, CFG, CMP_0, V0_R1_MC_COEFF_C01)
BCHP_REGISTER(0x20645d40, 32, CFG, CMP_0, V0_R1_MC_COEFF_C02)
BCHP_REGISTER(0x20645d44, 32, CFG, CMP_0, V0_R1_MC_COEFF_C03)
BCHP_REGISTER(0x20645d48, 32, CFG, CMP_0, V0_R1_MC_COEFF_C10)
BCHP_REGISTER(0x20645d4c, 32, CFG, CMP_0, V0_R1_MC_COEFF_C11)
BCHP_REGISTER(0x20645d50, 32, CFG, CMP_0, V0_R1_MC_COEFF_C12)
BCHP_REGISTER(0x20645d54, 32, CFG, CMP_0, V0_R1_MC_COEFF_C13)
BCHP_REGISTER(0x20645d58, 32, CFG, CMP_0, V0_R1_MC_COEFF_C20)
BCHP_REGISTER(0x20645d5c, 32, CFG, CMP_0, V0_R1_MC_COEFF_C21)
BCHP_REGISTER(0x20645d60, 32, CFG, CMP_0, V0_R1_MC_COEFF_C22)
BCHP_REGISTER(0x20645d64, 32, CFG, CMP_0, V0_R1_MC_COEFF_C23)
BCHP_REGISTER(0x20645ea0, 32, CFG, CMP_0, V0_CSC_DITHER_CTRL)
BCHP_REGISTER(0x20645ea4, 32, CFG, CMP_0, V0_CSC_DITHER_LFSR_INIT)
BCHP_REGISTER(0x20645ea8, 32, CFG, CMP_0, V0_CSC_DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20645eac, 32, CFG, CMP_0, V0_IN_DITHER_422_CTRL)
BCHP_REGISTER(0x20645eb0, 32, CFG, CMP_0, V0_IN_DITHER_LFSR_INIT)
BCHP_REGISTER(0x20645eb4, 32, CFG, CMP_0, V0_IN_DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20646800, 32,  RO, CMP_1, REVISION)
BCHP_REGISTER(0x20646804, 32,  RO, CMP_1, HW_CONFIGURATION)
BCHP_REGISTER(0x20646808, 32,  RW, CMP_1, CANVAS_CTRL)
BCHP_REGISTER(0x2064680c, 32, CFG, CMP_1, CANVAS_SIZE)
BCHP_REGISTER(0x20646810, 32, CFG, CMP_1, BG_COLOR)
BCHP_REGISTER(0x20646814, 32, CFG, CMP_1, BLEND_0_CTRL)
BCHP_REGISTER(0x20646828, 32, CFG, CMP_1, CMP_CTRL)
BCHP_REGISTER(0x20646840, 32, CFG, CMP_1, CMP_OUT_CTRL)
BCHP_REGISTER(0x20646844, 32, CFG, CMP_1, CRC_CTRL)
BCHP_REGISTER(0x20646848, 32,  RO, CMP_1, CRC_Y_STATUS)
BCHP_REGISTER(0x2064684c, 32,  RO, CMP_1, CRC_CB_STATUS)
BCHP_REGISTER(0x20646850, 32,  RO, CMP_1, CRC_CR_STATUS)
BCHP_REGISTER(0x20646854, 32, CFG, CMP_1, READBACK_POSITION)
BCHP_REGISTER(0x20646858, 64,  RO, CMP_1, READBACK_VALUE)
BCHP_REGISTER(0x20646864, 32, CFG, CMP_1, SCRATCH_REGISTER)
BCHP_REGISTER(0x2064686c, 32, CFG, CMP_1, TEST_REGISTER)
BCHP_REGISTER(0x20646870, 32,  RO, CMP_1, TEST_REGISTER1)
BCHP_REGISTER(0x20646880, 32,  WO, CMP_1, CMP_STATUS_CLEAR)
BCHP_REGISTER(0x20646884, 32,  RO, CMP_1, CMP_STATUS)
BCHP_REGISTER(0x20646980, 32, CFG, CMP_1, G0_SURFACE_SIZE)
BCHP_REGISTER(0x20646984, 32, CFG, CMP_1, G0_SURFACE_OFFSET)
BCHP_REGISTER(0x20646988, 32, CFG, CMP_1, G0_DISPLAY_SIZE)
BCHP_REGISTER(0x2064698c, 32, CFG, CMP_1, G0_CANVAS_OFFSET)
BCHP_REGISTER(0x20646990, 32, CFG, CMP_1, G0_CANVAS_X_OFFSET_R)
BCHP_REGISTER(0x20646994, 32, CFG, CMP_1, G0_SURFACE_CTRL)
BCHP_REGISTER(0x20646998, 32,  WO, CMP_1, G0_BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x2064699c, 32,  RO, CMP_1, G0_BVB_IN_STATUS)
BCHP_REGISTER(0x20650000, 32,  RO, HDR_CMP_0, HDR_V0_HW_CONFIG)
BCHP_REGISTER(0x20650008, 64, CFG, HDR_CMP_0, LUT_DESC_ADDR)
BCHP_REGISTER(0x20650010, 32,  RW, HDR_CMP_0, LUT_DESC_CFG)
BCHP_REGISTER(0x2065001c, 32, CFG, HDR_CMP_0, CMP_BLENDER_OUT_PQ_CSC_EN)
BCHP_REGISTER(0x20650020, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C00)
BCHP_REGISTER(0x20650024, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C01)
BCHP_REGISTER(0x20650028, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C02)
BCHP_REGISTER(0x2065002c, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C03)
BCHP_REGISTER(0x20650030, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C10)
BCHP_REGISTER(0x20650034, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C11)
BCHP_REGISTER(0x20650038, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C12)
BCHP_REGISTER(0x2065003c, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C13)
BCHP_REGISTER(0x20650040, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C20)
BCHP_REGISTER(0x20650044, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C21)
BCHP_REGISTER(0x20650048, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C22)
BCHP_REGISTER(0x2065004c, 32, CFG, HDR_CMP_0, BLENDER_OUT_COEFF_C23)
BCHP_REGISTER(0x20650050, 32, CFG, HDR_CMP_0, GRAPHIC_INDICATOR_THRESHOLD)
BCHP_REGISTER(0x20650054, 32,  RO, HDR_CMP_0, HDR_SCB_RUL_DEBUG_STATUS)
BCHP_REGISTER(0x20650058, 32, CFG, HDR_CMP_0, HDR_SCRATCH_REG)
BCHP_REGISTER(0x20650070, 32, CFG, HDR_CMP_0, CMP_HDR_V0_CTRL)
BCHP_REGISTER(0x20650100, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_LSHF)
BCHP_REGISTER(0x20650104, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C00)
BCHP_REGISTER(0x20650108, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C01)
BCHP_REGISTER(0x2065010c, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C02)
BCHP_REGISTER(0x20650110, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C03)
BCHP_REGISTER(0x20650114, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C10)
BCHP_REGISTER(0x20650118, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C11)
BCHP_REGISTER(0x2065011c, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C12)
BCHP_REGISTER(0x20650120, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C13)
BCHP_REGISTER(0x20650124, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C20)
BCHP_REGISTER(0x20650128, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C21)
BCHP_REGISTER(0x2065012c, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C22)
BCHP_REGISTER(0x20650130, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C23)
BCHP_REGISTER(0x20650134, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C10_ALT)
BCHP_REGISTER(0x20650138, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C11_ALT)
BCHP_REGISTER(0x2065013c, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C12_ALT)
BCHP_REGISTER(0x20650140, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C13_ALT)
BCHP_REGISTER(0x20650144, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C20_ALT)
BCHP_REGISTER(0x20650148, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C21_ALT)
BCHP_REGISTER(0x2065014c, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C22_ALT)
BCHP_REGISTER(0x20650150, 32, CFG, HDR_CMP_0, V0_R0_MA_COEFF_C23_ALT)
BCHP_REGISTER(0x20650400, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_LSHF)
BCHP_REGISTER(0x20650404, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C00)
BCHP_REGISTER(0x20650408, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C01)
BCHP_REGISTER(0x2065040c, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C02)
BCHP_REGISTER(0x20650410, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C03)
BCHP_REGISTER(0x20650414, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C10)
BCHP_REGISTER(0x20650418, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C11)
BCHP_REGISTER(0x2065041c, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C12)
BCHP_REGISTER(0x20650420, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C13)
BCHP_REGISTER(0x20650424, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C20)
BCHP_REGISTER(0x20650428, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C21)
BCHP_REGISTER(0x2065042c, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C22)
BCHP_REGISTER(0x20650430, 32, CFG, HDR_CMP_0, V0_R0_MB_COEFF_C23)
BCHP_REGISTER(0x20650600, 32, CFG, HDR_CMP_0, V0_R0_LR_LIMIT_ENABLE)
BCHP_REGISTER(0x20650604, 32, CFG, HDR_CMP_0, V0_R0_LR_MAX_LIMIT)
BCHP_REGISTER(0x20650608, 32, CFG, HDR_CMP_0, V0_R0_LR_MIN_LIMIT)
BCHP_REGISTER(0x2065076c, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_CSC_EN)
BCHP_REGISTER(0x20650770, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C00)
BCHP_REGISTER(0x20650774, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C01)
BCHP_REGISTER(0x20650778, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C02)
BCHP_REGISTER(0x2065077c, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C03)
BCHP_REGISTER(0x20650780, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C10)
BCHP_REGISTER(0x20650784, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C11)
BCHP_REGISTER(0x20650788, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C12)
BCHP_REGISTER(0x2065078c, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C13)
BCHP_REGISTER(0x20650790, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C20)
BCHP_REGISTER(0x20650794, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C21)
BCHP_REGISTER(0x20650798, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C22)
BCHP_REGISTER(0x2065079c, 32, CFG, HDR_CMP_0, V0_BLENDER_IN_COEFF_C23)
BCHP_REGISTER(0x20651b00, 32, CFG, HDR_CMP_0, V0_R0_NL2L_LUT_CTRL)
BCHP_REGISTER(0x20651b80, 32, CFG, HDR_CMP_0, V0_NL2L_DEBUG)
BCHP_REGISTER(0x20652280, 32, CFG, HDR_CMP_0, V0_L2NL_LUT_CTRL)
BCHP_REGISTER(0x20652700, 32, CFG, HDR_CMP_0, V0_R0_LMR_MULT_COEF)
BCHP_REGISTER(0x20652704, 32, CFG, HDR_CMP_0, V0_R0_LMR_ADD_COEFF)
BCHP_REGISTER(0x20652708, 32, CFG, HDR_CMP_0, V0_R0_LMR_LUT_CTRL)
BCHP_REGISTER(0x206527a0, 32, CFG, HDR_CMP_0, V0_R0_MB2_COEF_C00)
BCHP_REGISTER(0x206527a4, 32, CFG, HDR_CMP_0, V0_R0_MB2_COEF_C01)
BCHP_REGISTER(0x206527a8, 32, CFG, HDR_CMP_0, V0_R0_MB2_COEF_C02)
BCHP_REGISTER(0x206527ac, 32, CFG, HDR_CMP_0, V0_R0_MB2_COEF_C03)
BCHP_REGISTER(0x2065a000, 32,  RO, PEP_CMP_0_V0, REVISION)
BCHP_REGISTER(0x2065a004, 32, CFG, PEP_CMP_0_V0, SCRATCH_REGISTER)
BCHP_REGISTER(0x2065a008, 32, CFG, PEP_CMP_0_V0, CAB_DEMO_SETTING)
BCHP_REGISTER(0x2065a00c, 32, CFG, PEP_CMP_0_V0, CAB_CTRL)
BCHP_REGISTER(0x2065f000, 32,  RO, BVNB_INTR2, CPU_STATUS)
BCHP_REGISTER(0x2065f004, 32,  WO, BVNB_INTR2, CPU_SET)
BCHP_REGISTER(0x2065f008, 32,  WO, BVNB_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2065f00c, 32,  RO, BVNB_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x2065f010, 32,  WO, BVNB_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x2065f014, 32,  WO, BVNB_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2065f018, 32,  RO, BVNB_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2065f01c, 32,  WO, BVNB_INTR2, PCI_SET)
BCHP_REGISTER(0x2065f020, 32,  WO, BVNB_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x2065f024, 32,  RO, BVNB_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x2065f028, 32,  WO, BVNB_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2065f02c, 32,  WO, BVNB_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2065f100, 32,  RO, BVNB_INTR2_1, CPU_STATUS)
BCHP_REGISTER(0x2065f104, 32,  WO, BVNB_INTR2_1, CPU_SET)
BCHP_REGISTER(0x2065f108, 32,  WO, BVNB_INTR2_1, CPU_CLEAR)
BCHP_REGISTER(0x2065f10c, 32,  RO, BVNB_INTR2_1, CPU_MASK_STATUS)
BCHP_REGISTER(0x2065f110, 32,  WO, BVNB_INTR2_1, CPU_MASK_SET)
BCHP_REGISTER(0x2065f114, 32,  WO, BVNB_INTR2_1, CPU_MASK_CLEAR)
BCHP_REGISTER(0x2065f118, 32,  RO, BVNB_INTR2_1, PCI_STATUS)
BCHP_REGISTER(0x2065f11c, 32,  WO, BVNB_INTR2_1, PCI_SET)
BCHP_REGISTER(0x2065f120, 32,  WO, BVNB_INTR2_1, PCI_CLEAR)
BCHP_REGISTER(0x2065f124, 32,  RO, BVNB_INTR2_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x2065f128, 32,  WO, BVNB_INTR2_1, PCI_MASK_SET)
BCHP_REGISTER(0x2065f12c, 32,  WO, BVNB_INTR2_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x2065f400, 32, CFG, BMISC, SW_INIT)
BCHP_REGISTER(0x2065f410, 32,  RO, BMISC, BVNB_PDA_OUT_STATUS)
BCHP_REGISTER(0x2065f414, 32,  RO, BMISC, BVNB_PDA_PWR_UP_STATUS)
BCHP_REGISTER(0x2065f418, 32, CFG, BMISC, BVNB_CLOCK_CTRL)
BCHP_REGISTER(0x2065f41c, 32, CFG, BMISC, SCRATCH_0)
BCHP_REGISTER(0x20680000, 32, CFG, DMISC, SW_INIT)
BCHP_REGISTER(0x20680004, 32, CFG, DMISC, BVND_CLOCK_CTRL)
BCHP_REGISTER(0x20680008, 32,  RO, DMISC, BVND_PDA_OUT_STATUS)
BCHP_REGISTER(0x2068000c, 32,  RO, DMISC, BVND_PDA_PWR_UP_STATUS)
BCHP_REGISTER(0x2068001c, 32, CFG, DMISC, SCRATCH_0)
BCHP_REGISTER(0x20688000, 32,  RO, MVP_TOP_0, REVISION)
BCHP_REGISTER(0x20688004, 32,  RO, MVP_TOP_0, HW_CONFIGURATION)
BCHP_REGISTER(0x20688008, 32, CFG, MVP_TOP_0, DITHER_CTRL)
BCHP_REGISTER(0x2068800c, 32, CFG, MVP_TOP_0, DITHER_LFSR_INIT)
BCHP_REGISTER(0x20688010, 32, CFG, MVP_TOP_0, DITHER_LFSR_CTRL)
BCHP_REGISTER(0x20688014, 32, CFG, MVP_TOP_0, CTRL)
BCHP_REGISTER(0x20688018, 32,  RW, MVP_TOP_0, ENABLE)
BCHP_REGISTER(0x20688030, 32, CFG, MVP_TOP_0, STATUS_CLEAR)
BCHP_REGISTER(0x20688034, 32,  RO, MVP_TOP_0, STATUS)
BCHP_REGISTER(0x20688038, 32, CFG, MVP_TOP_0, DEBUG_CTRL)
BCHP_REGISTER(0x2068803c, 32,  RO, MVP_TOP_0, DEBUG_SIGNAL)
BCHP_REGISTER(0x20688200, 32,  RW, SIOB_0, DCXS_CFG)
BCHP_REGISTER(0x206882f8, 32,  RW, SIOB_0, TEST_PORT_CONTROL)
BCHP_REGISTER(0x206882fc, 32,  RO, SIOB_0, TEST_PORT_DATA)
BCHP_REGISTER(0x2068a000, 32,  RO, MDI_TOP_0, REVISION_ID)
BCHP_REGISTER(0x2068a004, 32,  RO, MDI_TOP_0, HW_CONFIGURATION)
BCHP_REGISTER(0x2068a008, 64, CFG, MDI_TOP_0, PIXEL_FIELD_MSTART_0)
BCHP_REGISTER(0x2068a010, 64, CFG, MDI_TOP_0, PIXEL_FIELD_MSTART_1)
BCHP_REGISTER(0x2068a018, 64, CFG, MDI_TOP_0, PIXEL_FIELD_MSTART_2)
BCHP_REGISTER(0x2068a020, 64, CFG, MDI_TOP_0, PIXEL_FIELD_MSTART_3)
BCHP_REGISTER(0x2068a028, 64, CFG, MDI_TOP_0, QM_FIELD_MSTART_1)
BCHP_REGISTER(0x2068a030, 64, CFG, MDI_TOP_0, QM_FIELD_MSTART_2)
BCHP_REGISTER(0x2068a038, 64, CFG, MDI_TOP_0, QM_FIELD_MSTART_3)
BCHP_REGISTER(0x2068a040, 64, CFG, MDI_TOP_0, QM_FIELD_MSTART_4)
BCHP_REGISTER(0x2068a068, 32, CFG, MDI_TOP_0, MODE_CONTROL_0)
BCHP_REGISTER(0x2068a06c, 32, CFG, MDI_TOP_0, MULTI_CONTEXT_TO)
BCHP_REGISTER(0x2068a070, 32, CFG, MDI_TOP_0, MULTI_CONTEXT_FROM)
BCHP_REGISTER(0x2068a074, 32, CFG, MDI_TOP_0, SRC_PIC_SIZE)
BCHP_REGISTER(0x2068a078, 32,  RW, MDI_TOP_0, ENABLE_CONTROL)
BCHP_REGISTER(0x2068a0e8, 32, CFG, MDI_TOP_0, OSD_POSITION)
BCHP_REGISTER(0x2068a0ec, 32,  RO, MDI_TOP_0, BVB_IN_STATUS)
BCHP_REGISTER(0x2068a0f0, 32,  WO, MDI_TOP_0, BVB_IN_STATUS_CLEAR)
BCHP_REGISTER(0x2068a0f4, 32,  RO, MDI_TOP_0, TEST_PORT_DATA)
BCHP_REGISTER(0x2068a0f8, 32, CFG, MDI_TOP_0, TEST_PORT_CONTROL)
BCHP_REGISTER(0x2068a0fc, 32, CFG, MDI_TOP_0, SCRATCH_0)
BCHP_REGISTER(0x2068a800, 32, CFG, MDI_PPB_0, STATS_RANGE)
BCHP_REGISTER(0x2068a804, 32, CFG, MDI_PPB_0, LA_MAX_ANGLE_STRENGTH)
BCHP_REGISTER(0x2068a808, 32, CFG, MDI_PPB_0, LA_MIN_NORTH_STRENGTH)
BCHP_REGISTER(0x2068a80c, 32, CFG, MDI_PPB_0, LA_STRENGTH_CONTROL)
BCHP_REGISTER(0x2068a810, 32, CFG, MDI_PPB_0, LA_SCALE_0)
BCHP_REGISTER(0x2068a814, 32, CFG, MDI_PPB_0, LA_BC_CONTROL)
BCHP_REGISTER(0x2068a818, 32, CFG, MDI_PPB_0, XCHROMA_CONTROL_4)
BCHP_REGISTER(0x2068a81c, 32, CFG, MDI_PPB_0, IT_REPF_HISTOGRAM_THRESH_0)
BCHP_REGISTER(0x2068a820, 32, CFG, MDI_PPB_0, IT_REPF_HISTOGRAM_THRESH_1)
BCHP_REGISTER(0x2068a824, 32, CFG, MDI_PPB_0, IT_PCC_CONTROL)
BCHP_REGISTER(0x2068a828, 32, CFG, MDI_PPB_0, BWV_CHECK)
BCHP_REGISTER(0x2068a82c, 32, CFG, MDI_PPB_0, BWV_CHECK_MADR_PCC_IT)
BCHP_REGISTER(0x2068a830, 32, CFG, MDI_PPB_0, STAIR_DETECT_THRESH)
BCHP_REGISTER(0x2068a834, 32, CFG, MDI_PPB_0, MOTION_CAL_CONTROL)
BCHP_REGISTER(0x2068a838, 32, CFG, MDI_PPB_0, QM_MAPPING_RANGE)
BCHP_REGISTER(0x2068a83c, 32, CFG, MDI_PPB_0, MH_MAPPING_VALUE)
BCHP_REGISTER(0x2068a840, 32, CFG, MDI_PPB_0, OBTS_CONTROL_0)
BCHP_REGISTER(0x2068a844, 32, CFG, MDI_PPB_0, PIXEL_COMPUTATION_CONTROL)
BCHP_REGISTER(0x2068a848, 32, CFG, MDI_PPB_0, CONSTANT_COLOR)
BCHP_REGISTER(0x2068a84c, 32, CFG, MDI_PPB_0, DEBUG_MODE)
BCHP_REGISTER(0x2068abfc, 32, CFG, MDI_PPB_0, SCRATCH_0)
BCHP_REGISTER(0x2068ac00, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_0)
BCHP_REGISTER(0x2068ac04, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_1)
BCHP_REGISTER(0x2068ac08, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_2)
BCHP_REGISTER(0x2068ac0c, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_3)
BCHP_REGISTER(0x2068ac10, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_4)
BCHP_REGISTER(0x2068ac14, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_5)
BCHP_REGISTER(0x2068ac18, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_8)
BCHP_REGISTER(0x2068ac1c, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_9)
BCHP_REGISTER(0x2068ac20, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_10)
BCHP_REGISTER(0x2068ac24, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_11)
BCHP_REGISTER(0x2068ac28, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_12)
BCHP_REGISTER(0x2068ac2c, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_13)
BCHP_REGISTER(0x2068ac30, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_14)
BCHP_REGISTER(0x2068ac34, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_15)
BCHP_REGISTER(0x2068ac38, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_16)
BCHP_REGISTER(0x2068ac3c, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_17)
BCHP_REGISTER(0x2068ac40, 32, CFG, MDI_FCN_0, IT_FIELD_PHASE_CALC_CONTROL_18)
BCHP_REGISTER(0x2068ac44, 32, CFG, MDI_FCN_0, IT_BAD_WEAVE_CONTROL_0)
BCHP_REGISTER(0x2068ac48, 32, CFG, MDI_FCN_0, IT_BAD_WEAVE_CONTROL_1)
BCHP_REGISTER(0x2068ac4c, 32, CFG, MDI_FCN_0, OBTS_DECAY)
BCHP_REGISTER(0x2068ac50, 32, CFG, MDI_FCN_0, OBTS_HOLDOFF)
BCHP_REGISTER(0x2068ac54, 32, CFG, MDI_FCN_0, OBTS_MAX_HOLDOFF)
BCHP_REGISTER(0x2068ac58, 32, CFG, MDI_FCN_0, OBTS_CONTROL)
BCHP_REGISTER(0x2068ac5c, 32,  RW, MDI_FCN_0, IT_OUTPUT_CONTROL)
BCHP_REGISTER(0x2068ac60, 32, CFG, MDI_FCN_0, MODE_CONTROL_0)
BCHP_REGISTER(0x2068ac64, 32, CFG, MDI_FCN_0, MODE_CONTROL_1)
BCHP_REGISTER(0x2068ac68, 32,  RW, MDI_FCN_0, DEBUG_CURRENT_FIELD_CONTROL_0)
BCHP_REGISTER(0x2068ac6c, 32,  RW, MDI_FCN_0, DEBUG_CURRENT_FIELD_CONTROL_1)
BCHP_REGISTER(0x2068ac70, 32,  RW, MDI_FCN_0, DEBUG_CURRENT_FIELD_CONTROL_2)
BCHP_REGISTER(0x2068ac80, 32,  RO, MDI_FCN_0, FIELD_STATE_FIFO_STATUS_0)
BCHP_REGISTER(0x2068ac84, 32,  RO, MDI_FCN_0, FIELD_STATE_FIFO_STATUS_1)
BCHP_REGISTER(0x2068ac88, 32,  RO, MDI_FCN_0, OBTS_STATUS)
BCHP_REGISTER(0x2068ac8c, 32,  RO, MDI_FCN_0, IT_STATISTICS_STORE_STATUS)
BCHP_REGISTER(0x2068ac90, 32,  RO, MDI_FCN_0, DEBUG_IT_PHASE_0_CORRELATION_COUNTER)
BCHP_REGISTER(0x2068ac94, 32,  RO, MDI_FCN_0, DEBUG_IT_PHASE_1_CORRELATION_COUNTER)
BCHP_REGISTER(0x2068ac98, 32,  RO, MDI_FCN_0, DEBUG_IT_PHASE_2_CORRELATION_COUNTER)
BCHP_REGISTER(0x2068ac9c, 32,  RO, MDI_FCN_0, DEBUG_IT_PHASE_3_CORRELATION_COUNTER)
BCHP_REGISTER(0x2068aca0, 32,  RO, MDI_FCN_0, DEBUG_IT_PHASE_4_CORRELATION_COUNTER)
BCHP_REGISTER(0x2068aca4, 32,  RO, MDI_FCN_0, IT_HISTOGRAM_BIN_0)
BCHP_REGISTER(0x2068aca8, 32,  RO, MDI_FCN_0, IT_HISTOGRAM_BIN_1)
BCHP_REGISTER(0x2068acac, 32,  RO, MDI_FCN_0, IT_HISTOGRAM_BIN_2)
BCHP_REGISTER(0x2068acb0, 32,  RO, MDI_FCN_0, IT_HISTOGRAM_BIN_3)
BCHP_REGISTER(0x2068acb4, 32,  RO, MDI_FCN_0, IT_HISTOGRAM_BIN_4)
BCHP_REGISTER(0x2068acb8, 32,  RO, MDI_FCN_0, IT_FRAME_UNEXPECTED_MOTION_0)
BCHP_REGISTER(0x2068acbc, 32,  RO, MDI_FCN_0, IT_FRAME_UNEXPECTED_MOTION_1)
BCHP_REGISTER(0x2068acc0, 32,  RO, MDI_FCN_0, IT_FRAME_UNEXPECTED_MOTION_2)
BCHP_REGISTER(0x2068acc4, 32,  RO, MDI_FCN_0, IT_FRAME_UNEXPECTED_MOTION_3)
BCHP_REGISTER(0x2068acc8, 32,  RO, MDI_FCN_0, IT_FRAME_UNEXPECTED_MOTION_4)
BCHP_REGISTER(0x2068accc, 32,  RO, MDI_FCN_0, DEBUG_IT_REV22_PHASE_0_COUNTER)
BCHP_REGISTER(0x2068acd0, 32,  RO, MDI_FCN_0, DEBUG_IT_REV22_PHASE_1_COUNTER)
BCHP_REGISTER(0x2068acd4, 32,  RO, MDI_FCN_0, IT_PCC_LUMA_BWD)
BCHP_REGISTER(0x2068acd8, 32,  RO, MDI_FCN_0, IT_LG_PCC_COUNT)
BCHP_REGISTER(0x2068acdc, 32,  RO, MDI_FCN_0, IT_FEATHER_COUNT)
BCHP_REGISTER(0x2068ace0, 32,  RO, MDI_FCN_0, IT_TICKER_COUNT)
BCHP_REGISTER(0x2068ace4, 32,  RO, MDI_FCN_0, IT_STAIR_COUNT)
BCHP_REGISTER(0x2068adfc, 32, CFG, MDI_FCN_0, SCRATCH_0)
BCHP_REGISTER(0x206e0000, 32,  RO, IT_0, IT_REV_ID)
BCHP_REGISTER(0x206e0004, 32,  RW, IT_0, TG_CONFIG)
BCHP_REGISTER(0x206e0008, 32,  RW, IT_0, ADDR_0_3)
BCHP_REGISTER(0x206e000c, 32,  RW, IT_0, ADDR_4_6)
BCHP_REGISTER(0x206e0010, 32,  RW, IT_0, STACK_reg_0_1)
BCHP_REGISTER(0x206e0014, 32,  RW, IT_0, STACK_reg_2_3)
BCHP_REGISTER(0x206e0018, 32,  RW, IT_0, STACK_reg_4_5)
BCHP_REGISTER(0x206e001c, 32,  RW, IT_0, STACK_reg_6_7)
BCHP_REGISTER(0x206e0020, 32,  RW, IT_0, EVENT_SELECTION)
BCHP_REGISTER(0x206e0024, 32,  RW, IT_0, PCL_0)
BCHP_REGISTER(0x206e0028, 32,  RW, IT_0, PCL_1)
BCHP_REGISTER(0x206e002c, 32,  RW, IT_0, PCL_2)
BCHP_REGISTER(0x206e0030, 32,  RW, IT_0, PCL_3)
BCHP_REGISTER(0x206e0034, 32,  RW, IT_0, PCL_4)
BCHP_REGISTER(0x206e0038, 32,  RW, IT_0, PCL_5)
BCHP_REGISTER(0x206e003c, 32,  RW, IT_0, PCL_6)
BCHP_REGISTER(0x206e0040, 32,  RW, IT_0, PCL_7)
BCHP_REGISTER(0x206e0044, 32,  RW, IT_0, PCL_8)
BCHP_REGISTER(0x206e0048, 32,  RW, IT_0, STACK_reg_8_9)
BCHP_REGISTER(0x206e004c, 32,  RW, IT_0, BVB_SIZE)
BCHP_REGISTER(0x206e0050, 32,  RO, IT_0, BVB_RSTATUS)
BCHP_REGISTER(0x206e0054, 32,  WO, IT_0, BVB_CSTATUS)
BCHP_REGISTER(0x206e0058, 32,  RW, IT_0, VEC_TRIGGER_0)
BCHP_REGISTER(0x206e005c, 32,  RW, IT_0, VEC_TRIGGER_1)
BCHP_REGISTER(0x206e0060, 32,  RO, IT_0, VEC_CTRL_STAT)
BCHP_REGISTER(0x206e0064, 32,  RO, IT_0, IT_LCNTR)
BCHP_REGISTER(0x206e0068, 32,  RW, IT_0, ALT_RM_CNTRL)
BCHP_REGISTER(0x206e006c, 32,  RW, IT_0, CABLE_DETECT_SEL)
BCHP_REGISTER(0x206e0070, 32,  WO, IT_0, ACCESS_CNTRL)
BCHP_REGISTER(0x206e0074, 32,  RO, IT_0, ACCESS_STATUS)
BCHP_REGISTER(0x206e01bc, 32,  RW, IT_0, MSYNC_CTRL)
BCHP_REGISTER(0x206e01c0, 32,  RW, IT_0, SSYNC_CTRL)
BCHP_REGISTER(0x206e01c4, 32,  RW, IT_0, MS_TIMEOUT)
BCHP_REGISTER(0x206e01c8, 32,  RW, IT_0, MSSYNC_START)
BCHP_REGISTER(0x206e01cc, 32,  RW, IT_0, MSSYNC_PCL)
BCHP_REGISTER(0x206e01d0, 32,  RW, IT_0, MSYNC_PHASE)
BCHP_REGISTER(0x206e01d4, 32,  RW, IT_0, EOF0_LINE)
BCHP_REGISTER(0x206e01d8, 32,  RO, IT_0, MSSYNC_STATUS)
BCHP_REGISTER(0x206e02b4, 32,  RW, IT_0, AS_CONTROL)
BCHP_REGISTER(0x206e02b8, 32,  RW, IT_0, AS_PIXEL_C0_C1)
BCHP_REGISTER(0x206e02bc, 32,  RW, IT_0, AS_PIXEL_C2)
BCHP_REGISTER(0x206e02c0, 32,  RW, IT_0, AS_LINE_NUMBER)
BCHP_REGISTER(0x206e1000, 32,  RO, IT_1, IT_REV_ID)
BCHP_REGISTER(0x206e1004, 32,  RW, IT_1, TG_CONFIG)
BCHP_REGISTER(0x206e1008, 32,  RW, IT_1, ADDR_0_3)
BCHP_REGISTER(0x206e100c, 32,  RW, IT_1, ADDR_4_6)
BCHP_REGISTER(0x206e1010, 32,  RW, IT_1, STACK_reg_0_1)
BCHP_REGISTER(0x206e1014, 32,  RW, IT_1, STACK_reg_2_3)
BCHP_REGISTER(0x206e1018, 32,  RW, IT_1, STACK_reg_4_5)
BCHP_REGISTER(0x206e101c, 32,  RW, IT_1, STACK_reg_6_7)
BCHP_REGISTER(0x206e1020, 32,  RW, IT_1, EVENT_SELECTION)
BCHP_REGISTER(0x206e1024, 32,  RW, IT_1, PCL_0)
BCHP_REGISTER(0x206e1028, 32,  RW, IT_1, PCL_1)
BCHP_REGISTER(0x206e102c, 32,  RW, IT_1, PCL_2)
BCHP_REGISTER(0x206e1030, 32,  RW, IT_1, PCL_3)
BCHP_REGISTER(0x206e1034, 32,  RW, IT_1, PCL_4)
BCHP_REGISTER(0x206e1038, 32,  RW, IT_1, PCL_5)
BCHP_REGISTER(0x206e103c, 32,  RW, IT_1, PCL_6)
BCHP_REGISTER(0x206e1040, 32,  RW, IT_1, PCL_7)
BCHP_REGISTER(0x206e1044, 32,  RW, IT_1, PCL_8)
BCHP_REGISTER(0x206e1048, 32,  RW, IT_1, STACK_reg_8_9)
BCHP_REGISTER(0x206e104c, 32,  RW, IT_1, BVB_SIZE)
BCHP_REGISTER(0x206e1050, 32,  RO, IT_1, BVB_RSTATUS)
BCHP_REGISTER(0x206e1054, 32,  WO, IT_1, BVB_CSTATUS)
BCHP_REGISTER(0x206e1058, 32,  RW, IT_1, VEC_TRIGGER_0)
BCHP_REGISTER(0x206e105c, 32,  RW, IT_1, VEC_TRIGGER_1)
BCHP_REGISTER(0x206e1060, 32,  RO, IT_1, VEC_CTRL_STAT)
BCHP_REGISTER(0x206e1064, 32,  RO, IT_1, IT_LCNTR)
BCHP_REGISTER(0x206e1068, 32,  RW, IT_1, ALT_RM_CNTRL)
BCHP_REGISTER(0x206e106c, 32,  RW, IT_1, CABLE_DETECT_SEL)
BCHP_REGISTER(0x206e1070, 32,  WO, IT_1, ACCESS_CNTRL)
BCHP_REGISTER(0x206e1074, 32,  RO, IT_1, ACCESS_STATUS)
BCHP_REGISTER(0x206e11bc, 32,  RW, IT_1, MSYNC_CTRL)
BCHP_REGISTER(0x206e11c0, 32,  RW, IT_1, SSYNC_CTRL)
BCHP_REGISTER(0x206e11c4, 32,  RW, IT_1, MS_TIMEOUT)
BCHP_REGISTER(0x206e11c8, 32,  RW, IT_1, MSSYNC_START)
BCHP_REGISTER(0x206e11cc, 32,  RW, IT_1, MSSYNC_PCL)
BCHP_REGISTER(0x206e11d0, 32,  RW, IT_1, MSYNC_PHASE)
BCHP_REGISTER(0x206e11d4, 32,  RW, IT_1, EOF0_LINE)
BCHP_REGISTER(0x206e11d8, 32,  RO, IT_1, MSSYNC_STATUS)
BCHP_REGISTER(0x206e12b4, 32,  RW, IT_1, AS_CONTROL)
BCHP_REGISTER(0x206e12b8, 32,  RW, IT_1, AS_PIXEL_C0_C1)
BCHP_REGISTER(0x206e12bc, 32,  RW, IT_1, AS_PIXEL_C2)
BCHP_REGISTER(0x206e12c0, 32,  RW, IT_1, AS_LINE_NUMBER)
BCHP_REGISTER(0x206e2000, 32,  RO, VF_0, VF_REV_ID)
BCHP_REGISTER(0x206e2008, 32,  RW, VF_0, FORMAT_ADDER)
BCHP_REGISTER(0x206e200c, 32,  RW, VF_0, MISC)
BCHP_REGISTER(0x206e2010, 32,  RW, VF_0, NEG_SYNC_VALUES)
BCHP_REGISTER(0x206e2014, 32,  RW, VF_0, POS_SYNC_VALUES)
BCHP_REGISTER(0x206e2018, 32,  RW, VF_0, SYNC_TRANS_0)
BCHP_REGISTER(0x206e201c, 32,  RW, VF_0, SYNC_TRANS_1)
BCHP_REGISTER(0x206e2020, 32,  RW, VF_0, CH0_TAP1)
BCHP_REGISTER(0x206e2024, 32,  RW, VF_0, CH0_TAP2)
BCHP_REGISTER(0x206e2028, 32,  RW, VF_0, CH0_TAP3)
BCHP_REGISTER(0x206e202c, 32,  RW, VF_0, CH0_TAP4)
BCHP_REGISTER(0x206e2030, 32,  RW, VF_0, CH0_TAP5)
BCHP_REGISTER(0x206e2034, 32,  RW, VF_0, CH0_TAP6)
BCHP_REGISTER(0x206e2038, 32,  RW, VF_0, CH0_TAP7)
BCHP_REGISTER(0x206e203c, 32,  RW, VF_0, CH0_TAP8)
BCHP_REGISTER(0x206e2040, 32,  RW, VF_0, CH0_TAP9)
BCHP_REGISTER(0x206e2044, 32,  RW, VF_0, CH0_TAP10)
BCHP_REGISTER(0x206e2048, 32,  RW, VF_0, CH1_TAP1)
BCHP_REGISTER(0x206e204c, 32,  RW, VF_0, CH1_TAP2)
BCHP_REGISTER(0x206e2050, 32,  RW, VF_0, CH1_TAP3)
BCHP_REGISTER(0x206e2054, 32,  RW, VF_0, CH1_TAP4)
BCHP_REGISTER(0x206e2058, 32,  RW, VF_0, CH1_TAP5)
BCHP_REGISTER(0x206e205c, 32,  RW, VF_0, CH1_TAP6)
BCHP_REGISTER(0x206e2060, 32,  RW, VF_0, CH1_TAP7)
BCHP_REGISTER(0x206e2064, 32,  RW, VF_0, CH1_TAP8)
BCHP_REGISTER(0x206e2068, 32,  RW, VF_0, CH1_TAP9)
BCHP_REGISTER(0x206e206c, 32,  RW, VF_0, CH1_TAP10)
BCHP_REGISTER(0x206e2070, 32,  RW, VF_0, CH2_TAP1)
BCHP_REGISTER(0x206e2074, 32,  RW, VF_0, CH2_TAP2)
BCHP_REGISTER(0x206e2078, 32,  RW, VF_0, CH2_TAP3)
BCHP_REGISTER(0x206e207c, 32,  RW, VF_0, CH2_TAP4)
BCHP_REGISTER(0x206e2080, 32,  RW, VF_0, CH2_TAP5)
BCHP_REGISTER(0x206e2084, 32,  RW, VF_0, CH2_TAP6)
BCHP_REGISTER(0x206e2088, 32,  RW, VF_0, CH2_TAP7)
BCHP_REGISTER(0x206e208c, 32,  RW, VF_0, CH2_TAP8)
BCHP_REGISTER(0x206e2090, 32,  RW, VF_0, CH2_TAP9)
BCHP_REGISTER(0x206e2094, 32,  RW, VF_0, CH2_TAP10)
BCHP_REGISTER(0x206e2098, 32,  RW, VF_0, BVB_STATUS)
BCHP_REGISTER(0x206e209c, 32,  RW, VF_0, SHAPER)
BCHP_REGISTER(0x206e2100, 32,  RW, VF_0, HSYNC_AMP)
BCHP_REGISTER(0x206e2104, 32,  RW, VF_0, VIDEOBUS_SA_CONFIG)
BCHP_REGISTER(0x206e2108, 32,  RO, VF_0, VIDEOBUS_SA_CH0_STATUS)
BCHP_REGISTER(0x206e210c, 32,  RO, VF_0, VIDEOBUS_SA_CH1_STATUS)
BCHP_REGISTER(0x206e2110, 32,  RO, VF_0, VIDEOBUS_SA_CH2_STATUS)
BCHP_REGISTER(0x206e2114, 32,  RW, VF_0, CONTROLBUS_SA_CONFIG)
BCHP_REGISTER(0x206e2118, 32,  RO, VF_0, CONTROLBUS_SA_STATUS)
BCHP_REGISTER(0x206e211c, 32,  RW, VF_0, ENVELOPE_GENERATOR)
BCHP_REGISTER(0x206e2120, 32,  RW, VF_0, NEG_SYNC_AMPLITUDE_EXTN)
BCHP_REGISTER(0x206e2124, 32,  RW, VF_0, POS_SYNC_AMPLITUDE_EXTN)
BCHP_REGISTER(0x206e2128, 32,  RW, VF_0, AV_SHIFT)
BCHP_REGISTER(0x206e212c, 32,  RW, VF_0, DRAIN_PIXELS_SCART)
BCHP_REGISTER(0x206e2130, 32,  RW, VF_0, NEGATIVE_LIMIT)
BCHP_REGISTER(0x206e2134, 32,  RW, VF_0, NEGATIVE_LIMIT_EXTN)
BCHP_REGISTER(0x206e2200, 32,  RO, SECAM_0, SECAM_REV_ID)
BCHP_REGISTER(0x206e2204, 32,  RW, SECAM_0, FM_CONTROL)
BCHP_REGISTER(0x206e2208, 32,  RW, SECAM_0, FM_FMAMP)
BCHP_REGISTER(0x206e220c, 32,  RW, SECAM_0, FM_SHAPER)
BCHP_REGISTER(0x206e2210, 32,  RW, SECAM_0, FM_SC_FREQ0)
BCHP_REGISTER(0x206e2214, 32,  RW, SECAM_0, FM_SC_FREQ1)
BCHP_REGISTER(0x206e2280, 32,  RO, SM_0, SM_REV_ID)
BCHP_REGISTER(0x206e228c, 32,  RW, SM_0, PG_CNTRL)
BCHP_REGISTER(0x206e2290, 32,  RW, SM_0, PG_CONFIG)
BCHP_REGISTER(0x206e2294, 32,  RW, SM_0, SC_FREQ_0)
BCHP_REGISTER(0x206e2298, 32,  RW, SM_0, COMP_CNTRL)
BCHP_REGISTER(0x206e229c, 32,  RO, SM_0, SA_CH2)
BCHP_REGISTER(0x206e22a0, 32,  RO, SM_0, SA_CH1)
BCHP_REGISTER(0x206e22a4, 32,  RO, SM_0, SA_CH0)
BCHP_REGISTER(0x206e22a8, 32,  RW, SM_0, SA_CONFIG)
BCHP_REGISTER(0x206e22ac, 32,  RW, SM_0, COMP_CONFIG)
BCHP_REGISTER(0x206e2300, 32,  RO, SDSRC_0, SRC_REV_ID)
BCHP_REGISTER(0x206e2304, 32,  RW, SDSRC_0, SRC_CONTROL)
BCHP_REGISTER(0x206e2308, 32,  RW, SDSRC_0, SRC_ANA_SCL_0_1)
BCHP_REGISTER(0x206e230c, 32,  RW, SDSRC_0, SRC_ANA_SCL_2_3)
BCHP_REGISTER(0x206e2380, 32,  RO, CSC_0, CSC_REV_ID)
BCHP_REGISTER(0x206e2388, 32,  RW, CSC_0, CSC_MODE)
BCHP_REGISTER(0x206e238c, 32,  RW, CSC_0, CSC_MIN_MAX)
BCHP_REGISTER(0x206e2390, 32,  RW, CSC_0, CSC_COEFF_C01_C00)
BCHP_REGISTER(0x206e2394, 32,  RW, CSC_0, CSC_COEFF_C03_C02)
BCHP_REGISTER(0x206e2398, 32,  RW, CSC_0, CSC_COEFF_C11_C10)
BCHP_REGISTER(0x206e239c, 32,  RW, CSC_0, CSC_COEFF_C13_C12)
BCHP_REGISTER(0x206e23a0, 32,  RW, CSC_0, CSC_COEFF_C21_C20)
BCHP_REGISTER(0x206e23a4, 32,  RW, CSC_0, CSC_COEFF_C23_C22)
BCHP_REGISTER(0x206e23a8, 32,  RW, CSC_0, DITHER_CONTROL)
BCHP_REGISTER(0x206e23ac, 32,  RW, CSC_0, DITHER_LFSR)
BCHP_REGISTER(0x206e23b0, 32,  RW, CSC_0, DITHER_LFSR_INIT)
BCHP_REGISTER(0x206e2400, 32,  RW, RM_0, CONTROL)
BCHP_REGISTER(0x206e2404, 32,  RW, RM_0, RATE_RATIO)
BCHP_REGISTER(0x206e2408, 32,  RW, RM_0, SAMPLE_INC)
BCHP_REGISTER(0x206e240c, 32,  RW, RM_0, PHASE_INC)
BCHP_REGISTER(0x206e2410, 32,  WO, RM_0, INTEGRATOR_HI)
BCHP_REGISTER(0x206e2414, 32,  WO, RM_0, INTEGRATOR_LO)
BCHP_REGISTER(0x206e2418, 32,  RW, RM_0, OFFSET)
BCHP_REGISTER(0x206e241c, 32,  RW, RM_0, FORMAT)
BCHP_REGISTER(0x206e2420, 32,  RW, RM_0, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x206e2424, 32,  RW, RM_0, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x206e2428, 32,  RW, RM_0, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x206e242c, 32,  RO, RM_0, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x206e2430, 32,  RO, RM_0, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x206e2434, 32,  RO, RM_0, STATUS)
BCHP_REGISTER(0x206e2438, 32,  RW, RM_0, STATUS_CLEAR)
BCHP_REGISTER(0x206e2440, 32,  RW, RM_1, CONTROL)
BCHP_REGISTER(0x206e2444, 32,  RW, RM_1, RATE_RATIO)
BCHP_REGISTER(0x206e2448, 32,  RW, RM_1, SAMPLE_INC)
BCHP_REGISTER(0x206e244c, 32,  RW, RM_1, PHASE_INC)
BCHP_REGISTER(0x206e2450, 32,  WO, RM_1, INTEGRATOR_HI)
BCHP_REGISTER(0x206e2454, 32,  WO, RM_1, INTEGRATOR_LO)
BCHP_REGISTER(0x206e2458, 32,  RW, RM_1, OFFSET)
BCHP_REGISTER(0x206e245c, 32,  RW, RM_1, FORMAT)
BCHP_REGISTER(0x206e2460, 32,  RW, RM_1, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x206e2464, 32,  RW, RM_1, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x206e2468, 32,  RW, RM_1, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x206e246c, 32,  RO, RM_1, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x206e2470, 32,  RO, RM_1, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x206e2474, 32,  RO, RM_1, STATUS)
BCHP_REGISTER(0x206e2478, 32,  RW, RM_1, STATUS_CLEAR)
BCHP_REGISTER(0x206e2500, 32,  RO, ANA_DEBUG_0, DEBUG_REV_ID)
BCHP_REGISTER(0x206e2504, 32,  RW, ANA_DEBUG_0, DEBUG_CONFIG)
BCHP_REGISTER(0x206e2508, 32,  RO, ANA_DEBUG_0, DEBUG_ERROR)
BCHP_REGISTER(0x206e250c, 32,  RW, ANA_DEBUG_0, DEBUG_ERROR_MASK)
BCHP_REGISTER(0x206e2510, 32,  WO, ANA_DEBUG_0, DEBUG_ERROR_CLEAR)
BCHP_REGISTER(0x206e2514, 32,  RW, ANA_DEBUG_0, DEBUG_PIXEL_POINT_START)
BCHP_REGISTER(0x206e2518, 32,  RW, ANA_DEBUG_0, DEBUG_PIXEL_POINT_STOP)
BCHP_REGISTER(0x206e251c, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_1)
BCHP_REGISTER(0x206e2520, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_2)
BCHP_REGISTER(0x206e2524, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_3)
BCHP_REGISTER(0x206e2528, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_4)
BCHP_REGISTER(0x206e252c, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_5)
BCHP_REGISTER(0x206e2530, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_6)
BCHP_REGISTER(0x206e2534, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_7)
BCHP_REGISTER(0x206e2538, 32,  RO, ANA_DEBUG_0, DEBUG_STATUS_STATISTICS_8)
BCHP_REGISTER(0x206e253c, 32,  RW, ANA_DEBUG_0, DEBUG_H_SIZE_REF)
BCHP_REGISTER(0x206e2540, 32,  RW, ANA_DEBUG_0, DEBUG_V_TOP_SIZE_REF)
BCHP_REGISTER(0x206e2544, 32,  RW, ANA_DEBUG_0, DEBUG_V_BOT_SIZE_REF)
BCHP_REGISTER(0x206e2600, 32,  RW, GRPD_0, GRP00)
BCHP_REGISTER(0x206e2604, 32,  RW, GRPD_0, GRP01)
BCHP_REGISTER(0x206e2608, 32,  RW, GRPD_0, GRP02)
BCHP_REGISTER(0x206e260c, 32,  RW, GRPD_0, GRP03)
BCHP_REGISTER(0x206e2610, 32,  RW, GRPD_0, GRP04)
BCHP_REGISTER(0x206e2614, 32,  RW, GRPD_0, GRP05)
BCHP_REGISTER(0x206e2618, 32,  RW, GRPD_0, GRP06)
BCHP_REGISTER(0x206e261c, 32,  RW, GRPD_0, GRP07)
BCHP_REGISTER(0x206e2620, 32,  RW, GRPD_0, GRP08)
BCHP_REGISTER(0x206e2624, 32,  RW, GRPD_0, GRP09)
BCHP_REGISTER(0x206e2628, 32,  RW, GRPD_0, GRP10)
BCHP_REGISTER(0x206e262c, 32,  RW, GRPD_0, GRP11)
BCHP_REGISTER(0x206e2630, 32,  RW, GRPD_0, GRP12)
BCHP_REGISTER(0x206e2634, 32,  RW, GRPD_0, GRP13)
BCHP_REGISTER(0x206e2638, 32,  RW, GRPD_0, GRP14)
BCHP_REGISTER(0x206e263c, 32,  RW, GRPD_0, GRP15)
BCHP_REGISTER(0x206e2640, 32,  RW, GRPD_0, GRP16)
BCHP_REGISTER(0x206e2644, 32,  RW, GRPD_0, GRP17)
BCHP_REGISTER(0x206e2648, 32,  RW, GRPD_0, GRP18)
BCHP_REGISTER(0x206e264c, 32,  RW, GRPD_0, GRP19)
BCHP_REGISTER(0x206e2650, 32,  RW, GRPD_0, TRAP00)
BCHP_REGISTER(0x206e2654, 32,  RW, GRPD_0, TRAP01)
BCHP_REGISTER(0x206e2658, 32,  RW, GRPD_0, TRAP02)
BCHP_REGISTER(0x206e265c, 32,  RW, GRPD_0, TRAP03)
BCHP_REGISTER(0x206e2660, 32,  RW, GRPD_0, TRAP04)
BCHP_REGISTER(0x206e2664, 32,  RW, GRPD_0, TRAP05)
BCHP_REGISTER(0x206e2668, 32,  RW, GRPD_0, TRAP06)
BCHP_REGISTER(0x206e266c, 32,  RW, GRPD_0, TRAP07)
BCHP_REGISTER(0x206e2670, 32,  RW, GRPD_0, TRAP08)
BCHP_REGISTER(0x206e2674, 32,  RW, GRPD_0, TRAP09)
BCHP_REGISTER(0x206e2678, 32,  RW, GRPD_0, TRAP10)
BCHP_REGISTER(0x206e267c, 32,  RW, GRPD_0, TRAP11)
BCHP_REGISTER(0x206e2680, 32,  RW, GRPD_0, TRAP12)
BCHP_REGISTER(0x206e2684, 32,  RW, GRPD_0, TRAP13)
BCHP_REGISTER(0x206e2688, 32,  RW, GRPD_0, TRAP14)
BCHP_REGISTER(0x206e268c, 32,  RW, GRPD_0, TRAP15)
BCHP_REGISTER(0x206e2690, 32,  RW, GRPD_0, TRAP16)
BCHP_REGISTER(0x206e2694, 32,  RW, GRPD_0, TRAP17)
BCHP_REGISTER(0x206e2698, 32,  RW, GRPD_0, TRAP18)
BCHP_REGISTER(0x206e269c, 32,  RW, GRPD_0, TRAP19)
BCHP_REGISTER(0x206e26a0, 32,  RW, GRPD_0, TRAP20)
BCHP_REGISTER(0x206e26a4, 32,  RW, GRPD_0, TRAP21)
BCHP_REGISTER(0x206e26a8, 32,  RW, GRPD_0, TRAP22)
BCHP_REGISTER(0x206e26ac, 32,  RW, GRPD_0, TRAP23)
BCHP_REGISTER(0x206e26b0, 32,  RW, GRPD_0, CLIP0)
BCHP_REGISTER(0x206e26b4, 32,  RW, GRPD_0, CLIP1)
BCHP_REGISTER(0x206e26b8, 32,  RW, GRPD_0, CLIPBYP)
BCHP_REGISTER(0x206e26bc, 32,  RW, GRPD_0, VIDEOSCL)
BCHP_REGISTER(0x206e26c0, 32,  RW, GRPD_0, AMCTL0)
BCHP_REGISTER(0x206e26c4, 32,  RW, GRPD_0, AMCTL1)
BCHP_REGISTER(0x206e26c8, 32,  RW, GRPD_0, DDFSFCW0)
BCHP_REGISTER(0x206e26cc, 32,  RW, GRPD_0, DDFSFCW1)
BCHP_REGISTER(0x206e26d0, 32,  RW, GRPD_0, DDFSSCL01)
BCHP_REGISTER(0x206e26d4, 32,  RW, GRPD_0, VIDEOBYP)
BCHP_REGISTER(0x206e26d8, 32,  RW, GRPD_0, VIDEOTONE)
BCHP_REGISTER(0x206e26dc, 32,  RW, GRPD_0, MODBYP)
BCHP_REGISTER(0x206e26e0, 32,  RW, GRPD_0, OUTSCL)
BCHP_REGISTER(0x206e26e4, 32,  RO, GRPD_0, GRPD_REVISION_ID)
BCHP_REGISTER(0x206e26e8, 32,  RW, GRPD_0, RESERVED0)
BCHP_REGISTER(0x206e26ec, 32,  RW, GRPD_0, RESERVED1)
BCHP_REGISTER(0x206e4000, 32,  RO, DVI_CFC_0, CFC_REV_ID)
BCHP_REGISTER(0x206e4004, 32, CFG, DVI_CFC_0, VEC_HDR_NL_CSC_CTRL)
BCHP_REGISTER(0x206e4008, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C00)
BCHP_REGISTER(0x206e400c, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C01)
BCHP_REGISTER(0x206e4010, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C02)
BCHP_REGISTER(0x206e4014, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C03)
BCHP_REGISTER(0x206e4018, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C10)
BCHP_REGISTER(0x206e401c, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C11)
BCHP_REGISTER(0x206e4020, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C12)
BCHP_REGISTER(0x206e4024, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C13)
BCHP_REGISTER(0x206e4028, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C20)
BCHP_REGISTER(0x206e402c, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C21)
BCHP_REGISTER(0x206e4030, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C22)
BCHP_REGISTER(0x206e4034, 32, CFG, DVI_CFC_0, CSC_R0_MA_COEFF_C23)
BCHP_REGISTER(0x206e4038, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C00)
BCHP_REGISTER(0x206e403c, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C01)
BCHP_REGISTER(0x206e4040, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C02)
BCHP_REGISTER(0x206e4044, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C03)
BCHP_REGISTER(0x206e4048, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C10)
BCHP_REGISTER(0x206e404c, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C11)
BCHP_REGISTER(0x206e4050, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C12)
BCHP_REGISTER(0x206e4054, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C13)
BCHP_REGISTER(0x206e4058, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C20)
BCHP_REGISTER(0x206e405c, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C21)
BCHP_REGISTER(0x206e4060, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C22)
BCHP_REGISTER(0x206e4064, 32, CFG, DVI_CFC_0, CSC_R0_MB_COEFF_C23)
BCHP_REGISTER(0x206e4068, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C00)
BCHP_REGISTER(0x206e406c, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C01)
BCHP_REGISTER(0x206e4070, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C02)
BCHP_REGISTER(0x206e4074, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C03)
BCHP_REGISTER(0x206e4078, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C10)
BCHP_REGISTER(0x206e407c, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C11)
BCHP_REGISTER(0x206e4080, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C12)
BCHP_REGISTER(0x206e4084, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C13)
BCHP_REGISTER(0x206e4088, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C20)
BCHP_REGISTER(0x206e408c, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C21)
BCHP_REGISTER(0x206e4090, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C22)
BCHP_REGISTER(0x206e4094, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C23)
BCHP_REGISTER(0x206e4098, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C30)
BCHP_REGISTER(0x206e409c, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C31)
BCHP_REGISTER(0x206e40a0, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C32)
BCHP_REGISTER(0x206e40a4, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C33)
BCHP_REGISTER(0x206e40a8, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C40)
BCHP_REGISTER(0x206e40ac, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C41)
BCHP_REGISTER(0x206e40b0, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C42)
BCHP_REGISTER(0x206e40b4, 32, CFG, DVI_CFC_0, CSC_R0_MC_COEFF_C43)
BCHP_REGISTER(0x206e40b8, 32, CFG, DVI_CFC_0, VEC_MA_COEFF_LSHF)
BCHP_REGISTER(0x206e40bc, 32, CFG, DVI_CFC_0, VEC_MB_COEFF_LSHF)
BCHP_REGISTER(0x206e40c0, 32, CFG, DVI_CFC_0, VEC_MC_COEFF_LSHF)
BCHP_REGISTER(0x206e40c4, 32, CFG, DVI_CFC_0, CSC_MIN_MAX_Y)
BCHP_REGISTER(0x206e40c8, 32, CFG, DVI_CFC_0, CSC_MIN_MAX_CB)
BCHP_REGISTER(0x206e40cc, 32, CFG, DVI_CFC_0, CSC_MIN_MAX_CR)
BCHP_REGISTER(0x206e40d0, 32, CFG, DVI_CFC_0, CSC_DITHER_CTRL)
BCHP_REGISTER(0x206e40d4, 32, CFG, DVI_CFC_0, CSC_DITHER_LFSR_INIT)
BCHP_REGISTER(0x206e40d8, 32, CFG, DVI_CFC_0, CSC_DITHER_LFSR_CTRL)
BCHP_REGISTER(0x206e40dc, 32, CFG, DVI_CFC_0, CFC_MUX_SEL_YCbCr)
BCHP_REGISTER(0x206e40e0, 32,  RW, DVI_CFC_0, CSC_ALPHA_EN)
BCHP_REGISTER(0x206e40e8, 64, CFG, DVI_CFC_0, LUT_DESC_ADDR)
BCHP_REGISTER(0x206e40f0, 32,  RW, DVI_CFC_0, LUT_DESC_CFG)
BCHP_REGISTER(0x206e40f4, 32,  RO, DVI_CFC_0, LUT_DESC_DONE_STATUS)
BCHP_REGISTER(0x206e40f8, 32, CFG, DVI_CFC_0, NL2L_LUT_CTRL)
BCHP_REGISTER(0x206e40fc, 32, CFG, DVI_CFC_0, L2NL_LUT_CTRL)
BCHP_REGISTER(0x206e4138, 32,  RO, DVI_CFC_0, VEC_HDR_LUT_STATUS)
BCHP_REGISTER(0x206e413c, 32,  WO, DVI_CFC_0, VEC_HDR_LUT_STATUS_CLEAR)
BCHP_REGISTER(0x206e4140, 32, CFG, DVI_CFC_0, LRANGE_MAX)
BCHP_REGISTER(0x206e4144, 32, CFG, DVI_CFC_0, LRANGE_MIN)
BCHP_REGISTER(0x206e419c, 32,  RO, DVI_CFC_0, VEC_HDR_CONFIG)
BCHP_REGISTER(0x206e6000, 32,  RO, DVI_DTG_0, DTG_REV_ID)
BCHP_REGISTER(0x206e6004, 32,  RW, DVI_DTG_0, DTG_DATA_CTRL)
BCHP_REGISTER(0x206e6008, 32,  RW, DVI_DTG_0, DTG_CONFIG)
BCHP_REGISTER(0x206e6010, 32,  RW, DVI_DTG_0, CCIR_PCL)
BCHP_REGISTER(0x206e6014, 32,  RW, DVI_DTG_0, DVI_PCL)
BCHP_REGISTER(0x206e6018, 32,  RW, DVI_DTG_0, CNTL_PCL)
BCHP_REGISTER(0x206e601c, 32,  RW, DVI_DTG_0, RAM_ADDR)
BCHP_REGISTER(0x206e6020, 32,  RW, DVI_DTG_0, DTG_BVB_SIZE)
BCHP_REGISTER(0x206e6024, 32,  RO, DVI_DTG_0, DTG_BVB_RSTATUS)
BCHP_REGISTER(0x206e6028, 32,  WO, DVI_DTG_0, DTG_BVB_CSTATUS)
BCHP_REGISTER(0x206e602c, 32,  RW, DVI_DTG_0, DTG_TRIGGER_0)
BCHP_REGISTER(0x206e6030, 32,  RW, DVI_DTG_0, DTG_TRIGGER_1)
BCHP_REGISTER(0x206e6034, 32,  RW, DVI_DTG_0, DTG_TRIGGER_2)
BCHP_REGISTER(0x206e6038, 32,  RW, DVI_DTG_0, DTG_TRIGGER_3)
BCHP_REGISTER(0x206e603c, 32,  RO, DVI_DTG_0, DTG_CTRL_STAT)
BCHP_REGISTER(0x206e6040, 32,  RW, DVI_DTG_0, DTG_MSYNC_CTRL)
BCHP_REGISTER(0x206e6044, 32,  RW, DVI_DTG_0, DTG_SSYNC_CTRL)
BCHP_REGISTER(0x206e6048, 32,  RW, DVI_DTG_0, DTG_MS_TIMEOUT)
BCHP_REGISTER(0x206e604c, 32,  RW, DVI_DTG_0, DTG_MSSYNC_START)
BCHP_REGISTER(0x206e6050, 32,  RW, DVI_DTG_0, DTG_MSSYNC_PCL)
BCHP_REGISTER(0x206e6054, 32,  RW, DVI_DTG_0, DTG_MSYNC_PHASE)
BCHP_REGISTER(0x206e6058, 32,  RW, DVI_DTG_0, DTG_EOF0_LINE)
BCHP_REGISTER(0x206e605c, 32,  RO, DVI_DTG_0, DTG_MSSYNC_STATUS)
BCHP_REGISTER(0x206e60f0, 32,  RW, DVI_DTG_0, DTG_AS_CONTROL)
BCHP_REGISTER(0x206e60f4, 32,  RW, DVI_DTG_0, DTG_AS_PIXEL_C0_C1)
BCHP_REGISTER(0x206e60f8, 32,  RW, DVI_DTG_0, DTG_AS_PIXEL_C2)
BCHP_REGISTER(0x206e60fc, 32,  RW, DVI_DTG_0, DTG_AS_LINE_NUMBER)
BCHP_REGISTER(0x206e6150, 32,  RW, DVI_DTG_0, PARAM_PROG_DONE)
BCHP_REGISTER(0x206e6154, 32,  RW, DVI_DTG_0, MC_FRM_BOUNDARY)
BCHP_REGISTER(0x206e6170, 32,  RO, DVI_DTG_0, DTG_LCNTR)
BCHP_REGISTER(0x206e6174, 32,  RW, DVI_DTG_0, DTG_L_CTRL)
BCHP_REGISTER(0x206e6178, 32,  RW, DVI_DTG_0, DTG_R_CTRL)
BCHP_REGISTER(0x206e617c, 32,  RO, DVI_DTG_0, DTG_HW_CONFIGURATION)
BCHP_REGISTER(0x206e6180, 32,  RW, DVI_DTG_0, DTRAM_CONFIG)
BCHP_REGISTER(0x206e7000, 32,  RW, DVI_DTG_RM_0, CONTROL)
BCHP_REGISTER(0x206e7004, 32,  RW, DVI_DTG_RM_0, RATE_RATIO)
BCHP_REGISTER(0x206e7008, 32,  RW, DVI_DTG_RM_0, SAMPLE_INC)
BCHP_REGISTER(0x206e700c, 32,  RW, DVI_DTG_RM_0, PHASE_INC)
BCHP_REGISTER(0x206e7010, 32,  WO, DVI_DTG_RM_0, INTEGRATOR_HI)
BCHP_REGISTER(0x206e7014, 32,  WO, DVI_DTG_RM_0, INTEGRATOR_LO)
BCHP_REGISTER(0x206e7018, 32,  RW, DVI_DTG_RM_0, OFFSET)
BCHP_REGISTER(0x206e701c, 32,  RW, DVI_DTG_RM_0, FORMAT)
BCHP_REGISTER(0x206e7020, 32,  RW, DVI_DTG_RM_0, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x206e7024, 32,  RW, DVI_DTG_RM_0, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x206e7028, 32,  RW, DVI_DTG_RM_0, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x206e702c, 32,  RO, DVI_DTG_RM_0, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x206e7030, 32,  RO, DVI_DTG_RM_0, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x206e7034, 32,  RO, DVI_DTG_RM_0, STATUS)
BCHP_REGISTER(0x206e7038, 32,  RW, DVI_DTG_RM_0, STATUS_CLEAR)
BCHP_REGISTER(0x206e7100, 32,  RW, DVI_FC_0, FORMAT_CONV_CONTROL)
BCHP_REGISTER(0x206e7104, 32,  RO, DVI_FC_0, FC_REV_ID)
BCHP_REGISTER(0x206e7200, 32,  RO, DVI_DVF_0, DVF_REV_ID)
BCHP_REGISTER(0x206e7204, 32,  RW, DVI_DVF_0, DVF_BLANK_CONTROL)
BCHP_REGISTER(0x206e7208, 32,  RW, DVI_DVF_0, DVF_FLAG_CONTROL)
BCHP_REGISTER(0x206e720c, 32,  RW, DVI_DVF_0, DVF_CONFIG)
BCHP_REGISTER(0x206e7210, 32,  RW, DVI_DVF_0, DVF_VALUES)
BCHP_REGISTER(0x206e7214, 32,  RW, DVI_DVF_0, DVF_BVB_STATUS)
BCHP_REGISTER(0x206e7218, 32,  RW, DVI_DVF_0, DVF_VBI_BLANK)
BCHP_REGISTER(0x206e7300, 32,  RO, DVI_DEBUG_0, DEBUG_REV_ID)
BCHP_REGISTER(0x206e7304, 32,  RW, DVI_DEBUG_0, DEBUG_CONFIG)
BCHP_REGISTER(0x206e7308, 32,  RO, DVI_DEBUG_0, DEBUG_ERROR)
BCHP_REGISTER(0x206e730c, 32,  RW, DVI_DEBUG_0, DEBUG_ERROR_MASK)
BCHP_REGISTER(0x206e7310, 32,  WO, DVI_DEBUG_0, DEBUG_ERROR_CLEAR)
BCHP_REGISTER(0x206e7314, 32,  RW, DVI_DEBUG_0, DEBUG_PIXEL_POINT_START)
BCHP_REGISTER(0x206e7318, 32,  RW, DVI_DEBUG_0, DEBUG_PIXEL_POINT_STOP)
BCHP_REGISTER(0x206e731c, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_1)
BCHP_REGISTER(0x206e7320, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_2)
BCHP_REGISTER(0x206e7324, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_3)
BCHP_REGISTER(0x206e7328, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_4)
BCHP_REGISTER(0x206e732c, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_5)
BCHP_REGISTER(0x206e7330, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_6)
BCHP_REGISTER(0x206e7334, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_7)
BCHP_REGISTER(0x206e7338, 32,  RO, DVI_DEBUG_0, DEBUG_STATUS_STATISTICS_8)
BCHP_REGISTER(0x206e733c, 32,  RW, DVI_DEBUG_0, DEBUG_H_SIZE_REF)
BCHP_REGISTER(0x206e7340, 32,  RW, DVI_DEBUG_0, DEBUG_V_TOP_SIZE_REF)
BCHP_REGISTER(0x206e7344, 32,  RW, DVI_DEBUG_0, DEBUG_V_BOT_SIZE_REF)
BCHP_REGISTER(0x206e7400, 32,  RW, DVI_MISC_0, CSC_BYPASS_OVERRIDE_CONTROL)
BCHP_REGISTER(0x206e8000, 32,  RO, MISC, MISC_REVISION_ID)
BCHP_REGISTER(0x206e8004, 32,  RW, MISC, DAC_0_CFG)
BCHP_REGISTER(0x206e8008, 32,  RW, MISC, SYNC_0_CFG)
BCHP_REGISTER(0x206e800c, 32,  RW, MISC, IT_0_MASTER_SEL)
BCHP_REGISTER(0x206e8010, 32,  RW, MISC, IT_1_MASTER_SEL)
BCHP_REGISTER(0x206e8014, 32,  RW, MISC, DVI_DTG_0_MASTER_SEL)
BCHP_REGISTER(0x206e8018, 32,  RW, MISC, DVI_0_SA_CONFIG)
BCHP_REGISTER(0x206e801c, 32,  RO, MISC, DVI_0_SA_CH0_STATUS)
BCHP_REGISTER(0x206e8020, 32,  RO, MISC, DVI_0_SA_CH1_STATUS)
BCHP_REGISTER(0x206e8024, 32,  RO, MISC, DVI_0_SA_CH2_STATUS)
BCHP_REGISTER(0x206e8028, 32,  RW, MISC, ADC_CTRL_0)
BCHP_REGISTER(0x206e802c, 32,  RW, MISC, DAC_INST_BIAS_CTRL_0)
BCHP_REGISTER(0x206e8030, 32,  RW, MISC, DAC_0_CTRL)
BCHP_REGISTER(0x206e8034, 32,  RW, MISC, DAC_0_SCALE_CTRL)
BCHP_REGISTER(0x206e8038, 32,  RW, MISC, DAC_CAL_CTRL_0)
BCHP_REGISTER(0x206e803c, 32,  RO, MISC, DAC_CAL_ADC_DATA_0)
BCHP_REGISTER(0x206e8040, 32,  RO, MISC, DAC_ADC_DATA_0)
BCHP_REGISTER(0x206e8044, 32,  RW, MISC, DAC_DETECT_CTRL_0)
BCHP_REGISTER(0x206e8048, 32,  RW, MISC, DAC_DETECT_EN_0)
BCHP_REGISTER(0x206e804c, 32,  RW, MISC, DAC_DETECT_SYNC_CTRL_0)
BCHP_REGISTER(0x206e8050, 32,  RW, MISC, DAC_SQWAVE_LEVEL_0)
BCHP_REGISTER(0x206e8054, 32,  RW, MISC, DAC_DETECT_TIMING_0)
BCHP_REGISTER(0x206e8058, 32,  RW, MISC, DAC_CABLE_STATUS_0)
BCHP_REGISTER(0x206e805c, 32,  RO, MISC, DAC_CABLE_DETECT_DEBUG_0)
BCHP_REGISTER(0x206e8060, 32,  RW, MISC, DAC_CABLE_RECALIBRATE_0)
BCHP_REGISTER(0x206e8064, 32,  RW, MISC, DAC_CRC_CTRL)
BCHP_REGISTER(0x206e8068, 32,  RW, MISC, DAC_CRC_VALUE)
BCHP_REGISTER(0x206e806c, 32,  RW, MISC, VEC_CRC_VALUE)
BCHP_REGISTER(0x206e8070, 32,  RW, MISC, DAC_CRC_STATUS)
BCHP_REGISTER(0x206e8074, 32,  RW, MISC, ADC_RESET_DEASSERT_DELAY)
BCHP_REGISTER(0x206e8400, 32,  RO, VEC_CFG, REVISION_ID)
BCHP_REGISTER(0x206e8404, 32,  RW, VEC_CFG, TP_CTRL)
BCHP_REGISTER(0x206e8408, 32,  RW, VEC_CFG, RAM_TEST_CTRL_CBAR)
BCHP_REGISTER(0x206e840c, 32,  RW, VEC_CFG, RAM_TEST_CTRL_IT_0)
BCHP_REGISTER(0x206e8410, 32,  RW, VEC_CFG, RAM_TEST_CTRL_IT_1)
BCHP_REGISTER(0x206e8414, 32,  RW, VEC_CFG, RAM_TEST_CTRL_DTRAM_0)
BCHP_REGISTER(0x206e8418, 32,  RW, VEC_CFG, CLK_GATING_OVERRIDE)
BCHP_REGISTER(0x206e841c, 32,  RW, VEC_CFG, SCB_DRAM_MAPPING)
BCHP_REGISTER(0x206e8420, 32,  RO, VEC_CFG, TRIGGER_DEBUG_0)
BCHP_REGISTER(0x206e8424, 32,  RO, VEC_CFG, TRIGGER_DEBUG_1)
BCHP_REGISTER(0x206e8428, 32,  RO, VEC_CFG, TRIGGER_DEBUG_TPG)
BCHP_REGISTER(0x206e842c, 32,  RW, VEC_CFG, VF_0_SOURCE)
BCHP_REGISTER(0x206e8430, 32,  RW, VEC_CFG, SECAM_0_SOURCE)
BCHP_REGISTER(0x206e8434, 32,  RW, VEC_CFG, SDSRC_0_SOURCE)
BCHP_REGISTER(0x206e8438, 32,  RW, VEC_CFG, GRPD_0_SOURCE)
BCHP_REGISTER(0x206e843c, 32,  RW, VEC_CFG, IT_0_SOURCE)
BCHP_REGISTER(0x206e8440, 32,  RW, VEC_CFG, IT_1_SOURCE)
BCHP_REGISTER(0x206e8444, 32,  RW, VEC_CFG, STC_FLAG_EN_SOURCE_0)
BCHP_REGISTER(0x206e8448, 32,  RW, VEC_CFG, STC_FLAG_EN_SOURCE_1)
BCHP_REGISTER(0x206e844c, 32,  RW, VEC_CFG, DVI_DTG_0_SOURCE)
BCHP_REGISTER(0x206e8450, 32,  RW, VEC_CFG, DECIM_0_SOURCE)
BCHP_REGISTER(0x206e8454, 32,  RW, VEC_CFG, DVI_DVF_0_SOURCE)
BCHP_REGISTER(0x206e8458, 32,  RW, VEC_CFG, TRIGGER_SEL_0)
BCHP_REGISTER(0x206e845c, 32,  RW, VEC_CFG, TRIGGER_SEL_1)
BCHP_REGISTER(0x206e8460, 32,  RW, VEC_CFG, TRIGGER_SEL_TPG_0)
BCHP_REGISTER(0x206e8464, 32,  RW, VEC_CFG, CFG_EOP_MODE)
BCHP_REGISTER(0x206e8468, 32,  RW, VEC_CFG, SOURCE_ENABLE_CONTROL_0)
BCHP_REGISTER(0x206e846c, 32,  RW, VEC_CFG, SOURCE_ENABLE_0)
BCHP_REGISTER(0x206e8470, 32,  RW, VEC_CFG, SOURCE_ENABLE_CONTROL_1)
BCHP_REGISTER(0x206e8474, 32,  RW, VEC_CFG, SOURCE_ENABLE_1)
BCHP_REGISTER(0x206e8478, 32,  RW, VEC_CFG, BVN_INPUT_MONITOR_SRC)
BCHP_REGISTER(0x206e847c, 32,  RO, VEC_CFG, BVN_INPUT_DATA_MONITOR_CH0)
BCHP_REGISTER(0x206e8480, 32,  RO, VEC_CFG, BVN_INPUT_DATA_MONITOR_CH1)
BCHP_REGISTER(0x206e8484, 32,  RO, VEC_CFG, BVN_INPUT_DATA_MONITOR_CH2)
BCHP_REGISTER(0x206e8488, 32,  RO, VEC_CFG, BVN_INPUT_SYNC_MONITOR)
BCHP_REGISTER(0x206e848c, 32,  RW, VEC_CFG, CLR_BVN_INPUT_SYNC_MONITOR)
BCHP_REGISTER(0x206e8490, 32,  RW, VEC_CFG, STG_DITHER_CONTROL)
BCHP_REGISTER(0x206e8494, 32,  RW, VEC_CFG, STG_DITHER_LFSR)
BCHP_REGISTER(0x206e8498, 32,  RW, VEC_CFG, STG_DITHER_LFSR_INIT)
BCHP_REGISTER(0x206e849c, 32,  RW, VEC_CFG, ITU656_DITHER_CONTROL)
BCHP_REGISTER(0x206e84a0, 32,  RW, VEC_CFG, ITU656_DITHER_LFSR)
BCHP_REGISTER(0x206e84a4, 32,  RW, VEC_CFG, ITU656_DITHER_LFSR_INIT)
BCHP_REGISTER(0x206e84a8, 32,  RW, VEC_CFG, ANA_DITHER_CONTROL)
BCHP_REGISTER(0x206e84ac, 32,  RW, VEC_CFG, ANA_DITHER_LFSR)
BCHP_REGISTER(0x206e84b0, 32,  RW, VEC_CFG, ANA_DITHER_LFSR_INIT)
BCHP_REGISTER(0x206e84b4, 32,  RW, VEC_CFG, SW_INIT_IT_0)
BCHP_REGISTER(0x206e84b8, 32,  RW, VEC_CFG, SW_INIT_IT_1)
BCHP_REGISTER(0x206e84bc, 32,  RW, VEC_CFG, SW_INIT_VF_0)
BCHP_REGISTER(0x206e84c0, 32,  RW, VEC_CFG, SW_INIT_SECAM_0)
BCHP_REGISTER(0x206e84c4, 32,  RW, VEC_CFG, SW_INIT_SDSRC_0)
BCHP_REGISTER(0x206e84c8, 32,  RW, VEC_CFG, SW_INIT_GRPD_0)
BCHP_REGISTER(0x206e84cc, 32,  RW, VEC_CFG, SW_INIT_ANA_MISC)
BCHP_REGISTER(0x206e84d0, 32,  RW, VEC_CFG, SW_INIT_VEC_MISC)
BCHP_REGISTER(0x206e84d4, 32,  RW, VEC_CFG, SW_INIT_TPG_0)
BCHP_REGISTER(0x206e84d8, 32,  RW, VEC_CFG, SW_INIT_MISC)
BCHP_REGISTER(0x206e84dc, 32,  RW, VEC_CFG, SW_INIT_CABLE_DETECT_0)
BCHP_REGISTER(0x206e84e0, 32,  RW, VEC_CFG, SW_INIT_DECIM_0)
BCHP_REGISTER(0x206e84e4, 32,  RW, VEC_CFG, SW_INIT_DVI_DTG_0)
BCHP_REGISTER(0x206e84e8, 32,  RW, VEC_CFG, SW_INIT_DVI_CFC_0)
BCHP_REGISTER(0x206e84ec, 32,  RW, VEC_CFG, SW_INIT_DVI_DVF_0)
BCHP_REGISTER(0x206e84f0, 32,  RW, VEC_CFG, SW_INIT_DVI_FC_0)
BCHP_REGISTER(0x206e84f4, 32,  RW, VEC_CFG, SW_INIT_DVI_MISC_0)
BCHP_REGISTER(0x206e84f8, 32,  RW, VEC_CFG, SW_INIT_DVI_MISC_1)
BCHP_REGISTER(0x206e84fc, 32,  RW, VEC_CFG, SW_INIT_CCE_0)
BCHP_REGISTER(0x206e8500, 32,  RW, VEC_CFG, SW_INIT_WSE_0)
BCHP_REGISTER(0x206e8504, 32,  RW, VEC_CFG, SW_INIT_CGMSAE_0)
BCHP_REGISTER(0x206e8508, 32,  RW, VEC_CFG, SW_INIT_TTE_0)
BCHP_REGISTER(0x206e850c, 32,  RW, VEC_CFG, SW_INIT_GSE_0)
BCHP_REGISTER(0x206e8510, 32,  RW, VEC_CFG, SW_INIT_AMOLE_0)
BCHP_REGISTER(0x206e8514, 32,  RW, VEC_CFG, SW_INIT_PASSTHRU_0)
BCHP_REGISTER(0x206e8518, 32,  RW, VEC_CFG, SW_INIT_PASSTHRU_1)
BCHP_REGISTER(0x206e851c, 32,  RW, VEC_CFG, SW_INIT_VBI_MISC)
BCHP_REGISTER(0x206e8800, 32,  RO, VIDEO_ENC_INTR2, CPU_STATUS)
BCHP_REGISTER(0x206e8804, 32,  WO, VIDEO_ENC_INTR2, CPU_SET)
BCHP_REGISTER(0x206e8808, 32,  WO, VIDEO_ENC_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x206e880c, 32,  RO, VIDEO_ENC_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x206e8810, 32,  WO, VIDEO_ENC_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x206e8814, 32,  WO, VIDEO_ENC_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x206e8818, 32,  RO, VIDEO_ENC_INTR2, PCI_STATUS)
BCHP_REGISTER(0x206e881c, 32,  WO, VIDEO_ENC_INTR2, PCI_SET)
BCHP_REGISTER(0x206e8820, 32,  WO, VIDEO_ENC_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x206e8824, 32,  RO, VIDEO_ENC_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x206e8828, 32,  WO, VIDEO_ENC_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x206e882c, 32,  WO, VIDEO_ENC_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x206e8a00, 32,  RO, VIDEO_ENC_TPG_0, REV_ID)
BCHP_REGISTER(0x206e8a04, 32,  RW, VIDEO_ENC_TPG_0, PATTERN_GEN_0)
BCHP_REGISTER(0x206e8a08, 32,  RW, VIDEO_ENC_TPG_0, PATTERN_GEN_1)
BCHP_REGISTER(0x206e8a0c, 32,  RW, VIDEO_ENC_TPG_0, BVB_MIN)
BCHP_REGISTER(0x206e8a10, 32,  RW, VIDEO_ENC_TPG_0, DTG_CONFIG)
BCHP_REGISTER(0x206e8a14, 32,  RW, VIDEO_ENC_TPG_0, CNTL_PCL)
BCHP_REGISTER(0x206e8a18, 32,  RW, VIDEO_ENC_TPG_0, RAM_ADDR)
BCHP_REGISTER(0x206e8a1c, 32,  RW, VIDEO_ENC_TPG_0, RAM_OFFSET)
BCHP_REGISTER(0x206e8a20, 32,  RW, VIDEO_ENC_TPG_0, DELAY_READY_TPG_0)
BCHP_REGISTER(0x206e8a24, 32,  RW, VIDEO_ENC_TPG_0, DTRAM_CONFIG)
BCHP_REGISTER(0x206e8c00, 32,  RO, VIDEO_ENC_DECIM_0, DECIM_REV_ID)
BCHP_REGISTER(0x206e8c08, 32,  RW, VIDEO_ENC_DECIM_0, DECIM_CONTROL)
BCHP_REGISTER(0x206e8d00, 32,  RW, DVP_TVG_0, TVG_CFG_0)
BCHP_REGISTER(0x206e8d04, 32,  RW, DVP_TVG_0, TVG_CFG_1)
BCHP_REGISTER(0x206e8d08, 32,  RW, DVP_TVG_0, TVG_BAR_CFG)
BCHP_REGISTER(0x206e8d0c, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_0A)
BCHP_REGISTER(0x206e8d10, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_0B)
BCHP_REGISTER(0x206e8d14, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_1A)
BCHP_REGISTER(0x206e8d18, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_1B)
BCHP_REGISTER(0x206e8d1c, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_2A)
BCHP_REGISTER(0x206e8d20, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_2B)
BCHP_REGISTER(0x206e8d24, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_3A)
BCHP_REGISTER(0x206e8d28, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_3B)
BCHP_REGISTER(0x206e8d2c, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_4A)
BCHP_REGISTER(0x206e8d30, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_4B)
BCHP_REGISTER(0x206e8d34, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_5A)
BCHP_REGISTER(0x206e8d38, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_5B)
BCHP_REGISTER(0x206e8d3c, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_6A)
BCHP_REGISTER(0x206e8d40, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_6B)
BCHP_REGISTER(0x206e8d44, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_7A)
BCHP_REGISTER(0x206e8d48, 32,  RW, DVP_TVG_0, TVG_BAR_CFG_7B)
BCHP_REGISTER(0x206e8d4c, 32,  RW, DVP_TVG_0, TVG_PATTERN_CFG_0)
BCHP_REGISTER(0x206e8d50, 32,  RW, DVP_TVG_0, TVG_PATTERN_CFG_1)
BCHP_REGISTER(0x206e8d54, 32,  RW, DVP_TVG_0, TVG_OUTPUT_REMAP)
BCHP_REGISTER(0x206e8d58, 32,  RW, DVP_TVG_0, TVG_GRID_CFG_0)
BCHP_REGISTER(0x206e8d5c, 32,  RW, DVP_TVG_0, TVG_GRID_CFG_1)
BCHP_REGISTER(0x206e8d60, 32,  RW, DVP_TVG_0, TVG_3D_BAR_CFG_0)
BCHP_REGISTER(0x206e8d64, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_0)
BCHP_REGISTER(0x206e8d68, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_1)
BCHP_REGISTER(0x206e8d6c, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_2)
BCHP_REGISTER(0x206e8d70, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_3)
BCHP_REGISTER(0x206e8d74, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_4)
BCHP_REGISTER(0x206e8d78, 32,  RW, DVP_TVG_0, TVG_FORMAT_CFG_5)
BCHP_REGISTER(0x206e8d7c, 32,  RW, DVP_TVG_0, TVG_3D_CFG_0)
BCHP_REGISTER(0x206e8d80, 32,  RW, DVP_TVG_0, TVG_3D_CFG_1)
BCHP_REGISTER(0x206e8d84, 32,  RW, DVP_TVG_0, TVG_3D_CFG_2)
BCHP_REGISTER(0x206e8d88, 32,  RW, DVP_TVG_0, TVG_3D_CFG_3)
BCHP_REGISTER(0x206e9000, 32,  RW, VBI_ENC, VBI_0_CORE_0_SEL)
BCHP_REGISTER(0x206e9004, 32,  RW, VBI_ENC, VBI_0_CORE_1_SEL)
BCHP_REGISTER(0x206e9008, 32,  RW, VBI_ENC, VBI_0_CORE_2_SEL)
BCHP_REGISTER(0x206e900c, 32,  RW, VBI_ENC, VBI_0_CORE_3_SEL)
BCHP_REGISTER(0x206e9010, 32,  RW, VBI_ENC, VBI_0_CORE_4_SEL)
BCHP_REGISTER(0x206e9014, 32,  RW, VBI_ENC, VBI_0_CORE_5_SEL)
BCHP_REGISTER(0x206e9018, 32,  RW, VBI_ENC, VBI_0_CORE_6_SEL)
BCHP_REGISTER(0x206e901c, 32,  RW, VBI_ENC, VBI_0_CORE_7_SEL)
BCHP_REGISTER(0x206e9020, 32,  RW, VBI_ENC, VBI_1_CORE_0_SEL)
BCHP_REGISTER(0x206e9024, 32,  RW, VBI_ENC, VBI_1_CORE_1_SEL)
BCHP_REGISTER(0x206e9028, 32,  RW, VBI_ENC, VBI_1_CORE_2_SEL)
BCHP_REGISTER(0x206e902c, 32,  RW, VBI_ENC, VBI_1_CORE_3_SEL)
BCHP_REGISTER(0x206e9030, 32,  RW, VBI_ENC, VBI_1_CORE_4_SEL)
BCHP_REGISTER(0x206e9034, 32,  RW, VBI_ENC, VBI_1_CORE_5_SEL)
BCHP_REGISTER(0x206e9038, 32,  RW, VBI_ENC, VBI_1_CORE_6_SEL)
BCHP_REGISTER(0x206e903c, 32,  RW, VBI_ENC, VBI_1_CORE_7_SEL)
BCHP_REGISTER(0x206e9040, 32,  RW, VBI_ENC, VBI_0_INTR_CTRL)
BCHP_REGISTER(0x206e9044, 32,  RW, VBI_ENC, VBI_0_PEDESTAL)
BCHP_REGISTER(0x206e9048, 32,  RW, VBI_ENC, VBI_0_PASS_THROUGH)
BCHP_REGISTER(0x206e904c, 32,  RW, VBI_ENC, VBI_1_INTR_CTRL)
BCHP_REGISTER(0x206e9050, 32,  RW, VBI_ENC, VBI_1_PEDESTAL)
BCHP_REGISTER(0x206e9054, 32,  RW, VBI_ENC, VBI_1_PASS_THROUGH)
BCHP_REGISTER(0x206e9400, 32,  RO, CCE_0, RevID)
BCHP_REGISTER(0x206e9408, 32,  RW, CCE_0, Active_Lines)
BCHP_REGISTER(0x206e940c, 32,  RW, CCE_0, Control)
BCHP_REGISTER(0x206e9410, 32,  RW, CCE_0, Active_Lines_1)
BCHP_REGISTER(0x206e9414, 32,  RW, CCE_0, Gain_Delay)
BCHP_REGISTER(0x206e9418, 32,  RW, CCE_0, SCTE_Base_Lines)
BCHP_REGISTER(0x206e941c, 32,  RW, CCE_0, Data0)
BCHP_REGISTER(0x206e9420, 32,  RW, CCE_0, Data1)
BCHP_REGISTER(0x206e9424, 32,  RW, CCE_0, Data2)
BCHP_REGISTER(0x206e9428, 32,  RW, CCE_0, Data3)
BCHP_REGISTER(0x206e942c, 32,  RW, CCE_0, Data4)
BCHP_REGISTER(0x206e9430, 32,  RW, CCE_0, Data5)
BCHP_REGISTER(0x206e9434, 32,  RW, CCE_0, Data6)
BCHP_REGISTER(0x206e9438, 32,  RW, CCE_0, Data7)
BCHP_REGISTER(0x206e943c, 32,  RW, CCE_0, Data8)
BCHP_REGISTER(0x206e9440, 32,  RW, CCE_0, Data9)
BCHP_REGISTER(0x206e9444, 32,  RW, CCE_0, Data10)
BCHP_REGISTER(0x206e9448, 32,  RW, CCE_0, Data11)
BCHP_REGISTER(0x206e944c, 32,  RW, CCE_0, Data12)
BCHP_REGISTER(0x206e9450, 32,  RW, CCE_0, Data13)
BCHP_REGISTER(0x206e9454, 32,  RW, CCE_0, Data14)
BCHP_REGISTER(0x206e9458, 32,  RW, CCE_0, Data15)
BCHP_REGISTER(0x206e9504, 32,  RW, WSE_0, control)
BCHP_REGISTER(0x206e9508, 32,  RW, WSE_0, wss_data)
BCHP_REGISTER(0x206e950c, 32,  RW, WSE_0, vps_data_1)
BCHP_REGISTER(0x206e9510, 32,  RW, WSE_0, vps_control)
BCHP_REGISTER(0x206e9514, 32,  RO, WSE_0, revid)
BCHP_REGISTER(0x206e9604, 32,  RW, CGMSAE_0, Top_Control)
BCHP_REGISTER(0x206e9608, 32,  RW, CGMSAE_0, Bot_Control)
BCHP_REGISTER(0x206e960c, 32,  RW, CGMSAE_0, Top_Format)
BCHP_REGISTER(0x206e9610, 32,  RW, CGMSAE_0, Bot_Format)
BCHP_REGISTER(0x206e9614, 32,  RW, CGMSAE_0, Top_Data)
BCHP_REGISTER(0x206e9618, 32,  RW, CGMSAE_0, Bot_Data)
BCHP_REGISTER(0x206e961c, 32,  RO, CGMSAE_0, RevID)
BCHP_REGISTER(0x206e9620, 32,  RW, CGMSAE_0, Top_Control_B)
BCHP_REGISTER(0x206e9624, 32,  RW, CGMSAE_0, Bot_Control_B)
BCHP_REGISTER(0x206e9628, 32,  RW, CGMSAE_0, Top_Format_B)
BCHP_REGISTER(0x206e962c, 32,  RW, CGMSAE_0, Bot_Format_B)
BCHP_REGISTER(0x206e9630, 32,  RW, CGMSAE_0, Top_Data_B0)
BCHP_REGISTER(0x206e9634, 32,  RW, CGMSAE_0, Top_Data_B1)
BCHP_REGISTER(0x206e9638, 32,  RW, CGMSAE_0, Top_Data_B2)
BCHP_REGISTER(0x206e963c, 32,  RW, CGMSAE_0, Top_Data_B3)
BCHP_REGISTER(0x206e9640, 32,  RW, CGMSAE_0, Top_Data_B4)
BCHP_REGISTER(0x206e9644, 32,  RW, CGMSAE_0, Bot_Data_B0)
BCHP_REGISTER(0x206e9648, 32,  RW, CGMSAE_0, Bot_Data_B1)
BCHP_REGISTER(0x206e964c, 32,  RW, CGMSAE_0, Bot_Data_B2)
BCHP_REGISTER(0x206e9650, 32,  RW, CGMSAE_0, Bot_Data_B3)
BCHP_REGISTER(0x206e9654, 32,  RW, CGMSAE_0, Bot_Data_B4)
BCHP_REGISTER(0x206e9658, 32,  RW, CGMSAE_0, Reg_updt)
BCHP_REGISTER(0x206e9704, 32,  RW, TTE_0, status)
BCHP_REGISTER(0x206e9708, 32,  RW, TTE_0, control)
BCHP_REGISTER(0x206e970c, 32,  RW, TTE_0, lines_active)
BCHP_REGISTER(0x206e9710, 64,  RW, TTE_0, read_address_top)
BCHP_REGISTER(0x206e9718, 64,  RW, TTE_0, read_address_bottom)
BCHP_REGISTER(0x206e9720, 32,  RW, TTE_0, output_format)
BCHP_REGISTER(0x206e9724, 32,  RW, TTE_0, top_mask)
BCHP_REGISTER(0x206e9728, 32,  RW, TTE_0, bottom_mask)
BCHP_REGISTER(0x206e972c, 32,  RO, TTE_0, revid)
BCHP_REGISTER(0x206e9800, 32,  RO, GSE_0, REVID)
BCHP_REGISTER(0x206e9808, 32,  RW, GSE_0, CONTROL)
BCHP_REGISTER(0x206e980c, 32,  RW, GSE_0, ACTIVE_LINE_TOP)
BCHP_REGISTER(0x206e9810, 32,  RW, GSE_0, ACTIVE_LINE_BOT)
BCHP_REGISTER(0x206e9814, 32,  RW, GSE_0, GAIN_TOP)
BCHP_REGISTER(0x206e9818, 32,  RW, GSE_0, GAIN_EXT_TOP)
BCHP_REGISTER(0x206e981c, 32,  RW, GSE_0, GAIN_BOT)
BCHP_REGISTER(0x206e9820, 32,  RW, GSE_0, GAIN_EXT_BOT)
BCHP_REGISTER(0x206e9824, 32,  RW, GSE_0, DATA_LINE1_BANK0)
BCHP_REGISTER(0x206e9828, 32,  RW, GSE_0, DATA_LINE2_BANK0)
BCHP_REGISTER(0x206e982c, 32,  RW, GSE_0, DATA_LINE3_BANK0)
BCHP_REGISTER(0x206e9830, 32,  RW, GSE_0, DATA_LINE4_BANK0)
BCHP_REGISTER(0x206e9834, 32,  RW, GSE_0, DATA_LINE5_BANK0)
BCHP_REGISTER(0x206e9838, 32,  RW, GSE_0, DATA_LINE1_BANK1)
BCHP_REGISTER(0x206e983c, 32,  RW, GSE_0, DATA_LINE2_BANK1)
BCHP_REGISTER(0x206e9840, 32,  RW, GSE_0, DATA_LINE3_BANK1)
BCHP_REGISTER(0x206e9844, 32,  RW, GSE_0, DATA_LINE4_BANK1)
BCHP_REGISTER(0x206e9848, 32,  RW, GSE_0, DATA_LINE5_BANK1)
BCHP_REGISTER(0x206e984c, 32,  RW, GSE_0, DATA_LINE1_BANK2)
BCHP_REGISTER(0x206e9850, 32,  RW, GSE_0, DATA_LINE2_BANK2)
BCHP_REGISTER(0x206e9854, 32,  RW, GSE_0, DATA_LINE3_BANK2)
BCHP_REGISTER(0x206e9858, 32,  RW, GSE_0, DATA_LINE4_BANK2)
BCHP_REGISTER(0x206e985c, 32,  RW, GSE_0, DATA_LINE5_BANK2)
BCHP_REGISTER(0x206e9860, 32,  RW, GSE_0, DATA_LINE1_BANK3)
BCHP_REGISTER(0x206e9864, 32,  RW, GSE_0, DATA_LINE2_BANK3)
BCHP_REGISTER(0x206e9868, 32,  RW, GSE_0, DATA_LINE3_BANK3)
BCHP_REGISTER(0x206e986c, 32,  RW, GSE_0, DATA_LINE4_BANK3)
BCHP_REGISTER(0x206e9870, 32,  RW, GSE_0, DATA_LINE5_BANK3)
BCHP_REGISTER(0x206e9874, 32,  RW, GSE_0, NULL)
BCHP_REGISTER(0x206e9878, 32,  RW, GSE_0, WRPTR)
BCHP_REGISTER(0x206e987c, 32,  RW, GSE_0, RDPTR)
BCHP_REGISTER(0x206e9880, 32,  RW, GSE_0, STATUS)
BCHP_REGISTER(0x206e9900, 32,  RO, AMOLE_0, REVID)
BCHP_REGISTER(0x206e9908, 32,  RW, AMOLE_0, CONTROL)
BCHP_REGISTER(0x206e990c, 32,  RW, AMOLE_0, ACT_LINE_BASE_TOP)
BCHP_REGISTER(0x206e9910, 32,  RW, AMOLE_0, ACT_LINE_BASE_BOT)
BCHP_REGISTER(0x206e9914, 32,  RW, AMOLE_0, GAIN_PED_TOP)
BCHP_REGISTER(0x206e9918, 32,  RW, AMOLE_0, GAIN_PED_BOT)
BCHP_REGISTER(0x206e991c, 32,  RW, AMOLE_0, DATA_WORD0_BANK0)
BCHP_REGISTER(0x206e9920, 32,  RW, AMOLE_0, DATA_WORD1_BANK0)
BCHP_REGISTER(0x206e9924, 32,  RW, AMOLE_0, DATA_WORD2_BANK0)
BCHP_REGISTER(0x206e9928, 32,  RW, AMOLE_0, DATA_WORD3_BANK0)
BCHP_REGISTER(0x206e992c, 32,  RW, AMOLE_0, DATA_WORD4_BANK0)
BCHP_REGISTER(0x206e9930, 32,  RW, AMOLE_0, DATA_WORD5_BANK0)
BCHP_REGISTER(0x206e9934, 32,  RW, AMOLE_0, DATA_WORD0_BANK1)
BCHP_REGISTER(0x206e9938, 32,  RW, AMOLE_0, DATA_WORD1_BANK1)
BCHP_REGISTER(0x206e993c, 32,  RW, AMOLE_0, DATA_WORD2_BANK1)
BCHP_REGISTER(0x206e9940, 32,  RW, AMOLE_0, DATA_WORD3_BANK1)
BCHP_REGISTER(0x206e9944, 32,  RW, AMOLE_0, DATA_WORD4_BANK1)
BCHP_REGISTER(0x206e9948, 32,  RW, AMOLE_0, DATA_WORD5_BANK1)
BCHP_REGISTER(0x206e994c, 32,  RW, AMOLE_0, DATA_WORD0_BANK2)
BCHP_REGISTER(0x206e9950, 32,  RW, AMOLE_0, DATA_WORD1_BANK2)
BCHP_REGISTER(0x206e9954, 32,  RW, AMOLE_0, DATA_WORD2_BANK2)
BCHP_REGISTER(0x206e9958, 32,  RW, AMOLE_0, DATA_WORD3_BANK2)
BCHP_REGISTER(0x206e995c, 32,  RW, AMOLE_0, DATA_WORD4_BANK2)
BCHP_REGISTER(0x206e9960, 32,  RW, AMOLE_0, DATA_WORD5_BANK2)
BCHP_REGISTER(0x206e9964, 32,  RW, AMOLE_0, DATA_WORD0_BANK3)
BCHP_REGISTER(0x206e9968, 32,  RW, AMOLE_0, DATA_WORD1_BANK3)
BCHP_REGISTER(0x206e996c, 32,  RW, AMOLE_0, DATA_WORD2_BANK3)
BCHP_REGISTER(0x206e9970, 32,  RW, AMOLE_0, DATA_WORD3_BANK3)
BCHP_REGISTER(0x206e9974, 32,  RW, AMOLE_0, DATA_WORD4_BANK3)
BCHP_REGISTER(0x206e9978, 32,  RW, AMOLE_0, DATA_WORD5_BANK3)
BCHP_REGISTER(0x206e997c, 32,  RW, AMOLE_0, BYTES_PER_LINE)
BCHP_REGISTER(0x206e9980, 32,  RW, AMOLE_0, NULL)
BCHP_REGISTER(0x206e9984, 32,  RW, AMOLE_0, WRPTR)
BCHP_REGISTER(0x206e9988, 32,  RW, AMOLE_0, RDPTR)
BCHP_REGISTER(0x206e998c, 32,  RW, AMOLE_0, STATUS)
BCHP_REGISTER(0x206f8000, 32,  RW, DVP_HT, CORE_REV)
BCHP_REGISTER(0x206f8004, 32, CFG, DVP_HT, SW_INIT)
BCHP_REGISTER(0x206f8008, 32,  RW, DVP_HT, HDMI_TX_0_IN_CRC_CHECK_CFG_0)
BCHP_REGISTER(0x206f800c, 32,  RW, DVP_HT, HDMI_TX_0_IN_CRC_CHECK_CFG_1)
BCHP_REGISTER(0x206f8010, 32,  RW, DVP_HT, HDMI_TX_0_IN_CRC_CHECK_CTL)
BCHP_REGISTER(0x206f8014, 32,  RO, DVP_HT, HDMI_TX_0_IN_CRC_CHECK_STATUS_0)
BCHP_REGISTER(0x206f8018, 32,  RO, DVP_HT, HDMI_TX_0_IN_CRC_CHECK_STATUS_1)
BCHP_REGISTER(0x206f801c, 32,  RW, DVP_HT, HDMI_TX_0_OUT_CRC_CHECK_CFG_0)
BCHP_REGISTER(0x206f8020, 32,  RW, DVP_HT, HDMI_TX_0_OUT_CRC_CHECK_CFG_1)
BCHP_REGISTER(0x206f8024, 32,  RW, DVP_HT, HDMI_TX_0_OUT_CRC_CHECK_CTL)
BCHP_REGISTER(0x206f8028, 32,  RO, DVP_HT, HDMI_TX_0_OUT_CRC_CHECK_STATUS_0)
BCHP_REGISTER(0x206f802c, 32,  RO, DVP_HT, HDMI_TX_0_OUT_CRC_CHECK_STATUS_1)
BCHP_REGISTER(0x206f8030, 32,  RW, DVP_HT, TVG_CFG_0)
BCHP_REGISTER(0x206f8034, 32,  RW, DVP_HT, TVG_CFG_1)
BCHP_REGISTER(0x206f8038, 32,  RW, DVP_HT, TVG_BAR_CFG)
BCHP_REGISTER(0x206f803c, 32,  RW, DVP_HT, TVG_BAR_CFG_0A)
BCHP_REGISTER(0x206f8040, 32,  RW, DVP_HT, TVG_BAR_CFG_0B)
BCHP_REGISTER(0x206f8044, 32,  RW, DVP_HT, TVG_BAR_CFG_1A)
BCHP_REGISTER(0x206f8048, 32,  RW, DVP_HT, TVG_BAR_CFG_1B)
BCHP_REGISTER(0x206f804c, 32,  RW, DVP_HT, TVG_BAR_CFG_2A)
BCHP_REGISTER(0x206f8050, 32,  RW, DVP_HT, TVG_BAR_CFG_2B)
BCHP_REGISTER(0x206f8054, 32,  RW, DVP_HT, TVG_BAR_CFG_3A)
BCHP_REGISTER(0x206f8058, 32,  RW, DVP_HT, TVG_BAR_CFG_3B)
BCHP_REGISTER(0x206f805c, 32,  RW, DVP_HT, TVG_BAR_CFG_4A)
BCHP_REGISTER(0x206f8060, 32,  RW, DVP_HT, TVG_BAR_CFG_4B)
BCHP_REGISTER(0x206f8064, 32,  RW, DVP_HT, TVG_BAR_CFG_5A)
BCHP_REGISTER(0x206f8068, 32,  RW, DVP_HT, TVG_BAR_CFG_5B)
BCHP_REGISTER(0x206f806c, 32,  RW, DVP_HT, TVG_BAR_CFG_6A)
BCHP_REGISTER(0x206f8070, 32,  RW, DVP_HT, TVG_BAR_CFG_6B)
BCHP_REGISTER(0x206f8074, 32,  RW, DVP_HT, TVG_BAR_CFG_7A)
BCHP_REGISTER(0x206f8078, 32,  RW, DVP_HT, TVG_BAR_CFG_7B)
BCHP_REGISTER(0x206f807c, 32,  RW, DVP_HT, TVG_PATTERN_CFG_0)
BCHP_REGISTER(0x206f8080, 32,  RW, DVP_HT, TVG_PATTERN_CFG_1)
BCHP_REGISTER(0x206f8084, 32,  RW, DVP_HT, TVG_OUTPUT_REMAP)
BCHP_REGISTER(0x206f8088, 32,  RW, DVP_HT, TVG_GRID_CFG_0)
BCHP_REGISTER(0x206f808c, 32,  RW, DVP_HT, TVG_GRID_CFG_1)
BCHP_REGISTER(0x206f8090, 32,  RW, DVP_HT, TVG_3D_BAR_CFG_0)
BCHP_REGISTER(0x206f8094, 32,  RW, DVP_HT, TVG_FORMAT_CFG_0)
BCHP_REGISTER(0x206f8098, 32,  RW, DVP_HT, TVG_FORMAT_CFG_1)
BCHP_REGISTER(0x206f809c, 32,  RW, DVP_HT, TVG_FORMAT_CFG_2)
BCHP_REGISTER(0x206f80a0, 32,  RW, DVP_HT, TVG_FORMAT_CFG_3)
BCHP_REGISTER(0x206f80a4, 32,  RW, DVP_HT, TVG_FORMAT_CFG_4)
BCHP_REGISTER(0x206f80a8, 32,  RW, DVP_HT, TVG_FORMAT_CFG_5)
BCHP_REGISTER(0x206f80ac, 32,  RW, DVP_HT, TVG_3D_CFG_0)
BCHP_REGISTER(0x206f80b0, 32,  RW, DVP_HT, TVG_3D_CFG_1)
BCHP_REGISTER(0x206f80b4, 32,  RW, DVP_HT, TVG_3D_CFG_2)
BCHP_REGISTER(0x206f80b8, 32,  RW, DVP_HT, TVG_3D_CFG_3)
BCHP_REGISTER(0x206f80bc, 32,  RW, DVP_HT, CLOCK_STOP)
BCHP_REGISTER(0x206f80c0, 32,  RW, DVP_HT, HDMI_TX_TAG_CFG)
BCHP_REGISTER(0x206f80c4, 32,  RW, DVP_HT, HDMI_TX_TAG_AUDIO)
BCHP_REGISTER(0x206f80c8, 32,  RW, DVP_HT, HDMI_TX_TAG_NCO_SYNC)
BCHP_REGISTER(0x206f80cc, 32,  RW, DVP_HT, HDMI_TX_TAG_NCO_LEFT)
BCHP_REGISTER(0x206f80d0, 32,  RW, DVP_HT, HDMI_TX_TAG_NCO_RIGHT)
BCHP_REGISTER(0x206f80d4, 32,  RW, DVP_HT, HDMI_TX_TAG_CHANNEL_STATUS0)
BCHP_REGISTER(0x206f80d8, 32,  RW, DVP_HT, HDMI_TX_TAG_CHANNEL_STATUS1)
BCHP_REGISTER(0x206f80e0, 32,  RW, DVP_HT, HDMI_PTHRU_AVMUTE_CFG)
BCHP_REGISTER(0x206f80e4, 32,  RW, DVP_HT, HDMI_PTHRU_FILL_STATUS_CTL)
BCHP_REGISTER(0x206f80e8, 32,  RO, DVP_HT, HDMI_PTHRU_FILL_STATUS)
BCHP_REGISTER(0x206f80ec, 32,  RW, DVP_HT, VEC_INTERFACE_CFG)
BCHP_REGISTER(0x206f80f0, 32,  RW, DVP_HT, VEC_INTERFACE_XBAR)
BCHP_REGISTER(0x206f80f4, 32,  RW, DVP_HT, DVP_HT_TIMER_1S_CONTROL)
BCHP_REGISTER(0x206f80f8, 32,  RW, DVP_HT, DVP_HT_TIMER_1MS_CONTROL)
BCHP_REGISTER(0x206f80fc, 32,  RW, DVP_HT, DVP_HT_TIMER_1US_CONTROL)
BCHP_REGISTER(0x206f8100, 32,  RW, DVP_HT, DVP_HT_FREQ_MEASURE_CONTROL)
BCHP_REGISTER(0x206f8104, 32,  RO, DVP_HT, DVP_HT_FREQ_MEASURE)
BCHP_REGISTER(0x206f8108, 32,  RO, DVP_HT, DVP_HT_MAX_FREQ)
BCHP_REGISTER(0x206f810c, 32,  RO, DVP_HT, DVP_HT_MIN_FREQ)
BCHP_REGISTER(0x206f8110, 32,  RW, DVP_HT, DVP_HT_HDCP_CONSTRAIN_CFG)
BCHP_REGISTER(0x206f8114, 32,  RW, DVP_HT, DVP_HT_VEC_INTERFACE_MONITOR)
BCHP_REGISTER(0x206f8118, 32, CFG, DVP_HT, DVP_HT_TVG_COLOR_DEPTH_SEL)
BCHP_REGISTER(0x206f811c, 32, CFG, DVP_HT, DVP_HT_VEC_INTERFACE_RED_MASK)
BCHP_REGISTER(0x206f8120, 32, CFG, DVP_HT, DVP_HT_VEC_INTERFACE_GREEN_MASK)
BCHP_REGISTER(0x206f8124, 32, CFG, DVP_HT, DVP_HT_VEC_INTERFACE_BLUE_MASK)
BCHP_REGISTER(0x206f8128, 32,  RW, DVP_HT, SPARE_REGISTER_BITS_0)
BCHP_REGISTER(0x206fa000, 32,  RW, HDMI, BKSV0)
BCHP_REGISTER(0x206fa004, 32,  RW, HDMI, BKSV1)
BCHP_REGISTER(0x206fa008, 32,  RO, HDMI, AN0)
BCHP_REGISTER(0x206fa00c, 32,  RO, HDMI, AN1)
BCHP_REGISTER(0x206fa010, 32,  RW, HDMI, KSV_FIFO_0)
BCHP_REGISTER(0x206fa014, 32,  RW, HDMI, KSV_FIFO_1)
BCHP_REGISTER(0x206fa018, 32,  RW, HDMI, V)
BCHP_REGISTER(0x206fa01c, 32,  RW, HDMI, HDCP_KEY_1)
BCHP_REGISTER(0x206fa020, 32,  RW, HDMI, HDCP_KEY_2)
BCHP_REGISTER(0x206fa024, 32,  RW, HDMI, HDCP_CTL)
BCHP_REGISTER(0x206fa028, 32,  RO, HDMI, CP_STATUS)
BCHP_REGISTER(0x206fa02c, 32,  RO, HDMI, CP_INTEGRITY)
BCHP_REGISTER(0x206fa030, 32,  RW, HDMI, CP_INTEGRITY_CFG)
BCHP_REGISTER(0x206fa034, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_1)
BCHP_REGISTER(0x206fa038, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_2)
BCHP_REGISTER(0x206fa03c, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_3)
BCHP_REGISTER(0x206fa040, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_4)
BCHP_REGISTER(0x206fa044, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_5)
BCHP_REGISTER(0x206fa048, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_6)
BCHP_REGISTER(0x206fa04c, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_7)
BCHP_REGISTER(0x206fa050, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_8)
BCHP_REGISTER(0x206fa054, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_9)
BCHP_REGISTER(0x206fa058, 32,  RW, HDMI, CP_INTEGRITY_CHK_CFG_10)
BCHP_REGISTER(0x206fa05c, 32,  RO, HDMI, CP_INTEGRITY_CHK_STATUS_1)
BCHP_REGISTER(0x206fa060, 32,  RO, HDMI, CP_INTEGRITY_CHK_STATUS_2)
BCHP_REGISTER(0x206fa064, 32,  RO, HDMI, CP_INTEGRITY_CHK_STATUS_3)
BCHP_REGISTER(0x206fa068, 32,  RW, HDMI, CP_CONFIG)
BCHP_REGISTER(0x206fa06c, 32,  RW, HDMI, CP_TST)
BCHP_REGISTER(0x206fa070, 32,  RW, HDMI, CP_CONSTRAIN)
BCHP_REGISTER(0x206fa074, 32,  RW, HDMI, FIFO_CTL)
BCHP_REGISTER(0x206fa078, 32,  RO, HDMI, READ_POINTERS)
BCHP_REGISTER(0x206fa07c, 32,  RW, HDMI, ENCODER_CTL)
BCHP_REGISTER(0x206fa080, 32,  RW, HDMI, PERT_CONFIG)
BCHP_REGISTER(0x206fa084, 32,  RW, HDMI, PERT_LFSR_PRELOAD)
BCHP_REGISTER(0x206fa088, 32,  RW, HDMI, PERT_LFSR_FEEDBACK_MASK)
BCHP_REGISTER(0x206fa08c, 32,  RW, HDMI, PERT_INSERT_ERR)
BCHP_REGISTER(0x206fa090, 32,  RW, HDMI, PERT_INSERT_ERR_SEPARATION)
BCHP_REGISTER(0x206fa094, 32,  RW, HDMI, PERT_TEST_LENGTH)
BCHP_REGISTER(0x206fa098, 32,  RW, HDMI, PERT_DATA)
BCHP_REGISTER(0x206fa09c, 32,  RW, HDMI, MAI_CHANNEL_MAP)
BCHP_REGISTER(0x206fa0a0, 32,  RW, HDMI, MAI_CONFIG)
BCHP_REGISTER(0x206fa0a4, 32,  RO, HDMI, MAI_FORMAT)
BCHP_REGISTER(0x206fa0a8, 32,  RW, HDMI, HDMI_HBR_AUDIO_PACKET_HEADER)
BCHP_REGISTER(0x206fa0ac, 32,  RW, HDMI, MAI_BUS_MONITOR_1)
BCHP_REGISTER(0x206fa0b0, 32,  RW, HDMI, MAI_BUS_MONITOR_2)
BCHP_REGISTER(0x206fa0b4, 32,  RO, HDMI, MAI_BUS_MONITOR_3)
BCHP_REGISTER(0x206fa0b8, 32,  RW, HDMI, AUDIO_PACKET_CONFIG)
BCHP_REGISTER(0x206fa0bc, 32,  RW, HDMI, RAM_PACKET_CONFIG)
BCHP_REGISTER(0x206fa0c0, 32,  RW, HDMI, RAM_PACKET_CONFIG_2)
BCHP_REGISTER(0x206fa0c4, 32,  RO, HDMI, RAM_PACKET_STATUS)
BCHP_REGISTER(0x206fa0c8, 32,  RW, HDMI, CRP_CFG)
BCHP_REGISTER(0x206fa0cc, 32,  RW, HDMI, CTS_0)
BCHP_REGISTER(0x206fa0d0, 32,  RW, HDMI, CTS_1)
BCHP_REGISTER(0x206fa0d4, 32,  RW, HDMI, CTS_PERIOD_0)
BCHP_REGISTER(0x206fa0d8, 32,  RW, HDMI, CTS_PERIOD_1)
BCHP_REGISTER(0x206fa0dc, 32,  RW, HDMI, BCH_CONFIGURATION)
BCHP_REGISTER(0x206fa0e0, 32,  RW, HDMI, SCHEDULER_CONTROL)
BCHP_REGISTER(0x206fa0e4, 32,  RW, HDMI, HORZA)
BCHP_REGISTER(0x206fa0e8, 32,  RW, HDMI, HORZB)
BCHP_REGISTER(0x206fa0ec, 32,  RW, HDMI, VERTA0)
BCHP_REGISTER(0x206fa0f0, 32,  RW, HDMI, VERTB0)
BCHP_REGISTER(0x206fa0f4, 32,  RW, HDMI, VERTA1)
BCHP_REGISTER(0x206fa0f8, 32,  RW, HDMI, VERTB1)
BCHP_REGISTER(0x206fa0fc, 32,  RW, HDMI, TEST)
BCHP_REGISTER(0x206fa100, 32,  RW, HDMI, MISC_CONTROL)
BCHP_REGISTER(0x206fa104, 32,  RW, HDMI, MISC_CONTROL_1)
BCHP_REGISTER(0x206fa108, 32,  RW, HDMI, PACKET_FIFO_CTL)
BCHP_REGISTER(0x206fa10c, 32,  RW, HDMI, PACKET_FIFO_CFG)
BCHP_REGISTER(0x206fa110, 32,  RO, HDMI, PACKET_FIFO_STATUS)
BCHP_REGISTER(0x206fa114, 32,  RW, HDMI, HDMI_13_AUDIO_CFG_1)
BCHP_REGISTER(0x206fa118, 32,  RO, HDMI, HDMI_13_AUDIO_STATUS_1)
BCHP_REGISTER(0x206fa11c, 32,  RW, HDMI, HDMI_POSTING_MASTER)
BCHP_REGISTER(0x206fa120, 32,  RW, HDMI, FORMAT_DET_CFG)
BCHP_REGISTER(0x206fa124, 32,  RO, HDMI, FORMAT_DET_UPDATE_STATUS)
BCHP_REGISTER(0x206fa128, 32,  RO, HDMI, FORMAT_DET_UPDATE_STATUS_1)
BCHP_REGISTER(0x206fa12c, 32,  RW, HDMI, FORMAT_DET_UPDATE_CLEAR)
BCHP_REGISTER(0x206fa130, 32,  RW, HDMI, FORMAT_DET_UPDATE_CLEAR_1)
BCHP_REGISTER(0x206fa134, 32,  RO, HDMI, FORMAT_DET_1)
BCHP_REGISTER(0x206fa138, 32,  RO, HDMI, FORMAT_DET_2)
BCHP_REGISTER(0x206fa13c, 32,  RO, HDMI, FORMAT_DET_3)
BCHP_REGISTER(0x206fa140, 32,  RO, HDMI, FORMAT_DET_4)
BCHP_REGISTER(0x206fa144, 32,  RO, HDMI, FORMAT_DET_5)
BCHP_REGISTER(0x206fa148, 32,  RO, HDMI, FORMAT_DET_6)
BCHP_REGISTER(0x206fa14c, 32,  RO, HDMI, FORMAT_DET_7)
BCHP_REGISTER(0x206fa150, 32,  RO, HDMI, FORMAT_DET_8)
BCHP_REGISTER(0x206fa154, 32,  RO, HDMI, FORMAT_DET_9)
BCHP_REGISTER(0x206fa158, 32,  RO, HDMI, FORMAT_DET_10)
BCHP_REGISTER(0x206fa15c, 32,  RO, HDMI, HSYNC_CNT)
BCHP_REGISTER(0x206fa160, 32,  RO, HDMI, VSYNC_CNT_FIELD0)
BCHP_REGISTER(0x206fa164, 32,  RO, HDMI, VSYNC_CNT_FIELD1)
BCHP_REGISTER(0x206fa168, 32,  RO, HDMI, VSYNC_PIX_FIELD0)
BCHP_REGISTER(0x206fa16c, 32,  RO, HDMI, VSYNC_PIX_FIELD1)
BCHP_REGISTER(0x206fa170, 32,  RW, HDMI, DEEP_COLOR_CONFIG_1)
BCHP_REGISTER(0x206fa174, 32,  RO, HDMI, DEEP_COLOR_CONFIG_2)
BCHP_REGISTER(0x206fa178, 32,  RW, HDMI, GCP_CONFIG)
BCHP_REGISTER(0x206fa17c, 32,  RW, HDMI, GCP_WORD_1)
BCHP_REGISTER(0x206fa180, 32,  RW, HDMI, GCP_WORD_2)
BCHP_REGISTER(0x206fa184, 32,  RW, HDMI, RGB_MONITOR_CFG_1)
BCHP_REGISTER(0x206fa188, 32,  RW, HDMI, RGB_MONITOR_CFG_2)
BCHP_REGISTER(0x206fa18c, 32,  RW, HDMI, RGB_MONITOR_CFG_3)
BCHP_REGISTER(0x206fa190, 32,  RW, HDMI, RGB_MONITOR_CFG_4)
BCHP_REGISTER(0x206fa194, 32,  RO, HDMI, RGB_MONITOR_STATUS_1)
BCHP_REGISTER(0x206fa198, 32,  RO, HDMI, RGB_MONITOR_STATUS_2)
BCHP_REGISTER(0x206fa19c, 32,  RO, HDMI, RGB_MONITOR_STATUS_3)
BCHP_REGISTER(0x206fa1a0, 32,  RO, HDMI, RGB_MONITOR_STATUS_4)
BCHP_REGISTER(0x206fa1a4, 32,  RO, HDMI, RGB_MONITOR_STATUS_5)
BCHP_REGISTER(0x206fa1a8, 32,  RO, HDMI, HOTPLUG_STATUS)
BCHP_REGISTER(0x206fa1ac, 32,  RW, HDMI, VMS_CFG_0)
BCHP_REGISTER(0x206fa1b0, 32,  RW, HDMI, VMS_CFG_1)
BCHP_REGISTER(0x206fa1b4, 32,  RW, HDMI, SCRAMBLER_LFSR_0_INIT)
BCHP_REGISTER(0x206fa1b8, 32,  RW, HDMI, SCRAMBLER_LFSR_1_INIT)
BCHP_REGISTER(0x206fa1bc, 32,  RW, HDMI, SCRAMBLER_LFSR_2_INIT)
BCHP_REGISTER(0x206fa1c0, 32,  RW, HDMI, SCRAMBLER_LFSR_REVERSE)
BCHP_REGISTER(0x206fa1c4, 32,  RW, HDMI, SCRAMBLER_CTL)
BCHP_REGISTER(0x206fa1c8, 32,  RW, HDMI, CTL_UNSCRAMBLED_CFG_0)
BCHP_REGISTER(0x206fa1cc, 32,  RW, HDMI, CTL_UNSCRAMBLED_CFG_1)
BCHP_REGISTER(0x206fa1d0, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_0)
BCHP_REGISTER(0x206fa1d4, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_1)
BCHP_REGISTER(0x206fa1d8, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_2)
BCHP_REGISTER(0x206fa1dc, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_3)
BCHP_REGISTER(0x206fa1e0, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_4)
BCHP_REGISTER(0x206fa1e4, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_5)
BCHP_REGISTER(0x206fa1e8, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_6)
BCHP_REGISTER(0x206fa1ec, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_7)
BCHP_REGISTER(0x206fa1f0, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_8)
BCHP_REGISTER(0x206fa1f4, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_9)
BCHP_REGISTER(0x206fa1f8, 32,  RW, HDMI, CTL_SCRAMBLED_CFG_10)
BCHP_REGISTER(0x206fa1fc, 32,  RW, HDMI, MHL_CTL)
BCHP_REGISTER(0x206fa200, 32,  RW, HDMI, HDCP2TX_CFG0)
BCHP_REGISTER(0x206fa204, 32,  RW, HDMI, HDCP2TX_MBOX_0)
BCHP_REGISTER(0x206fa208, 32,  RW, HDMI, HDCP2TX_MBOX_1)
BCHP_REGISTER(0x206fa20c, 32,  RO, HDMI, HDCP2TX_STATUS)
BCHP_REGISTER(0x206fa210, 32,  RW, HDMI, HDCP2TX_AUTH_CTL)
BCHP_REGISTER(0x206fa214, 32,  RW, HDMI, HDCP2TX_CTRL0)
BCHP_REGISTER(0x206fa218, 32,  RW, HDMI, ERR_INSERT_CTRL)
BCHP_REGISTER(0x206fa21c, 32,  RW, HDMI, ERR_INSERT_CFG_0)
BCHP_REGISTER(0x206fa220, 32,  RW, HDMI, ERR_INSERT_CFG_1)
BCHP_REGISTER(0x206fa224, 32,  RW, HDMI, ERR_INSERT_CFG_2)
BCHP_REGISTER(0x206fa228, 32,  RW, HDMI, ERR_INSERT_CFG_3)
BCHP_REGISTER(0x206fa22c, 32,  RW, HDMI, ERR_INSERT_CFG_4)
BCHP_REGISTER(0x206fa230, 32,  RW, HDMI, ERR_INSERT_CFG_5)
BCHP_REGISTER(0x206fa234, 32,  RW, HDMI, ERR_INSERT_CFG_6)
BCHP_REGISTER(0x206fa238, 32,  RW, HDMI, ERR_INSERT_CFG_7)
BCHP_REGISTER(0x206fa23c, 32,  RW, HDMI, ERR_INSERT_CFG_8)
BCHP_REGISTER(0x206fa240, 32,  RO, HDMI, ERR_CNT_0)
BCHP_REGISTER(0x206fa244, 32,  RO, HDMI, ERR_CNT_1)
BCHP_REGISTER(0x206fa248, 32,  RO, HDMI, ERR_CNT_2)
BCHP_REGISTER(0x206fa24c, 32,  RO, HDMI, PIXEL_CNT_L)
BCHP_REGISTER(0x206fa250, 32,  RO, HDMI, PIXEL_CNT_H)
BCHP_REGISTER(0x206fa254, 32, CFG, HDMI, DV_CFG)
BCHP_REGISTER(0x206fa258, 32, CFG, HDMI, MD_BYTES)
BCHP_REGISTER(0x206fa25c, 32, CFG, HDMI, HDR_CFG)
BCHP_REGISTER(0x206fa260, 32,  RW, HDMI, HDR_DEBUG0)
BCHP_REGISTER(0x206fa264, 32,  RO, HDMI, HDR_DEBUG1)
BCHP_REGISTER(0x206fa268, 32,  RW, HDMI, HDR_DEBUG2)
BCHP_REGISTER(0x206fa26c, 32, CFG, HDMI, HDR_GI_COLOR)
BCHP_REGISTER(0x206fa270, 32,  RO, HDMI, HDR_RAM_STABLE)
BCHP_REGISTER(0x206fa274, 32,  RO, HDMI, HDR_DESC_BANK_TO_VSYNC_CNT)
BCHP_REGISTER(0x206fa278, 32,  RO, HDMI, EM_PACKET_STATUS)
BCHP_REGISTER(0x206fa2fc, 32,  RW, HDMI, SPARE_REG2)
BCHP_REGISTER(0x206fa400, 32,  RW, HDMI_TX_AUTO_I2C, CH0_CFG)
BCHP_REGISTER(0x206fa404, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG0_CFG)
BCHP_REGISTER(0x206fa408, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG0_WD)
BCHP_REGISTER(0x206fa40c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG1_CFG)
BCHP_REGISTER(0x206fa410, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG1_WD)
BCHP_REGISTER(0x206fa414, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG2_CFG)
BCHP_REGISTER(0x206fa418, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG2_WD)
BCHP_REGISTER(0x206fa41c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG3_CFG)
BCHP_REGISTER(0x206fa420, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG3_WD)
BCHP_REGISTER(0x206fa424, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG4_CFG)
BCHP_REGISTER(0x206fa428, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG4_WD)
BCHP_REGISTER(0x206fa42c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG5_CFG)
BCHP_REGISTER(0x206fa430, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG5_WD)
BCHP_REGISTER(0x206fa434, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG6_CFG)
BCHP_REGISTER(0x206fa438, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG6_WD)
BCHP_REGISTER(0x206fa43c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG7_CFG)
BCHP_REGISTER(0x206fa440, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG7_WD)
BCHP_REGISTER(0x206fa444, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG8_CFG)
BCHP_REGISTER(0x206fa448, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG8_WD)
BCHP_REGISTER(0x206fa44c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG9_CFG)
BCHP_REGISTER(0x206fa450, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG9_WD)
BCHP_REGISTER(0x206fa454, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG10_CFG)
BCHP_REGISTER(0x206fa458, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG10_WD)
BCHP_REGISTER(0x206fa45c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG11_CFG)
BCHP_REGISTER(0x206fa460, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG11_WD)
BCHP_REGISTER(0x206fa464, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG12_CFG)
BCHP_REGISTER(0x206fa468, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG12_WD)
BCHP_REGISTER(0x206fa46c, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG13_CFG)
BCHP_REGISTER(0x206fa470, 32,  RW, HDMI_TX_AUTO_I2C, CH0_REG13_WD)
BCHP_REGISTER(0x206fa474, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_0)
BCHP_REGISTER(0x206fa478, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_1)
BCHP_REGISTER(0x206fa47c, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_2)
BCHP_REGISTER(0x206fa480, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_3)
BCHP_REGISTER(0x206fa484, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_4)
BCHP_REGISTER(0x206fa488, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_5)
BCHP_REGISTER(0x206fa48c, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_6)
BCHP_REGISTER(0x206fa490, 32,  RO, HDMI_TX_AUTO_I2C, CH0_RD_7)
BCHP_REGISTER(0x206fa494, 32,  RO, HDMI_TX_AUTO_I2C, CH0_STAT)
BCHP_REGISTER(0x206fa498, 32,  RW, HDMI_TX_AUTO_I2C, CH1_CFG)
BCHP_REGISTER(0x206fa49c, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG0_CFG)
BCHP_REGISTER(0x206fa4a0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG0_WD)
BCHP_REGISTER(0x206fa4a4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG1_CFG)
BCHP_REGISTER(0x206fa4a8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG1_WD)
BCHP_REGISTER(0x206fa4ac, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG2_CFG)
BCHP_REGISTER(0x206fa4b0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG2_WD)
BCHP_REGISTER(0x206fa4b4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG3_CFG)
BCHP_REGISTER(0x206fa4b8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG3_WD)
BCHP_REGISTER(0x206fa4bc, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG4_CFG)
BCHP_REGISTER(0x206fa4c0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG4_WD)
BCHP_REGISTER(0x206fa4c4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG5_CFG)
BCHP_REGISTER(0x206fa4c8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG5_WD)
BCHP_REGISTER(0x206fa4cc, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG6_CFG)
BCHP_REGISTER(0x206fa4d0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG6_WD)
BCHP_REGISTER(0x206fa4d4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG7_CFG)
BCHP_REGISTER(0x206fa4d8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG7_WD)
BCHP_REGISTER(0x206fa4dc, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG8_CFG)
BCHP_REGISTER(0x206fa4e0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG8_WD)
BCHP_REGISTER(0x206fa4e4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG9_CFG)
BCHP_REGISTER(0x206fa4e8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG9_WD)
BCHP_REGISTER(0x206fa4ec, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG10_CFG)
BCHP_REGISTER(0x206fa4f0, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG10_WD)
BCHP_REGISTER(0x206fa4f4, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG11_CFG)
BCHP_REGISTER(0x206fa4f8, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG11_WD)
BCHP_REGISTER(0x206fa4fc, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG12_CFG)
BCHP_REGISTER(0x206fa500, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG12_WD)
BCHP_REGISTER(0x206fa504, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG13_CFG)
BCHP_REGISTER(0x206fa508, 32,  RW, HDMI_TX_AUTO_I2C, CH1_REG13_WD)
BCHP_REGISTER(0x206fa50c, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_0)
BCHP_REGISTER(0x206fa510, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_1)
BCHP_REGISTER(0x206fa514, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_2)
BCHP_REGISTER(0x206fa518, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_3)
BCHP_REGISTER(0x206fa51c, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_4)
BCHP_REGISTER(0x206fa520, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_5)
BCHP_REGISTER(0x206fa524, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_6)
BCHP_REGISTER(0x206fa528, 32,  RO, HDMI_TX_AUTO_I2C, CH1_RD_7)
BCHP_REGISTER(0x206fa52c, 32,  RO, HDMI_TX_AUTO_I2C, CH1_STAT)
BCHP_REGISTER(0x206fa530, 32,  RW, HDMI_TX_AUTO_I2C, CH2_CFG)
BCHP_REGISTER(0x206fa534, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG0_CFG)
BCHP_REGISTER(0x206fa538, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG0_WD)
BCHP_REGISTER(0x206fa53c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG1_CFG)
BCHP_REGISTER(0x206fa540, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG1_WD)
BCHP_REGISTER(0x206fa544, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG2_CFG)
BCHP_REGISTER(0x206fa548, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG2_WD)
BCHP_REGISTER(0x206fa54c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG3_CFG)
BCHP_REGISTER(0x206fa550, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG3_WD)
BCHP_REGISTER(0x206fa554, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG4_CFG)
BCHP_REGISTER(0x206fa558, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG4_WD)
BCHP_REGISTER(0x206fa55c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG5_CFG)
BCHP_REGISTER(0x206fa560, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG5_WD)
BCHP_REGISTER(0x206fa564, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG6_CFG)
BCHP_REGISTER(0x206fa568, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG6_WD)
BCHP_REGISTER(0x206fa56c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG7_CFG)
BCHP_REGISTER(0x206fa570, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG7_WD)
BCHP_REGISTER(0x206fa574, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG8_CFG)
BCHP_REGISTER(0x206fa578, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG8_WD)
BCHP_REGISTER(0x206fa57c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG9_CFG)
BCHP_REGISTER(0x206fa580, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG9_WD)
BCHP_REGISTER(0x206fa584, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG10_CFG)
BCHP_REGISTER(0x206fa588, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG10_WD)
BCHP_REGISTER(0x206fa58c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG11_CFG)
BCHP_REGISTER(0x206fa590, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG11_WD)
BCHP_REGISTER(0x206fa594, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG12_CFG)
BCHP_REGISTER(0x206fa598, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG12_WD)
BCHP_REGISTER(0x206fa59c, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG13_CFG)
BCHP_REGISTER(0x206fa5a0, 32,  RW, HDMI_TX_AUTO_I2C, CH2_REG13_WD)
BCHP_REGISTER(0x206fa5a4, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_0)
BCHP_REGISTER(0x206fa5a8, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_1)
BCHP_REGISTER(0x206fa5ac, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_2)
BCHP_REGISTER(0x206fa5b0, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_3)
BCHP_REGISTER(0x206fa5b4, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_4)
BCHP_REGISTER(0x206fa5b8, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_5)
BCHP_REGISTER(0x206fa5bc, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_6)
BCHP_REGISTER(0x206fa5c0, 32,  RO, HDMI_TX_AUTO_I2C, CH2_RD_7)
BCHP_REGISTER(0x206fa5c4, 32,  RO, HDMI_TX_AUTO_I2C, CH2_STAT)
BCHP_REGISTER(0x206fa5c8, 32,  RW, HDMI_TX_AUTO_I2C, CH3_CFG)
BCHP_REGISTER(0x206fa5cc, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG0_CFG)
BCHP_REGISTER(0x206fa5d0, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG0_WD)
BCHP_REGISTER(0x206fa5d4, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG1_CFG)
BCHP_REGISTER(0x206fa5d8, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG1_WD)
BCHP_REGISTER(0x206fa5dc, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG2_CFG)
BCHP_REGISTER(0x206fa5e0, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG2_WD)
BCHP_REGISTER(0x206fa5e4, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG3_CFG)
BCHP_REGISTER(0x206fa5e8, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG3_WD)
BCHP_REGISTER(0x206fa5ec, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG4_CFG)
BCHP_REGISTER(0x206fa5f0, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG4_WD)
BCHP_REGISTER(0x206fa5f4, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG5_CFG)
BCHP_REGISTER(0x206fa5f8, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG5_WD)
BCHP_REGISTER(0x206fa5fc, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG6_CFG)
BCHP_REGISTER(0x206fa600, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG6_WD)
BCHP_REGISTER(0x206fa604, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG7_CFG)
BCHP_REGISTER(0x206fa608, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG7_WD)
BCHP_REGISTER(0x206fa60c, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG8_CFG)
BCHP_REGISTER(0x206fa610, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG8_WD)
BCHP_REGISTER(0x206fa614, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG9_CFG)
BCHP_REGISTER(0x206fa618, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG9_WD)
BCHP_REGISTER(0x206fa61c, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG10_CFG)
BCHP_REGISTER(0x206fa620, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG10_WD)
BCHP_REGISTER(0x206fa624, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG11_CFG)
BCHP_REGISTER(0x206fa628, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG11_WD)
BCHP_REGISTER(0x206fa62c, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG12_CFG)
BCHP_REGISTER(0x206fa630, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG12_WD)
BCHP_REGISTER(0x206fa634, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG13_CFG)
BCHP_REGISTER(0x206fa638, 32,  RW, HDMI_TX_AUTO_I2C, CH3_REG13_WD)
BCHP_REGISTER(0x206fa63c, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_0)
BCHP_REGISTER(0x206fa640, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_1)
BCHP_REGISTER(0x206fa644, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_2)
BCHP_REGISTER(0x206fa648, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_3)
BCHP_REGISTER(0x206fa64c, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_4)
BCHP_REGISTER(0x206fa650, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_5)
BCHP_REGISTER(0x206fa654, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_6)
BCHP_REGISTER(0x206fa658, 32,  RO, HDMI_TX_AUTO_I2C, CH3_RD_7)
BCHP_REGISTER(0x206fa65c, 32,  RO, HDMI_TX_AUTO_I2C, CH3_STAT)
BCHP_REGISTER(0x206fa660, 32,  RW, HDMI_TX_AUTO_I2C, START)
BCHP_REGISTER(0x206fa664, 32,  RW, HDMI_TX_AUTO_I2C, TRANSACTION_DONE_STAT_CLEAR)
BCHP_REGISTER(0x206fa668, 32,  RO, HDMI_TX_AUTO_I2C, TRANSACTION_DONE_STAT)
BCHP_REGISTER(0x206fa66c, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_AUTO_I2C_CTRL0)
BCHP_REGISTER(0x206fa670, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_RXSTATUS)
BCHP_REGISTER(0x206fa674, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_STATUS0)
BCHP_REGISTER(0x206fa678, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WR_FIFO_I2C_CTRL0)
BCHP_REGISTER(0x206fa67c, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WR_FIFO_I2C_CFG0)
BCHP_REGISTER(0x206fa680, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_WR_FIFO_STATUS0)
BCHP_REGISTER(0x206fa684, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WR_FIFO_WRITE_CMD)
BCHP_REGISTER(0x206fa688, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WR_FIFO_WRITE_DATA)
BCHP_REGISTER(0x206fa68c, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_TIMEOUT_CFG0)
BCHP_REGISTER(0x206fa690, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_TIMEOUT_CFG1)
BCHP_REGISTER(0x206fa694, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_TIMEOUT_CFG2)
BCHP_REGISTER(0x206fa698, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_ENC_EN_DELAY_CFG0)
BCHP_REGISTER(0x206fa69c, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_ENC_EN_DELAY_CFG1)
BCHP_REGISTER(0x206fa6a0, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_CURRENT_TIMER_0)
BCHP_REGISTER(0x206fa6a4, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_CURRENT_TIMER_1)
BCHP_REGISTER(0x206fa6a8, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RXINFO)
BCHP_REGISTER(0x206fa6ac, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RXCAPS)
BCHP_REGISTER(0x206fa6b0, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_TXCAPS)
BCHP_REGISTER(0x206fa6b4, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_I2C_CTRL0)
BCHP_REGISTER(0x206fa6b8, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_I2C_CFG0)
BCHP_REGISTER(0x206fa6bc, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_STATUS0)
BCHP_REGISTER(0x206fa6c0, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_STATUS1)
BCHP_REGISTER(0x206fa6c4, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_READ_CMD)
BCHP_REGISTER(0x206fa6c8, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_RD_FIFO_READ_DATA)
BCHP_REGISTER(0x206fa6cc, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RD_MSG_MANUAL_CFG)
BCHP_REGISTER(0x206fa6d0, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_FSM_OVERRIDE_CTL)
BCHP_REGISTER(0x206fa6d4, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WM_M0)
BCHP_REGISTER(0x206fa6d8, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WM_M1)
BCHP_REGISTER(0x206fa6dc, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_WM_M2)
BCHP_REGISTER(0x206fa6e0, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RM_M0)
BCHP_REGISTER(0x206fa6e4, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RM_M1)
BCHP_REGISTER(0x206fa6e8, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RM_M2)
BCHP_REGISTER(0x206fa6ec, 32,  RW, HDMI_TX_AUTO_I2C, HDCP2TX_RM_M3)
BCHP_REGISTER(0x206fa6f0, 32,  RO, HDMI_TX_AUTO_I2C, HDCP2TX_FSM_DEBUG)
BCHP_REGISTER(0x206fa6fc, 32,  RW, HDMI_TX_AUTO_I2C, SPARE_REG2)
BCHP_REGISTER(0x206fa800, 32,  RW, HDMI_TX_PHY, RESET_CTL)
BCHP_REGISTER(0x206fa804, 32,  RW, HDMI_TX_PHY, POWERDOWN_CTL)
BCHP_REGISTER(0x206fa808, 32,  RW, HDMI_TX_PHY, CTL_0)
BCHP_REGISTER(0x206fa80c, 32,  RW, HDMI_TX_PHY, CTL_1)
BCHP_REGISTER(0x206fa810, 32,  RW, HDMI_TX_PHY, CTL_2)
BCHP_REGISTER(0x206fa814, 32,  RW, HDMI_TX_PHY, CTL_3)
BCHP_REGISTER(0x206fa818, 32,  RW, HDMI_TX_PHY, CTL_4)
BCHP_REGISTER(0x206fa81c, 32,  RW, HDMI_TX_PHY, PLL_CTL_0)
BCHP_REGISTER(0x206fa820, 32,  RW, HDMI_TX_PHY, PLL_CTL_1)
BCHP_REGISTER(0x206fa824, 32,  RW, HDMI_TX_PHY, PLL_CLK_DISABLE)
BCHP_REGISTER(0x206fa828, 32,  RW, HDMI_TX_PHY, CLK_DIV)
BCHP_REGISTER(0x206fa82c, 32,  RW, HDMI_TX_PHY, SSC_CFG_0)
BCHP_REGISTER(0x206fa830, 32,  RW, HDMI_TX_PHY, SSC_CFG_1)
BCHP_REGISTER(0x206fa834, 32,  RW, HDMI_TX_PHY, PLL_CFG)
BCHP_REGISTER(0x206fa838, 32,  RW, HDMI_TX_PHY, TMDS_CFG_0)
BCHP_REGISTER(0x206fa83c, 32,  RW, HDMI_TX_PHY, TMDS_CFG_1)
BCHP_REGISTER(0x206fa840, 32,  RW, HDMI_TX_PHY, TMDS_CFG_2)
BCHP_REGISTER(0x206fa844, 32,  RW, HDMI_TX_PHY, TMDS_CLK_WORD_SEL)
BCHP_REGISTER(0x206fa848, 32,  RO, HDMI_TX_PHY, STATUS)
BCHP_REGISTER(0x206fa84c, 32,  RW, HDMI_TX_PHY, CHANNEL_SWAP)
BCHP_REGISTER(0x206fa850, 32,  RW, HDMI_TX_PHY, PLL_CALIBRATION_CONFIG_1)
BCHP_REGISTER(0x206fa854, 32,  RW, HDMI_TX_PHY, PLL_CALIBRATION_CONFIG_2)
BCHP_REGISTER(0x206fa858, 32,  RW, HDMI_TX_PHY, PLL_CALIBRATION_CONFIG_3)
BCHP_REGISTER(0x206fa85c, 32,  RW, HDMI_TX_PHY, PLL_CALIBRATION_CONFIG_4)
BCHP_REGISTER(0x206fa860, 32,  RO, HDMI_TX_PHY, PLL_CALIBRATION_STATUS_1)
BCHP_REGISTER(0x206fa864, 32,  RO, HDMI_TX_PHY, PLL_CALIBRATION_STATUS_2)
BCHP_REGISTER(0x206fa868, 32,  RW, HDMI_TX_PHY, RSEN_CTL)
BCHP_REGISTER(0x206fa86c, 32,  RO, HDMI_TX_PHY, RSEN_STATUS)
BCHP_REGISTER(0x206fa870, 32,  RW, HDMI_TX_PHY, MHL_CTL_0)
BCHP_REGISTER(0x206fa874, 32,  RW, HDMI_TX_PHY, MHL_CTL_1)
BCHP_REGISTER(0x206fa87c, 32,  RW, HDMI_TX_PHY, SPARE_REG2)
BCHP_REGISTER(0x206fa880, 32,  RW, HDMI_RM, CONTROL)
BCHP_REGISTER(0x206fa884, 32,  RW, HDMI_RM, RATE_RATIO)
BCHP_REGISTER(0x206fa888, 32,  RW, HDMI_RM, SAMPLE_INC)
BCHP_REGISTER(0x206fa88c, 32,  RW, HDMI_RM, PHASE_INC)
BCHP_REGISTER(0x206fa890, 32,  WO, HDMI_RM, INTEGRATOR_HI)
BCHP_REGISTER(0x206fa894, 32,  WO, HDMI_RM, INTEGRATOR_LO)
BCHP_REGISTER(0x206fa898, 32,  RW, HDMI_RM, OFFSET)
BCHP_REGISTER(0x206fa89c, 32,  RW, HDMI_RM, FORMAT)
BCHP_REGISTER(0x206fa8a0, 32,  RW, HDMI_RM, SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x206fa8a4, 32,  RW, HDMI_RM, SKIP_REPEAT_GAP)
BCHP_REGISTER(0x206fa8a8, 32,  RW, HDMI_RM, SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x206fa8ac, 32,  RO, HDMI_RM, INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x206fa8b0, 32,  RO, HDMI_RM, INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x206fa8b4, 32,  RO, HDMI_RM, STATUS)
BCHP_REGISTER(0x206fa8b8, 32,  RW, HDMI_RM, STATUS_CLEAR)
BCHP_REGISTER(0x206fa900, 32,  RO, HDMI_TX_INTR2, CPU_STATUS)
BCHP_REGISTER(0x206fa904, 32,  WO, HDMI_TX_INTR2, CPU_SET)
BCHP_REGISTER(0x206fa908, 32,  WO, HDMI_TX_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x206fa90c, 32,  RO, HDMI_TX_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x206fa910, 32,  WO, HDMI_TX_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x206fa914, 32,  WO, HDMI_TX_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x206fa918, 32,  RO, HDMI_TX_INTR2, PCI_STATUS)
BCHP_REGISTER(0x206fa91c, 32,  WO, HDMI_TX_INTR2, PCI_SET)
BCHP_REGISTER(0x206fa920, 32,  WO, HDMI_TX_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x206fa924, 32,  RO, HDMI_TX_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x206fa928, 32,  WO, HDMI_TX_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x206fa92c, 32,  WO, HDMI_TX_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x206fa980, 32,  RO, HDMI_TX_SCDC_INTR2_0, CPU_STATUS)
BCHP_REGISTER(0x206fa984, 32,  WO, HDMI_TX_SCDC_INTR2_0, CPU_SET)
BCHP_REGISTER(0x206fa988, 32,  WO, HDMI_TX_SCDC_INTR2_0, CPU_CLEAR)
BCHP_REGISTER(0x206fa98c, 32,  RO, HDMI_TX_SCDC_INTR2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x206fa990, 32,  WO, HDMI_TX_SCDC_INTR2_0, CPU_MASK_SET)
BCHP_REGISTER(0x206fa994, 32,  WO, HDMI_TX_SCDC_INTR2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x206fa998, 32,  RO, HDMI_TX_SCDC_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x206fa99c, 32,  WO, HDMI_TX_SCDC_INTR2_0, PCI_SET)
BCHP_REGISTER(0x206fa9a0, 32,  WO, HDMI_TX_SCDC_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x206fa9a4, 32,  RO, HDMI_TX_SCDC_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x206fa9a8, 32,  WO, HDMI_TX_SCDC_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x206fa9ac, 32,  WO, HDMI_TX_SCDC_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x206faa00, 32,  RO, HDCP2_TX_HAE_INTR2_0, CPU_STATUS)
BCHP_REGISTER(0x206faa04, 32,  WO, HDCP2_TX_HAE_INTR2_0, CPU_SET)
BCHP_REGISTER(0x206faa08, 32,  WO, HDCP2_TX_HAE_INTR2_0, CPU_CLEAR)
BCHP_REGISTER(0x206faa0c, 32,  RO, HDCP2_TX_HAE_INTR2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x206faa10, 32,  WO, HDCP2_TX_HAE_INTR2_0, CPU_MASK_SET)
BCHP_REGISTER(0x206faa14, 32,  WO, HDCP2_TX_HAE_INTR2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x206faa18, 32,  RO, HDCP2_TX_HAE_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x206faa1c, 32,  WO, HDCP2_TX_HAE_INTR2_0, PCI_SET)
BCHP_REGISTER(0x206faa20, 32,  WO, HDCP2_TX_HAE_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x206faa24, 32,  RO, HDCP2_TX_HAE_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x206faa28, 32,  WO, HDCP2_TX_HAE_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x206faa2c, 32,  WO, HDCP2_TX_HAE_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x206faa80, 32,  RO, HDMI_TX_HAE_INTR2_0, CPU_STATUS)
BCHP_REGISTER(0x206faa84, 32,  WO, HDMI_TX_HAE_INTR2_0, CPU_SET)
BCHP_REGISTER(0x206faa88, 32,  WO, HDMI_TX_HAE_INTR2_0, CPU_CLEAR)
BCHP_REGISTER(0x206faa8c, 32,  RO, HDMI_TX_HAE_INTR2_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x206faa90, 32,  WO, HDMI_TX_HAE_INTR2_0, CPU_MASK_SET)
BCHP_REGISTER(0x206faa94, 32,  WO, HDMI_TX_HAE_INTR2_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x206faa98, 32,  RO, HDMI_TX_HAE_INTR2_0, PCI_STATUS)
BCHP_REGISTER(0x206faa9c, 32,  WO, HDMI_TX_HAE_INTR2_0, PCI_SET)
BCHP_REGISTER(0x206faaa0, 32,  WO, HDMI_TX_HAE_INTR2_0, PCI_CLEAR)
BCHP_REGISTER(0x206faaa4, 32,  RO, HDMI_TX_HAE_INTR2_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x206faaa8, 32,  WO, HDMI_TX_HAE_INTR2_0, PCI_MASK_SET)
BCHP_REGISTER(0x206faaac, 32,  WO, HDMI_TX_HAE_INTR2_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x206fac00, 32,  RW, HDMI_RAM, GCP_0)
BCHP_REGISTER(0x206fac04, 32,  RW, HDMI_RAM, GCP_1)
BCHP_REGISTER(0x206fac08, 32,  RW, HDMI_RAM, GCP_2)
BCHP_REGISTER(0x206fac0c, 32,  RW, HDMI_RAM, GCP_3)
BCHP_REGISTER(0x206fac10, 32,  RW, HDMI_RAM, GCP_4)
BCHP_REGISTER(0x206fac14, 32,  RW, HDMI_RAM, GCP_5)
BCHP_REGISTER(0x206fac18, 32,  RW, HDMI_RAM, GCP_6)
BCHP_REGISTER(0x206fac1c, 32,  RW, HDMI_RAM, GCP_7)
BCHP_REGISTER(0x206fac20, 32,  RW, HDMI_RAM, GCP_8)
BCHP_REGISTER(0x206fac24, 32,  RW, HDMI_RAM, PACKET_1_0)
BCHP_REGISTER(0x206fac28, 32,  RW, HDMI_RAM, PACKET_1_1)
BCHP_REGISTER(0x206fac2c, 32,  RW, HDMI_RAM, PACKET_1_2)
BCHP_REGISTER(0x206fac30, 32,  RW, HDMI_RAM, PACKET_1_3)
BCHP_REGISTER(0x206fac34, 32,  RW, HDMI_RAM, PACKET_1_4)
BCHP_REGISTER(0x206fac38, 32,  RW, HDMI_RAM, PACKET_1_5)
BCHP_REGISTER(0x206fac3c, 32,  RW, HDMI_RAM, PACKET_1_6)
BCHP_REGISTER(0x206fac40, 32,  RW, HDMI_RAM, PACKET_1_7)
BCHP_REGISTER(0x206fac44, 32,  RW, HDMI_RAM, PACKET_1_8)
BCHP_REGISTER(0x206fac48, 32,  RW, HDMI_RAM, PACKET_2_0)
BCHP_REGISTER(0x206fac4c, 32,  RW, HDMI_RAM, PACKET_2_1)
BCHP_REGISTER(0x206fac50, 32,  RW, HDMI_RAM, PACKET_2_2)
BCHP_REGISTER(0x206fac54, 32,  RW, HDMI_RAM, PACKET_2_3)
BCHP_REGISTER(0x206fac58, 32,  RW, HDMI_RAM, PACKET_2_4)
BCHP_REGISTER(0x206fac5c, 32,  RW, HDMI_RAM, PACKET_2_5)
BCHP_REGISTER(0x206fac60, 32,  RW, HDMI_RAM, PACKET_2_6)
BCHP_REGISTER(0x206fac64, 32,  RW, HDMI_RAM, PACKET_2_7)
BCHP_REGISTER(0x206fac68, 32,  RW, HDMI_RAM, PACKET_2_8)
BCHP_REGISTER(0x206fac6c, 32,  RW, HDMI_RAM, PACKET_3_0)
BCHP_REGISTER(0x206fac70, 32,  RW, HDMI_RAM, PACKET_3_1)
BCHP_REGISTER(0x206fac74, 32,  RW, HDMI_RAM, PACKET_3_2)
BCHP_REGISTER(0x206fac78, 32,  RW, HDMI_RAM, PACKET_3_3)
BCHP_REGISTER(0x206fac7c, 32,  RW, HDMI_RAM, PACKET_3_4)
BCHP_REGISTER(0x206fac80, 32,  RW, HDMI_RAM, PACKET_3_5)
BCHP_REGISTER(0x206fac84, 32,  RW, HDMI_RAM, PACKET_3_6)
BCHP_REGISTER(0x206fac88, 32,  RW, HDMI_RAM, PACKET_3_7)
BCHP_REGISTER(0x206fac8c, 32,  RW, HDMI_RAM, PACKET_3_8)
BCHP_REGISTER(0x206fac90, 32,  RW, HDMI_RAM, PACKET_4_0)
BCHP_REGISTER(0x206fac94, 32,  RW, HDMI_RAM, PACKET_4_1)
BCHP_REGISTER(0x206fac98, 32,  RW, HDMI_RAM, PACKET_4_2)
BCHP_REGISTER(0x206fac9c, 32,  RW, HDMI_RAM, PACKET_4_3)
BCHP_REGISTER(0x206faca0, 32,  RW, HDMI_RAM, PACKET_4_4)
BCHP_REGISTER(0x206faca4, 32,  RW, HDMI_RAM, PACKET_4_5)
BCHP_REGISTER(0x206faca8, 32,  RW, HDMI_RAM, PACKET_4_6)
BCHP_REGISTER(0x206facac, 32,  RW, HDMI_RAM, PACKET_4_7)
BCHP_REGISTER(0x206facb0, 32,  RW, HDMI_RAM, PACKET_4_8)
BCHP_REGISTER(0x206facb4, 32,  RW, HDMI_RAM, PACKET_5_0)
BCHP_REGISTER(0x206facb8, 32,  RW, HDMI_RAM, PACKET_5_1)
BCHP_REGISTER(0x206facbc, 32,  RW, HDMI_RAM, PACKET_5_2)
BCHP_REGISTER(0x206facc0, 32,  RW, HDMI_RAM, PACKET_5_3)
BCHP_REGISTER(0x206facc4, 32,  RW, HDMI_RAM, PACKET_5_4)
BCHP_REGISTER(0x206facc8, 32,  RW, HDMI_RAM, PACKET_5_5)
BCHP_REGISTER(0x206faccc, 32,  RW, HDMI_RAM, PACKET_5_6)
BCHP_REGISTER(0x206facd0, 32,  RW, HDMI_RAM, PACKET_5_7)
BCHP_REGISTER(0x206facd4, 32,  RW, HDMI_RAM, PACKET_5_8)
BCHP_REGISTER(0x206facd8, 32,  RW, HDMI_RAM, PACKET_6_0)
BCHP_REGISTER(0x206facdc, 32,  RW, HDMI_RAM, PACKET_6_1)
BCHP_REGISTER(0x206face0, 32,  RW, HDMI_RAM, PACKET_6_2)
BCHP_REGISTER(0x206face4, 32,  RW, HDMI_RAM, PACKET_6_3)
BCHP_REGISTER(0x206face8, 32,  RW, HDMI_RAM, PACKET_6_4)
BCHP_REGISTER(0x206facec, 32,  RW, HDMI_RAM, PACKET_6_5)
BCHP_REGISTER(0x206facf0, 32,  RW, HDMI_RAM, PACKET_6_6)
BCHP_REGISTER(0x206facf4, 32,  RW, HDMI_RAM, PACKET_6_7)
BCHP_REGISTER(0x206facf8, 32,  RW, HDMI_RAM, PACKET_6_8)
BCHP_REGISTER(0x206facfc, 32,  RW, HDMI_RAM, PACKET_7_0)
BCHP_REGISTER(0x206fad00, 32,  RW, HDMI_RAM, PACKET_7_1)
BCHP_REGISTER(0x206fad04, 32,  RW, HDMI_RAM, PACKET_7_2)
BCHP_REGISTER(0x206fad08, 32,  RW, HDMI_RAM, PACKET_7_3)
BCHP_REGISTER(0x206fad0c, 32,  RW, HDMI_RAM, PACKET_7_4)
BCHP_REGISTER(0x206fad10, 32,  RW, HDMI_RAM, PACKET_7_5)
BCHP_REGISTER(0x206fad14, 32,  RW, HDMI_RAM, PACKET_7_6)
BCHP_REGISTER(0x206fad18, 32,  RW, HDMI_RAM, PACKET_7_7)
BCHP_REGISTER(0x206fad1c, 32,  RW, HDMI_RAM, PACKET_7_8)
BCHP_REGISTER(0x206fad20, 32,  RW, HDMI_RAM, PACKET_8_0)
BCHP_REGISTER(0x206fad24, 32,  RW, HDMI_RAM, PACKET_8_1)
BCHP_REGISTER(0x206fad28, 32,  RW, HDMI_RAM, PACKET_8_2)
BCHP_REGISTER(0x206fad2c, 32,  RW, HDMI_RAM, PACKET_8_3)
BCHP_REGISTER(0x206fad30, 32,  RW, HDMI_RAM, PACKET_8_4)
BCHP_REGISTER(0x206fad34, 32,  RW, HDMI_RAM, PACKET_8_5)
BCHP_REGISTER(0x206fad38, 32,  RW, HDMI_RAM, PACKET_8_6)
BCHP_REGISTER(0x206fad3c, 32,  RW, HDMI_RAM, PACKET_8_7)
BCHP_REGISTER(0x206fad40, 32,  RW, HDMI_RAM, PACKET_8_8)
BCHP_REGISTER(0x206fad44, 32,  RW, HDMI_RAM, PACKET_9_0)
BCHP_REGISTER(0x206fad48, 32,  RW, HDMI_RAM, PACKET_9_1)
BCHP_REGISTER(0x206fad4c, 32,  RW, HDMI_RAM, PACKET_9_2)
BCHP_REGISTER(0x206fad50, 32,  RW, HDMI_RAM, PACKET_9_3)
BCHP_REGISTER(0x206fad54, 32,  RW, HDMI_RAM, PACKET_9_4)
BCHP_REGISTER(0x206fad58, 32,  RW, HDMI_RAM, PACKET_9_5)
BCHP_REGISTER(0x206fad5c, 32,  RW, HDMI_RAM, PACKET_9_6)
BCHP_REGISTER(0x206fad60, 32,  RW, HDMI_RAM, PACKET_9_7)
BCHP_REGISTER(0x206fad64, 32,  RW, HDMI_RAM, PACKET_9_8)
BCHP_REGISTER(0x206fad68, 32,  RW, HDMI_RAM, PACKET_10_0)
BCHP_REGISTER(0x206fad6c, 32,  RW, HDMI_RAM, PACKET_10_1)
BCHP_REGISTER(0x206fad70, 32,  RW, HDMI_RAM, PACKET_10_2)
BCHP_REGISTER(0x206fad74, 32,  RW, HDMI_RAM, PACKET_10_3)
BCHP_REGISTER(0x206fad78, 32,  RW, HDMI_RAM, PACKET_10_4)
BCHP_REGISTER(0x206fad7c, 32,  RW, HDMI_RAM, PACKET_10_5)
BCHP_REGISTER(0x206fad80, 32,  RW, HDMI_RAM, PACKET_10_6)
BCHP_REGISTER(0x206fad84, 32,  RW, HDMI_RAM, PACKET_10_7)
BCHP_REGISTER(0x206fad88, 32,  RW, HDMI_RAM, PACKET_10_8)
BCHP_REGISTER(0x206fad8c, 32,  RW, HDMI_RAM, PACKET_11_0)
BCHP_REGISTER(0x206fad90, 32,  RW, HDMI_RAM, PACKET_11_1)
BCHP_REGISTER(0x206fad94, 32,  RW, HDMI_RAM, PACKET_11_2)
BCHP_REGISTER(0x206fad98, 32,  RW, HDMI_RAM, PACKET_11_3)
BCHP_REGISTER(0x206fad9c, 32,  RW, HDMI_RAM, PACKET_11_4)
BCHP_REGISTER(0x206fada0, 32,  RW, HDMI_RAM, PACKET_11_5)
BCHP_REGISTER(0x206fada4, 32,  RW, HDMI_RAM, PACKET_11_6)
BCHP_REGISTER(0x206fada8, 32,  RW, HDMI_RAM, PACKET_11_7)
BCHP_REGISTER(0x206fadac, 32,  RW, HDMI_RAM, PACKET_11_8)
BCHP_REGISTER(0x206fadb0, 32,  RW, HDMI_RAM, PACKET_12_0)
BCHP_REGISTER(0x206fadb4, 32,  RW, HDMI_RAM, PACKET_12_1)
BCHP_REGISTER(0x206fadb8, 32,  RW, HDMI_RAM, PACKET_12_2)
BCHP_REGISTER(0x206fadbc, 32,  RW, HDMI_RAM, PACKET_12_3)
BCHP_REGISTER(0x206fadc0, 32,  RW, HDMI_RAM, PACKET_12_4)
BCHP_REGISTER(0x206fadc4, 32,  RW, HDMI_RAM, PACKET_12_5)
BCHP_REGISTER(0x206fadc8, 32,  RW, HDMI_RAM, PACKET_12_6)
BCHP_REGISTER(0x206fadcc, 32,  RW, HDMI_RAM, PACKET_12_7)
BCHP_REGISTER(0x206fadd0, 32,  RW, HDMI_RAM, PACKET_12_8)
BCHP_REGISTER(0x206fadd4, 32,  RW, HDMI_RAM, PACKET_13_0)
BCHP_REGISTER(0x206fadd8, 32,  RW, HDMI_RAM, PACKET_13_1)
BCHP_REGISTER(0x206faddc, 32,  RW, HDMI_RAM, PACKET_13_2)
BCHP_REGISTER(0x206fade0, 32,  RW, HDMI_RAM, PACKET_13_3)
BCHP_REGISTER(0x206fade4, 32,  RW, HDMI_RAM, PACKET_13_4)
BCHP_REGISTER(0x206fade8, 32,  RW, HDMI_RAM, PACKET_13_5)
BCHP_REGISTER(0x206fadec, 32,  RW, HDMI_RAM, PACKET_13_6)
BCHP_REGISTER(0x206fadf0, 32,  RW, HDMI_RAM, PACKET_13_7)
BCHP_REGISTER(0x206fadf4, 32,  RW, HDMI_RAM, PACKET_13_8)
BCHP_REGISTER(0x206fadf8, 32,  RW, HDMI_RAM, PACKET_RSVD_0)
BCHP_REGISTER(0x206fadfc, 32,  RW, HDMI_RAM, PACKET_RSVD_1)
BCHP_REGISTER(0x209b0000, 32,  RO, M2MC, REVISION)
BCHP_REGISTER(0x209b0004, 32,  WO, M2MC, BLIT_GO)
BCHP_REGISTER(0x209b0008, 32,  RW, M2MC, SCRATCH_NOT_LIST)
BCHP_REGISTER(0x209b000c, 32,  RW, M2MC, LIST_CTRL)
BCHP_REGISTER(0x209b0010, 32,  RO, M2MC, LIST_STATUS)
BCHP_REGISTER(0x209b0014, 32,  RW, M2MC, LIST_FIRST_PKT_ADDR)
BCHP_REGISTER(0x209b0018, 32,  RO, M2MC, LIST_CURR_PKT_ADDR)
BCHP_REGISTER(0x209b001c, 32,  RO, M2MC, BLIT_STATUS)
BCHP_REGISTER(0x209b0020, 32,  RO, M2MC, BLIT_SRC_ADDRESS_MSB)
BCHP_REGISTER(0x209b0024, 32,  RO, M2MC, BLIT_SRC_ADDRESS)
BCHP_REGISTER(0x209b0028, 32,  RO, M2MC, BLIT_SRC_S1_ADDRESS_MSB)
BCHP_REGISTER(0x209b002c, 32,  RO, M2MC, BLIT_SRC_S1_ADDRESS)
BCHP_REGISTER(0x209b0030, 32,  RO, M2MC, BLIT_DEST_ADDRESS_MSB)
BCHP_REGISTER(0x209b0034, 32,  RO, M2MC, BLIT_DEST_ADDRESS)
BCHP_REGISTER(0x209b0038, 32,  RO, M2MC, BLIT_OUTPUT_ADDRESS_MSB)
BCHP_REGISTER(0x209b003c, 32,  RO, M2MC, BLIT_OUTPUT_ADDRESS)
BCHP_REGISTER(0x209b0040, 32,  RW, M2MC, BLIT_MEM_HI)
BCHP_REGISTER(0x209b0044, 32,  RW, M2MC, BLIT_MEM_LO)
BCHP_REGISTER(0x209b0048, 32,  RW, M2MC, BLIT_EXT_MEM_HI_MSB)
BCHP_REGISTER(0x209b004c, 32,  RW, M2MC, BLIT_EXT_MEM_HI)
BCHP_REGISTER(0x209b0050, 32,  RW, M2MC, BLIT_EXT_MEM_LO_MSB)
BCHP_REGISTER(0x209b0054, 32,  RW, M2MC, BLIT_EXT_MEM_LO)
BCHP_REGISTER(0x209b0058, 32,  RW, M2MC, SCBADDRSEL)
BCHP_REGISTER(0x209b005c, 32,  RW, M2MC, SCBADDRSEL_EXT)
BCHP_REGISTER(0x209b0060, 32,  RW, M2MC, DITHER_CONTROL_0)
BCHP_REGISTER(0x209b0064, 32,  RW, M2MC, DITHER_CONTROL_1)
BCHP_REGISTER(0x209b0068, 32,  RW, M2MC, DITHER_LFSR)
BCHP_REGISTER(0x209b006c, 32,  RW, M2MC, DITHER_LFSR_INIT)
BCHP_REGISTER(0x209b00b0, 32,  RW, M2MC, DRAM_MAP)
BCHP_REGISTER(0x209b0100, 32,  RW, M2MC, SCRATCH_LIST)
BCHP_REGISTER(0x209b0104, 32,  RW, M2MC, SRC_FEEDER_ENABLE)
BCHP_REGISTER(0x209b0108, 32,  RW, M2MC, SRC_SURFACE_ADDR_0_MSB)
BCHP_REGISTER(0x209b010c, 32,  RW, M2MC, SRC_SURFACE_ADDR_0)
BCHP_REGISTER(0x209b0110, 32,  RW, M2MC, SRC_SURFACE_ADDR_0_BOT_FLD_MSB)
BCHP_REGISTER(0x209b0114, 32,  RW, M2MC, SRC_SURFACE_ADDR_0_BOT_FLD)
BCHP_REGISTER(0x209b0118, 32,  RW, M2MC, SRC_SURFACE_STRIDE_0)
BCHP_REGISTER(0x209b011c, 32,  RW, M2MC, SRC_SURFACE_ADDR_1_MSB)
BCHP_REGISTER(0x209b0120, 32,  RW, M2MC, SRC_SURFACE_ADDR_1)
BCHP_REGISTER(0x209b0124, 32,  RW, M2MC, SRC_SURFACE_ADDR_1_BOT_FLD_MSB)
BCHP_REGISTER(0x209b0128, 32,  RW, M2MC, SRC_SURFACE_ADDR_1_BOT_FLD)
BCHP_REGISTER(0x209b012c, 32,  RW, M2MC, SRC_SURFACE_STRIDE_1)
BCHP_REGISTER(0x209b0130, 32,  RW, M2MC, SRC_SURFACE_0_FORMAT_DEF_1)
BCHP_REGISTER(0x209b0134, 32,  RW, M2MC, SRC_SURFACE_0_FORMAT_DEF_2)
BCHP_REGISTER(0x209b0138, 32,  RW, M2MC, SRC_SURFACE_0_FORMAT_DEF_3)
BCHP_REGISTER(0x209b013c, 32,  RW, M2MC, SRC_SURFACE_1_FORMAT_DEF_1)
BCHP_REGISTER(0x209b0140, 32,  RW, M2MC, SRC_SURFACE_1_FORMAT_DEF_2)
BCHP_REGISTER(0x209b0144, 32,  RW, M2MC, SRC_SURFACE_1_FORMAT_DEF_3)
BCHP_REGISTER(0x209b0148, 32,  RW, M2MC, SRC_W_ALPHA)
BCHP_REGISTER(0x209b014c, 32,  RW, M2MC, SRC_CONSTANT_COLOR)
BCHP_REGISTER(0x209b0150, 32,  RW, M2MC, DEST_FEEDER_ENABLE)
BCHP_REGISTER(0x209b0154, 32,  RW, M2MC, DEST_SURFACE_ADDR_0_MSB)
BCHP_REGISTER(0x209b0158, 32,  RW, M2MC, DEST_SURFACE_ADDR_0)
BCHP_REGISTER(0x209b015c, 32,  RW, M2MC, DEST_SURFACE_STRIDE_0)
BCHP_REGISTER(0x209b0160, 32,  RW, M2MC, DEST_SURFACE_ADDR_1_MSB)
BCHP_REGISTER(0x209b0164, 32,  RW, M2MC, DEST_SURFACE_ADDR_1)
BCHP_REGISTER(0x209b0168, 32,  RW, M2MC, DEST_SURFACE_STRIDE_1)
BCHP_REGISTER(0x209b016c, 32,  RW, M2MC, DEST_SURFACE_FORMAT_DEF_1)
BCHP_REGISTER(0x209b0170, 32,  RW, M2MC, DEST_SURFACE_FORMAT_DEF_2)
BCHP_REGISTER(0x209b0174, 32,  RW, M2MC, DEST_SURFACE_FORMAT_DEF_3)
BCHP_REGISTER(0x209b0178, 32,  RW, M2MC, DEST_W_ALPHA)
BCHP_REGISTER(0x209b017c, 32,  RW, M2MC, DEST_CONSTANT_COLOR)
BCHP_REGISTER(0x209b0180, 32,  RW, M2MC, OUTPUT_FEEDER_ENABLE)
BCHP_REGISTER(0x209b0184, 32,  RW, M2MC, OUTPUT_SURFACE_ADDR_0_MSB)
BCHP_REGISTER(0x209b0188, 32,  RW, M2MC, OUTPUT_SURFACE_ADDR_0)
BCHP_REGISTER(0x209b018c, 32,  RW, M2MC, OUTPUT_SURFACE_STRIDE_0)
BCHP_REGISTER(0x209b0190, 32,  RW, M2MC, OUTPUT_SURFACE_ADDR_1_MSB)
BCHP_REGISTER(0x209b0194, 32,  RW, M2MC, OUTPUT_SURFACE_ADDR_1)
BCHP_REGISTER(0x209b0198, 32,  RW, M2MC, OUTPUT_SURFACE_STRIDE_1)
BCHP_REGISTER(0x209b019c, 32,  RW, M2MC, OUTPUT_SURFACE_FORMAT_DEF_1)
BCHP_REGISTER(0x209b01a0, 32,  RW, M2MC, OUTPUT_SURFACE_FORMAT_DEF_2)
BCHP_REGISTER(0x209b01a4, 32,  RW, M2MC, OUTPUT_SURFACE_FORMAT_DEF_3)
BCHP_REGISTER(0x209b01a8, 32,  RW, M2MC, BLIT_HEADER)
BCHP_REGISTER(0x209b01ac, 32,  RW, M2MC, BLIT_SRC_TOP_LEFT_0)
BCHP_REGISTER(0x209b01b0, 32,  RW, M2MC, BLIT_SRC_SIZE_0)
BCHP_REGISTER(0x209b01b4, 32,  RW, M2MC, BLIT_SRC_TOP_LEFT_1)
BCHP_REGISTER(0x209b01b8, 32,  RW, M2MC, BLIT_SRC_SIZE_1)
BCHP_REGISTER(0x209b01bc, 32,  RW, M2MC, BLIT_SRC_STRIPE_HEIGHT_WIDTH_0)
BCHP_REGISTER(0x209b01c0, 32,  RW, M2MC, BLIT_SRC_STRIPE_HEIGHT_WIDTH_1)
BCHP_REGISTER(0x209b01c4, 32,  RW, M2MC, BLIT_DEST_TOP_LEFT)
BCHP_REGISTER(0x209b01c8, 32,  RW, M2MC, BLIT_DEST_SIZE)
BCHP_REGISTER(0x209b01cc, 32,  RW, M2MC, BLIT_OUTPUT_TOP_LEFT)
BCHP_REGISTER(0x209b01d0, 32,  RW, M2MC, BLIT_OUTPUT_SIZE)
BCHP_REGISTER(0x209b01d4, 32,  RW, M2MC, BLIT_INPUT_STRIPE_WIDTH_0)
BCHP_REGISTER(0x209b01d8, 32,  RW, M2MC, BLIT_INPUT_STRIPE_WIDTH_1)
BCHP_REGISTER(0x209b01dc, 32,  RW, M2MC, BLIT_OUTPUT_STRIPE_WIDTH)
BCHP_REGISTER(0x209b01e0, 32,  RW, M2MC, BLIT_STRIPE_OVERLAP_0)
BCHP_REGISTER(0x209b01e4, 32,  RW, M2MC, BLIT_STRIPE_OVERLAP_1)
BCHP_REGISTER(0x209b01e8, 32,  RW, M2MC, BLIT_CTRL)
BCHP_REGISTER(0x209b01fc, 32,  RW, M2MC, SCALER_CTRL)
BCHP_REGISTER(0x209b0200, 32,  RW, M2MC, HORIZ_AVERAGER_COUNT)
BCHP_REGISTER(0x209b0204, 32,  RW, M2MC, HORIZ_AVERAGER_COEFF)
BCHP_REGISTER(0x209b0208, 32,  RW, M2MC, VERT_AVERAGER_COUNT)
BCHP_REGISTER(0x209b020c, 32,  RW, M2MC, VERT_AVERAGER_COEFF)
BCHP_REGISTER(0x209b0210, 32,  RW, M2MC, HORIZ_SCALER_0_INITIAL_PHASE)
BCHP_REGISTER(0x209b0214, 32,  RW, M2MC, HORIZ_SCALER_0_STEP)
BCHP_REGISTER(0x209b0218, 32,  RW, M2MC, HORIZ_SCALER_1_INITIAL_PHASE)
BCHP_REGISTER(0x209b021c, 32,  RW, M2MC, HORIZ_SCALER_1_STEP)
BCHP_REGISTER(0x209b0220, 32,  RW, M2MC, VERT_SCALER_0_INITIAL_PHASE)
BCHP_REGISTER(0x209b0224, 32,  RW, M2MC, VERT_SCALER_0_STEP)
BCHP_REGISTER(0x209b0228, 32,  RW, M2MC, VERT_SCALER_1_INITIAL_PHASE)
BCHP_REGISTER(0x209b022c, 32,  RW, M2MC, VERT_SCALER_1_STEP)
BCHP_REGISTER(0x209b0230, 32,  RW, M2MC, BLEND_COLOR_OP)
BCHP_REGISTER(0x209b0234, 32,  RW, M2MC, BLEND_ALPHA_OP)
BCHP_REGISTER(0x209b0238, 32,  RW, M2MC, BLEND_CONSTANT_COLOR)
BCHP_REGISTER(0x209b023c, 32,  RW, M2MC, BLEND_COLOR_KEY_ACTION)
BCHP_REGISTER(0x209b0240, 32,  RW, M2MC, ROP_OPERATION)
BCHP_REGISTER(0x209b0244, 32,  RW, M2MC, ROP_PATTERN_TOP)
BCHP_REGISTER(0x209b0248, 32,  RW, M2MC, ROP_PATTERN_BOTTOM)
BCHP_REGISTER(0x209b024c, 32,  RW, M2MC, ROP_PATTERN_COLOR_0)
BCHP_REGISTER(0x209b0250, 32,  RW, M2MC, ROP_PATTERN_COLOR_1)
BCHP_REGISTER(0x209b0254, 32,  RW, M2MC, SRC_COLOR_KEY_HIGH)
BCHP_REGISTER(0x209b0258, 32,  RW, M2MC, SRC_COLOR_KEY_LOW)
BCHP_REGISTER(0x209b025c, 32,  RW, M2MC, SRC_COLOR_KEY_MASK)
BCHP_REGISTER(0x209b0260, 32,  RW, M2MC, SRC_COLOR_KEY_REPLACEMENT)
BCHP_REGISTER(0x209b0264, 32,  RW, M2MC, SRC_COLOR_KEY_REPLACEMENT_MASK)
BCHP_REGISTER(0x209b0268, 32,  RW, M2MC, DEST_COLOR_KEY_HIGH)
BCHP_REGISTER(0x209b026c, 32,  RW, M2MC, DEST_COLOR_KEY_LOW)
BCHP_REGISTER(0x209b0270, 32,  RW, M2MC, DEST_COLOR_KEY_MASK)
BCHP_REGISTER(0x209b0274, 32,  RW, M2MC, DEST_COLOR_KEY_REPLACEMENT)
BCHP_REGISTER(0x209b0278, 32,  RW, M2MC, DEST_COLOR_KEY_REPLACEMENT_MASK)
BCHP_REGISTER(0x209b027c, 32,  RW, M2MC, HORIZ_FIR_0_COEFF_PHASE0_01)
BCHP_REGISTER(0x209b0280, 32,  RW, M2MC, HORIZ_FIR_0_COEFF_PHASE0_2)
BCHP_REGISTER(0x209b0284, 32,  RW, M2MC, HORIZ_FIR_0_COEFF_PHASE1_01)
BCHP_REGISTER(0x209b0288, 32,  RW, M2MC, HORIZ_FIR_0_COEFF_PHASE1_2)
BCHP_REGISTER(0x209b028c, 32,  RW, M2MC, HORIZ_FIR_1_COEFF_PHASE0_01)
BCHP_REGISTER(0x209b0290, 32,  RW, M2MC, HORIZ_FIR_1_COEFF_PHASE0_2)
BCHP_REGISTER(0x209b0294, 32,  RW, M2MC, HORIZ_FIR_1_COEFF_PHASE1_01)
BCHP_REGISTER(0x209b0298, 32,  RW, M2MC, HORIZ_FIR_1_COEFF_PHASE1_2)
BCHP_REGISTER(0x209b029c, 32,  RW, M2MC, VERT_FIR_0_COEFF_PHASE0_01)
BCHP_REGISTER(0x209b02a0, 32,  RW, M2MC, VERT_FIR_0_COEFF_PHASE0_2)
BCHP_REGISTER(0x209b02a4, 32,  RW, M2MC, VERT_FIR_0_COEFF_PHASE1_01)
BCHP_REGISTER(0x209b02a8, 32,  RW, M2MC, VERT_FIR_0_COEFF_PHASE1_2)
BCHP_REGISTER(0x209b02ac, 32,  RW, M2MC, VERT_FIR_1_COEFF_PHASE0_01)
BCHP_REGISTER(0x209b02b0, 32,  RW, M2MC, VERT_FIR_1_COEFF_PHASE0_2)
BCHP_REGISTER(0x209b02b4, 32,  RW, M2MC, VERT_FIR_1_COEFF_PHASE1_01)
BCHP_REGISTER(0x209b02b8, 32,  RW, M2MC, VERT_FIR_1_COEFF_PHASE1_2)
BCHP_REGISTER(0x209b02bc, 32,  RW, M2MC, SRC_CM_C00_C01)
BCHP_REGISTER(0x209b02c0, 32,  RW, M2MC, SRC_CM_C02_C03)
BCHP_REGISTER(0x209b02c4, 32,  RW, M2MC, SRC_CM_C04)
BCHP_REGISTER(0x209b02c8, 32,  RW, M2MC, SRC_CM_C10_C11)
BCHP_REGISTER(0x209b02cc, 32,  RW, M2MC, SRC_CM_C12_C13)
BCHP_REGISTER(0x209b02d0, 32,  RW, M2MC, SRC_CM_C14)
BCHP_REGISTER(0x209b02d4, 32,  RW, M2MC, SRC_CM_C20_C21)
BCHP_REGISTER(0x209b02d8, 32,  RW, M2MC, SRC_CM_C22_C23)
BCHP_REGISTER(0x209b02dc, 32,  RW, M2MC, SRC_CM_C24)
BCHP_REGISTER(0x209b02e0, 32,  RW, M2MC, SRC_CM_C30_C31)
BCHP_REGISTER(0x209b02e4, 32,  RW, M2MC, SRC_CM_C32_C33)
BCHP_REGISTER(0x209b02e8, 32,  RW, M2MC, SRC_CM_C34)
BCHP_REGISTER(0x209b02ec, 32,  RW, M2MC, TIMEOUT_COUNTER_CONTROL)
BCHP_REGISTER(0x209b02f0, 32,  RW, M2MC, CLK_GATE_AND_SW_INIT_CONTROL)
BCHP_REGISTER(0x209b1000, 32,  RO, M2MC_L2, CPU_STATUS)
BCHP_REGISTER(0x209b1004, 32,  WO, M2MC_L2, CPU_SET)
BCHP_REGISTER(0x209b1008, 32,  WO, M2MC_L2, CPU_CLEAR)
BCHP_REGISTER(0x209b100c, 32,  RO, M2MC_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x209b1010, 32,  WO, M2MC_L2, CPU_MASK_SET)
BCHP_REGISTER(0x209b1014, 32,  WO, M2MC_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x209b1018, 32,  RO, M2MC_L2, PCI_STATUS)
BCHP_REGISTER(0x209b101c, 32,  WO, M2MC_L2, PCI_SET)
BCHP_REGISTER(0x209b1020, 32,  WO, M2MC_L2, PCI_CLEAR)
BCHP_REGISTER(0x209b1024, 32,  RO, M2MC_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x209b1028, 32,  WO, M2MC_L2, PCI_MASK_SET)
BCHP_REGISTER(0x209b102c, 32,  WO, M2MC_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x209b1800, 32,  RO, M2MC_GR, REVISION)
BCHP_REGISTER(0x209b1804, 32,  RW, M2MC_GR, CTRL)
BCHP_REGISTER(0x209b1808, 32,  RW, M2MC_GR, SW_INIT_0)
BCHP_REGISTER(0x209b180c, 32,  RW, M2MC_GR, SW_INIT_1)
BCHP_REGISTER(0x20a00000, 32,  RO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20a00004, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_SET)
BCHP_REGISTER(0x20a00008, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x20a0000c, 32,  RO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a00010, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20a00014, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a00018, 32,  RO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_STATUS)
BCHP_REGISTER(0x20a0001c, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_SET)
BCHP_REGISTER(0x20a00020, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20a00024, 32,  RO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a00028, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x20a0002c, 32,  WO, XPT_BUS_IF_SUB_MODULE_SOFT_INIT_DONE_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a00080, 32,  RW, XPT_BUS_IF, MISC_CTRL0)
BCHP_REGISTER(0x20a00084, 32,  RW, XPT_BUS_IF, TEST_MODE)
BCHP_REGISTER(0x20a00088, 32,  RO, XPT_BUS_IF, REVISION)
BCHP_REGISTER(0x20a0008c, 32,  RW, XPT_BUS_IF, INTR_STATUS_REG)
BCHP_REGISTER(0x20a00090, 32,  RW, XPT_BUS_IF, INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a00094, 32,  RW, XPT_BUS_IF, INTR_STATUS2_REG)
BCHP_REGISTER(0x20a00098, 32,  RW, XPT_BUS_IF, INTR_STATUS2_REG_EN)
BCHP_REGISTER(0x20a0009c, 32,  RW, XPT_BUS_IF, INTR_STATUS3_REG)
BCHP_REGISTER(0x20a000a0, 32,  RW, XPT_BUS_IF, INTR_STATUS3_REG_EN)
BCHP_REGISTER(0x20a000a4, 32,  RW, XPT_BUS_IF, INTR_STATUS4_REG)
BCHP_REGISTER(0x20a000a8, 32,  RW, XPT_BUS_IF, INTR_STATUS4_REG_EN)
BCHP_REGISTER(0x20a000ac, 32,  RW, XPT_BUS_IF, INTR_STATUS5_REG)
BCHP_REGISTER(0x20a000b0, 32,  RW, XPT_BUS_IF, INTR_STATUS5_REG_EN)
BCHP_REGISTER(0x20a000b4, 32,  WO, XPT_BUS_IF, SUB_MODULE_SOFT_INIT_SET)
BCHP_REGISTER(0x20a000b8, 32,  WO, XPT_BUS_IF, SUB_MODULE_SOFT_INIT_CLEAR)
BCHP_REGISTER(0x20a000bc, 32,  RO, XPT_BUS_IF, SUB_MODULE_SOFT_INIT_STATUS)
BCHP_REGISTER(0x20a000c0, 32,  RW, XPT_BUS_IF, SUB_MODULE_SOFT_INIT_DO_MEM_INIT)
BCHP_REGISTER(0x20a000d0, 32,  RW, XPT_BUS_IF, XMEMIF_WR_LC_DEBUG_REG)
BCHP_REGISTER(0x20a000d4, 32,  RO, XPT_BUS_IF, MAX_PLAYBACKS)
BCHP_REGISTER(0x20a000d8, 32,  RO, XPT_BUS_IF, MAX_PID_PARSERS)
BCHP_REGISTER(0x20a000dc, 32,  RO, XPT_BUS_IF, MAX_PID_CHANNELS)
BCHP_REGISTER(0x20a000e0, 32,  RO, XPT_BUS_IF, MEMDMA_MAX_PID_CHANNELS)
BCHP_REGISTER(0x20a000e4, 32,  RO, XPT_BUS_IF, MAX_INPUT_BANDS)
BCHP_REGISTER(0x20a000e8, 32,  RO, XPT_BUS_IF, MAX_PCRS)
BCHP_REGISTER(0x20a000ec, 32,  RO, XPT_BUS_IF, MAX_TPIT_CHANNELS)
BCHP_REGISTER(0x20a000f0, 32,  RO, XPT_BUS_IF, MAX_RAVE_CONTEXTS)
BCHP_REGISTER(0x20a000f4, 32,  RO, XPT_BUS_IF, MAX_RMX_CHANNELS)
BCHP_REGISTER(0x20a000f8, 32,  RO, XPT_BUS_IF, MAX_MSG_BUFFERS)
BCHP_REGISTER(0x20a000fc, 32,  RO, XPT_BUS_IF, MAX_SCDS)
BCHP_REGISTER(0x20a00100, 32,  RW, XPT_XMEMIF, SCB_WR_BO_RSBUFF)
BCHP_REGISTER(0x20a00108, 32,  RW, XPT_XMEMIF, SCB_WR_BO_RAVE_CDB)
BCHP_REGISTER(0x20a0010c, 32,  RW, XPT_XMEMIF, SCB_WR_BO_RAVE_ITB)
BCHP_REGISTER(0x20a00114, 32,  RW, XPT_XMEMIF, SCB_WR_BO_WDMA_DATA)
BCHP_REGISTER(0x20a0011c, 32,  RW, XPT_XMEMIF, SCB_RD_BO_RSBUFF)
BCHP_REGISTER(0x20a00120, 32,  RW, XPT_XMEMIF, SCB_RD_BO_RSBUFF_MPOD)
BCHP_REGISTER(0x20a00138, 32,  RW, XPT_XMEMIF, SCB_RD_BO_MCPB0_DESC)
BCHP_REGISTER(0x20a0013c, 32,  RW, XPT_XMEMIF, SCB_RD_BO_MCPB0_DATA)
BCHP_REGISTER(0x20a00140, 32,  RW, XPT_XMEMIF, SCB_RD_BO_RSBUFF_TSIO)
BCHP_REGISTER(0x20a00144, 32,  RW, XPT_XMEMIF, SCB_RD_BO_WDMA_DESC)
BCHP_REGISTER(0x20a00150, 32,  RW, XPT_XMEMIF, SCB_WR_ARB_SEL_CTRL)
BCHP_REGISTER(0x20a00154, 32,  RW, XPT_XMEMIF, SCB_RD_ARB_SEL_CTRL)
BCHP_REGISTER(0x20a00158, 32,  RW, XPT_XMEMIF, SCB_WR_REPLY_CTRL)
BCHP_REGISTER(0x20a0015c, 32,  RW, XPT_XMEMIF, SCB_WR_ARB_MODE)
BCHP_REGISTER(0x20a00160, 32,  RW, XPT_XMEMIF, SCB_RD_ARB_MODE)
BCHP_REGISTER(0x20a00164, 32,  RW, XPT_XMEMIF, INTR_STATUS_REG)
BCHP_REGISTER(0x20a00168, 32,  RW, XPT_XMEMIF, INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a0016c, 32,  RW, XPT_XMEMIF, WR_DEBUG)
BCHP_REGISTER(0x20a00170, 32,  RW, XPT_XMEMIF, RD_DEBUG0)
BCHP_REGISTER(0x20a00174, 32,  RW, XPT_XMEMIF, RD_DEBUG1)
BCHP_REGISTER(0x20a00178, 32,  RO, XPT_XMEMIF, WR_RDY_ACCEPT_STATUS)
BCHP_REGISTER(0x20a0017c, 32,  RO, XPT_XMEMIF, RD_RDY_ACCEPT_STATUS_CL0_6)
BCHP_REGISTER(0x20a00180, 32,  RO, XPT_XMEMIF, RD_RDY_ACCEPT_PB_LCTOXMEM)
BCHP_REGISTER(0x20a00184, 32,  RO, XPT_XMEMIF, RD_RDY_ACCEPT_PB_XMEMTOLC)
BCHP_REGISTER(0x20a0018c, 32,  RO, XPT_XMEMIF, SEC_REGION_CTRL)
BCHP_REGISTER(0x20a00190, 32,  RO, XPT_XMEMIF, SEC_REGION1_START_LO)
BCHP_REGISTER(0x20a00194, 32,  RO, XPT_XMEMIF, SEC_REGION1_START_HI)
BCHP_REGISTER(0x20a00198, 32,  RO, XPT_XMEMIF, SEC_REGION1_END_LO)
BCHP_REGISTER(0x20a0019c, 32,  RO, XPT_XMEMIF, SEC_REGION1_END_HI)
BCHP_REGISTER(0x20a001a0, 32,  RO, XPT_XMEMIF, SEC_REGION2_START_LO)
BCHP_REGISTER(0x20a001a4, 32,  RO, XPT_XMEMIF, SEC_REGION2_START_HI)
BCHP_REGISTER(0x20a001a8, 32,  RO, XPT_XMEMIF, SEC_REGION2_END_LO)
BCHP_REGISTER(0x20a001ac, 32,  RO, XPT_XMEMIF, SEC_REGION2_END_HI)
BCHP_REGISTER(0x20a001b0, 32,  RO, XPT_XMEMIF, SEC_REGION3_START_LO)
BCHP_REGISTER(0x20a001b4, 32,  RO, XPT_XMEMIF, SEC_REGION3_START_HI)
BCHP_REGISTER(0x20a001b8, 32,  RO, XPT_XMEMIF, SEC_REGION3_END_LO)
BCHP_REGISTER(0x20a001bc, 32,  RO, XPT_XMEMIF, SEC_REGION3_END_HI)
BCHP_REGISTER(0x20a001c0, 32,  RO, XPT_XMEMIF, SEC_REGION4_START_LO)
BCHP_REGISTER(0x20a001c4, 32,  RO, XPT_XMEMIF, SEC_REGION4_START_HI)
BCHP_REGISTER(0x20a001c8, 32,  RO, XPT_XMEMIF, SEC_REGION4_END_LO)
BCHP_REGISTER(0x20a001cc, 32,  RO, XPT_XMEMIF, SEC_REGION4_END_HI)
BCHP_REGISTER(0x20a001d0, 32,  RO, XPT_XMEMIF, SEC_REGION5_START_LO)
BCHP_REGISTER(0x20a001d4, 32,  RO, XPT_XMEMIF, SEC_REGION5_START_HI)
BCHP_REGISTER(0x20a001d8, 32,  RO, XPT_XMEMIF, SEC_REGION5_END_LO)
BCHP_REGISTER(0x20a001dc, 32,  RO, XPT_XMEMIF, SEC_REGION5_END_HI)
BCHP_REGISTER(0x20a001e0, 32,  RO, XPT_XMEMIF, SEC_REGION6_START_LO)
BCHP_REGISTER(0x20a001e4, 32,  RO, XPT_XMEMIF, SEC_REGION6_START_HI)
BCHP_REGISTER(0x20a001e8, 32,  RO, XPT_XMEMIF, SEC_REGION6_END_LO)
BCHP_REGISTER(0x20a001ec, 32,  RO, XPT_XMEMIF, SEC_REGION6_END_HI)
BCHP_REGISTER(0x20a001f0, 32,  RO, XPT_XMEMIF, SEC_REGION7_START_LO)
BCHP_REGISTER(0x20a001f4, 32,  RO, XPT_XMEMIF, SEC_REGION7_START_HI)
BCHP_REGISTER(0x20a001f8, 32,  RO, XPT_XMEMIF, SEC_REGION7_END_LO)
BCHP_REGISTER(0x20a001fc, 32,  RO, XPT_XMEMIF, SEC_REGION7_END_HI)
BCHP_REGISTER(0x20a00200, 32,  RW, XPT_PMU, CLK_CTRL)
BCHP_REGISTER(0x20a00204, 32,  RW, XPT_PMU, RBUS_RSP_CTRL)
BCHP_REGISTER(0x20a00208, 32,  RW, XPT_PMU, RBUS_RSP_VAL)
BCHP_REGISTER(0x20a0020c, 32,  RW, XPT_PMU, PSM_VDD_CTRL)
BCHP_REGISTER(0x20a00210, 32,  RW, XPT_PMU, STBY_CTRL)
BCHP_REGISTER(0x20a00214, 32,  RW, XPT_PMU, MEM_INIT_CTRL)
BCHP_REGISTER(0x20a00218, 32,  RW, XPT_PMU, MEMDMA_SW_INIT_CTRL)
BCHP_REGISTER(0x20a0021c, 32,  RW, XPT_PMU, FE_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00220, 32,  RO, XPT_PMU, FE_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00224, 32,  RW, XPT_PMU, MCPB_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00228, 32,  RO, XPT_PMU, MCPB_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a0022c, 32,  RW, XPT_PMU, MEMDMA_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00230, 32,  RO, XPT_PMU, MEMDMA_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00234, 32,  RW, XPT_PMU, MSG_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00238, 32,  RO, XPT_PMU, MSG_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a0023c, 32,  RW, XPT_PMU, RAVE_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00240, 32,  RO, XPT_PMU, RAVE_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00244, 32,  RW, XPT_PMU, TSIO_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00248, 32,  RO, XPT_PMU, TSIO_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a0024c, 32,  RW, XPT_PMU, PCROFFSET_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00250, 32,  RO, XPT_PMU, PCROFFSET_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00254, 32,  RW, XPT_PMU, PSUB_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00258, 32,  RO, XPT_PMU, PSUB_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a0025c, 32,  RW, XPT_PMU, RSBUFF_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00260, 32,  RO, XPT_PMU, RSBUFF_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00264, 32,  RW, XPT_PMU, XCBUFF_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00268, 32,  RO, XPT_PMU, XCBUFF_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a0026c, 32,  RW, XPT_PMU, WAKEUP_SP_PD_MEM_PWR_DN_CTRL)
BCHP_REGISTER(0x20a00270, 32,  RO, XPT_PMU, WAKEUP_SP_PD_MEM_PWR_DN_STATUS)
BCHP_REGISTER(0x20a00280, 32,  RW, XPT_PMU, HWG_CLK_GATE_SUB_MODULE_EN)
BCHP_REGISTER(0x20a00284, 32,  RW, XPT_PMU, HWG_PDA_SUB_MODULE_EN)
BCHP_REGISTER(0x20a00288, 32,  RO, XPT_PMU, HWG_CLK_GATE_SUB_MODULE_STATUS)
BCHP_REGISTER(0x20a0028c, 32,  RW, XPT_PMU, HWG_MIN_START_DELAY)
BCHP_REGISTER(0x20a00290, 32,  RW, XPT_PMU, HWG_MIN_RUN_DELAY)
BCHP_REGISTER(0x20a00294, 32,  RW, XPT_PMU, HWG_CTRL_END_DELAY)
BCHP_REGISTER(0x20a00298, 32,  RW, XPT_PMU, HWG_PDA_SETUP_DELAY)
BCHP_REGISTER(0x20a0029c, 32,  RW, XPT_PMU, HWG_PDA_HOLD_DELAY)
BCHP_REGISTER(0x20a002a0, 32,  RW, XPT_PMU, HWG_CLCT_CTRL)
BCHP_REGISTER(0x20a002a4, 32,  RW, XPT_PMU, HWG_CLCT_RST)
BCHP_REGISTER(0x20a002a8, 32,  RW, XPT_PMU, HWG_CLCT_FREEZE)
BCHP_REGISTER(0x20a002ac, 32,  RO, XPT_PMU, HWG_FR_CLK_VALUE_HI)
BCHP_REGISTER(0x20a002b0, 32,  RO, XPT_PMU, HWG_FR_CLK_VALUE_LO)
BCHP_REGISTER(0x20a002b4, 32,  RO, XPT_PMU, HWG_GT_CLK_VALUE_HI)
BCHP_REGISTER(0x20a002b8, 32,  RO, XPT_PMU, HWG_GT_CLK_VALUE_LO)
BCHP_REGISTER(0x20a00380, 32,  RW, XPT_PMU_SCB, SCB_CLK_CTRL)
BCHP_REGISTER(0x20a00384, 32,  RW, XPT_PMU_SCB, SCB_HWG_CLK_GATE_SUB_MODULE_EN)
BCHP_REGISTER(0x20a00388, 32,  RO, XPT_PMU_SCB, SCB_HWG_CLK_GATE_SUB_MODULE_STATUS)
BCHP_REGISTER(0x20a0038c, 32,  RW, XPT_PMU_SCB, SCB_HWG_MIN_START_DELAY)
BCHP_REGISTER(0x20a00390, 32,  RW, XPT_PMU_SCB, SCB_HWG_MIN_RUN_DELAY)
BCHP_REGISTER(0x20a00394, 32,  RW, XPT_PMU_SCB, SCB_HWG_CTRL_END_DELAY)
BCHP_REGISTER(0x20a00398, 32,  RW, XPT_PMU_SCB, SCB_HWG_PDA_SETUP_DELAY)
BCHP_REGISTER(0x20a0039c, 32,  RW, XPT_PMU_SCB, SCB_HWG_PDA_HOLD_DELAY)
BCHP_REGISTER(0x20a003a0, 32,  RW, XPT_PMU_SCB, SCB_HWG_CLCT_CTRL)
BCHP_REGISTER(0x20a003a4, 32,  RW, XPT_PMU_SCB, SCB_HWG_CLCT_RST)
BCHP_REGISTER(0x20a003a8, 32,  RW, XPT_PMU_SCB, SCB_HWG_CLCT_FREEZE)
BCHP_REGISTER(0x20a003ac, 32,  RO, XPT_PMU_SCB, SCB_HWG_FR_CLK_VALUE_HI)
BCHP_REGISTER(0x20a003b0, 32,  RO, XPT_PMU_SCB, SCB_HWG_FR_CLK_VALUE_LO)
BCHP_REGISTER(0x20a003b4, 32,  RO, XPT_PMU_SCB, SCB_HWG_GT_CLK_VALUE_HI)
BCHP_REGISTER(0x20a003b8, 32,  RO, XPT_PMU_SCB, SCB_HWG_GT_CLK_VALUE_LO)
BCHP_REGISTER(0x20a00400, 32,  RO, XPT_GR, REVISION)
BCHP_REGISTER(0x20a00404, 32,  RW, XPT_GR, CTRL)
BCHP_REGISTER(0x20a00408, 32,  RW, XPT_GR, SW_INIT_0)
BCHP_REGISTER(0x20a0040c, 32,  RW, XPT_GR, SW_INIT_1)
BCHP_REGISTER(0x20a01000, 32,  RW, XPT_WAKEUP, CTRL)
BCHP_REGISTER(0x20a01004, 32,  RW, XPT_WAKEUP, STATUS)
BCHP_REGISTER(0x20a01008, 32,  RW, XPT_WAKEUP, INTR_STATUS_REG)
BCHP_REGISTER(0x20a0100c, 32,  RW, XPT_WAKEUP, INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a02000, 32,  RW, XPT_DPCR0, PID_CH)
BCHP_REGISTER(0x20a02004, 32,  RW, XPT_DPCR0, CTRL)
BCHP_REGISTER(0x20a02008, 32,  RW, XPT_DPCR0, INTR_STATUS_REG)
BCHP_REGISTER(0x20a0200c, 32,  RW, XPT_DPCR0, INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a02010, 32,  RW, XPT_DPCR0, STC_EXT_CTRL)
BCHP_REGISTER(0x20a02020, 32,  RW, XPT_DPCR0, MAX_PCR_ERROR)
BCHP_REGISTER(0x20a02024, 32,  RW, XPT_DPCR0, SEND_BASE)
BCHP_REGISTER(0x20a02028, 32,  RW, XPT_DPCR0, SEND_EXT)
BCHP_REGISTER(0x20a0202c, 32,  RO, XPT_DPCR0, STC_EXT_CTRL27)
BCHP_REGISTER(0x20a02030, 32,  RO, XPT_DPCR0, STC_HI)
BCHP_REGISTER(0x20a02034, 32,  RO, XPT_DPCR0, STC_LO)
BCHP_REGISTER(0x20a02038, 32,  RO, XPT_DPCR0, PWM_CTRLVALUE)
BCHP_REGISTER(0x20a0203c, 32,  RO, XPT_DPCR0, LAST_PCR_HI)
BCHP_REGISTER(0x20a02040, 32,  RO, XPT_DPCR0, LAST_PCR_LO)
BCHP_REGISTER(0x20a02048, 32,  RO, XPT_DPCR0, STC_BASE_LSBS)
BCHP_REGISTER(0x20a0204c, 32,  RO, XPT_DPCR0, PHASE_ERROR)
BCHP_REGISTER(0x20a02050, 32,  RW, XPT_DPCR0, LOOP_CTRL)
BCHP_REGISTER(0x20a02054, 32,  RW, XPT_DPCR0, REF_PCR_PRESCALE)
BCHP_REGISTER(0x20a02058, 32,  RW, XPT_DPCR0, REF_PCR_INC)
BCHP_REGISTER(0x20a0205c, 32,  RW, XPT_DPCR0, CENTER)
BCHP_REGISTER(0x20a02060, 32,  RW, XPT_DPCR0, ACCUM_VALUE)
BCHP_REGISTER(0x20a02064, 32,  RO, XPT_DPCR0, PCR_COUNT)
BCHP_REGISTER(0x20a02068, 32,  RW, XPT_DPCR0, SOFT_PCR_CTRL)
BCHP_REGISTER(0x20a0206c, 32,  RW, XPT_DPCR0, SOFT_PCR_BASE)
BCHP_REGISTER(0x20a02070, 32,  RW, XPT_DPCR0, SOFT_PCR_EXT)
BCHP_REGISTER(0x20a02074, 32,  RW, XPT_DPCR0, PHASE_ERROR_CLAMP)
BCHP_REGISTER(0x20a02078, 32,  RW, XPT_DPCR0, TIMEBASE_INPUT_SEL)
BCHP_REGISTER(0x20a02080, 32,  RW, XPT_DPCR1, PID_CH)
BCHP_REGISTER(0x20a02084, 32,  RW, XPT_DPCR1, CTRL)
BCHP_REGISTER(0x20a02088, 32,  RW, XPT_DPCR1, INTR_STATUS_REG)
BCHP_REGISTER(0x20a0208c, 32,  RW, XPT_DPCR1, INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a02090, 32,  RW, XPT_DPCR1, STC_EXT_CTRL)
BCHP_REGISTER(0x20a020a0, 32,  RW, XPT_DPCR1, MAX_PCR_ERROR)
BCHP_REGISTER(0x20a020a4, 32,  RW, XPT_DPCR1, SEND_BASE)
BCHP_REGISTER(0x20a020a8, 32,  RW, XPT_DPCR1, SEND_EXT)
BCHP_REGISTER(0x20a020ac, 32,  RO, XPT_DPCR1, STC_EXT_CTRL27)
BCHP_REGISTER(0x20a020b0, 32,  RO, XPT_DPCR1, STC_HI)
BCHP_REGISTER(0x20a020b4, 32,  RO, XPT_DPCR1, STC_LO)
BCHP_REGISTER(0x20a020b8, 32,  RO, XPT_DPCR1, PWM_CTRLVALUE)
BCHP_REGISTER(0x20a020bc, 32,  RO, XPT_DPCR1, LAST_PCR_HI)
BCHP_REGISTER(0x20a020c0, 32,  RO, XPT_DPCR1, LAST_PCR_LO)
BCHP_REGISTER(0x20a020c8, 32,  RO, XPT_DPCR1, STC_BASE_LSBS)
BCHP_REGISTER(0x20a020cc, 32,  RO, XPT_DPCR1, PHASE_ERROR)
BCHP_REGISTER(0x20a020d0, 32,  RW, XPT_DPCR1, LOOP_CTRL)
BCHP_REGISTER(0x20a020d4, 32,  RW, XPT_DPCR1, REF_PCR_PRESCALE)
BCHP_REGISTER(0x20a020d8, 32,  RW, XPT_DPCR1, REF_PCR_INC)
BCHP_REGISTER(0x20a020dc, 32,  RW, XPT_DPCR1, CENTER)
BCHP_REGISTER(0x20a020e0, 32,  RW, XPT_DPCR1, ACCUM_VALUE)
BCHP_REGISTER(0x20a020e4, 32,  RO, XPT_DPCR1, PCR_COUNT)
BCHP_REGISTER(0x20a020e8, 32,  RW, XPT_DPCR1, SOFT_PCR_CTRL)
BCHP_REGISTER(0x20a020ec, 32,  RW, XPT_DPCR1, SOFT_PCR_BASE)
BCHP_REGISTER(0x20a020f0, 32,  RW, XPT_DPCR1, SOFT_PCR_EXT)
BCHP_REGISTER(0x20a020f4, 32,  RW, XPT_DPCR1, PHASE_ERROR_CLAMP)
BCHP_REGISTER(0x20a020f8, 32,  RW, XPT_DPCR1, TIMEBASE_INPUT_SEL)
BCHP_REGISTER(0x20a02400, 32,  RW, XPT_DPCR_PP, PP_CTRL)
BCHP_REGISTER(0x20a02404, 32,  RW, XPT_DPCR_PP, PP_FIXED_OFFSET)
BCHP_REGISTER(0x20a02c00, 32,  RW, XPT_MPOD, CFG)
BCHP_REGISTER(0x20a02c04, 32,  RW, XPT_MPOD, OCTRL)
BCHP_REGISTER(0x20a02c08, 32,  RW, XPT_MPOD, ICTRL)
BCHP_REGISTER(0x20a02c0c, 32,  RO, XPT_MPOD, RES_FIELD)
BCHP_REGISTER(0x20a02c10, 32,  RW, XPT_MPOD, OCTRL2)
BCHP_REGISTER(0x20a02c14, 32,  RW, XPT_MPOD, MPOD_BAND_ID_IBP_DROP)
BCHP_REGISTER(0x20a02c18, 32,  RW, XPT_MPOD, MPOD_BAND_ID_PBP_DROP)
BCHP_REGISTER(0x20a02c20, 32,  RW, XPT_MPOD, TV_STATUS)
BCHP_REGISTER(0x20a04000, 32,  RW, XPT_RSBUFF, BASE_POINTER_IBP0)
BCHP_REGISTER(0x20a04004, 32,  RW, XPT_RSBUFF, END_POINTER_IBP0)
BCHP_REGISTER(0x20a04008, 32,  RW, XPT_RSBUFF, WRITE_POINTER_IBP0)
BCHP_REGISTER(0x20a0400c, 32,  RW, XPT_RSBUFF, VALID_POINTER_IBP0)
BCHP_REGISTER(0x20a04010, 32,  RW, XPT_RSBUFF, READ_POINTER_IBP0)
BCHP_REGISTER(0x20a04014, 32,  RW, XPT_RSBUFF, WATERMARK_IBP0)
BCHP_REGISTER(0x20a04018, 32,  RW, XPT_RSBUFF, BASE_POINTER_IBP1)
BCHP_REGISTER(0x20a0401c, 32,  RW, XPT_RSBUFF, END_POINTER_IBP1)
BCHP_REGISTER(0x20a04020, 32,  RW, XPT_RSBUFF, WRITE_POINTER_IBP1)
BCHP_REGISTER(0x20a04024, 32,  RW, XPT_RSBUFF, VALID_POINTER_IBP1)
BCHP_REGISTER(0x20a04028, 32,  RW, XPT_RSBUFF, READ_POINTER_IBP1)
BCHP_REGISTER(0x20a0402c, 32,  RW, XPT_RSBUFF, WATERMARK_IBP1)
BCHP_REGISTER(0x20a04030, 32,  RW, XPT_RSBUFF, BASE_POINTER_IBP2)
BCHP_REGISTER(0x20a04034, 32,  RW, XPT_RSBUFF, END_POINTER_IBP2)
BCHP_REGISTER(0x20a04038, 32,  RW, XPT_RSBUFF, WRITE_POINTER_IBP2)
BCHP_REGISTER(0x20a0403c, 32,  RW, XPT_RSBUFF, VALID_POINTER_IBP2)
BCHP_REGISTER(0x20a04040, 32,  RW, XPT_RSBUFF, READ_POINTER_IBP2)
BCHP_REGISTER(0x20a04044, 32,  RW, XPT_RSBUFF, WATERMARK_IBP2)
BCHP_REGISTER(0x20a04048, 32,  RW, XPT_RSBUFF, BASE_POINTER_IBP3)
BCHP_REGISTER(0x20a0404c, 32,  RW, XPT_RSBUFF, END_POINTER_IBP3)
BCHP_REGISTER(0x20a04050, 32,  RW, XPT_RSBUFF, WRITE_POINTER_IBP3)
BCHP_REGISTER(0x20a04054, 32,  RW, XPT_RSBUFF, VALID_POINTER_IBP3)
BCHP_REGISTER(0x20a04058, 32,  RW, XPT_RSBUFF, READ_POINTER_IBP3)
BCHP_REGISTER(0x20a0405c, 32,  RW, XPT_RSBUFF, WATERMARK_IBP3)
BCHP_REGISTER(0x20a04300, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP0)
BCHP_REGISTER(0x20a04304, 32,  RW, XPT_RSBUFF, END_POINTER_PBP0)
BCHP_REGISTER(0x20a04308, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP0)
BCHP_REGISTER(0x20a0430c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP0)
BCHP_REGISTER(0x20a04310, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP0)
BCHP_REGISTER(0x20a04314, 32,  RW, XPT_RSBUFF, WATERMARK_PBP0)
BCHP_REGISTER(0x20a04318, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP1)
BCHP_REGISTER(0x20a0431c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP1)
BCHP_REGISTER(0x20a04320, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP1)
BCHP_REGISTER(0x20a04324, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP1)
BCHP_REGISTER(0x20a04328, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP1)
BCHP_REGISTER(0x20a0432c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP1)
BCHP_REGISTER(0x20a04330, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP2)
BCHP_REGISTER(0x20a04334, 32,  RW, XPT_RSBUFF, END_POINTER_PBP2)
BCHP_REGISTER(0x20a04338, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP2)
BCHP_REGISTER(0x20a0433c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP2)
BCHP_REGISTER(0x20a04340, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP2)
BCHP_REGISTER(0x20a04344, 32,  RW, XPT_RSBUFF, WATERMARK_PBP2)
BCHP_REGISTER(0x20a04348, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP3)
BCHP_REGISTER(0x20a0434c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP3)
BCHP_REGISTER(0x20a04350, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP3)
BCHP_REGISTER(0x20a04354, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP3)
BCHP_REGISTER(0x20a04358, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP3)
BCHP_REGISTER(0x20a0435c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP3)
BCHP_REGISTER(0x20a04360, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP4)
BCHP_REGISTER(0x20a04364, 32,  RW, XPT_RSBUFF, END_POINTER_PBP4)
BCHP_REGISTER(0x20a04368, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP4)
BCHP_REGISTER(0x20a0436c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP4)
BCHP_REGISTER(0x20a04370, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP4)
BCHP_REGISTER(0x20a04374, 32,  RW, XPT_RSBUFF, WATERMARK_PBP4)
BCHP_REGISTER(0x20a04378, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP5)
BCHP_REGISTER(0x20a0437c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP5)
BCHP_REGISTER(0x20a04380, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP5)
BCHP_REGISTER(0x20a04384, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP5)
BCHP_REGISTER(0x20a04388, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP5)
BCHP_REGISTER(0x20a0438c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP5)
BCHP_REGISTER(0x20a04390, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP6)
BCHP_REGISTER(0x20a04394, 32,  RW, XPT_RSBUFF, END_POINTER_PBP6)
BCHP_REGISTER(0x20a04398, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP6)
BCHP_REGISTER(0x20a0439c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP6)
BCHP_REGISTER(0x20a043a0, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP6)
BCHP_REGISTER(0x20a043a4, 32,  RW, XPT_RSBUFF, WATERMARK_PBP6)
BCHP_REGISTER(0x20a043a8, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP7)
BCHP_REGISTER(0x20a043ac, 32,  RW, XPT_RSBUFF, END_POINTER_PBP7)
BCHP_REGISTER(0x20a043b0, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP7)
BCHP_REGISTER(0x20a043b4, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP7)
BCHP_REGISTER(0x20a043b8, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP7)
BCHP_REGISTER(0x20a043bc, 32,  RW, XPT_RSBUFF, WATERMARK_PBP7)
BCHP_REGISTER(0x20a043c0, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP8)
BCHP_REGISTER(0x20a043c4, 32,  RW, XPT_RSBUFF, END_POINTER_PBP8)
BCHP_REGISTER(0x20a043c8, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP8)
BCHP_REGISTER(0x20a043cc, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP8)
BCHP_REGISTER(0x20a043d0, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP8)
BCHP_REGISTER(0x20a043d4, 32,  RW, XPT_RSBUFF, WATERMARK_PBP8)
BCHP_REGISTER(0x20a043d8, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP9)
BCHP_REGISTER(0x20a043dc, 32,  RW, XPT_RSBUFF, END_POINTER_PBP9)
BCHP_REGISTER(0x20a043e0, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP9)
BCHP_REGISTER(0x20a043e4, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP9)
BCHP_REGISTER(0x20a043e8, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP9)
BCHP_REGISTER(0x20a043ec, 32,  RW, XPT_RSBUFF, WATERMARK_PBP9)
BCHP_REGISTER(0x20a043f0, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP10)
BCHP_REGISTER(0x20a043f4, 32,  RW, XPT_RSBUFF, END_POINTER_PBP10)
BCHP_REGISTER(0x20a043f8, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP10)
BCHP_REGISTER(0x20a043fc, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP10)
BCHP_REGISTER(0x20a04400, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP10)
BCHP_REGISTER(0x20a04404, 32,  RW, XPT_RSBUFF, WATERMARK_PBP10)
BCHP_REGISTER(0x20a04408, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP11)
BCHP_REGISTER(0x20a0440c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP11)
BCHP_REGISTER(0x20a04410, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP11)
BCHP_REGISTER(0x20a04414, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP11)
BCHP_REGISTER(0x20a04418, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP11)
BCHP_REGISTER(0x20a0441c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP11)
BCHP_REGISTER(0x20a04420, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP12)
BCHP_REGISTER(0x20a04424, 32,  RW, XPT_RSBUFF, END_POINTER_PBP12)
BCHP_REGISTER(0x20a04428, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP12)
BCHP_REGISTER(0x20a0442c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP12)
BCHP_REGISTER(0x20a04430, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP12)
BCHP_REGISTER(0x20a04434, 32,  RW, XPT_RSBUFF, WATERMARK_PBP12)
BCHP_REGISTER(0x20a04438, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP13)
BCHP_REGISTER(0x20a0443c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP13)
BCHP_REGISTER(0x20a04440, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP13)
BCHP_REGISTER(0x20a04444, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP13)
BCHP_REGISTER(0x20a04448, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP13)
BCHP_REGISTER(0x20a0444c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP13)
BCHP_REGISTER(0x20a04450, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP14)
BCHP_REGISTER(0x20a04454, 32,  RW, XPT_RSBUFF, END_POINTER_PBP14)
BCHP_REGISTER(0x20a04458, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP14)
BCHP_REGISTER(0x20a0445c, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP14)
BCHP_REGISTER(0x20a04460, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP14)
BCHP_REGISTER(0x20a04464, 32,  RW, XPT_RSBUFF, WATERMARK_PBP14)
BCHP_REGISTER(0x20a04468, 32,  RW, XPT_RSBUFF, BASE_POINTER_PBP15)
BCHP_REGISTER(0x20a0446c, 32,  RW, XPT_RSBUFF, END_POINTER_PBP15)
BCHP_REGISTER(0x20a04470, 32,  RW, XPT_RSBUFF, WRITE_POINTER_PBP15)
BCHP_REGISTER(0x20a04474, 32,  RW, XPT_RSBUFF, VALID_POINTER_PBP15)
BCHP_REGISTER(0x20a04478, 32,  RW, XPT_RSBUFF, READ_POINTER_PBP15)
BCHP_REGISTER(0x20a0447c, 32,  RW, XPT_RSBUFF, WATERMARK_PBP15)
BCHP_REGISTER(0x20a04600, 32,  RW, XPT_RSBUFF, BASE_POINTER_MPOD_IBP0)
BCHP_REGISTER(0x20a04604, 32,  RW, XPT_RSBUFF, END_POINTER_MPOD_IBP0)
BCHP_REGISTER(0x20a04608, 32,  RW, XPT_RSBUFF, WRITE_POINTER_MPOD_IBP0)
BCHP_REGISTER(0x20a0460c, 32,  RW, XPT_RSBUFF, VALID_POINTER_MPOD_IBP0)
BCHP_REGISTER(0x20a04610, 32,  RW, XPT_RSBUFF, READ_POINTER_MPOD_IBP0)
BCHP_REGISTER(0x20a04614, 32,  RW, XPT_RSBUFF, WATERMARK_MPOD_IBP0)
BCHP_REGISTER(0x20a04618, 32,  RW, XPT_RSBUFF, BASE_POINTER_MPOD_IBP1)
BCHP_REGISTER(0x20a0461c, 32,  RW, XPT_RSBUFF, END_POINTER_MPOD_IBP1)
BCHP_REGISTER(0x20a04620, 32,  RW, XPT_RSBUFF, WRITE_POINTER_MPOD_IBP1)
BCHP_REGISTER(0x20a04624, 32,  RW, XPT_RSBUFF, VALID_POINTER_MPOD_IBP1)
BCHP_REGISTER(0x20a04628, 32,  RW, XPT_RSBUFF, READ_POINTER_MPOD_IBP1)
BCHP_REGISTER(0x20a0462c, 32,  RW, XPT_RSBUFF, WATERMARK_MPOD_IBP1)
BCHP_REGISTER(0x20a04630, 32,  RW, XPT_RSBUFF, BASE_POINTER_MPOD_IBP2)
BCHP_REGISTER(0x20a04634, 32,  RW, XPT_RSBUFF, END_POINTER_MPOD_IBP2)
BCHP_REGISTER(0x20a04638, 32,  RW, XPT_RSBUFF, WRITE_POINTER_MPOD_IBP2)
BCHP_REGISTER(0x20a0463c, 32,  RW, XPT_RSBUFF, VALID_POINTER_MPOD_IBP2)
BCHP_REGISTER(0x20a04640, 32,  RW, XPT_RSBUFF, READ_POINTER_MPOD_IBP2)
BCHP_REGISTER(0x20a04644, 32,  RW, XPT_RSBUFF, WATERMARK_MPOD_IBP2)
BCHP_REGISTER(0x20a04648, 32,  RW, XPT_RSBUFF, BASE_POINTER_MPOD_IBP3)
BCHP_REGISTER(0x20a0464c, 32,  RW, XPT_RSBUFF, END_POINTER_MPOD_IBP3)
BCHP_REGISTER(0x20a04650, 32,  RW, XPT_RSBUFF, WRITE_POINTER_MPOD_IBP3)
BCHP_REGISTER(0x20a04654, 32,  RW, XPT_RSBUFF, VALID_POINTER_MPOD_IBP3)
BCHP_REGISTER(0x20a04658, 32,  RW, XPT_RSBUFF, READ_POINTER_MPOD_IBP3)
BCHP_REGISTER(0x20a0465c, 32,  RW, XPT_RSBUFF, WATERMARK_MPOD_IBP3)
BCHP_REGISTER(0x20a04900, 32,  RW, XPT_RSBUFF, BASE_POINTER_TSIO_IBP0)
BCHP_REGISTER(0x20a04904, 32,  RW, XPT_RSBUFF, END_POINTER_TSIO_IBP0)
BCHP_REGISTER(0x20a04908, 32,  RW, XPT_RSBUFF, WRITE_POINTER_TSIO_IBP0)
BCHP_REGISTER(0x20a0490c, 32,  RW, XPT_RSBUFF, VALID_POINTER_TSIO_IBP0)
BCHP_REGISTER(0x20a04910, 32,  RW, XPT_RSBUFF, READ_POINTER_TSIO_IBP0)
BCHP_REGISTER(0x20a04914, 32,  RW, XPT_RSBUFF, WATERMARK_TSIO_IBP0)
BCHP_REGISTER(0x20a04918, 32,  RW, XPT_RSBUFF, BASE_POINTER_TSIO_IBP1)
BCHP_REGISTER(0x20a0491c, 32,  RW, XPT_RSBUFF, END_POINTER_TSIO_IBP1)
BCHP_REGISTER(0x20a04920, 32,  RW, XPT_RSBUFF, WRITE_POINTER_TSIO_IBP1)
BCHP_REGISTER(0x20a04924, 32,  RW, XPT_RSBUFF, VALID_POINTER_TSIO_IBP1)
BCHP_REGISTER(0x20a04928, 32,  RW, XPT_RSBUFF, READ_POINTER_TSIO_IBP1)
BCHP_REGISTER(0x20a0492c, 32,  RW, XPT_RSBUFF, WATERMARK_TSIO_IBP1)
BCHP_REGISTER(0x20a04930, 32,  RW, XPT_RSBUFF, BASE_POINTER_TSIO_IBP2)
BCHP_REGISTER(0x20a04934, 32,  RW, XPT_RSBUFF, END_POINTER_TSIO_IBP2)
BCHP_REGISTER(0x20a04938, 32,  RW, XPT_RSBUFF, WRITE_POINTER_TSIO_IBP2)
BCHP_REGISTER(0x20a0493c, 32,  RW, XPT_RSBUFF, VALID_POINTER_TSIO_IBP2)
BCHP_REGISTER(0x20a04940, 32,  RW, XPT_RSBUFF, READ_POINTER_TSIO_IBP2)
BCHP_REGISTER(0x20a04944, 32,  RW, XPT_RSBUFF, WATERMARK_TSIO_IBP2)
BCHP_REGISTER(0x20a04948, 32,  RW, XPT_RSBUFF, BASE_POINTER_TSIO_IBP3)
BCHP_REGISTER(0x20a0494c, 32,  RW, XPT_RSBUFF, END_POINTER_TSIO_IBP3)
BCHP_REGISTER(0x20a04950, 32,  RW, XPT_RSBUFF, WRITE_POINTER_TSIO_IBP3)
BCHP_REGISTER(0x20a04954, 32,  RW, XPT_RSBUFF, VALID_POINTER_TSIO_IBP3)
BCHP_REGISTER(0x20a04958, 32,  RW, XPT_RSBUFF, READ_POINTER_TSIO_IBP3)
BCHP_REGISTER(0x20a0495c, 32,  RW, XPT_RSBUFF, WATERMARK_TSIO_IBP3)
BCHP_REGISTER(0x20a04c00, 32,  RW, XPT_RSBUFF, BO_IBP0)
BCHP_REGISTER(0x20a04c04, 32,  RW, XPT_RSBUFF, BO_IBP1)
BCHP_REGISTER(0x20a04c08, 32,  RW, XPT_RSBUFF, BO_IBP2)
BCHP_REGISTER(0x20a04c0c, 32,  RW, XPT_RSBUFF, BO_IBP3)
BCHP_REGISTER(0x20a04c80, 32,  RW, XPT_RSBUFF, BO_PBP0)
BCHP_REGISTER(0x20a04c84, 32,  RW, XPT_RSBUFF, BO_PBP1)
BCHP_REGISTER(0x20a04c88, 32,  RW, XPT_RSBUFF, BO_PBP2)
BCHP_REGISTER(0x20a04c8c, 32,  RW, XPT_RSBUFF, BO_PBP3)
BCHP_REGISTER(0x20a04c90, 32,  RW, XPT_RSBUFF, BO_PBP4)
BCHP_REGISTER(0x20a04c94, 32,  RW, XPT_RSBUFF, BO_PBP5)
BCHP_REGISTER(0x20a04c98, 32,  RW, XPT_RSBUFF, BO_PBP6)
BCHP_REGISTER(0x20a04c9c, 32,  RW, XPT_RSBUFF, BO_PBP7)
BCHP_REGISTER(0x20a04ca0, 32,  RW, XPT_RSBUFF, BO_PBP8)
BCHP_REGISTER(0x20a04ca4, 32,  RW, XPT_RSBUFF, BO_PBP9)
BCHP_REGISTER(0x20a04ca8, 32,  RW, XPT_RSBUFF, BO_PBP10)
BCHP_REGISTER(0x20a04cac, 32,  RW, XPT_RSBUFF, BO_PBP11)
BCHP_REGISTER(0x20a04cb0, 32,  RW, XPT_RSBUFF, BO_PBP12)
BCHP_REGISTER(0x20a04cb4, 32,  RW, XPT_RSBUFF, BO_PBP13)
BCHP_REGISTER(0x20a04cb8, 32,  RW, XPT_RSBUFF, BO_PBP14)
BCHP_REGISTER(0x20a04cbc, 32,  RW, XPT_RSBUFF, BO_PBP15)
BCHP_REGISTER(0x20a04d00, 32,  RW, XPT_RSBUFF, BO_MPOD_IBP0)
BCHP_REGISTER(0x20a04d04, 32,  RW, XPT_RSBUFF, BO_MPOD_IBP1)
BCHP_REGISTER(0x20a04d08, 32,  RW, XPT_RSBUFF, BO_MPOD_IBP2)
BCHP_REGISTER(0x20a04d0c, 32,  RW, XPT_RSBUFF, BO_MPOD_IBP3)
BCHP_REGISTER(0x20a04d80, 32,  RW, XPT_RSBUFF, BO_TSIO_IBP0)
BCHP_REGISTER(0x20a04d84, 32,  RW, XPT_RSBUFF, BO_TSIO_IBP1)
BCHP_REGISTER(0x20a04d88, 32,  RW, XPT_RSBUFF, BO_TSIO_IBP2)
BCHP_REGISTER(0x20a04d8c, 32,  RW, XPT_RSBUFF, BO_TSIO_IBP3)
BCHP_REGISTER(0x20a04e00, 32,  RW, XPT_RSBUFF, IBP_DATA_RDY)
BCHP_REGISTER(0x20a04e04, 32,  RW, XPT_RSBUFF, PBP_DATA_RDY)
BCHP_REGISTER(0x20a04e08, 32,  RW, XPT_RSBUFF, IBP_BUFFER_ENABLE)
BCHP_REGISTER(0x20a04e0c, 32,  RW, XPT_RSBUFF, PBP_BUFFER_ENABLE)
BCHP_REGISTER(0x20a04e10, 32,  RW, XPT_RSBUFF, IBP_OVERFLOW_STATUS)
BCHP_REGISTER(0x20a04e14, 32,  RW, XPT_RSBUFF, PBP_OVERFLOW_STATUS)
BCHP_REGISTER(0x20a04e18, 32,  RW, XPT_RSBUFF, MPOD_IBP_DATA_RDY)
BCHP_REGISTER(0x20a04e1c, 32,  RW, XPT_RSBUFF, MPOD_IBP_BUFFER_ENABLE)
BCHP_REGISTER(0x20a04e20, 32,  RW, XPT_RSBUFF, MPOD_IBP_OVERFLOW_STATUS)
BCHP_REGISTER(0x20a04e24, 32,  RW, XPT_RSBUFF, TSIO_IBP_DATA_RDY)
BCHP_REGISTER(0x20a04e28, 32,  RW, XPT_RSBUFF, TSIO_IBP_BUFFER_ENABLE)
BCHP_REGISTER(0x20a04e2c, 32,  RW, XPT_RSBUFF, TSIO_IBP_OVERFLOW_STATUS)
BCHP_REGISTER(0x20a04e30, 32,  RW, XPT_RSBUFF, OVERFLOW_THRESHOLD)
BCHP_REGISTER(0x20a04e34, 32,  RW, XPT_RSBUFF, PAUSE_THRESHOLD)
BCHP_REGISTER(0x20a04e38, 32,  RW, XPT_RSBUFF, CTRL_PAUSE_EN_PBP)
BCHP_REGISTER(0x20a04e3c, 32,  RO, XPT_RSBUFF, PAUSE_STATUS_PBP)
BCHP_REGISTER(0x20a04e40, 32,  RW, XPT_RSBUFF, MCPB0_PAUSE_SEL0)
BCHP_REGISTER(0x20a04e44, 32,  RW, XPT_RSBUFF, MCPB0_PAUSE_SEL1)
BCHP_REGISTER(0x20a04e48, 32,  RW, XPT_RSBUFF, BYTE_SWAP_CTRL)
BCHP_REGISTER(0x20a04e4c, 32,  RW, XPT_RSBUFF, PACKET_LENGTH)
BCHP_REGISTER(0x20a04e50, 32,  RW, XPT_RSBUFF, MISC_CTRL)
BCHP_REGISTER(0x20a04e54, 32,  RW, XPT_RSBUFF, NO_RD_HANG_CTRL)
BCHP_REGISTER(0x20a04e58, 32,  RO, XPT_RSBUFF, WR_DEBUG)
BCHP_REGISTER(0x20a04e5c, 32,  RO, XPT_RSBUFF, RD_DEBUG)
BCHP_REGISTER(0x20a04e60, 32,  RO, XPT_RSBUFF, MPOD_RD_DEBUG)
BCHP_REGISTER(0x20a04e64, 32,  RO, XPT_RSBUFF, TSIO_RD_DEBUG)
BCHP_REGISTER(0x20a04e68, 32,  RW, XPT_RSBUFF, PR_FALLBACK_CTRL)
BCHP_REGISTER(0x20a04e6c, 32,  RW, XPT_RSBUFF, RDIF_BLOCK_OUT)
BCHP_REGISTER(0x20a04e70, 32,  RW, XPT_RSBUFF, MPOD_RDIF_BLOCK_OUT)
BCHP_REGISTER(0x20a04e74, 32,  RW, XPT_RSBUFF, TSIO_RDIF_BLOCK_OUT)
BCHP_REGISTER(0x20a04e78, 32,  RO, XPT_RSBUFF, IBP_BUFFER_IDLE)
BCHP_REGISTER(0x20a04e7c, 32,  RO, XPT_RSBUFF, PBP_BUFFER_IDLE)
BCHP_REGISTER(0x20a04e80, 32,  RW, XPT_RSBUFF, IBP_WR_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04e88, 32,  RW, XPT_RSBUFF, IBP_RD_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04e90, 32,  RW, XPT_RSBUFF, PBP_WR_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04e98, 32,  RW, XPT_RSBUFF, PBP_RD_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04ea0, 32,  RO, XPT_RSBUFF, MPOD_IBP_BUFFER_IDLE)
BCHP_REGISTER(0x20a04ea4, 32,  RW, XPT_RSBUFF, MPOD_IBP_WR_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04eac, 32,  RW, XPT_RSBUFF, MPOD_IBP_RD_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04eb4, 32,  RO, XPT_RSBUFF, TSIO_IBP_BUFFER_IDLE)
BCHP_REGISTER(0x20a04eb8, 32,  RW, XPT_RSBUFF, TSIO_IBP_WR_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04ec0, 32,  RW, XPT_RSBUFF, TSIO_IBP_RD_TRANS_PENDING_BAND0_TO_BAND15)
BCHP_REGISTER(0x20a04ec8, 32,  RW, XPT_RSBUFF, IBP_BAND_RD_IN_PROGRESS_EN)
BCHP_REGISTER(0x20a04ecc, 32,  RW, XPT_RSBUFF, IBP_BAND_RD_IN_PROGRESS)
BCHP_REGISTER(0x20a04ed0, 32,  RW, XPT_RSBUFF, PBP_BAND_RD_IN_PROGRESS_EN)
BCHP_REGISTER(0x20a04ed4, 32,  RW, XPT_RSBUFF, PBP_BAND_RD_IN_PROGRESS)
BCHP_REGISTER(0x20a04ed8, 32,  RW, XPT_RSBUFF, MPOD_IBP_BAND_RD_IN_PROGRESS_EN)
BCHP_REGISTER(0x20a04edc, 32,  RW, XPT_RSBUFF, MPOD_IBP_BAND_RD_IN_PROGRESS)
BCHP_REGISTER(0x20a04ee0, 32,  RW, XPT_RSBUFF, TSIO_IBP_BAND_RD_IN_PROGRESS_EN)
BCHP_REGISTER(0x20a04ee4, 32,  RW, XPT_RSBUFF, TSIO_IBP_BAND_RD_IN_PROGRESS)
BCHP_REGISTER(0x20a04f20, 32,  RW, XPT_RSBUFF, TB_DEBUG0)
BCHP_REGISTER(0x20a04f24, 32,  RO, XPT_RSBUFF, TB_DEBUG1)
BCHP_REGISTER(0x20a04f28, 32,  RO, XPT_RSBUFF, TB_DEBUG2)
BCHP_REGISTER(0x20a04f2c, 32,  RO, XPT_RSBUFF, TB_DEBUG3)
BCHP_REGISTER(0x20a08000, 32,  RW, XPT_PCROFFSET, INTERRUPT0_STATUS)
BCHP_REGISTER(0x20a08004, 32,  RW, XPT_PCROFFSET, INTERRUPT0_ENABLE)
BCHP_REGISTER(0x20a08020, 32,  RW, XPT_PCROFFSET, STC_BROADCAST_SEL)
BCHP_REGISTER(0x20a08028, 32,  RW, XPT_PCROFFSET, STC_MUX_DELAY)
BCHP_REGISTER(0x20a08030, 32,  RW, XPT_PCROFFSET, STC_INTERRUPT_STATUS)
BCHP_REGISTER(0x20a08034, 32,  RW, XPT_PCROFFSET, STC_INTERRUPT_ENABLE)
BCHP_REGISTER(0x20a08040, 32,  RW, XPT_PCROFFSET, STC0_MATCH)
BCHP_REGISTER(0x20a08044, 32,  RW, XPT_PCROFFSET, STC1_MATCH)
BCHP_REGISTER(0x20a08048, 32,  RW, XPT_PCROFFSET, STC2_MATCH)
BCHP_REGISTER(0x20a0804c, 32,  RW, XPT_PCROFFSET, STC3_MATCH)
BCHP_REGISTER(0x20a08080, 32,  RW, XPT_PCROFFSET, STC_SNAPSHOT0_CTRL)
BCHP_REGISTER(0x20a08084, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT0)
BCHP_REGISTER(0x20a08088, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT0_HI)
BCHP_REGISTER(0x20a0808c, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT0_LO)
BCHP_REGISTER(0x20a08090, 32,  RW, XPT_PCROFFSET, STC_SNAPSHOT1_CTRL)
BCHP_REGISTER(0x20a08094, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT1)
BCHP_REGISTER(0x20a08098, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT1_HI)
BCHP_REGISTER(0x20a0809c, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT1_LO)
BCHP_REGISTER(0x20a080a0, 32,  RW, XPT_PCROFFSET, STC_SNAPSHOT2_CTRL)
BCHP_REGISTER(0x20a080a4, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT2)
BCHP_REGISTER(0x20a080a8, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT2_HI)
BCHP_REGISTER(0x20a080ac, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT2_LO)
BCHP_REGISTER(0x20a080b0, 32,  RW, XPT_PCROFFSET, STC_SNAPSHOT3_CTRL)
BCHP_REGISTER(0x20a080b4, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT3)
BCHP_REGISTER(0x20a080b8, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT3_HI)
BCHP_REGISTER(0x20a080bc, 32,  RO, XPT_PCROFFSET, STC_SNAPSHOT3_LO)
BCHP_REGISTER(0x20a08280, 32,  RW, XPT_PCROFFSET, STC0_CTRL)
BCHP_REGISTER(0x20a08284, 32,  RW, XPT_PCROFFSET, STC0_TIMEBASE_SEL)
BCHP_REGISTER(0x20a08288, 32,  RW, XPT_PCROFFSET, STC0_RATE_CTRL)
BCHP_REGISTER(0x20a0828c, 32,  RW, XPT_PCROFFSET, STC0_CAPTURE_PCR_ONCE)
BCHP_REGISTER(0x20a08290, 32,  RW, XPT_PCROFFSET, STC0_HI)
BCHP_REGISTER(0x20a08294, 32,  RW, XPT_PCROFFSET, STC0_LO)
BCHP_REGISTER(0x20a08298, 32,  RW, XPT_PCROFFSET, STC0_INC_HI)
BCHP_REGISTER(0x20a0829c, 32,  RW, XPT_PCROFFSET, STC0_INC_LO)
BCHP_REGISTER(0x20a082a0, 32,  RW, XPT_PCROFFSET, STC0_INC_TRIG)
BCHP_REGISTER(0x20a082a4, 32,  RW, XPT_PCROFFSET, STC0_AV_WINDOW)
BCHP_REGISTER(0x20a082c0, 32,  RW, XPT_PCROFFSET, STC1_CTRL)
BCHP_REGISTER(0x20a082c4, 32,  RW, XPT_PCROFFSET, STC1_TIMEBASE_SEL)
BCHP_REGISTER(0x20a082c8, 32,  RW, XPT_PCROFFSET, STC1_RATE_CTRL)
BCHP_REGISTER(0x20a082cc, 32,  RW, XPT_PCROFFSET, STC1_CAPTURE_PCR_ONCE)
BCHP_REGISTER(0x20a082d0, 32,  RW, XPT_PCROFFSET, STC1_HI)
BCHP_REGISTER(0x20a082d4, 32,  RW, XPT_PCROFFSET, STC1_LO)
BCHP_REGISTER(0x20a082d8, 32,  RW, XPT_PCROFFSET, STC1_INC_HI)
BCHP_REGISTER(0x20a082dc, 32,  RW, XPT_PCROFFSET, STC1_INC_LO)
BCHP_REGISTER(0x20a082e0, 32,  RW, XPT_PCROFFSET, STC1_INC_TRIG)
BCHP_REGISTER(0x20a082e4, 32,  RW, XPT_PCROFFSET, STC1_AV_WINDOW)
BCHP_REGISTER(0x20a08300, 32,  RW, XPT_PCROFFSET, STC2_CTRL)
BCHP_REGISTER(0x20a08304, 32,  RW, XPT_PCROFFSET, STC2_TIMEBASE_SEL)
BCHP_REGISTER(0x20a08308, 32,  RW, XPT_PCROFFSET, STC2_RATE_CTRL)
BCHP_REGISTER(0x20a0830c, 32,  RW, XPT_PCROFFSET, STC2_CAPTURE_PCR_ONCE)
BCHP_REGISTER(0x20a08310, 32,  RW, XPT_PCROFFSET, STC2_HI)
BCHP_REGISTER(0x20a08314, 32,  RW, XPT_PCROFFSET, STC2_LO)
BCHP_REGISTER(0x20a08318, 32,  RW, XPT_PCROFFSET, STC2_INC_HI)
BCHP_REGISTER(0x20a0831c, 32,  RW, XPT_PCROFFSET, STC2_INC_LO)
BCHP_REGISTER(0x20a08320, 32,  RW, XPT_PCROFFSET, STC2_INC_TRIG)
BCHP_REGISTER(0x20a08324, 32,  RW, XPT_PCROFFSET, STC2_AV_WINDOW)
BCHP_REGISTER(0x20a08340, 32,  RW, XPT_PCROFFSET, STC3_CTRL)
BCHP_REGISTER(0x20a08344, 32,  RW, XPT_PCROFFSET, STC3_TIMEBASE_SEL)
BCHP_REGISTER(0x20a08348, 32,  RW, XPT_PCROFFSET, STC3_RATE_CTRL)
BCHP_REGISTER(0x20a0834c, 32,  RW, XPT_PCROFFSET, STC3_CAPTURE_PCR_ONCE)
BCHP_REGISTER(0x20a08350, 32,  RW, XPT_PCROFFSET, STC3_HI)
BCHP_REGISTER(0x20a08354, 32,  RW, XPT_PCROFFSET, STC3_LO)
BCHP_REGISTER(0x20a08358, 32,  RW, XPT_PCROFFSET, STC3_INC_HI)
BCHP_REGISTER(0x20a0835c, 32,  RW, XPT_PCROFFSET, STC3_INC_LO)
BCHP_REGISTER(0x20a08360, 32,  RW, XPT_PCROFFSET, STC3_INC_TRIG)
BCHP_REGISTER(0x20a08364, 32,  RW, XPT_PCROFFSET, STC3_AV_WINDOW)
BCHP_REGISTER(0x20a0a000, 32,  RW, XPT_PCROFFSET, CONTEXT0_PCROFFSET_CTRL)
BCHP_REGISTER(0x20a0a004, 32,  RW, XPT_PCROFFSET, CONTEXT0_PP_PCR_PID_CH_NUM)
BCHP_REGISTER(0x20a0a008, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_STATE)
BCHP_REGISTER(0x20a0a00c, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_STATUS)
BCHP_REGISTER(0x20a0a010, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_RD_PTR)
BCHP_REGISTER(0x20a0a014, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_WR_PTR)
BCHP_REGISTER(0x20a0a018, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_PID_CH0_CH1)
BCHP_REGISTER(0x20a0a01c, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_PID_CH2_CH3)
BCHP_REGISTER(0x20a0a020, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_PID_CH4_CH5)
BCHP_REGISTER(0x20a0a024, 32,  RW, XPT_PCROFFSET, CONTEXT0_SPLICE_PID_CH6_CH7)
BCHP_REGISTER(0x20a0a028, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATE)
BCHP_REGISTER(0x20a0a02c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET)
BCHP_REGISTER(0x20a0a030, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_VALID)
BCHP_REGISTER(0x20a0a034, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_MAX_ERROR)
BCHP_REGISTER(0x20a0a038, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_THRESHOLD)
BCHP_REGISTER(0x20a0a03c, 32,  RW, XPT_PCROFFSET, CONTEXT0_FIXED_OFFSET)
BCHP_REGISTER(0x20a0a040, 32,  RW, XPT_PCROFFSET, CONTEXT0_PP_PCR_COUNT)
BCHP_REGISTER(0x20a0a044, 32,  RW, XPT_PCROFFSET, CONTEXT0_PP_SEND_PCR_BASE)
BCHP_REGISTER(0x20a0a048, 32,  RW, XPT_PCROFFSET, CONTEXT0_PP_LAST_PCR_BASE)
BCHP_REGISTER(0x20a0a04c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_0)
BCHP_REGISTER(0x20a0a050, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_1)
BCHP_REGISTER(0x20a0a054, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_2)
BCHP_REGISTER(0x20a0a058, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_3)
BCHP_REGISTER(0x20a0a05c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_4)
BCHP_REGISTER(0x20a0a060, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_5)
BCHP_REGISTER(0x20a0a064, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_6)
BCHP_REGISTER(0x20a0a068, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_7)
BCHP_REGISTER(0x20a0a06c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_8)
BCHP_REGISTER(0x20a0a070, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_9)
BCHP_REGISTER(0x20a0a074, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_10)
BCHP_REGISTER(0x20a0a078, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_11)
BCHP_REGISTER(0x20a0a07c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_12)
BCHP_REGISTER(0x20a0a080, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_13)
BCHP_REGISTER(0x20a0a084, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_14)
BCHP_REGISTER(0x20a0a088, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_15)
BCHP_REGISTER(0x20a0a08c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_16)
BCHP_REGISTER(0x20a0a090, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_17)
BCHP_REGISTER(0x20a0a094, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_18)
BCHP_REGISTER(0x20a0a098, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_19)
BCHP_REGISTER(0x20a0a09c, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_20)
BCHP_REGISTER(0x20a0a0a0, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_21)
BCHP_REGISTER(0x20a0a0a4, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_22)
BCHP_REGISTER(0x20a0a0a8, 32,  RW, XPT_PCROFFSET, CONTEXT0_OFFSET_STATUS_23)
BCHP_REGISTER(0x20a0a0ac, 32,  RW, XPT_PCROFFSET, CONTEXT0_RESERVED_CFG_0)
BCHP_REGISTER(0x20a0a0b0, 32,  RW, XPT_PCROFFSET, CONTEXT1_PCROFFSET_CTRL)
BCHP_REGISTER(0x20a0a0b4, 32,  RW, XPT_PCROFFSET, CONTEXT1_PP_PCR_PID_CH_NUM)
BCHP_REGISTER(0x20a0a0b8, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_STATE)
BCHP_REGISTER(0x20a0a0bc, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_STATUS)
BCHP_REGISTER(0x20a0a0c0, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_RD_PTR)
BCHP_REGISTER(0x20a0a0c4, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_WR_PTR)
BCHP_REGISTER(0x20a0a0c8, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_PID_CH0_CH1)
BCHP_REGISTER(0x20a0a0cc, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_PID_CH2_CH3)
BCHP_REGISTER(0x20a0a0d0, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_PID_CH4_CH5)
BCHP_REGISTER(0x20a0a0d4, 32,  RW, XPT_PCROFFSET, CONTEXT1_SPLICE_PID_CH6_CH7)
BCHP_REGISTER(0x20a0a0d8, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATE)
BCHP_REGISTER(0x20a0a0dc, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET)
BCHP_REGISTER(0x20a0a0e0, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_VALID)
BCHP_REGISTER(0x20a0a0e4, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_MAX_ERROR)
BCHP_REGISTER(0x20a0a0e8, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_THRESHOLD)
BCHP_REGISTER(0x20a0a0ec, 32,  RW, XPT_PCROFFSET, CONTEXT1_FIXED_OFFSET)
BCHP_REGISTER(0x20a0a0f0, 32,  RW, XPT_PCROFFSET, CONTEXT1_PP_PCR_COUNT)
BCHP_REGISTER(0x20a0a0f4, 32,  RW, XPT_PCROFFSET, CONTEXT1_PP_SEND_PCR_BASE)
BCHP_REGISTER(0x20a0a0f8, 32,  RW, XPT_PCROFFSET, CONTEXT1_PP_LAST_PCR_BASE)
BCHP_REGISTER(0x20a0a0fc, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_0)
BCHP_REGISTER(0x20a0a100, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_1)
BCHP_REGISTER(0x20a0a104, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_2)
BCHP_REGISTER(0x20a0a108, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_3)
BCHP_REGISTER(0x20a0a10c, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_4)
BCHP_REGISTER(0x20a0a110, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_5)
BCHP_REGISTER(0x20a0a114, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_6)
BCHP_REGISTER(0x20a0a118, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_7)
BCHP_REGISTER(0x20a0a11c, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_8)
BCHP_REGISTER(0x20a0a120, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_9)
BCHP_REGISTER(0x20a0a124, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_10)
BCHP_REGISTER(0x20a0a128, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_11)
BCHP_REGISTER(0x20a0a12c, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_12)
BCHP_REGISTER(0x20a0a130, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_13)
BCHP_REGISTER(0x20a0a134, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_14)
BCHP_REGISTER(0x20a0a138, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_15)
BCHP_REGISTER(0x20a0a13c, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_16)
BCHP_REGISTER(0x20a0a140, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_17)
BCHP_REGISTER(0x20a0a144, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_18)
BCHP_REGISTER(0x20a0a148, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_19)
BCHP_REGISTER(0x20a0a14c, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_20)
BCHP_REGISTER(0x20a0a150, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_21)
BCHP_REGISTER(0x20a0a154, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_22)
BCHP_REGISTER(0x20a0a158, 32,  RW, XPT_PCROFFSET, CONTEXT1_OFFSET_STATUS_23)
BCHP_REGISTER(0x20a0a15c, 32,  RW, XPT_PCROFFSET, CONTEXT1_RESERVED_CFG_0)
BCHP_REGISTER(0x20a0a160, 32,  RW, XPT_PCROFFSET, CONTEXT2_PCROFFSET_CTRL)
BCHP_REGISTER(0x20a0a164, 32,  RW, XPT_PCROFFSET, CONTEXT2_PP_PCR_PID_CH_NUM)
BCHP_REGISTER(0x20a0a168, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_STATE)
BCHP_REGISTER(0x20a0a16c, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_STATUS)
BCHP_REGISTER(0x20a0a170, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_RD_PTR)
BCHP_REGISTER(0x20a0a174, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_WR_PTR)
BCHP_REGISTER(0x20a0a178, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_PID_CH0_CH1)
BCHP_REGISTER(0x20a0a17c, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_PID_CH2_CH3)
BCHP_REGISTER(0x20a0a180, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_PID_CH4_CH5)
BCHP_REGISTER(0x20a0a184, 32,  RW, XPT_PCROFFSET, CONTEXT2_SPLICE_PID_CH6_CH7)
BCHP_REGISTER(0x20a0a188, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATE)
BCHP_REGISTER(0x20a0a18c, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET)
BCHP_REGISTER(0x20a0a190, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_VALID)
BCHP_REGISTER(0x20a0a194, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_MAX_ERROR)
BCHP_REGISTER(0x20a0a198, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_THRESHOLD)
BCHP_REGISTER(0x20a0a19c, 32,  RW, XPT_PCROFFSET, CONTEXT2_FIXED_OFFSET)
BCHP_REGISTER(0x20a0a1a0, 32,  RW, XPT_PCROFFSET, CONTEXT2_PP_PCR_COUNT)
BCHP_REGISTER(0x20a0a1a4, 32,  RW, XPT_PCROFFSET, CONTEXT2_PP_SEND_PCR_BASE)
BCHP_REGISTER(0x20a0a1a8, 32,  RW, XPT_PCROFFSET, CONTEXT2_PP_LAST_PCR_BASE)
BCHP_REGISTER(0x20a0a1ac, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_0)
BCHP_REGISTER(0x20a0a1b0, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_1)
BCHP_REGISTER(0x20a0a1b4, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_2)
BCHP_REGISTER(0x20a0a1b8, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_3)
BCHP_REGISTER(0x20a0a1bc, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_4)
BCHP_REGISTER(0x20a0a1c0, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_5)
BCHP_REGISTER(0x20a0a1c4, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_6)
BCHP_REGISTER(0x20a0a1c8, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_7)
BCHP_REGISTER(0x20a0a1cc, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_8)
BCHP_REGISTER(0x20a0a1d0, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_9)
BCHP_REGISTER(0x20a0a1d4, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_10)
BCHP_REGISTER(0x20a0a1d8, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_11)
BCHP_REGISTER(0x20a0a1dc, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_12)
BCHP_REGISTER(0x20a0a1e0, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_13)
BCHP_REGISTER(0x20a0a1e4, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_14)
BCHP_REGISTER(0x20a0a1e8, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_15)
BCHP_REGISTER(0x20a0a1ec, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_16)
BCHP_REGISTER(0x20a0a1f0, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_17)
BCHP_REGISTER(0x20a0a1f4, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_18)
BCHP_REGISTER(0x20a0a1f8, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_19)
BCHP_REGISTER(0x20a0a1fc, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_20)
BCHP_REGISTER(0x20a0a200, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_21)
BCHP_REGISTER(0x20a0a204, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_22)
BCHP_REGISTER(0x20a0a208, 32,  RW, XPT_PCROFFSET, CONTEXT2_OFFSET_STATUS_23)
BCHP_REGISTER(0x20a0a20c, 32,  RW, XPT_PCROFFSET, CONTEXT2_RESERVED_CFG_0)
BCHP_REGISTER(0x20a0a210, 32,  RW, XPT_PCROFFSET, CONTEXT3_PCROFFSET_CTRL)
BCHP_REGISTER(0x20a0a214, 32,  RW, XPT_PCROFFSET, CONTEXT3_PP_PCR_PID_CH_NUM)
BCHP_REGISTER(0x20a0a218, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_STATE)
BCHP_REGISTER(0x20a0a21c, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_STATUS)
BCHP_REGISTER(0x20a0a220, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_RD_PTR)
BCHP_REGISTER(0x20a0a224, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_WR_PTR)
BCHP_REGISTER(0x20a0a228, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_PID_CH0_CH1)
BCHP_REGISTER(0x20a0a22c, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_PID_CH2_CH3)
BCHP_REGISTER(0x20a0a230, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_PID_CH4_CH5)
BCHP_REGISTER(0x20a0a234, 32,  RW, XPT_PCROFFSET, CONTEXT3_SPLICE_PID_CH6_CH7)
BCHP_REGISTER(0x20a0a238, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATE)
BCHP_REGISTER(0x20a0a23c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET)
BCHP_REGISTER(0x20a0a240, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_VALID)
BCHP_REGISTER(0x20a0a244, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_MAX_ERROR)
BCHP_REGISTER(0x20a0a248, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_THRESHOLD)
BCHP_REGISTER(0x20a0a24c, 32,  RW, XPT_PCROFFSET, CONTEXT3_FIXED_OFFSET)
BCHP_REGISTER(0x20a0a250, 32,  RW, XPT_PCROFFSET, CONTEXT3_PP_PCR_COUNT)
BCHP_REGISTER(0x20a0a254, 32,  RW, XPT_PCROFFSET, CONTEXT3_PP_SEND_PCR_BASE)
BCHP_REGISTER(0x20a0a258, 32,  RW, XPT_PCROFFSET, CONTEXT3_PP_LAST_PCR_BASE)
BCHP_REGISTER(0x20a0a25c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_0)
BCHP_REGISTER(0x20a0a260, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_1)
BCHP_REGISTER(0x20a0a264, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_2)
BCHP_REGISTER(0x20a0a268, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_3)
BCHP_REGISTER(0x20a0a26c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_4)
BCHP_REGISTER(0x20a0a270, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_5)
BCHP_REGISTER(0x20a0a274, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_6)
BCHP_REGISTER(0x20a0a278, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_7)
BCHP_REGISTER(0x20a0a27c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_8)
BCHP_REGISTER(0x20a0a280, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_9)
BCHP_REGISTER(0x20a0a284, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_10)
BCHP_REGISTER(0x20a0a288, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_11)
BCHP_REGISTER(0x20a0a28c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_12)
BCHP_REGISTER(0x20a0a290, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_13)
BCHP_REGISTER(0x20a0a294, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_14)
BCHP_REGISTER(0x20a0a298, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_15)
BCHP_REGISTER(0x20a0a29c, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_16)
BCHP_REGISTER(0x20a0a2a0, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_17)
BCHP_REGISTER(0x20a0a2a4, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_18)
BCHP_REGISTER(0x20a0a2a8, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_19)
BCHP_REGISTER(0x20a0a2ac, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_20)
BCHP_REGISTER(0x20a0a2b0, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_21)
BCHP_REGISTER(0x20a0a2b4, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_22)
BCHP_REGISTER(0x20a0a2b8, 32,  RW, XPT_PCROFFSET, CONTEXT3_OFFSET_STATUS_23)
BCHP_REGISTER(0x20a0a2bc, 32,  RW, XPT_PCROFFSET, CONTEXT3_RESERVED_CFG_0)
BCHP_REGISTER(0x20a0d000, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, TSIO_CTRL)
BCHP_REGISTER(0x20a0d004, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, TSIO_CLK_SELECT)
BCHP_REGISTER(0x20a0d008, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, STUFF_PKT_SERVICE_ID)
BCHP_REGISTER(0x20a0d010, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, TX_CNC_PING_BUF_CTRL)
BCHP_REGISTER(0x20a0d014, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, TX_CNC_PONG_BUF_CTRL)
BCHP_REGISTER(0x20a0d018, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, RX_CNC_PING_BUF_STATUS)
BCHP_REGISTER(0x20a0d01c, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, RX_CNC_PONG_BUF_STATUS)
BCHP_REGISTER(0x20a0d02c, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, RX_CNC_ERROR_STATUS)
BCHP_REGISTER(0x20a0d030, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, CTS_CHECK_EN)
BCHP_REGISTER(0x20a0d034, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, RX_CTS_STATUS)
BCHP_REGISTER(0x20a0d048, 32,  RW, XPT_TSIO_CONFIG_REGISTERS, TX_PKT_DROP_STATUS)
BCHP_REGISTER(0x20a0d04c, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, CLK_SEL_VALUE)
BCHP_REGISTER(0x20a0d050, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TV_STATUS)
BCHP_REGISTER(0x20a0d054, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_0)
BCHP_REGISTER(0x20a0d058, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_1)
BCHP_REGISTER(0x20a0d05c, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_2)
BCHP_REGISTER(0x20a0d060, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_3)
BCHP_REGISTER(0x20a0d064, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_4)
BCHP_REGISTER(0x20a0d068, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_5)
BCHP_REGISTER(0x20a0d06c, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_6)
BCHP_REGISTER(0x20a0d070, 32,  RO, XPT_TSIO_CONFIG_REGISTERS, TSIO_DEBUG_7)
BCHP_REGISTER(0x20a0f000, 32,  RW, XPT_TSIO_CALIB_REGISTERS, PAD_CTRL)
BCHP_REGISTER(0x20a0f004, 32,  RW, XPT_TSIO_CALIB_REGISTERS, CALIB_CTRL)
BCHP_REGISTER(0x20a0f010, 32,  RW, XPT_TSIO_CALIB_REGISTERS, DLCM_L_PHASE_SELECT)
BCHP_REGISTER(0x20a0f014, 32,  RW, XPT_TSIO_CALIB_REGISTERS, CENTER_TAP_PHASE_SELECT)
BCHP_REGISTER(0x20a0f018, 32,  RW, XPT_TSIO_CALIB_REGISTERS, DLCM_R_PHASE_SELECT)
BCHP_REGISTER(0x20a0f020, 32,  RW, XPT_TSIO_CALIB_REGISTERS, TRAINING_CTRL)
BCHP_REGISTER(0x20a0f024, 32,  RW, XPT_TSIO_CALIB_REGISTERS, TRAINING_PATTERN)
BCHP_REGISTER(0x20a0f028, 32,  RW, XPT_TSIO_CALIB_REGISTERS, TRAINING_MEMORY_START_ADDR)
BCHP_REGISTER(0x20a0f02c, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CURR_TRAINING_MEMORY_ADDR)
BCHP_REGISTER(0x20a0f030, 32,  RW, XPT_TSIO_CALIB_REGISTERS, NUM_VDL_ITERATIONS)
BCHP_REGISTER(0x20a0f034, 32,  RW, XPT_TSIO_CALIB_REGISTERS, VDL_INCREMENT)
BCHP_REGISTER(0x20a0f040, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_A_VALUE)
BCHP_REGISTER(0x20a0f044, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_B_VALUE)
BCHP_REGISTER(0x20a0f048, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_C_VALUE)
BCHP_REGISTER(0x20a0f04c, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_TX_CLK)
BCHP_REGISTER(0x20a0f050, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_TX_DATA)
BCHP_REGISTER(0x20a0f054, 32,  RW, XPT_TSIO_CALIB_REGISTERS, XVDL_CFG)
BCHP_REGISTER(0x20a0f058, 32,  RW, XPT_TSIO_CALIB_REGISTERS, VDL_STEP_CALIB_CTRL)
BCHP_REGISTER(0x20a0f05c, 32,  RO, XPT_TSIO_CALIB_REGISTERS, VDL_CALIB_STATUS)
BCHP_REGISTER(0x20a0f060, 32,  RW, XPT_TSIO_CALIB_REGISTERS, VDL_SEGMENT)
BCHP_REGISTER(0x20a0f064, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CURR_XVDL_A_VALUE)
BCHP_REGISTER(0x20a0f068, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CURR_XVDL_B_VALUE)
BCHP_REGISTER(0x20a0f06c, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CURR_XVDL_C_VALUE)
BCHP_REGISTER(0x20a0f070, 32,  RW, XPT_TSIO_CALIB_REGISTERS, SYNC_COUNT)
BCHP_REGISTER(0x20a0f074, 32,  RO, XPT_TSIO_CALIB_REGISTERS, SYNC_STATUS)
BCHP_REGISTER(0x20a0f078, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_SYNC_COUNT)
BCHP_REGISTER(0x20a0f07c, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CALIB_DEBUG_0)
BCHP_REGISTER(0x20a0f080, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CALIB_DEBUG_1)
BCHP_REGISTER(0x20a0f084, 32,  RO, XPT_TSIO_CALIB_REGISTERS, CALIB_DEBUG_2)
BCHP_REGISTER(0x20a0f090, 32,  RW, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCM_CTRL1)
BCHP_REGISTER(0x20a0f094, 32,  RW, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCM_CTRL2)
BCHP_REGISTER(0x20a0f098, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCM_STATUS)
BCHP_REGISTER(0x20a0f09c, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCM_GLOBAL_CLK_COUNT)
BCHP_REGISTER(0x20a0f0a0, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCML_EVENT_COUNT)
BCHP_REGISTER(0x20a0f0a4, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCML_MARKER_COUNT1)
BCHP_REGISTER(0x20a0f0a8, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCML_MARKER_COUNT2)
BCHP_REGISTER(0x20a0f0ac, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCML_MARKER_COUNT3)
BCHP_REGISTER(0x20a0f0b0, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCMR_EVENT_COUNT)
BCHP_REGISTER(0x20a0f0b4, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCMR_MARKER_COUNT1)
BCHP_REGISTER(0x20a0f0b8, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCMR_MARKER_COUNT2)
BCHP_REGISTER(0x20a0f0bc, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCMR_MARKER_COUNT3)
BCHP_REGISTER(0x20a0f0c0, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCML_SAMPLES)
BCHP_REGISTER(0x20a0f0c4, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_CENTER_SAMPLES)
BCHP_REGISTER(0x20a0f0c8, 32,  RO, XPT_TSIO_CALIB_REGISTERS, DEBUG_DLCMR_SAMPLES)
BCHP_REGISTER(0x20a0fc00, 32,  RO, XPT_TSIO_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a0fc04, 32,  WO, XPT_TSIO_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a0fc08, 32,  WO, XPT_TSIO_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a0fc0c, 32,  RO, XPT_TSIO_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a0fc10, 32,  WO, XPT_TSIO_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a0fc14, 32,  WO, XPT_TSIO_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a0fc18, 32,  RO, XPT_TSIO_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a0fc1c, 32,  WO, XPT_TSIO_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a0fc20, 32,  WO, XPT_TSIO_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a0fc24, 32,  RO, XPT_TSIO_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a0fc28, 32,  WO, XPT_TSIO_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a0fc2c, 32,  WO, XPT_TSIO_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a14000, 32,  RW, XPT_FULL_PID_PARSER, PARSER_CFG)
BCHP_REGISTER(0x20a14004, 32,  RW, XPT_FULL_PID_PARSER, IBP_ACCEPT_ADAPT_00)
BCHP_REGISTER(0x20a14008, 32,  RW, XPT_FULL_PID_PARSER, PBP_ACCEPT_ADAPT_00)
BCHP_REGISTER(0x20a1400c, 32,  RW, XPT_FULL_PID_PARSER, IBP_PCC_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14010, 32,  RW, XPT_FULL_PID_PARSER, IBP_PCC_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a14014, 32,  RW, XPT_FULL_PID_PARSER, PBP_PCC_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14018, 32,  RW, XPT_FULL_PID_PARSER, PBP_PCC_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a1401c, 32,  RW, XPT_FULL_PID_PARSER, IBP_SCC_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14020, 32,  RW, XPT_FULL_PID_PARSER, IBP_SCC_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a14024, 32,  RW, XPT_FULL_PID_PARSER, PBP_SCC_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14028, 32,  RW, XPT_FULL_PID_PARSER, PBP_SCC_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a1402c, 32,  RW, XPT_FULL_PID_PARSER, IBP_PSG_PROTOCOL_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14030, 32,  RW, XPT_FULL_PID_PARSER, IBP_PSG_PROTOCOL_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a14034, 32,  RW, XPT_FULL_PID_PARSER, PBP_PSG_PROTOCOL_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14038, 32,  RW, XPT_FULL_PID_PARSER, PBP_PSG_PROTOCOL_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a1403c, 32,  RW, XPT_FULL_PID_PARSER, IBP_TRANSPORT_ERROR_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14040, 32,  RW, XPT_FULL_PID_PARSER, IBP_TRANSPORT_ERROR_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a14044, 32,  RW, XPT_FULL_PID_PARSER, PBP_TRANSPORT_ERROR_INTR_STATUS_REG)
BCHP_REGISTER(0x20a14048, 32,  RW, XPT_FULL_PID_PARSER, PBP_TRANSPORT_ERROR_INTR_STATUS_REG_EN)
BCHP_REGISTER(0x20a1404c, 32,  RO, XPT_FULL_PID_PARSER, LATEST_INTR_CH_NUM)
BCHP_REGISTER(0x20a14050, 32,  RW, XPT_FULL_PID_PARSER, PSG_ERR_MODE)
BCHP_REGISTER(0x20a14054, 32,  RW, XPT_FULL_PID_PARSER, INPUT_BLOCK_OUT)
BCHP_REGISTER(0x20a14058, 32,  RW, XPT_FULL_PID_PARSER, OUTPUT_BLOCK_OUT)
BCHP_REGISTER(0x20a20000, 32,  RW, XPT_FE, FE_CTRL)
BCHP_REGISTER(0x20a20004, 32,  RW, XPT_FE, PWR_CTRL)
BCHP_REGISTER(0x20a20008, 32,  RW, XPT_FE, MAX_PID_CHANNEL)
BCHP_REGISTER(0x20a2000c, 32,  RW, XPT_FE, IB_SYNC_DETECT_CTRL)
BCHP_REGISTER(0x20a20010, 32,  RW, XPT_FE, INTR_STATUS0_REG)
BCHP_REGISTER(0x20a20014, 32,  RW, XPT_FE, INTR_STATUS1_REG)
BCHP_REGISTER(0x20a20018, 32,  RW, XPT_FE, INTR_STATUS2_REG)
BCHP_REGISTER(0x20a20024, 32,  RW, XPT_FE, INTR_STATUS0_REG_EN)
BCHP_REGISTER(0x20a20028, 32,  RW, XPT_FE, INTR_STATUS1_REG_EN)
BCHP_REGISTER(0x20a2002c, 32,  RW, XPT_FE, INTR_STATUS2_REG_EN)
BCHP_REGISTER(0x20a20040, 32,  RW, XPT_FE, MTSIF_RX_INTR_STATUS0_REG)
BCHP_REGISTER(0x20a20048, 32,  RW, XPT_FE, MTSIF_RX_INTR_STATUS0_REG_EN)
BCHP_REGISTER(0x20a20060, 32,  RW, XPT_FE, PARSERS_INBUFF_OVFL_ERROR_INTR_STATUS0_REG)
BCHP_REGISTER(0x20a20078, 32,  RW, XPT_FE, PARSERS_INBUFF_OVFL_ERROR_INTR_STATUS0_REG_EN)
BCHP_REGISTER(0x20a200a0, 32,  RW, XPT_FE, ATS_COUNTER_CTRL)
BCHP_REGISTER(0x20a200a4, 32,  RW, XPT_FE, ATS_TS_MOD300)
BCHP_REGISTER(0x20a200a8, 32,  RW, XPT_FE, ATS_TS_BINARY)
BCHP_REGISTER(0x20a200b0, 32,  RO, XPT_FE, TV_STATUS_0)
BCHP_REGISTER(0x20a200b4, 32,  RO, XPT_FE, TV_STATUS_1)
BCHP_REGISTER(0x20a200b8, 32,  RO, XPT_FE, TV_STATUS_2)
BCHP_REGISTER(0x20a200bc, 32,  RO, XPT_FE, TV_STATUS_3)
BCHP_REGISTER(0x20a200c0, 32,  RO, XPT_FE, TV_STATUS_4)
BCHP_REGISTER(0x20a20100, 32,  RW, XPT_FE, IB0_CTRL)
BCHP_REGISTER(0x20a20104, 32,  RW, XPT_FE, IB0_SYNC_COUNT)
BCHP_REGISTER(0x20a20108, 32,  RW, XPT_FE, IB1_CTRL)
BCHP_REGISTER(0x20a2010c, 32,  RW, XPT_FE, IB1_SYNC_COUNT)
BCHP_REGISTER(0x20a20110, 32,  RW, XPT_FE, IB2_CTRL)
BCHP_REGISTER(0x20a20114, 32,  RW, XPT_FE, IB2_SYNC_COUNT)
BCHP_REGISTER(0x20a20118, 32,  RW, XPT_FE, IB3_CTRL)
BCHP_REGISTER(0x20a2011c, 32,  RW, XPT_FE, IB3_SYNC_COUNT)
BCHP_REGISTER(0x20a20120, 32,  RW, XPT_FE, IB4_CTRL)
BCHP_REGISTER(0x20a20124, 32,  RW, XPT_FE, IB4_SYNC_COUNT)
BCHP_REGISTER(0x20a20280, 32,  RW, XPT_FE, MINI_PID_PARSER0_CTRL1)
BCHP_REGISTER(0x20a20284, 32,  RW, XPT_FE, MINI_PID_PARSER0_CTRL2)
BCHP_REGISTER(0x20a20288, 32,  RW, XPT_FE, MINI_PID_PARSER0_ALL_PASS_CTRL)
BCHP_REGISTER(0x20a2028c, 32,  RW, XPT_FE, MINI_PID_PARSER1_CTRL1)
BCHP_REGISTER(0x20a20290, 32,  RW, XPT_FE, MINI_PID_PARSER1_CTRL2)
BCHP_REGISTER(0x20a20294, 32,  RW, XPT_FE, MINI_PID_PARSER1_ALL_PASS_CTRL)
BCHP_REGISTER(0x20a20298, 32,  RW, XPT_FE, MINI_PID_PARSER2_CTRL1)
BCHP_REGISTER(0x20a2029c, 32,  RW, XPT_FE, MINI_PID_PARSER2_CTRL2)
BCHP_REGISTER(0x20a202a0, 32,  RW, XPT_FE, MINI_PID_PARSER2_ALL_PASS_CTRL)
BCHP_REGISTER(0x20a202a4, 32,  RW, XPT_FE, MINI_PID_PARSER3_CTRL1)
BCHP_REGISTER(0x20a202a8, 32,  RW, XPT_FE, MINI_PID_PARSER3_CTRL2)
BCHP_REGISTER(0x20a202ac, 32,  RW, XPT_FE, MINI_PID_PARSER3_ALL_PASS_CTRL)
BCHP_REGISTER(0x20a20400, 32,  RW, XPT_FE, MINI_PID_PARSER0_TO_PARSER3_BAND_ID)
BCHP_REGISTER(0x20a204c0, 32,  RW, XPT_FE, MTSIF_RX0_CTRL1)
BCHP_REGISTER(0x20a204c4, 32,  RW, XPT_FE, MTSIF_RX0_SECRET_WORD)
BCHP_REGISTER(0x20a204c8, 32,  RW, XPT_FE, MTSIF_RX0_BAND0_BAND31_ID_DROP)
BCHP_REGISTER(0x20a204cc, 32,  RW, XPT_FE, MTSIF_RX0_BAND0_BAND3_ID)
BCHP_REGISTER(0x20a204d0, 32,  RW, XPT_FE, MTSIF_RX0_BAND4_BAND7_ID)
BCHP_REGISTER(0x20a204d4, 32,  RW, XPT_FE, MTSIF_RX0_BAND8_BAND11_ID)
BCHP_REGISTER(0x20a204d8, 32,  RW, XPT_FE, MTSIF_RX0_BAND12_BAND15_ID)
BCHP_REGISTER(0x20a204dc, 32,  RW, XPT_FE, MTSIF_RX0_BAND16_BAND19_ID)
BCHP_REGISTER(0x20a204e0, 32,  RW, XPT_FE, MTSIF_RX0_BAND20_BAND23_ID)
BCHP_REGISTER(0x20a204e4, 32,  RW, XPT_FE, MTSIF_RX0_BAND24_BAND27_ID)
BCHP_REGISTER(0x20a204e8, 32,  RW, XPT_FE, MTSIF_RX0_BAND28_BAND31_ID)
BCHP_REGISTER(0x20a204ec, 32,  RW, XPT_FE, MTSIF_RX0_BAND32_BAND35_ID)
BCHP_REGISTER(0x20a204f0, 32,  RW, XPT_FE, MTSIF_RX0_BAND36_BAND39_ID)
BCHP_REGISTER(0x20a204f4, 32,  RW, XPT_FE, MTSIF_RX0_BAND40_BAND43_ID)
BCHP_REGISTER(0x20a204f8, 32,  RW, XPT_FE, MTSIF_RX0_BAND44_BAND47_ID)
BCHP_REGISTER(0x20a204fc, 32,  RW, XPT_FE, MTSIF_RX0_BAND48_BAND51_ID)
BCHP_REGISTER(0x20a20500, 32,  RW, XPT_FE, MTSIF_RX0_BAND52_BAND55_ID)
BCHP_REGISTER(0x20a20504, 32,  RW, XPT_FE, MTSIF_RX0_BAND56_BAND59_ID)
BCHP_REGISTER(0x20a20508, 32,  RW, XPT_FE, MTSIF_RX0_BAND60_BAND63_ID)
BCHP_REGISTER(0x20a2050c, 32,  RW, XPT_FE, MTSIF_RX0_PKT_BAND0_BAND31_DETECT)
BCHP_REGISTER(0x20a40000, 32,  RW, XPT_RAVE, CX0_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40004, 32,  RW, XPT_RAVE, CX0_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40008, 32,  RW, XPT_RAVE, CX0_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4000c, 32,  RW, XPT_RAVE, CX0_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40010, 32,  RW, XPT_RAVE, CX0_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40014, 32,  RW, XPT_RAVE, CX0_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40018, 32,  RW, XPT_RAVE, CX0_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4001c, 32,  RW, XPT_RAVE, CX0_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40020, 32,  RW, XPT_RAVE, CX0_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40024, 32,  RW, XPT_RAVE, CX0_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40028, 32,  RW, XPT_RAVE, CX0_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a4002c, 32,  RW, XPT_RAVE, CX0_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40030, 32,  RW, XPT_RAVE, CX0_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40034, 32,  RW, XPT_RAVE, CX0_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40038, 32,  RW, XPT_RAVE, CX0_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a4003c, 32,  RW, XPT_RAVE, CX0_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40040, 32,  RW, XPT_RAVE, CX0_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40044, 32,  RW, XPT_RAVE, CX0_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40048, 32,  RW, XPT_RAVE, CX0_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4004c, 32,  RW, XPT_RAVE, CX0_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40050, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40054, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40058, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4005c, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40060, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40064, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40068, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a4006c, 32,  RW, XPT_RAVE, CX0_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40070, 32,  RW, XPT_RAVE, CX0_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40074, 32,  RW, XPT_RAVE, CX0_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40078, 32,  RW, XPT_RAVE, CX0_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a4007c, 32,  RW, XPT_RAVE, CX0_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40080, 32,  RW, XPT_RAVE, CX0_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40084, 32,  RW, XPT_RAVE, CX0_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40088, 32,  RW, XPT_RAVE, CX0_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4008c, 32,  RW, XPT_RAVE, CX0_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40090, 32,  RW, XPT_RAVE, CX0_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40094, 32,  RW, XPT_RAVE, CX0_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40098, 32,  RW, XPT_RAVE, CX0_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4009c, 32,  RW, XPT_RAVE, CX0_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a400a0, 32,  RW, XPT_RAVE, CX0_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a400a4, 32,  RW, XPT_RAVE, CX0_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a400a8, 32,  RW, XPT_RAVE, CX0_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a400ac, 32,  RW, XPT_RAVE, CX0_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a400b0, 32,  RW, XPT_RAVE, CX0_REC_CTRL1)
BCHP_REGISTER(0x20a400b4, 32,  RW, XPT_RAVE, CX0_REC_INIT_TS)
BCHP_REGISTER(0x20a400b8, 32,  RW, XPT_RAVE, CX0_REC_TS_CTRL)
BCHP_REGISTER(0x20a400bc, 32,  RW, XPT_RAVE, CX0_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a400c0, 32,  RW, XPT_RAVE, CX0_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a400c4, 32,  RW, XPT_RAVE, CX0_PIC_CTR)
BCHP_REGISTER(0x20a400c8, 32,  RW, XPT_RAVE, CX0_PIC_CTR_MODE)
BCHP_REGISTER(0x20a400cc, 32,  RW, XPT_RAVE, CX0_REC_TIMER)
BCHP_REGISTER(0x20a400d0, 32,  RW, XPT_RAVE, CX0_REC_STATE0)
BCHP_REGISTER(0x20a400d4, 32,  RW, XPT_RAVE, CX0_REC_STATE1)
BCHP_REGISTER(0x20a400d8, 32,  RW, XPT_RAVE, CX0_REC_STATE2)
BCHP_REGISTER(0x20a400dc, 32,  RW, XPT_RAVE, CX0_REC_STATE2b)
BCHP_REGISTER(0x20a400e0, 32,  RW, XPT_RAVE, CX0_REC_STATE3)
BCHP_REGISTER(0x20a400e4, 32,  RW, XPT_RAVE, CX0_REC_COUNT)
BCHP_REGISTER(0x20a400e8, 32,  RW, XPT_RAVE, CX0_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a400ec, 32,  RW, XPT_RAVE, CX0_SC)
BCHP_REGISTER(0x20a400f0, 32,  RW, XPT_RAVE, CX0_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a400f4, 32,  RW, XPT_RAVE, CX0_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a400f8, 32,  RW, XPT_RAVE, CX0_RAVE_Reg_2)
BCHP_REGISTER(0x20a400fc, 32,  RW, XPT_RAVE, CX0_RAVE_Reg_3)
BCHP_REGISTER(0x20a40100, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40104, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40108, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4010c, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40110, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40114, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40118, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4011c, 32,  RW, XPT_RAVE, CX0_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40120, 32,  RW, XPT_RAVE, CX0_RAVE_Reg_4)
BCHP_REGISTER(0x20a40124, 32,  RW, XPT_RAVE, CX0_RAVE_Reg_5)
BCHP_REGISTER(0x20a40128, 32,  RW, XPT_RAVE, CX0_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4012c, 32,  RW, XPT_RAVE, CX0_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40130, 32,  RW, XPT_RAVE, CX0_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40134, 32,  RW, XPT_RAVE, CX0_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40138, 32,  RW, XPT_RAVE, CX0_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4013c, 32,  RW, XPT_RAVE, CX0_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40140, 32,  RW, XPT_RAVE, CX1_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40144, 32,  RW, XPT_RAVE, CX1_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40148, 32,  RW, XPT_RAVE, CX1_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4014c, 32,  RW, XPT_RAVE, CX1_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40150, 32,  RW, XPT_RAVE, CX1_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40154, 32,  RW, XPT_RAVE, CX1_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40158, 32,  RW, XPT_RAVE, CX1_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4015c, 32,  RW, XPT_RAVE, CX1_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40160, 32,  RW, XPT_RAVE, CX1_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40164, 32,  RW, XPT_RAVE, CX1_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40168, 32,  RW, XPT_RAVE, CX1_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a4016c, 32,  RW, XPT_RAVE, CX1_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40170, 32,  RW, XPT_RAVE, CX1_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40174, 32,  RW, XPT_RAVE, CX1_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40178, 32,  RW, XPT_RAVE, CX1_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a4017c, 32,  RW, XPT_RAVE, CX1_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40180, 32,  RW, XPT_RAVE, CX1_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40184, 32,  RW, XPT_RAVE, CX1_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40188, 32,  RW, XPT_RAVE, CX1_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4018c, 32,  RW, XPT_RAVE, CX1_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40190, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40194, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40198, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4019c, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a401a0, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a401a4, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a401a8, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a401ac, 32,  RW, XPT_RAVE, CX1_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a401b0, 32,  RW, XPT_RAVE, CX1_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a401b4, 32,  RW, XPT_RAVE, CX1_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a401b8, 32,  RW, XPT_RAVE, CX1_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a401bc, 32,  RW, XPT_RAVE, CX1_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a401c0, 32,  RW, XPT_RAVE, CX1_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a401c4, 32,  RW, XPT_RAVE, CX1_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a401c8, 32,  RW, XPT_RAVE, CX1_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a401cc, 32,  RW, XPT_RAVE, CX1_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a401d0, 32,  RW, XPT_RAVE, CX1_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a401d4, 32,  RW, XPT_RAVE, CX1_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a401d8, 32,  RW, XPT_RAVE, CX1_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a401dc, 32,  RW, XPT_RAVE, CX1_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a401e0, 32,  RW, XPT_RAVE, CX1_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a401e4, 32,  RW, XPT_RAVE, CX1_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a401e8, 32,  RW, XPT_RAVE, CX1_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a401ec, 32,  RW, XPT_RAVE, CX1_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a401f0, 32,  RW, XPT_RAVE, CX1_REC_CTRL1)
BCHP_REGISTER(0x20a401f4, 32,  RW, XPT_RAVE, CX1_REC_INIT_TS)
BCHP_REGISTER(0x20a401f8, 32,  RW, XPT_RAVE, CX1_REC_TS_CTRL)
BCHP_REGISTER(0x20a401fc, 32,  RW, XPT_RAVE, CX1_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40200, 32,  RW, XPT_RAVE, CX1_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40204, 32,  RW, XPT_RAVE, CX1_PIC_CTR)
BCHP_REGISTER(0x20a40208, 32,  RW, XPT_RAVE, CX1_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4020c, 32,  RW, XPT_RAVE, CX1_REC_TIMER)
BCHP_REGISTER(0x20a40210, 32,  RW, XPT_RAVE, CX1_REC_STATE0)
BCHP_REGISTER(0x20a40214, 32,  RW, XPT_RAVE, CX1_REC_STATE1)
BCHP_REGISTER(0x20a40218, 32,  RW, XPT_RAVE, CX1_REC_STATE2)
BCHP_REGISTER(0x20a4021c, 32,  RW, XPT_RAVE, CX1_REC_STATE2b)
BCHP_REGISTER(0x20a40220, 32,  RW, XPT_RAVE, CX1_REC_STATE3)
BCHP_REGISTER(0x20a40224, 32,  RW, XPT_RAVE, CX1_REC_COUNT)
BCHP_REGISTER(0x20a40228, 32,  RW, XPT_RAVE, CX1_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4022c, 32,  RW, XPT_RAVE, CX1_SC)
BCHP_REGISTER(0x20a40230, 32,  RW, XPT_RAVE, CX1_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40234, 32,  RW, XPT_RAVE, CX1_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40238, 32,  RW, XPT_RAVE, CX1_RAVE_Reg_2)
BCHP_REGISTER(0x20a4023c, 32,  RW, XPT_RAVE, CX1_RAVE_Reg_3)
BCHP_REGISTER(0x20a40240, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40244, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40248, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4024c, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40250, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40254, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40258, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4025c, 32,  RW, XPT_RAVE, CX1_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40260, 32,  RW, XPT_RAVE, CX1_RAVE_Reg_4)
BCHP_REGISTER(0x20a40264, 32,  RW, XPT_RAVE, CX1_RAVE_Reg_5)
BCHP_REGISTER(0x20a40268, 32,  RW, XPT_RAVE, CX1_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4026c, 32,  RW, XPT_RAVE, CX1_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40270, 32,  RW, XPT_RAVE, CX1_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40274, 32,  RW, XPT_RAVE, CX1_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40278, 32,  RW, XPT_RAVE, CX1_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4027c, 32,  RW, XPT_RAVE, CX1_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40280, 32,  RW, XPT_RAVE, CX2_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40284, 32,  RW, XPT_RAVE, CX2_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40288, 32,  RW, XPT_RAVE, CX2_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4028c, 32,  RW, XPT_RAVE, CX2_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40290, 32,  RW, XPT_RAVE, CX2_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40294, 32,  RW, XPT_RAVE, CX2_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40298, 32,  RW, XPT_RAVE, CX2_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4029c, 32,  RW, XPT_RAVE, CX2_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a402a0, 32,  RW, XPT_RAVE, CX2_AV_THRESHOLDS)
BCHP_REGISTER(0x20a402a4, 32,  RW, XPT_RAVE, CX2_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a402a8, 32,  RW, XPT_RAVE, CX2_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a402ac, 32,  RW, XPT_RAVE, CX2_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a402b0, 32,  RW, XPT_RAVE, CX2_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a402b4, 32,  RW, XPT_RAVE, CX2_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a402b8, 32,  RW, XPT_RAVE, CX2_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a402bc, 32,  RW, XPT_RAVE, CX2_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a402c0, 32,  RW, XPT_RAVE, CX2_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a402c4, 32,  RW, XPT_RAVE, CX2_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a402c8, 32,  RW, XPT_RAVE, CX2_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a402cc, 32,  RW, XPT_RAVE, CX2_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a402d0, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a402d4, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a402d8, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a402dc, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a402e0, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a402e4, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a402e8, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a402ec, 32,  RW, XPT_RAVE, CX2_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a402f0, 32,  RW, XPT_RAVE, CX2_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a402f4, 32,  RW, XPT_RAVE, CX2_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a402f8, 32,  RW, XPT_RAVE, CX2_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a402fc, 32,  RW, XPT_RAVE, CX2_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40300, 32,  RW, XPT_RAVE, CX2_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40304, 32,  RW, XPT_RAVE, CX2_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40308, 32,  RW, XPT_RAVE, CX2_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4030c, 32,  RW, XPT_RAVE, CX2_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40310, 32,  RW, XPT_RAVE, CX2_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40314, 32,  RW, XPT_RAVE, CX2_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40318, 32,  RW, XPT_RAVE, CX2_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4031c, 32,  RW, XPT_RAVE, CX2_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40320, 32,  RW, XPT_RAVE, CX2_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40324, 32,  RW, XPT_RAVE, CX2_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40328, 32,  RW, XPT_RAVE, CX2_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4032c, 32,  RW, XPT_RAVE, CX2_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40330, 32,  RW, XPT_RAVE, CX2_REC_CTRL1)
BCHP_REGISTER(0x20a40334, 32,  RW, XPT_RAVE, CX2_REC_INIT_TS)
BCHP_REGISTER(0x20a40338, 32,  RW, XPT_RAVE, CX2_REC_TS_CTRL)
BCHP_REGISTER(0x20a4033c, 32,  RW, XPT_RAVE, CX2_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40340, 32,  RW, XPT_RAVE, CX2_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40344, 32,  RW, XPT_RAVE, CX2_PIC_CTR)
BCHP_REGISTER(0x20a40348, 32,  RW, XPT_RAVE, CX2_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4034c, 32,  RW, XPT_RAVE, CX2_REC_TIMER)
BCHP_REGISTER(0x20a40350, 32,  RW, XPT_RAVE, CX2_REC_STATE0)
BCHP_REGISTER(0x20a40354, 32,  RW, XPT_RAVE, CX2_REC_STATE1)
BCHP_REGISTER(0x20a40358, 32,  RW, XPT_RAVE, CX2_REC_STATE2)
BCHP_REGISTER(0x20a4035c, 32,  RW, XPT_RAVE, CX2_REC_STATE2b)
BCHP_REGISTER(0x20a40360, 32,  RW, XPT_RAVE, CX2_REC_STATE3)
BCHP_REGISTER(0x20a40364, 32,  RW, XPT_RAVE, CX2_REC_COUNT)
BCHP_REGISTER(0x20a40368, 32,  RW, XPT_RAVE, CX2_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4036c, 32,  RW, XPT_RAVE, CX2_SC)
BCHP_REGISTER(0x20a40370, 32,  RW, XPT_RAVE, CX2_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40374, 32,  RW, XPT_RAVE, CX2_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40378, 32,  RW, XPT_RAVE, CX2_RAVE_Reg_2)
BCHP_REGISTER(0x20a4037c, 32,  RW, XPT_RAVE, CX2_RAVE_Reg_3)
BCHP_REGISTER(0x20a40380, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40384, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40388, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4038c, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40390, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40394, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40398, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4039c, 32,  RW, XPT_RAVE, CX2_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a403a0, 32,  RW, XPT_RAVE, CX2_RAVE_Reg_4)
BCHP_REGISTER(0x20a403a4, 32,  RW, XPT_RAVE, CX2_RAVE_Reg_5)
BCHP_REGISTER(0x20a403a8, 32,  RW, XPT_RAVE, CX2_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a403ac, 32,  RW, XPT_RAVE, CX2_Record_reserved_reg_1)
BCHP_REGISTER(0x20a403b0, 32,  RW, XPT_RAVE, CX2_Record_reserved_reg_2)
BCHP_REGISTER(0x20a403b4, 32,  RW, XPT_RAVE, CX2_Record_reserved_reg_3)
BCHP_REGISTER(0x20a403b8, 32,  RW, XPT_RAVE, CX2_Record_reserved_reg_4)
BCHP_REGISTER(0x20a403bc, 32,  RW, XPT_RAVE, CX2_Record_reserved_reg_5)
BCHP_REGISTER(0x20a403c0, 32,  RW, XPT_RAVE, CX3_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a403c4, 32,  RW, XPT_RAVE, CX3_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a403c8, 32,  RW, XPT_RAVE, CX3_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a403cc, 32,  RW, XPT_RAVE, CX3_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a403d0, 32,  RW, XPT_RAVE, CX3_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a403d4, 32,  RW, XPT_RAVE, CX3_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a403d8, 32,  RW, XPT_RAVE, CX3_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a403dc, 32,  RW, XPT_RAVE, CX3_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a403e0, 32,  RW, XPT_RAVE, CX3_AV_THRESHOLDS)
BCHP_REGISTER(0x20a403e4, 32,  RW, XPT_RAVE, CX3_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a403e8, 32,  RW, XPT_RAVE, CX3_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a403ec, 32,  RW, XPT_RAVE, CX3_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a403f0, 32,  RW, XPT_RAVE, CX3_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a403f4, 32,  RW, XPT_RAVE, CX3_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a403f8, 32,  RW, XPT_RAVE, CX3_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a403fc, 32,  RW, XPT_RAVE, CX3_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40400, 32,  RW, XPT_RAVE, CX3_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40404, 32,  RW, XPT_RAVE, CX3_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40408, 32,  RW, XPT_RAVE, CX3_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4040c, 32,  RW, XPT_RAVE, CX3_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40410, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40414, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40418, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4041c, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40420, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40424, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40428, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a4042c, 32,  RW, XPT_RAVE, CX3_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40430, 32,  RW, XPT_RAVE, CX3_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40434, 32,  RW, XPT_RAVE, CX3_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40438, 32,  RW, XPT_RAVE, CX3_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a4043c, 32,  RW, XPT_RAVE, CX3_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40440, 32,  RW, XPT_RAVE, CX3_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40444, 32,  RW, XPT_RAVE, CX3_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40448, 32,  RW, XPT_RAVE, CX3_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4044c, 32,  RW, XPT_RAVE, CX3_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40450, 32,  RW, XPT_RAVE, CX3_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40454, 32,  RW, XPT_RAVE, CX3_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40458, 32,  RW, XPT_RAVE, CX3_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4045c, 32,  RW, XPT_RAVE, CX3_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40460, 32,  RW, XPT_RAVE, CX3_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40464, 32,  RW, XPT_RAVE, CX3_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40468, 32,  RW, XPT_RAVE, CX3_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4046c, 32,  RW, XPT_RAVE, CX3_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40470, 32,  RW, XPT_RAVE, CX3_REC_CTRL1)
BCHP_REGISTER(0x20a40474, 32,  RW, XPT_RAVE, CX3_REC_INIT_TS)
BCHP_REGISTER(0x20a40478, 32,  RW, XPT_RAVE, CX3_REC_TS_CTRL)
BCHP_REGISTER(0x20a4047c, 32,  RW, XPT_RAVE, CX3_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40480, 32,  RW, XPT_RAVE, CX3_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40484, 32,  RW, XPT_RAVE, CX3_PIC_CTR)
BCHP_REGISTER(0x20a40488, 32,  RW, XPT_RAVE, CX3_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4048c, 32,  RW, XPT_RAVE, CX3_REC_TIMER)
BCHP_REGISTER(0x20a40490, 32,  RW, XPT_RAVE, CX3_REC_STATE0)
BCHP_REGISTER(0x20a40494, 32,  RW, XPT_RAVE, CX3_REC_STATE1)
BCHP_REGISTER(0x20a40498, 32,  RW, XPT_RAVE, CX3_REC_STATE2)
BCHP_REGISTER(0x20a4049c, 32,  RW, XPT_RAVE, CX3_REC_STATE2b)
BCHP_REGISTER(0x20a404a0, 32,  RW, XPT_RAVE, CX3_REC_STATE3)
BCHP_REGISTER(0x20a404a4, 32,  RW, XPT_RAVE, CX3_REC_COUNT)
BCHP_REGISTER(0x20a404a8, 32,  RW, XPT_RAVE, CX3_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a404ac, 32,  RW, XPT_RAVE, CX3_SC)
BCHP_REGISTER(0x20a404b0, 32,  RW, XPT_RAVE, CX3_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a404b4, 32,  RW, XPT_RAVE, CX3_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a404b8, 32,  RW, XPT_RAVE, CX3_RAVE_Reg_2)
BCHP_REGISTER(0x20a404bc, 32,  RW, XPT_RAVE, CX3_RAVE_Reg_3)
BCHP_REGISTER(0x20a404c0, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a404c4, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a404c8, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a404cc, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a404d0, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a404d4, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a404d8, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a404dc, 32,  RW, XPT_RAVE, CX3_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a404e0, 32,  RW, XPT_RAVE, CX3_RAVE_Reg_4)
BCHP_REGISTER(0x20a404e4, 32,  RW, XPT_RAVE, CX3_RAVE_Reg_5)
BCHP_REGISTER(0x20a404e8, 32,  RW, XPT_RAVE, CX3_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a404ec, 32,  RW, XPT_RAVE, CX3_Record_reserved_reg_1)
BCHP_REGISTER(0x20a404f0, 32,  RW, XPT_RAVE, CX3_Record_reserved_reg_2)
BCHP_REGISTER(0x20a404f4, 32,  RW, XPT_RAVE, CX3_Record_reserved_reg_3)
BCHP_REGISTER(0x20a404f8, 32,  RW, XPT_RAVE, CX3_Record_reserved_reg_4)
BCHP_REGISTER(0x20a404fc, 32,  RW, XPT_RAVE, CX3_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40500, 32,  RW, XPT_RAVE, CX4_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40504, 32,  RW, XPT_RAVE, CX4_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40508, 32,  RW, XPT_RAVE, CX4_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4050c, 32,  RW, XPT_RAVE, CX4_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40510, 32,  RW, XPT_RAVE, CX4_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40514, 32,  RW, XPT_RAVE, CX4_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40518, 32,  RW, XPT_RAVE, CX4_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4051c, 32,  RW, XPT_RAVE, CX4_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40520, 32,  RW, XPT_RAVE, CX4_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40524, 32,  RW, XPT_RAVE, CX4_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40528, 32,  RW, XPT_RAVE, CX4_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a4052c, 32,  RW, XPT_RAVE, CX4_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40530, 32,  RW, XPT_RAVE, CX4_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40534, 32,  RW, XPT_RAVE, CX4_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40538, 32,  RW, XPT_RAVE, CX4_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a4053c, 32,  RW, XPT_RAVE, CX4_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40540, 32,  RW, XPT_RAVE, CX4_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40544, 32,  RW, XPT_RAVE, CX4_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40548, 32,  RW, XPT_RAVE, CX4_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4054c, 32,  RW, XPT_RAVE, CX4_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40550, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40554, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40558, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4055c, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40560, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40564, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40568, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a4056c, 32,  RW, XPT_RAVE, CX4_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40570, 32,  RW, XPT_RAVE, CX4_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40574, 32,  RW, XPT_RAVE, CX4_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40578, 32,  RW, XPT_RAVE, CX4_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a4057c, 32,  RW, XPT_RAVE, CX4_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40580, 32,  RW, XPT_RAVE, CX4_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40584, 32,  RW, XPT_RAVE, CX4_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40588, 32,  RW, XPT_RAVE, CX4_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4058c, 32,  RW, XPT_RAVE, CX4_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40590, 32,  RW, XPT_RAVE, CX4_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40594, 32,  RW, XPT_RAVE, CX4_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40598, 32,  RW, XPT_RAVE, CX4_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4059c, 32,  RW, XPT_RAVE, CX4_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a405a0, 32,  RW, XPT_RAVE, CX4_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a405a4, 32,  RW, XPT_RAVE, CX4_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a405a8, 32,  RW, XPT_RAVE, CX4_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a405ac, 32,  RW, XPT_RAVE, CX4_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a405b0, 32,  RW, XPT_RAVE, CX4_REC_CTRL1)
BCHP_REGISTER(0x20a405b4, 32,  RW, XPT_RAVE, CX4_REC_INIT_TS)
BCHP_REGISTER(0x20a405b8, 32,  RW, XPT_RAVE, CX4_REC_TS_CTRL)
BCHP_REGISTER(0x20a405bc, 32,  RW, XPT_RAVE, CX4_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a405c0, 32,  RW, XPT_RAVE, CX4_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a405c4, 32,  RW, XPT_RAVE, CX4_PIC_CTR)
BCHP_REGISTER(0x20a405c8, 32,  RW, XPT_RAVE, CX4_PIC_CTR_MODE)
BCHP_REGISTER(0x20a405cc, 32,  RW, XPT_RAVE, CX4_REC_TIMER)
BCHP_REGISTER(0x20a405d0, 32,  RW, XPT_RAVE, CX4_REC_STATE0)
BCHP_REGISTER(0x20a405d4, 32,  RW, XPT_RAVE, CX4_REC_STATE1)
BCHP_REGISTER(0x20a405d8, 32,  RW, XPT_RAVE, CX4_REC_STATE2)
BCHP_REGISTER(0x20a405dc, 32,  RW, XPT_RAVE, CX4_REC_STATE2b)
BCHP_REGISTER(0x20a405e0, 32,  RW, XPT_RAVE, CX4_REC_STATE3)
BCHP_REGISTER(0x20a405e4, 32,  RW, XPT_RAVE, CX4_REC_COUNT)
BCHP_REGISTER(0x20a405e8, 32,  RW, XPT_RAVE, CX4_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a405ec, 32,  RW, XPT_RAVE, CX4_SC)
BCHP_REGISTER(0x20a405f0, 32,  RW, XPT_RAVE, CX4_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a405f4, 32,  RW, XPT_RAVE, CX4_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a405f8, 32,  RW, XPT_RAVE, CX4_RAVE_Reg_2)
BCHP_REGISTER(0x20a405fc, 32,  RW, XPT_RAVE, CX4_RAVE_Reg_3)
BCHP_REGISTER(0x20a40600, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40604, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40608, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4060c, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40610, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40614, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40618, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4061c, 32,  RW, XPT_RAVE, CX4_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40620, 32,  RW, XPT_RAVE, CX4_RAVE_Reg_4)
BCHP_REGISTER(0x20a40624, 32,  RW, XPT_RAVE, CX4_RAVE_Reg_5)
BCHP_REGISTER(0x20a40628, 32,  RW, XPT_RAVE, CX4_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4062c, 32,  RW, XPT_RAVE, CX4_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40630, 32,  RW, XPT_RAVE, CX4_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40634, 32,  RW, XPT_RAVE, CX4_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40638, 32,  RW, XPT_RAVE, CX4_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4063c, 32,  RW, XPT_RAVE, CX4_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40640, 32,  RW, XPT_RAVE, CX5_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40644, 32,  RW, XPT_RAVE, CX5_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40648, 32,  RW, XPT_RAVE, CX5_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4064c, 32,  RW, XPT_RAVE, CX5_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40650, 32,  RW, XPT_RAVE, CX5_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40654, 32,  RW, XPT_RAVE, CX5_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40658, 32,  RW, XPT_RAVE, CX5_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4065c, 32,  RW, XPT_RAVE, CX5_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40660, 32,  RW, XPT_RAVE, CX5_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40664, 32,  RW, XPT_RAVE, CX5_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40668, 32,  RW, XPT_RAVE, CX5_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a4066c, 32,  RW, XPT_RAVE, CX5_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40670, 32,  RW, XPT_RAVE, CX5_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40674, 32,  RW, XPT_RAVE, CX5_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40678, 32,  RW, XPT_RAVE, CX5_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a4067c, 32,  RW, XPT_RAVE, CX5_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40680, 32,  RW, XPT_RAVE, CX5_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40684, 32,  RW, XPT_RAVE, CX5_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40688, 32,  RW, XPT_RAVE, CX5_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4068c, 32,  RW, XPT_RAVE, CX5_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40690, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40694, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40698, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4069c, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a406a0, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a406a4, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a406a8, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a406ac, 32,  RW, XPT_RAVE, CX5_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a406b0, 32,  RW, XPT_RAVE, CX5_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a406b4, 32,  RW, XPT_RAVE, CX5_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a406b8, 32,  RW, XPT_RAVE, CX5_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a406bc, 32,  RW, XPT_RAVE, CX5_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a406c0, 32,  RW, XPT_RAVE, CX5_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a406c4, 32,  RW, XPT_RAVE, CX5_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a406c8, 32,  RW, XPT_RAVE, CX5_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a406cc, 32,  RW, XPT_RAVE, CX5_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a406d0, 32,  RW, XPT_RAVE, CX5_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a406d4, 32,  RW, XPT_RAVE, CX5_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a406d8, 32,  RW, XPT_RAVE, CX5_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a406dc, 32,  RW, XPT_RAVE, CX5_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a406e0, 32,  RW, XPT_RAVE, CX5_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a406e4, 32,  RW, XPT_RAVE, CX5_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a406e8, 32,  RW, XPT_RAVE, CX5_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a406ec, 32,  RW, XPT_RAVE, CX5_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a406f0, 32,  RW, XPT_RAVE, CX5_REC_CTRL1)
BCHP_REGISTER(0x20a406f4, 32,  RW, XPT_RAVE, CX5_REC_INIT_TS)
BCHP_REGISTER(0x20a406f8, 32,  RW, XPT_RAVE, CX5_REC_TS_CTRL)
BCHP_REGISTER(0x20a406fc, 32,  RW, XPT_RAVE, CX5_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40700, 32,  RW, XPT_RAVE, CX5_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40704, 32,  RW, XPT_RAVE, CX5_PIC_CTR)
BCHP_REGISTER(0x20a40708, 32,  RW, XPT_RAVE, CX5_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4070c, 32,  RW, XPT_RAVE, CX5_REC_TIMER)
BCHP_REGISTER(0x20a40710, 32,  RW, XPT_RAVE, CX5_REC_STATE0)
BCHP_REGISTER(0x20a40714, 32,  RW, XPT_RAVE, CX5_REC_STATE1)
BCHP_REGISTER(0x20a40718, 32,  RW, XPT_RAVE, CX5_REC_STATE2)
BCHP_REGISTER(0x20a4071c, 32,  RW, XPT_RAVE, CX5_REC_STATE2b)
BCHP_REGISTER(0x20a40720, 32,  RW, XPT_RAVE, CX5_REC_STATE3)
BCHP_REGISTER(0x20a40724, 32,  RW, XPT_RAVE, CX5_REC_COUNT)
BCHP_REGISTER(0x20a40728, 32,  RW, XPT_RAVE, CX5_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4072c, 32,  RW, XPT_RAVE, CX5_SC)
BCHP_REGISTER(0x20a40730, 32,  RW, XPT_RAVE, CX5_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40734, 32,  RW, XPT_RAVE, CX5_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40738, 32,  RW, XPT_RAVE, CX5_RAVE_Reg_2)
BCHP_REGISTER(0x20a4073c, 32,  RW, XPT_RAVE, CX5_RAVE_Reg_3)
BCHP_REGISTER(0x20a40740, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40744, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40748, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4074c, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40750, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40754, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40758, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4075c, 32,  RW, XPT_RAVE, CX5_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40760, 32,  RW, XPT_RAVE, CX5_RAVE_Reg_4)
BCHP_REGISTER(0x20a40764, 32,  RW, XPT_RAVE, CX5_RAVE_Reg_5)
BCHP_REGISTER(0x20a40768, 32,  RW, XPT_RAVE, CX5_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4076c, 32,  RW, XPT_RAVE, CX5_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40770, 32,  RW, XPT_RAVE, CX5_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40774, 32,  RW, XPT_RAVE, CX5_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40778, 32,  RW, XPT_RAVE, CX5_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4077c, 32,  RW, XPT_RAVE, CX5_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40780, 32,  RW, XPT_RAVE, CX6_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40784, 32,  RW, XPT_RAVE, CX6_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40788, 32,  RW, XPT_RAVE, CX6_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4078c, 32,  RW, XPT_RAVE, CX6_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40790, 32,  RW, XPT_RAVE, CX6_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40794, 32,  RW, XPT_RAVE, CX6_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40798, 32,  RW, XPT_RAVE, CX6_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4079c, 32,  RW, XPT_RAVE, CX6_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a407a0, 32,  RW, XPT_RAVE, CX6_AV_THRESHOLDS)
BCHP_REGISTER(0x20a407a4, 32,  RW, XPT_RAVE, CX6_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a407a8, 32,  RW, XPT_RAVE, CX6_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a407ac, 32,  RW, XPT_RAVE, CX6_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a407b0, 32,  RW, XPT_RAVE, CX6_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a407b4, 32,  RW, XPT_RAVE, CX6_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a407b8, 32,  RW, XPT_RAVE, CX6_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a407bc, 32,  RW, XPT_RAVE, CX6_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a407c0, 32,  RW, XPT_RAVE, CX6_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a407c4, 32,  RW, XPT_RAVE, CX6_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a407c8, 32,  RW, XPT_RAVE, CX6_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a407cc, 32,  RW, XPT_RAVE, CX6_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a407d0, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a407d4, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a407d8, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a407dc, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a407e0, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a407e4, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a407e8, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a407ec, 32,  RW, XPT_RAVE, CX6_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a407f0, 32,  RW, XPT_RAVE, CX6_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a407f4, 32,  RW, XPT_RAVE, CX6_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a407f8, 32,  RW, XPT_RAVE, CX6_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a407fc, 32,  RW, XPT_RAVE, CX6_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40800, 32,  RW, XPT_RAVE, CX6_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40804, 32,  RW, XPT_RAVE, CX6_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40808, 32,  RW, XPT_RAVE, CX6_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4080c, 32,  RW, XPT_RAVE, CX6_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40810, 32,  RW, XPT_RAVE, CX6_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40814, 32,  RW, XPT_RAVE, CX6_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40818, 32,  RW, XPT_RAVE, CX6_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4081c, 32,  RW, XPT_RAVE, CX6_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40820, 32,  RW, XPT_RAVE, CX6_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40824, 32,  RW, XPT_RAVE, CX6_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40828, 32,  RW, XPT_RAVE, CX6_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4082c, 32,  RW, XPT_RAVE, CX6_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40830, 32,  RW, XPT_RAVE, CX6_REC_CTRL1)
BCHP_REGISTER(0x20a40834, 32,  RW, XPT_RAVE, CX6_REC_INIT_TS)
BCHP_REGISTER(0x20a40838, 32,  RW, XPT_RAVE, CX6_REC_TS_CTRL)
BCHP_REGISTER(0x20a4083c, 32,  RW, XPT_RAVE, CX6_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40840, 32,  RW, XPT_RAVE, CX6_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40844, 32,  RW, XPT_RAVE, CX6_PIC_CTR)
BCHP_REGISTER(0x20a40848, 32,  RW, XPT_RAVE, CX6_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4084c, 32,  RW, XPT_RAVE, CX6_REC_TIMER)
BCHP_REGISTER(0x20a40850, 32,  RW, XPT_RAVE, CX6_REC_STATE0)
BCHP_REGISTER(0x20a40854, 32,  RW, XPT_RAVE, CX6_REC_STATE1)
BCHP_REGISTER(0x20a40858, 32,  RW, XPT_RAVE, CX6_REC_STATE2)
BCHP_REGISTER(0x20a4085c, 32,  RW, XPT_RAVE, CX6_REC_STATE2b)
BCHP_REGISTER(0x20a40860, 32,  RW, XPT_RAVE, CX6_REC_STATE3)
BCHP_REGISTER(0x20a40864, 32,  RW, XPT_RAVE, CX6_REC_COUNT)
BCHP_REGISTER(0x20a40868, 32,  RW, XPT_RAVE, CX6_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4086c, 32,  RW, XPT_RAVE, CX6_SC)
BCHP_REGISTER(0x20a40870, 32,  RW, XPT_RAVE, CX6_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40874, 32,  RW, XPT_RAVE, CX6_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40878, 32,  RW, XPT_RAVE, CX6_RAVE_Reg_2)
BCHP_REGISTER(0x20a4087c, 32,  RW, XPT_RAVE, CX6_RAVE_Reg_3)
BCHP_REGISTER(0x20a40880, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40884, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40888, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4088c, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40890, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40894, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40898, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4089c, 32,  RW, XPT_RAVE, CX6_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a408a0, 32,  RW, XPT_RAVE, CX6_RAVE_Reg_4)
BCHP_REGISTER(0x20a408a4, 32,  RW, XPT_RAVE, CX6_RAVE_Reg_5)
BCHP_REGISTER(0x20a408a8, 32,  RW, XPT_RAVE, CX6_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a408ac, 32,  RW, XPT_RAVE, CX6_Record_reserved_reg_1)
BCHP_REGISTER(0x20a408b0, 32,  RW, XPT_RAVE, CX6_Record_reserved_reg_2)
BCHP_REGISTER(0x20a408b4, 32,  RW, XPT_RAVE, CX6_Record_reserved_reg_3)
BCHP_REGISTER(0x20a408b8, 32,  RW, XPT_RAVE, CX6_Record_reserved_reg_4)
BCHP_REGISTER(0x20a408bc, 32,  RW, XPT_RAVE, CX6_Record_reserved_reg_5)
BCHP_REGISTER(0x20a408c0, 32,  RW, XPT_RAVE, CX7_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a408c4, 32,  RW, XPT_RAVE, CX7_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a408c8, 32,  RW, XPT_RAVE, CX7_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a408cc, 32,  RW, XPT_RAVE, CX7_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a408d0, 32,  RW, XPT_RAVE, CX7_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a408d4, 32,  RW, XPT_RAVE, CX7_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a408d8, 32,  RW, XPT_RAVE, CX7_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a408dc, 32,  RW, XPT_RAVE, CX7_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a408e0, 32,  RW, XPT_RAVE, CX7_AV_THRESHOLDS)
BCHP_REGISTER(0x20a408e4, 32,  RW, XPT_RAVE, CX7_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a408e8, 32,  RW, XPT_RAVE, CX7_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a408ec, 32,  RW, XPT_RAVE, CX7_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a408f0, 32,  RW, XPT_RAVE, CX7_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a408f4, 32,  RW, XPT_RAVE, CX7_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a408f8, 32,  RW, XPT_RAVE, CX7_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a408fc, 32,  RW, XPT_RAVE, CX7_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40900, 32,  RW, XPT_RAVE, CX7_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40904, 32,  RW, XPT_RAVE, CX7_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40908, 32,  RW, XPT_RAVE, CX7_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4090c, 32,  RW, XPT_RAVE, CX7_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40910, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40914, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40918, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4091c, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40920, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40924, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40928, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a4092c, 32,  RW, XPT_RAVE, CX7_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40930, 32,  RW, XPT_RAVE, CX7_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40934, 32,  RW, XPT_RAVE, CX7_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40938, 32,  RW, XPT_RAVE, CX7_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a4093c, 32,  RW, XPT_RAVE, CX7_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40940, 32,  RW, XPT_RAVE, CX7_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40944, 32,  RW, XPT_RAVE, CX7_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40948, 32,  RW, XPT_RAVE, CX7_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4094c, 32,  RW, XPT_RAVE, CX7_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40950, 32,  RW, XPT_RAVE, CX7_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40954, 32,  RW, XPT_RAVE, CX7_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40958, 32,  RW, XPT_RAVE, CX7_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4095c, 32,  RW, XPT_RAVE, CX7_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40960, 32,  RW, XPT_RAVE, CX7_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40964, 32,  RW, XPT_RAVE, CX7_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40968, 32,  RW, XPT_RAVE, CX7_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4096c, 32,  RW, XPT_RAVE, CX7_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40970, 32,  RW, XPT_RAVE, CX7_REC_CTRL1)
BCHP_REGISTER(0x20a40974, 32,  RW, XPT_RAVE, CX7_REC_INIT_TS)
BCHP_REGISTER(0x20a40978, 32,  RW, XPT_RAVE, CX7_REC_TS_CTRL)
BCHP_REGISTER(0x20a4097c, 32,  RW, XPT_RAVE, CX7_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40980, 32,  RW, XPT_RAVE, CX7_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40984, 32,  RW, XPT_RAVE, CX7_PIC_CTR)
BCHP_REGISTER(0x20a40988, 32,  RW, XPT_RAVE, CX7_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4098c, 32,  RW, XPT_RAVE, CX7_REC_TIMER)
BCHP_REGISTER(0x20a40990, 32,  RW, XPT_RAVE, CX7_REC_STATE0)
BCHP_REGISTER(0x20a40994, 32,  RW, XPT_RAVE, CX7_REC_STATE1)
BCHP_REGISTER(0x20a40998, 32,  RW, XPT_RAVE, CX7_REC_STATE2)
BCHP_REGISTER(0x20a4099c, 32,  RW, XPT_RAVE, CX7_REC_STATE2b)
BCHP_REGISTER(0x20a409a0, 32,  RW, XPT_RAVE, CX7_REC_STATE3)
BCHP_REGISTER(0x20a409a4, 32,  RW, XPT_RAVE, CX7_REC_COUNT)
BCHP_REGISTER(0x20a409a8, 32,  RW, XPT_RAVE, CX7_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a409ac, 32,  RW, XPT_RAVE, CX7_SC)
BCHP_REGISTER(0x20a409b0, 32,  RW, XPT_RAVE, CX7_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a409b4, 32,  RW, XPT_RAVE, CX7_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a409b8, 32,  RW, XPT_RAVE, CX7_RAVE_Reg_2)
BCHP_REGISTER(0x20a409bc, 32,  RW, XPT_RAVE, CX7_RAVE_Reg_3)
BCHP_REGISTER(0x20a409c0, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a409c4, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a409c8, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a409cc, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a409d0, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a409d4, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a409d8, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a409dc, 32,  RW, XPT_RAVE, CX7_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a409e0, 32,  RW, XPT_RAVE, CX7_RAVE_Reg_4)
BCHP_REGISTER(0x20a409e4, 32,  RW, XPT_RAVE, CX7_RAVE_Reg_5)
BCHP_REGISTER(0x20a409e8, 32,  RW, XPT_RAVE, CX7_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a409ec, 32,  RW, XPT_RAVE, CX7_Record_reserved_reg_1)
BCHP_REGISTER(0x20a409f0, 32,  RW, XPT_RAVE, CX7_Record_reserved_reg_2)
BCHP_REGISTER(0x20a409f4, 32,  RW, XPT_RAVE, CX7_Record_reserved_reg_3)
BCHP_REGISTER(0x20a409f8, 32,  RW, XPT_RAVE, CX7_Record_reserved_reg_4)
BCHP_REGISTER(0x20a409fc, 32,  RW, XPT_RAVE, CX7_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40a00, 32,  RW, XPT_RAVE, CX8_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40a04, 32,  RW, XPT_RAVE, CX8_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40a08, 32,  RW, XPT_RAVE, CX8_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a40a0c, 32,  RW, XPT_RAVE, CX8_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40a10, 32,  RW, XPT_RAVE, CX8_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40a14, 32,  RW, XPT_RAVE, CX8_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40a18, 32,  RW, XPT_RAVE, CX8_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40a1c, 32,  RW, XPT_RAVE, CX8_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40a20, 32,  RW, XPT_RAVE, CX8_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40a24, 32,  RW, XPT_RAVE, CX8_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40a28, 32,  RW, XPT_RAVE, CX8_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a40a2c, 32,  RW, XPT_RAVE, CX8_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40a30, 32,  RW, XPT_RAVE, CX8_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40a34, 32,  RW, XPT_RAVE, CX8_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40a38, 32,  RW, XPT_RAVE, CX8_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40a3c, 32,  RW, XPT_RAVE, CX8_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40a40, 32,  RW, XPT_RAVE, CX8_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40a44, 32,  RW, XPT_RAVE, CX8_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40a48, 32,  RW, XPT_RAVE, CX8_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40a4c, 32,  RW, XPT_RAVE, CX8_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40a50, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40a54, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40a58, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a40a5c, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40a60, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40a64, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40a68, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a40a6c, 32,  RW, XPT_RAVE, CX8_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40a70, 32,  RW, XPT_RAVE, CX8_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40a74, 32,  RW, XPT_RAVE, CX8_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40a78, 32,  RW, XPT_RAVE, CX8_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a40a7c, 32,  RW, XPT_RAVE, CX8_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40a80, 32,  RW, XPT_RAVE, CX8_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40a84, 32,  RW, XPT_RAVE, CX8_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40a88, 32,  RW, XPT_RAVE, CX8_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a40a8c, 32,  RW, XPT_RAVE, CX8_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40a90, 32,  RW, XPT_RAVE, CX8_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40a94, 32,  RW, XPT_RAVE, CX8_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40a98, 32,  RW, XPT_RAVE, CX8_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a40a9c, 32,  RW, XPT_RAVE, CX8_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40aa0, 32,  RW, XPT_RAVE, CX8_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40aa4, 32,  RW, XPT_RAVE, CX8_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40aa8, 32,  RW, XPT_RAVE, CX8_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a40aac, 32,  RW, XPT_RAVE, CX8_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40ab0, 32,  RW, XPT_RAVE, CX8_REC_CTRL1)
BCHP_REGISTER(0x20a40ab4, 32,  RW, XPT_RAVE, CX8_REC_INIT_TS)
BCHP_REGISTER(0x20a40ab8, 32,  RW, XPT_RAVE, CX8_REC_TS_CTRL)
BCHP_REGISTER(0x20a40abc, 32,  RW, XPT_RAVE, CX8_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40ac0, 32,  RW, XPT_RAVE, CX8_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40ac4, 32,  RW, XPT_RAVE, CX8_PIC_CTR)
BCHP_REGISTER(0x20a40ac8, 32,  RW, XPT_RAVE, CX8_PIC_CTR_MODE)
BCHP_REGISTER(0x20a40acc, 32,  RW, XPT_RAVE, CX8_REC_TIMER)
BCHP_REGISTER(0x20a40ad0, 32,  RW, XPT_RAVE, CX8_REC_STATE0)
BCHP_REGISTER(0x20a40ad4, 32,  RW, XPT_RAVE, CX8_REC_STATE1)
BCHP_REGISTER(0x20a40ad8, 32,  RW, XPT_RAVE, CX8_REC_STATE2)
BCHP_REGISTER(0x20a40adc, 32,  RW, XPT_RAVE, CX8_REC_STATE2b)
BCHP_REGISTER(0x20a40ae0, 32,  RW, XPT_RAVE, CX8_REC_STATE3)
BCHP_REGISTER(0x20a40ae4, 32,  RW, XPT_RAVE, CX8_REC_COUNT)
BCHP_REGISTER(0x20a40ae8, 32,  RW, XPT_RAVE, CX8_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a40aec, 32,  RW, XPT_RAVE, CX8_SC)
BCHP_REGISTER(0x20a40af0, 32,  RW, XPT_RAVE, CX8_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40af4, 32,  RW, XPT_RAVE, CX8_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40af8, 32,  RW, XPT_RAVE, CX8_RAVE_Reg_2)
BCHP_REGISTER(0x20a40afc, 32,  RW, XPT_RAVE, CX8_RAVE_Reg_3)
BCHP_REGISTER(0x20a40b00, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40b04, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40b08, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a40b0c, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40b10, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40b14, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40b18, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a40b1c, 32,  RW, XPT_RAVE, CX8_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40b20, 32,  RW, XPT_RAVE, CX8_RAVE_Reg_4)
BCHP_REGISTER(0x20a40b24, 32,  RW, XPT_RAVE, CX8_RAVE_Reg_5)
BCHP_REGISTER(0x20a40b28, 32,  RW, XPT_RAVE, CX8_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a40b2c, 32,  RW, XPT_RAVE, CX8_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40b30, 32,  RW, XPT_RAVE, CX8_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40b34, 32,  RW, XPT_RAVE, CX8_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40b38, 32,  RW, XPT_RAVE, CX8_Record_reserved_reg_4)
BCHP_REGISTER(0x20a40b3c, 32,  RW, XPT_RAVE, CX8_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40b40, 32,  RW, XPT_RAVE, CX9_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40b44, 32,  RW, XPT_RAVE, CX9_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40b48, 32,  RW, XPT_RAVE, CX9_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a40b4c, 32,  RW, XPT_RAVE, CX9_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40b50, 32,  RW, XPT_RAVE, CX9_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40b54, 32,  RW, XPT_RAVE, CX9_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40b58, 32,  RW, XPT_RAVE, CX9_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40b5c, 32,  RW, XPT_RAVE, CX9_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40b60, 32,  RW, XPT_RAVE, CX9_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40b64, 32,  RW, XPT_RAVE, CX9_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40b68, 32,  RW, XPT_RAVE, CX9_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a40b6c, 32,  RW, XPT_RAVE, CX9_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40b70, 32,  RW, XPT_RAVE, CX9_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40b74, 32,  RW, XPT_RAVE, CX9_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40b78, 32,  RW, XPT_RAVE, CX9_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40b7c, 32,  RW, XPT_RAVE, CX9_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40b80, 32,  RW, XPT_RAVE, CX9_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40b84, 32,  RW, XPT_RAVE, CX9_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40b88, 32,  RW, XPT_RAVE, CX9_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40b8c, 32,  RW, XPT_RAVE, CX9_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40b90, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40b94, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40b98, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a40b9c, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40ba0, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40ba4, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40ba8, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a40bac, 32,  RW, XPT_RAVE, CX9_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40bb0, 32,  RW, XPT_RAVE, CX9_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40bb4, 32,  RW, XPT_RAVE, CX9_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40bb8, 32,  RW, XPT_RAVE, CX9_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a40bbc, 32,  RW, XPT_RAVE, CX9_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40bc0, 32,  RW, XPT_RAVE, CX9_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40bc4, 32,  RW, XPT_RAVE, CX9_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40bc8, 32,  RW, XPT_RAVE, CX9_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a40bcc, 32,  RW, XPT_RAVE, CX9_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40bd0, 32,  RW, XPT_RAVE, CX9_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40bd4, 32,  RW, XPT_RAVE, CX9_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40bd8, 32,  RW, XPT_RAVE, CX9_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a40bdc, 32,  RW, XPT_RAVE, CX9_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40be0, 32,  RW, XPT_RAVE, CX9_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40be4, 32,  RW, XPT_RAVE, CX9_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40be8, 32,  RW, XPT_RAVE, CX9_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a40bec, 32,  RW, XPT_RAVE, CX9_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40bf0, 32,  RW, XPT_RAVE, CX9_REC_CTRL1)
BCHP_REGISTER(0x20a40bf4, 32,  RW, XPT_RAVE, CX9_REC_INIT_TS)
BCHP_REGISTER(0x20a40bf8, 32,  RW, XPT_RAVE, CX9_REC_TS_CTRL)
BCHP_REGISTER(0x20a40bfc, 32,  RW, XPT_RAVE, CX9_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40c00, 32,  RW, XPT_RAVE, CX9_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40c04, 32,  RW, XPT_RAVE, CX9_PIC_CTR)
BCHP_REGISTER(0x20a40c08, 32,  RW, XPT_RAVE, CX9_PIC_CTR_MODE)
BCHP_REGISTER(0x20a40c0c, 32,  RW, XPT_RAVE, CX9_REC_TIMER)
BCHP_REGISTER(0x20a40c10, 32,  RW, XPT_RAVE, CX9_REC_STATE0)
BCHP_REGISTER(0x20a40c14, 32,  RW, XPT_RAVE, CX9_REC_STATE1)
BCHP_REGISTER(0x20a40c18, 32,  RW, XPT_RAVE, CX9_REC_STATE2)
BCHP_REGISTER(0x20a40c1c, 32,  RW, XPT_RAVE, CX9_REC_STATE2b)
BCHP_REGISTER(0x20a40c20, 32,  RW, XPT_RAVE, CX9_REC_STATE3)
BCHP_REGISTER(0x20a40c24, 32,  RW, XPT_RAVE, CX9_REC_COUNT)
BCHP_REGISTER(0x20a40c28, 32,  RW, XPT_RAVE, CX9_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a40c2c, 32,  RW, XPT_RAVE, CX9_SC)
BCHP_REGISTER(0x20a40c30, 32,  RW, XPT_RAVE, CX9_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40c34, 32,  RW, XPT_RAVE, CX9_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40c38, 32,  RW, XPT_RAVE, CX9_RAVE_Reg_2)
BCHP_REGISTER(0x20a40c3c, 32,  RW, XPT_RAVE, CX9_RAVE_Reg_3)
BCHP_REGISTER(0x20a40c40, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40c44, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40c48, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a40c4c, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40c50, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40c54, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40c58, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a40c5c, 32,  RW, XPT_RAVE, CX9_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40c60, 32,  RW, XPT_RAVE, CX9_RAVE_Reg_4)
BCHP_REGISTER(0x20a40c64, 32,  RW, XPT_RAVE, CX9_RAVE_Reg_5)
BCHP_REGISTER(0x20a40c68, 32,  RW, XPT_RAVE, CX9_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a40c6c, 32,  RW, XPT_RAVE, CX9_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40c70, 32,  RW, XPT_RAVE, CX9_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40c74, 32,  RW, XPT_RAVE, CX9_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40c78, 32,  RW, XPT_RAVE, CX9_Record_reserved_reg_4)
BCHP_REGISTER(0x20a40c7c, 32,  RW, XPT_RAVE, CX9_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40c80, 32,  RW, XPT_RAVE, CX10_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40c84, 32,  RW, XPT_RAVE, CX10_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40c88, 32,  RW, XPT_RAVE, CX10_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a40c8c, 32,  RW, XPT_RAVE, CX10_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40c90, 32,  RW, XPT_RAVE, CX10_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40c94, 32,  RW, XPT_RAVE, CX10_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40c98, 32,  RW, XPT_RAVE, CX10_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40c9c, 32,  RW, XPT_RAVE, CX10_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40ca0, 32,  RW, XPT_RAVE, CX10_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40ca4, 32,  RW, XPT_RAVE, CX10_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40ca8, 32,  RW, XPT_RAVE, CX10_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a40cac, 32,  RW, XPT_RAVE, CX10_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40cb0, 32,  RW, XPT_RAVE, CX10_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40cb4, 32,  RW, XPT_RAVE, CX10_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40cb8, 32,  RW, XPT_RAVE, CX10_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40cbc, 32,  RW, XPT_RAVE, CX10_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40cc0, 32,  RW, XPT_RAVE, CX10_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40cc4, 32,  RW, XPT_RAVE, CX10_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40cc8, 32,  RW, XPT_RAVE, CX10_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40ccc, 32,  RW, XPT_RAVE, CX10_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40cd0, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40cd4, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40cd8, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a40cdc, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40ce0, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40ce4, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40ce8, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a40cec, 32,  RW, XPT_RAVE, CX10_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40cf0, 32,  RW, XPT_RAVE, CX10_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40cf4, 32,  RW, XPT_RAVE, CX10_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40cf8, 32,  RW, XPT_RAVE, CX10_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a40cfc, 32,  RW, XPT_RAVE, CX10_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40d00, 32,  RW, XPT_RAVE, CX10_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40d04, 32,  RW, XPT_RAVE, CX10_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40d08, 32,  RW, XPT_RAVE, CX10_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a40d0c, 32,  RW, XPT_RAVE, CX10_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40d10, 32,  RW, XPT_RAVE, CX10_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40d14, 32,  RW, XPT_RAVE, CX10_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40d18, 32,  RW, XPT_RAVE, CX10_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a40d1c, 32,  RW, XPT_RAVE, CX10_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40d20, 32,  RW, XPT_RAVE, CX10_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40d24, 32,  RW, XPT_RAVE, CX10_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40d28, 32,  RW, XPT_RAVE, CX10_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a40d2c, 32,  RW, XPT_RAVE, CX10_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40d30, 32,  RW, XPT_RAVE, CX10_REC_CTRL1)
BCHP_REGISTER(0x20a40d34, 32,  RW, XPT_RAVE, CX10_REC_INIT_TS)
BCHP_REGISTER(0x20a40d38, 32,  RW, XPT_RAVE, CX10_REC_TS_CTRL)
BCHP_REGISTER(0x20a40d3c, 32,  RW, XPT_RAVE, CX10_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40d40, 32,  RW, XPT_RAVE, CX10_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40d44, 32,  RW, XPT_RAVE, CX10_PIC_CTR)
BCHP_REGISTER(0x20a40d48, 32,  RW, XPT_RAVE, CX10_PIC_CTR_MODE)
BCHP_REGISTER(0x20a40d4c, 32,  RW, XPT_RAVE, CX10_REC_TIMER)
BCHP_REGISTER(0x20a40d50, 32,  RW, XPT_RAVE, CX10_REC_STATE0)
BCHP_REGISTER(0x20a40d54, 32,  RW, XPT_RAVE, CX10_REC_STATE1)
BCHP_REGISTER(0x20a40d58, 32,  RW, XPT_RAVE, CX10_REC_STATE2)
BCHP_REGISTER(0x20a40d5c, 32,  RW, XPT_RAVE, CX10_REC_STATE2b)
BCHP_REGISTER(0x20a40d60, 32,  RW, XPT_RAVE, CX10_REC_STATE3)
BCHP_REGISTER(0x20a40d64, 32,  RW, XPT_RAVE, CX10_REC_COUNT)
BCHP_REGISTER(0x20a40d68, 32,  RW, XPT_RAVE, CX10_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a40d6c, 32,  RW, XPT_RAVE, CX10_SC)
BCHP_REGISTER(0x20a40d70, 32,  RW, XPT_RAVE, CX10_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40d74, 32,  RW, XPT_RAVE, CX10_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40d78, 32,  RW, XPT_RAVE, CX10_RAVE_Reg_2)
BCHP_REGISTER(0x20a40d7c, 32,  RW, XPT_RAVE, CX10_RAVE_Reg_3)
BCHP_REGISTER(0x20a40d80, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40d84, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40d88, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a40d8c, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40d90, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40d94, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40d98, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a40d9c, 32,  RW, XPT_RAVE, CX10_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40da0, 32,  RW, XPT_RAVE, CX10_RAVE_Reg_4)
BCHP_REGISTER(0x20a40da4, 32,  RW, XPT_RAVE, CX10_RAVE_Reg_5)
BCHP_REGISTER(0x20a40da8, 32,  RW, XPT_RAVE, CX10_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a40dac, 32,  RW, XPT_RAVE, CX10_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40db0, 32,  RW, XPT_RAVE, CX10_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40db4, 32,  RW, XPT_RAVE, CX10_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40db8, 32,  RW, XPT_RAVE, CX10_Record_reserved_reg_4)
BCHP_REGISTER(0x20a40dbc, 32,  RW, XPT_RAVE, CX10_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40dc0, 32,  RW, XPT_RAVE, CX11_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40dc4, 32,  RW, XPT_RAVE, CX11_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40dc8, 32,  RW, XPT_RAVE, CX11_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a40dcc, 32,  RW, XPT_RAVE, CX11_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40dd0, 32,  RW, XPT_RAVE, CX11_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40dd4, 32,  RW, XPT_RAVE, CX11_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40dd8, 32,  RW, XPT_RAVE, CX11_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40ddc, 32,  RW, XPT_RAVE, CX11_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40de0, 32,  RW, XPT_RAVE, CX11_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40de4, 32,  RW, XPT_RAVE, CX11_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40de8, 32,  RW, XPT_RAVE, CX11_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a40dec, 32,  RW, XPT_RAVE, CX11_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40df0, 32,  RW, XPT_RAVE, CX11_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40df4, 32,  RW, XPT_RAVE, CX11_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40df8, 32,  RW, XPT_RAVE, CX11_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40dfc, 32,  RW, XPT_RAVE, CX11_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40e00, 32,  RW, XPT_RAVE, CX11_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40e04, 32,  RW, XPT_RAVE, CX11_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40e08, 32,  RW, XPT_RAVE, CX11_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40e0c, 32,  RW, XPT_RAVE, CX11_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40e10, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40e14, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40e18, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a40e1c, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40e20, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40e24, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40e28, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a40e2c, 32,  RW, XPT_RAVE, CX11_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40e30, 32,  RW, XPT_RAVE, CX11_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40e34, 32,  RW, XPT_RAVE, CX11_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40e38, 32,  RW, XPT_RAVE, CX11_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a40e3c, 32,  RW, XPT_RAVE, CX11_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40e40, 32,  RW, XPT_RAVE, CX11_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40e44, 32,  RW, XPT_RAVE, CX11_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40e48, 32,  RW, XPT_RAVE, CX11_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a40e4c, 32,  RW, XPT_RAVE, CX11_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40e50, 32,  RW, XPT_RAVE, CX11_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40e54, 32,  RW, XPT_RAVE, CX11_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40e58, 32,  RW, XPT_RAVE, CX11_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a40e5c, 32,  RW, XPT_RAVE, CX11_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40e60, 32,  RW, XPT_RAVE, CX11_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40e64, 32,  RW, XPT_RAVE, CX11_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40e68, 32,  RW, XPT_RAVE, CX11_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a40e6c, 32,  RW, XPT_RAVE, CX11_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40e70, 32,  RW, XPT_RAVE, CX11_REC_CTRL1)
BCHP_REGISTER(0x20a40e74, 32,  RW, XPT_RAVE, CX11_REC_INIT_TS)
BCHP_REGISTER(0x20a40e78, 32,  RW, XPT_RAVE, CX11_REC_TS_CTRL)
BCHP_REGISTER(0x20a40e7c, 32,  RW, XPT_RAVE, CX11_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40e80, 32,  RW, XPT_RAVE, CX11_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40e84, 32,  RW, XPT_RAVE, CX11_PIC_CTR)
BCHP_REGISTER(0x20a40e88, 32,  RW, XPT_RAVE, CX11_PIC_CTR_MODE)
BCHP_REGISTER(0x20a40e8c, 32,  RW, XPT_RAVE, CX11_REC_TIMER)
BCHP_REGISTER(0x20a40e90, 32,  RW, XPT_RAVE, CX11_REC_STATE0)
BCHP_REGISTER(0x20a40e94, 32,  RW, XPT_RAVE, CX11_REC_STATE1)
BCHP_REGISTER(0x20a40e98, 32,  RW, XPT_RAVE, CX11_REC_STATE2)
BCHP_REGISTER(0x20a40e9c, 32,  RW, XPT_RAVE, CX11_REC_STATE2b)
BCHP_REGISTER(0x20a40ea0, 32,  RW, XPT_RAVE, CX11_REC_STATE3)
BCHP_REGISTER(0x20a40ea4, 32,  RW, XPT_RAVE, CX11_REC_COUNT)
BCHP_REGISTER(0x20a40ea8, 32,  RW, XPT_RAVE, CX11_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a40eac, 32,  RW, XPT_RAVE, CX11_SC)
BCHP_REGISTER(0x20a40eb0, 32,  RW, XPT_RAVE, CX11_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40eb4, 32,  RW, XPT_RAVE, CX11_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40eb8, 32,  RW, XPT_RAVE, CX11_RAVE_Reg_2)
BCHP_REGISTER(0x20a40ebc, 32,  RW, XPT_RAVE, CX11_RAVE_Reg_3)
BCHP_REGISTER(0x20a40ec0, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a40ec4, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a40ec8, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a40ecc, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a40ed0, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a40ed4, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a40ed8, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a40edc, 32,  RW, XPT_RAVE, CX11_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a40ee0, 32,  RW, XPT_RAVE, CX11_RAVE_Reg_4)
BCHP_REGISTER(0x20a40ee4, 32,  RW, XPT_RAVE, CX11_RAVE_Reg_5)
BCHP_REGISTER(0x20a40ee8, 32,  RW, XPT_RAVE, CX11_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a40eec, 32,  RW, XPT_RAVE, CX11_Record_reserved_reg_1)
BCHP_REGISTER(0x20a40ef0, 32,  RW, XPT_RAVE, CX11_Record_reserved_reg_2)
BCHP_REGISTER(0x20a40ef4, 32,  RW, XPT_RAVE, CX11_Record_reserved_reg_3)
BCHP_REGISTER(0x20a40ef8, 32,  RW, XPT_RAVE, CX11_Record_reserved_reg_4)
BCHP_REGISTER(0x20a40efc, 32,  RW, XPT_RAVE, CX11_Record_reserved_reg_5)
BCHP_REGISTER(0x20a40f00, 32,  RW, XPT_RAVE, CX12_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a40f04, 32,  RW, XPT_RAVE, CX12_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a40f08, 32,  RW, XPT_RAVE, CX12_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a40f0c, 32,  RW, XPT_RAVE, CX12_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a40f10, 32,  RW, XPT_RAVE, CX12_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a40f14, 32,  RW, XPT_RAVE, CX12_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40f18, 32,  RW, XPT_RAVE, CX12_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40f1c, 32,  RW, XPT_RAVE, CX12_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a40f20, 32,  RW, XPT_RAVE, CX12_AV_THRESHOLDS)
BCHP_REGISTER(0x20a40f24, 32,  RW, XPT_RAVE, CX12_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a40f28, 32,  RW, XPT_RAVE, CX12_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a40f2c, 32,  RW, XPT_RAVE, CX12_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a40f30, 32,  RW, XPT_RAVE, CX12_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a40f34, 32,  RW, XPT_RAVE, CX12_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a40f38, 32,  RW, XPT_RAVE, CX12_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a40f3c, 32,  RW, XPT_RAVE, CX12_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a40f40, 32,  RW, XPT_RAVE, CX12_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a40f44, 32,  RW, XPT_RAVE, CX12_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40f48, 32,  RW, XPT_RAVE, CX12_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a40f4c, 32,  RW, XPT_RAVE, CX12_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a40f50, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a40f54, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a40f58, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a40f5c, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a40f60, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a40f64, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a40f68, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a40f6c, 32,  RW, XPT_RAVE, CX12_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a40f70, 32,  RW, XPT_RAVE, CX12_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a40f74, 32,  RW, XPT_RAVE, CX12_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a40f78, 32,  RW, XPT_RAVE, CX12_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a40f7c, 32,  RW, XPT_RAVE, CX12_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a40f80, 32,  RW, XPT_RAVE, CX12_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a40f84, 32,  RW, XPT_RAVE, CX12_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a40f88, 32,  RW, XPT_RAVE, CX12_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a40f8c, 32,  RW, XPT_RAVE, CX12_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a40f90, 32,  RW, XPT_RAVE, CX12_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40f94, 32,  RW, XPT_RAVE, CX12_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a40f98, 32,  RW, XPT_RAVE, CX12_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a40f9c, 32,  RW, XPT_RAVE, CX12_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a40fa0, 32,  RW, XPT_RAVE, CX12_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a40fa4, 32,  RW, XPT_RAVE, CX12_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a40fa8, 32,  RW, XPT_RAVE, CX12_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a40fac, 32,  RW, XPT_RAVE, CX12_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a40fb0, 32,  RW, XPT_RAVE, CX12_REC_CTRL1)
BCHP_REGISTER(0x20a40fb4, 32,  RW, XPT_RAVE, CX12_REC_INIT_TS)
BCHP_REGISTER(0x20a40fb8, 32,  RW, XPT_RAVE, CX12_REC_TS_CTRL)
BCHP_REGISTER(0x20a40fbc, 32,  RW, XPT_RAVE, CX12_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a40fc0, 32,  RW, XPT_RAVE, CX12_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a40fc4, 32,  RW, XPT_RAVE, CX12_PIC_CTR)
BCHP_REGISTER(0x20a40fc8, 32,  RW, XPT_RAVE, CX12_PIC_CTR_MODE)
BCHP_REGISTER(0x20a40fcc, 32,  RW, XPT_RAVE, CX12_REC_TIMER)
BCHP_REGISTER(0x20a40fd0, 32,  RW, XPT_RAVE, CX12_REC_STATE0)
BCHP_REGISTER(0x20a40fd4, 32,  RW, XPT_RAVE, CX12_REC_STATE1)
BCHP_REGISTER(0x20a40fd8, 32,  RW, XPT_RAVE, CX12_REC_STATE2)
BCHP_REGISTER(0x20a40fdc, 32,  RW, XPT_RAVE, CX12_REC_STATE2b)
BCHP_REGISTER(0x20a40fe0, 32,  RW, XPT_RAVE, CX12_REC_STATE3)
BCHP_REGISTER(0x20a40fe4, 32,  RW, XPT_RAVE, CX12_REC_COUNT)
BCHP_REGISTER(0x20a40fe8, 32,  RW, XPT_RAVE, CX12_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a40fec, 32,  RW, XPT_RAVE, CX12_SC)
BCHP_REGISTER(0x20a40ff0, 32,  RW, XPT_RAVE, CX12_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a40ff4, 32,  RW, XPT_RAVE, CX12_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a40ff8, 32,  RW, XPT_RAVE, CX12_RAVE_Reg_2)
BCHP_REGISTER(0x20a40ffc, 32,  RW, XPT_RAVE, CX12_RAVE_Reg_3)
BCHP_REGISTER(0x20a41000, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a41004, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a41008, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4100c, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a41010, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a41014, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a41018, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4101c, 32,  RW, XPT_RAVE, CX12_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a41020, 32,  RW, XPT_RAVE, CX12_RAVE_Reg_4)
BCHP_REGISTER(0x20a41024, 32,  RW, XPT_RAVE, CX12_RAVE_Reg_5)
BCHP_REGISTER(0x20a41028, 32,  RW, XPT_RAVE, CX12_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4102c, 32,  RW, XPT_RAVE, CX12_Record_reserved_reg_1)
BCHP_REGISTER(0x20a41030, 32,  RW, XPT_RAVE, CX12_Record_reserved_reg_2)
BCHP_REGISTER(0x20a41034, 32,  RW, XPT_RAVE, CX12_Record_reserved_reg_3)
BCHP_REGISTER(0x20a41038, 32,  RW, XPT_RAVE, CX12_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4103c, 32,  RW, XPT_RAVE, CX12_Record_reserved_reg_5)
BCHP_REGISTER(0x20a41040, 32,  RW, XPT_RAVE, CX13_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a41044, 32,  RW, XPT_RAVE, CX13_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a41048, 32,  RW, XPT_RAVE, CX13_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4104c, 32,  RW, XPT_RAVE, CX13_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a41050, 32,  RW, XPT_RAVE, CX13_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a41054, 32,  RW, XPT_RAVE, CX13_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a41058, 32,  RW, XPT_RAVE, CX13_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4105c, 32,  RW, XPT_RAVE, CX13_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a41060, 32,  RW, XPT_RAVE, CX13_AV_THRESHOLDS)
BCHP_REGISTER(0x20a41064, 32,  RW, XPT_RAVE, CX13_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a41068, 32,  RW, XPT_RAVE, CX13_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a4106c, 32,  RW, XPT_RAVE, CX13_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a41070, 32,  RW, XPT_RAVE, CX13_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a41074, 32,  RW, XPT_RAVE, CX13_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a41078, 32,  RW, XPT_RAVE, CX13_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a4107c, 32,  RW, XPT_RAVE, CX13_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a41080, 32,  RW, XPT_RAVE, CX13_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a41084, 32,  RW, XPT_RAVE, CX13_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a41088, 32,  RW, XPT_RAVE, CX13_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4108c, 32,  RW, XPT_RAVE, CX13_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a41090, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a41094, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a41098, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4109c, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a410a0, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a410a4, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a410a8, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a410ac, 32,  RW, XPT_RAVE, CX13_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a410b0, 32,  RW, XPT_RAVE, CX13_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a410b4, 32,  RW, XPT_RAVE, CX13_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a410b8, 32,  RW, XPT_RAVE, CX13_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a410bc, 32,  RW, XPT_RAVE, CX13_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a410c0, 32,  RW, XPT_RAVE, CX13_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a410c4, 32,  RW, XPT_RAVE, CX13_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a410c8, 32,  RW, XPT_RAVE, CX13_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a410cc, 32,  RW, XPT_RAVE, CX13_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a410d0, 32,  RW, XPT_RAVE, CX13_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a410d4, 32,  RW, XPT_RAVE, CX13_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a410d8, 32,  RW, XPT_RAVE, CX13_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a410dc, 32,  RW, XPT_RAVE, CX13_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a410e0, 32,  RW, XPT_RAVE, CX13_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a410e4, 32,  RW, XPT_RAVE, CX13_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a410e8, 32,  RW, XPT_RAVE, CX13_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a410ec, 32,  RW, XPT_RAVE, CX13_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a410f0, 32,  RW, XPT_RAVE, CX13_REC_CTRL1)
BCHP_REGISTER(0x20a410f4, 32,  RW, XPT_RAVE, CX13_REC_INIT_TS)
BCHP_REGISTER(0x20a410f8, 32,  RW, XPT_RAVE, CX13_REC_TS_CTRL)
BCHP_REGISTER(0x20a410fc, 32,  RW, XPT_RAVE, CX13_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a41100, 32,  RW, XPT_RAVE, CX13_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a41104, 32,  RW, XPT_RAVE, CX13_PIC_CTR)
BCHP_REGISTER(0x20a41108, 32,  RW, XPT_RAVE, CX13_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4110c, 32,  RW, XPT_RAVE, CX13_REC_TIMER)
BCHP_REGISTER(0x20a41110, 32,  RW, XPT_RAVE, CX13_REC_STATE0)
BCHP_REGISTER(0x20a41114, 32,  RW, XPT_RAVE, CX13_REC_STATE1)
BCHP_REGISTER(0x20a41118, 32,  RW, XPT_RAVE, CX13_REC_STATE2)
BCHP_REGISTER(0x20a4111c, 32,  RW, XPT_RAVE, CX13_REC_STATE2b)
BCHP_REGISTER(0x20a41120, 32,  RW, XPT_RAVE, CX13_REC_STATE3)
BCHP_REGISTER(0x20a41124, 32,  RW, XPT_RAVE, CX13_REC_COUNT)
BCHP_REGISTER(0x20a41128, 32,  RW, XPT_RAVE, CX13_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4112c, 32,  RW, XPT_RAVE, CX13_SC)
BCHP_REGISTER(0x20a41130, 32,  RW, XPT_RAVE, CX13_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a41134, 32,  RW, XPT_RAVE, CX13_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a41138, 32,  RW, XPT_RAVE, CX13_RAVE_Reg_2)
BCHP_REGISTER(0x20a4113c, 32,  RW, XPT_RAVE, CX13_RAVE_Reg_3)
BCHP_REGISTER(0x20a41140, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a41144, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a41148, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4114c, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a41150, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a41154, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a41158, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4115c, 32,  RW, XPT_RAVE, CX13_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a41160, 32,  RW, XPT_RAVE, CX13_RAVE_Reg_4)
BCHP_REGISTER(0x20a41164, 32,  RW, XPT_RAVE, CX13_RAVE_Reg_5)
BCHP_REGISTER(0x20a41168, 32,  RW, XPT_RAVE, CX13_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a4116c, 32,  RW, XPT_RAVE, CX13_Record_reserved_reg_1)
BCHP_REGISTER(0x20a41170, 32,  RW, XPT_RAVE, CX13_Record_reserved_reg_2)
BCHP_REGISTER(0x20a41174, 32,  RW, XPT_RAVE, CX13_Record_reserved_reg_3)
BCHP_REGISTER(0x20a41178, 32,  RW, XPT_RAVE, CX13_Record_reserved_reg_4)
BCHP_REGISTER(0x20a4117c, 32,  RW, XPT_RAVE, CX13_Record_reserved_reg_5)
BCHP_REGISTER(0x20a41180, 32,  RW, XPT_RAVE, CX14_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a41184, 32,  RW, XPT_RAVE, CX14_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a41188, 32,  RW, XPT_RAVE, CX14_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a4118c, 32,  RW, XPT_RAVE, CX14_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a41190, 32,  RW, XPT_RAVE, CX14_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a41194, 32,  RW, XPT_RAVE, CX14_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a41198, 32,  RW, XPT_RAVE, CX14_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a4119c, 32,  RW, XPT_RAVE, CX14_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a411a0, 32,  RW, XPT_RAVE, CX14_AV_THRESHOLDS)
BCHP_REGISTER(0x20a411a4, 32,  RW, XPT_RAVE, CX14_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a411a8, 32,  RW, XPT_RAVE, CX14_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a411ac, 32,  RW, XPT_RAVE, CX14_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a411b0, 32,  RW, XPT_RAVE, CX14_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a411b4, 32,  RW, XPT_RAVE, CX14_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a411b8, 32,  RW, XPT_RAVE, CX14_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a411bc, 32,  RW, XPT_RAVE, CX14_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a411c0, 32,  RW, XPT_RAVE, CX14_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a411c4, 32,  RW, XPT_RAVE, CX14_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a411c8, 32,  RW, XPT_RAVE, CX14_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a411cc, 32,  RW, XPT_RAVE, CX14_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a411d0, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a411d4, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a411d8, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a411dc, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a411e0, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a411e4, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a411e8, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a411ec, 32,  RW, XPT_RAVE, CX14_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a411f0, 32,  RW, XPT_RAVE, CX14_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a411f4, 32,  RW, XPT_RAVE, CX14_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a411f8, 32,  RW, XPT_RAVE, CX14_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a411fc, 32,  RW, XPT_RAVE, CX14_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a41200, 32,  RW, XPT_RAVE, CX14_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a41204, 32,  RW, XPT_RAVE, CX14_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a41208, 32,  RW, XPT_RAVE, CX14_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4120c, 32,  RW, XPT_RAVE, CX14_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a41210, 32,  RW, XPT_RAVE, CX14_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a41214, 32,  RW, XPT_RAVE, CX14_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a41218, 32,  RW, XPT_RAVE, CX14_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4121c, 32,  RW, XPT_RAVE, CX14_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a41220, 32,  RW, XPT_RAVE, CX14_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a41224, 32,  RW, XPT_RAVE, CX14_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a41228, 32,  RW, XPT_RAVE, CX14_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4122c, 32,  RW, XPT_RAVE, CX14_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a41230, 32,  RW, XPT_RAVE, CX14_REC_CTRL1)
BCHP_REGISTER(0x20a41234, 32,  RW, XPT_RAVE, CX14_REC_INIT_TS)
BCHP_REGISTER(0x20a41238, 32,  RW, XPT_RAVE, CX14_REC_TS_CTRL)
BCHP_REGISTER(0x20a4123c, 32,  RW, XPT_RAVE, CX14_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a41240, 32,  RW, XPT_RAVE, CX14_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a41244, 32,  RW, XPT_RAVE, CX14_PIC_CTR)
BCHP_REGISTER(0x20a41248, 32,  RW, XPT_RAVE, CX14_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4124c, 32,  RW, XPT_RAVE, CX14_REC_TIMER)
BCHP_REGISTER(0x20a41250, 32,  RW, XPT_RAVE, CX14_REC_STATE0)
BCHP_REGISTER(0x20a41254, 32,  RW, XPT_RAVE, CX14_REC_STATE1)
BCHP_REGISTER(0x20a41258, 32,  RW, XPT_RAVE, CX14_REC_STATE2)
BCHP_REGISTER(0x20a4125c, 32,  RW, XPT_RAVE, CX14_REC_STATE2b)
BCHP_REGISTER(0x20a41260, 32,  RW, XPT_RAVE, CX14_REC_STATE3)
BCHP_REGISTER(0x20a41264, 32,  RW, XPT_RAVE, CX14_REC_COUNT)
BCHP_REGISTER(0x20a41268, 32,  RW, XPT_RAVE, CX14_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a4126c, 32,  RW, XPT_RAVE, CX14_SC)
BCHP_REGISTER(0x20a41270, 32,  RW, XPT_RAVE, CX14_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a41274, 32,  RW, XPT_RAVE, CX14_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a41278, 32,  RW, XPT_RAVE, CX14_RAVE_Reg_2)
BCHP_REGISTER(0x20a4127c, 32,  RW, XPT_RAVE, CX14_RAVE_Reg_3)
BCHP_REGISTER(0x20a41280, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a41284, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a41288, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a4128c, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a41290, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a41294, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a41298, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a4129c, 32,  RW, XPT_RAVE, CX14_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a412a0, 32,  RW, XPT_RAVE, CX14_RAVE_Reg_4)
BCHP_REGISTER(0x20a412a4, 32,  RW, XPT_RAVE, CX14_RAVE_Reg_5)
BCHP_REGISTER(0x20a412a8, 32,  RW, XPT_RAVE, CX14_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a412ac, 32,  RW, XPT_RAVE, CX14_Record_reserved_reg_1)
BCHP_REGISTER(0x20a412b0, 32,  RW, XPT_RAVE, CX14_Record_reserved_reg_2)
BCHP_REGISTER(0x20a412b4, 32,  RW, XPT_RAVE, CX14_Record_reserved_reg_3)
BCHP_REGISTER(0x20a412b8, 32,  RW, XPT_RAVE, CX14_Record_reserved_reg_4)
BCHP_REGISTER(0x20a412bc, 32,  RW, XPT_RAVE, CX14_Record_reserved_reg_5)
BCHP_REGISTER(0x20a412c0, 32,  RW, XPT_RAVE, CX15_AV_CDB_WRITE_PTR)
BCHP_REGISTER(0x20a412c4, 32,  RW, XPT_RAVE, CX15_AV_CDB_READ_PTR)
BCHP_REGISTER(0x20a412c8, 32,  RW, XPT_RAVE, CX15_AV_CDB_BASE_PTR)
BCHP_REGISTER(0x20a412cc, 32,  RW, XPT_RAVE, CX15_AV_CDB_END_PTR)
BCHP_REGISTER(0x20a412d0, 32,  RW, XPT_RAVE, CX15_AV_CDB_VALID_PTR)
BCHP_REGISTER(0x20a412d4, 32,  RW, XPT_RAVE, CX15_AV_CDB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a412d8, 32,  RW, XPT_RAVE, CX15_AV_CDB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a412dc, 32,  RW, XPT_RAVE, CX15_AV_CDB_DEPTH)
BCHP_REGISTER(0x20a412e0, 32,  RW, XPT_RAVE, CX15_AV_THRESHOLDS)
BCHP_REGISTER(0x20a412e4, 32,  RW, XPT_RAVE, CX15_AV_ITB_WRITE_PTR)
BCHP_REGISTER(0x20a412e8, 32,  RW, XPT_RAVE, CX15_AV_ITB_READ_PTR)
BCHP_REGISTER(0x20a412ec, 32,  RW, XPT_RAVE, CX15_AV_ITB_BASE_PTR)
BCHP_REGISTER(0x20a412f0, 32,  RW, XPT_RAVE, CX15_AV_ITB_END_PTR)
BCHP_REGISTER(0x20a412f4, 32,  RW, XPT_RAVE, CX15_AV_ITB_VALID_PTR)
BCHP_REGISTER(0x20a412f8, 32,  RW, XPT_RAVE, CX15_AV_ITB_WRAPAROUND_PTR)
BCHP_REGISTER(0x20a412fc, 32,  RW, XPT_RAVE, CX15_AV_ITB_THRESHOLD_LEVEL)
BCHP_REGISTER(0x20a41300, 32,  RW, XPT_RAVE, CX15_AV_ITB_DEPTH)
BCHP_REGISTER(0x20a41304, 32,  RW, XPT_RAVE, CX15_AV_ITB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a41308, 32,  RW, XPT_RAVE, CX15_AV_CDB_MIN_DEPTH_THRESHOLD)
BCHP_REGISTER(0x20a4130c, 32,  RW, XPT_RAVE, CX15_REC_MISC_CONFIG)
BCHP_REGISTER(0x20a41310, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_A)
BCHP_REGISTER(0x20a41314, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_B)
BCHP_REGISTER(0x20a41318, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_C)
BCHP_REGISTER(0x20a4131c, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_D)
BCHP_REGISTER(0x20a41320, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_E)
BCHP_REGISTER(0x20a41324, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_F)
BCHP_REGISTER(0x20a41328, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_G)
BCHP_REGISTER(0x20a4132c, 32,  RW, XPT_RAVE, CX15_REC_SCD_PIDS_H)
BCHP_REGISTER(0x20a41330, 32,  RW, XPT_RAVE, CX15_AV_MISC_CONFIG1)
BCHP_REGISTER(0x20a41334, 32,  RW, XPT_RAVE, CX15_AV_MISC_CONFIG2)
BCHP_REGISTER(0x20a41338, 32,  RW, XPT_RAVE, CX15_AV_MISC_CONFIG3)
BCHP_REGISTER(0x20a4133c, 32,  RW, XPT_RAVE, CX15_AV_INTERRUPT_ENABLES)
BCHP_REGISTER(0x20a41340, 32,  RW, XPT_RAVE, CX15_AV_COMP1_CONTROL)
BCHP_REGISTER(0x20a41344, 32,  RW, XPT_RAVE, CX15_AV_COMP1_COMPARE_VAL)
BCHP_REGISTER(0x20a41348, 32,  RW, XPT_RAVE, CX15_AV_COMP1_MASK_VAL)
BCHP_REGISTER(0x20a4134c, 32,  RW, XPT_RAVE, CX15_AV_COMP1_FILTER_VAL)
BCHP_REGISTER(0x20a41350, 32,  RW, XPT_RAVE, CX15_AV_COMP1_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a41354, 32,  RW, XPT_RAVE, CX15_AV_COMP2_CONTROL)
BCHP_REGISTER(0x20a41358, 32,  RW, XPT_RAVE, CX15_AV_COMP2_COMPARE_VAL)
BCHP_REGISTER(0x20a4135c, 32,  RW, XPT_RAVE, CX15_AV_COMP2_MASK_VAL)
BCHP_REGISTER(0x20a41360, 32,  RW, XPT_RAVE, CX15_AV_COMP2_FILTER_VAL)
BCHP_REGISTER(0x20a41364, 32,  RW, XPT_RAVE, CX15_AV_COMP2_FILTER_MASK_VAL)
BCHP_REGISTER(0x20a41368, 32,  RW, XPT_RAVE, CX15_AV_COMP12_FILTER_MODE)
BCHP_REGISTER(0x20a4136c, 32,  RW, XPT_RAVE, CX15_AV_PID_STREAM_ID)
BCHP_REGISTER(0x20a41370, 32,  RW, XPT_RAVE, CX15_REC_CTRL1)
BCHP_REGISTER(0x20a41374, 32,  RW, XPT_RAVE, CX15_REC_INIT_TS)
BCHP_REGISTER(0x20a41378, 32,  RW, XPT_RAVE, CX15_REC_TS_CTRL)
BCHP_REGISTER(0x20a4137c, 32,  RW, XPT_RAVE, CX15_REC_TIME_CONFIG)
BCHP_REGISTER(0x20a41380, 32,  RW, XPT_RAVE, CX15_AV_MISC_CONFIG4)
BCHP_REGISTER(0x20a41384, 32,  RW, XPT_RAVE, CX15_PIC_CTR)
BCHP_REGISTER(0x20a41388, 32,  RW, XPT_RAVE, CX15_PIC_CTR_MODE)
BCHP_REGISTER(0x20a4138c, 32,  RW, XPT_RAVE, CX15_REC_TIMER)
BCHP_REGISTER(0x20a41390, 32,  RW, XPT_RAVE, CX15_REC_STATE0)
BCHP_REGISTER(0x20a41394, 32,  RW, XPT_RAVE, CX15_REC_STATE1)
BCHP_REGISTER(0x20a41398, 32,  RW, XPT_RAVE, CX15_REC_STATE2)
BCHP_REGISTER(0x20a4139c, 32,  RW, XPT_RAVE, CX15_REC_STATE2b)
BCHP_REGISTER(0x20a413a0, 32,  RW, XPT_RAVE, CX15_REC_STATE3)
BCHP_REGISTER(0x20a413a4, 32,  RW, XPT_RAVE, CX15_REC_COUNT)
BCHP_REGISTER(0x20a413a8, 32,  RW, XPT_RAVE, CX15_PIC_INC_DEC_CTRL)
BCHP_REGISTER(0x20a413ac, 32,  RW, XPT_RAVE, CX15_SC)
BCHP_REGISTER(0x20a413b0, 32,  RW, XPT_RAVE, CX15_AV_MISC_CONFIG5)
BCHP_REGISTER(0x20a413b4, 32,  RW, XPT_RAVE, CX15_RAVE_FW_MISC_STATUS1)
BCHP_REGISTER(0x20a413b8, 32,  RW, XPT_RAVE, CX15_RAVE_Reg_2)
BCHP_REGISTER(0x20a413bc, 32,  RW, XPT_RAVE, CX15_RAVE_Reg_3)
BCHP_REGISTER(0x20a413c0, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_CONFIG)
BCHP_REGISTER(0x20a413c4, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_OFFSET_MAGNITUDE)
BCHP_REGISTER(0x20a413c8, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_OFFSET_SIGN_BIT)
BCHP_REGISTER(0x20a413cc, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_PCR)
BCHP_REGISTER(0x20a413d0, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_ATS)
BCHP_REGISTER(0x20a413d4, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_ADJ_ATS)
BCHP_REGISTER(0x20a413d8, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_NEXT_PKT_ATS)
BCHP_REGISTER(0x20a413dc, 32,  RW, XPT_RAVE, CX15_ATSOFFSET_PKT2PKT_ATS_DELTA)
BCHP_REGISTER(0x20a413e0, 32,  RW, XPT_RAVE, CX15_RAVE_Reg_4)
BCHP_REGISTER(0x20a413e4, 32,  RW, XPT_RAVE, CX15_RAVE_Reg_5)
BCHP_REGISTER(0x20a413e8, 32,  RW, XPT_RAVE, CX15_REC_NEXT_REC_TIMEOUT)
BCHP_REGISTER(0x20a413ec, 32,  RW, XPT_RAVE, CX15_Record_reserved_reg_1)
BCHP_REGISTER(0x20a413f0, 32,  RW, XPT_RAVE, CX15_Record_reserved_reg_2)
BCHP_REGISTER(0x20a413f4, 32,  RW, XPT_RAVE, CX15_Record_reserved_reg_3)
BCHP_REGISTER(0x20a413f8, 32,  RW, XPT_RAVE, CX15_Record_reserved_reg_4)
BCHP_REGISTER(0x20a413fc, 32,  RW, XPT_RAVE, CX15_Record_reserved_reg_5)
BCHP_REGISTER(0x20a41400, 32,  RW, XPT_RAVE, SCD0_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41404, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41408, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4140c, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41410, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41414, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41418, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4141c, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41420, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41424, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41428, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4142c, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41430, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41434, 32,  RW, XPT_RAVE, SCD0_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41438, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4143c, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41440, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41444, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41448, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4144c, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41450, 32,  RW, XPT_RAVE, SCD0_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41454, 32,  RW, XPT_RAVE, SCD0_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41458, 32,  RW, XPT_RAVE, SCD0_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4145c, 32,  RW, XPT_RAVE, SCD0_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41460, 32,  RW, XPT_RAVE, SCD0_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41464, 32,  RW, XPT_RAVE, SCD0_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41468, 32,  RW, XPT_RAVE, SCD0_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4146c, 32,  RW, XPT_RAVE, SCD0_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41470, 32,  RW, XPT_RAVE, SCD0_SCD_STATE0)
BCHP_REGISTER(0x20a41474, 32,  RW, XPT_RAVE, SCD0_SCD_STATE1)
BCHP_REGISTER(0x20a41478, 32,  RW, XPT_RAVE, SCD0_SCD_STATE2)
BCHP_REGISTER(0x20a4147c, 32,  RW, XPT_RAVE, SCD0_SCD_STATE3)
BCHP_REGISTER(0x20a41480, 32,  RW, XPT_RAVE, SCD0_SCD_STATE4)
BCHP_REGISTER(0x20a41484, 32,  RW, XPT_RAVE, SCD0_SCD_STATE5)
BCHP_REGISTER(0x20a41488, 32,  RW, XPT_RAVE, SCD0_SCD_STATE6)
BCHP_REGISTER(0x20a4148c, 32,  RW, XPT_RAVE, SCD0_SCD_STATE7)
BCHP_REGISTER(0x20a41490, 32,  RW, XPT_RAVE, SCD0_SCD_STATE8)
BCHP_REGISTER(0x20a41494, 32,  RW, XPT_RAVE, SCD0_SCD_STATE9)
BCHP_REGISTER(0x20a41498, 32,  RW, XPT_RAVE, SCD0_SCD_STATE10)
BCHP_REGISTER(0x20a4149c, 32,  RW, XPT_RAVE, SCD0_SCD_STATE11)
BCHP_REGISTER(0x20a414a0, 32,  RW, XPT_RAVE, SCD1_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a414a4, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a414a8, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a414ac, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a414b0, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a414b4, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a414b8, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a414bc, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a414c0, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a414c4, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a414c8, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a414cc, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a414d0, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a414d4, 32,  RW, XPT_RAVE, SCD1_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a414d8, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a414dc, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a414e0, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a414e4, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a414e8, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a414ec, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a414f0, 32,  RW, XPT_RAVE, SCD1_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a414f4, 32,  RW, XPT_RAVE, SCD1_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a414f8, 32,  RW, XPT_RAVE, SCD1_SCD_PES_STATE0)
BCHP_REGISTER(0x20a414fc, 32,  RW, XPT_RAVE, SCD1_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41500, 32,  RW, XPT_RAVE, SCD1_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41504, 32,  RW, XPT_RAVE, SCD1_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41508, 32,  RW, XPT_RAVE, SCD1_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4150c, 32,  RW, XPT_RAVE, SCD1_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41510, 32,  RW, XPT_RAVE, SCD1_SCD_STATE0)
BCHP_REGISTER(0x20a41514, 32,  RW, XPT_RAVE, SCD1_SCD_STATE1)
BCHP_REGISTER(0x20a41518, 32,  RW, XPT_RAVE, SCD1_SCD_STATE2)
BCHP_REGISTER(0x20a4151c, 32,  RW, XPT_RAVE, SCD1_SCD_STATE3)
BCHP_REGISTER(0x20a41520, 32,  RW, XPT_RAVE, SCD1_SCD_STATE4)
BCHP_REGISTER(0x20a41524, 32,  RW, XPT_RAVE, SCD1_SCD_STATE5)
BCHP_REGISTER(0x20a41528, 32,  RW, XPT_RAVE, SCD1_SCD_STATE6)
BCHP_REGISTER(0x20a4152c, 32,  RW, XPT_RAVE, SCD1_SCD_STATE7)
BCHP_REGISTER(0x20a41530, 32,  RW, XPT_RAVE, SCD1_SCD_STATE8)
BCHP_REGISTER(0x20a41534, 32,  RW, XPT_RAVE, SCD1_SCD_STATE9)
BCHP_REGISTER(0x20a41538, 32,  RW, XPT_RAVE, SCD1_SCD_STATE10)
BCHP_REGISTER(0x20a4153c, 32,  RW, XPT_RAVE, SCD1_SCD_STATE11)
BCHP_REGISTER(0x20a41540, 32,  RW, XPT_RAVE, SCD2_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41544, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41548, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4154c, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41550, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41554, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41558, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4155c, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41560, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41564, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41568, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4156c, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41570, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41574, 32,  RW, XPT_RAVE, SCD2_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41578, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4157c, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41580, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41584, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41588, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4158c, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41590, 32,  RW, XPT_RAVE, SCD2_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41594, 32,  RW, XPT_RAVE, SCD2_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41598, 32,  RW, XPT_RAVE, SCD2_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4159c, 32,  RW, XPT_RAVE, SCD2_SCD_PES_STATE1)
BCHP_REGISTER(0x20a415a0, 32,  RW, XPT_RAVE, SCD2_SCD_PES_STATE2)
BCHP_REGISTER(0x20a415a4, 32,  RW, XPT_RAVE, SCD2_SCD_PES_STATE3)
BCHP_REGISTER(0x20a415a8, 32,  RW, XPT_RAVE, SCD2_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a415ac, 32,  RW, XPT_RAVE, SCD2_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a415b0, 32,  RW, XPT_RAVE, SCD2_SCD_STATE0)
BCHP_REGISTER(0x20a415b4, 32,  RW, XPT_RAVE, SCD2_SCD_STATE1)
BCHP_REGISTER(0x20a415b8, 32,  RW, XPT_RAVE, SCD2_SCD_STATE2)
BCHP_REGISTER(0x20a415bc, 32,  RW, XPT_RAVE, SCD2_SCD_STATE3)
BCHP_REGISTER(0x20a415c0, 32,  RW, XPT_RAVE, SCD2_SCD_STATE4)
BCHP_REGISTER(0x20a415c4, 32,  RW, XPT_RAVE, SCD2_SCD_STATE5)
BCHP_REGISTER(0x20a415c8, 32,  RW, XPT_RAVE, SCD2_SCD_STATE6)
BCHP_REGISTER(0x20a415cc, 32,  RW, XPT_RAVE, SCD2_SCD_STATE7)
BCHP_REGISTER(0x20a415d0, 32,  RW, XPT_RAVE, SCD2_SCD_STATE8)
BCHP_REGISTER(0x20a415d4, 32,  RW, XPT_RAVE, SCD2_SCD_STATE9)
BCHP_REGISTER(0x20a415d8, 32,  RW, XPT_RAVE, SCD2_SCD_STATE10)
BCHP_REGISTER(0x20a415dc, 32,  RW, XPT_RAVE, SCD2_SCD_STATE11)
BCHP_REGISTER(0x20a415e0, 32,  RW, XPT_RAVE, SCD3_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a415e4, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a415e8, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a415ec, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a415f0, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a415f4, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a415f8, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a415fc, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41600, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41604, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41608, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4160c, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41610, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41614, 32,  RW, XPT_RAVE, SCD3_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41618, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4161c, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41620, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41624, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41628, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4162c, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41630, 32,  RW, XPT_RAVE, SCD3_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41634, 32,  RW, XPT_RAVE, SCD3_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41638, 32,  RW, XPT_RAVE, SCD3_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4163c, 32,  RW, XPT_RAVE, SCD3_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41640, 32,  RW, XPT_RAVE, SCD3_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41644, 32,  RW, XPT_RAVE, SCD3_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41648, 32,  RW, XPT_RAVE, SCD3_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4164c, 32,  RW, XPT_RAVE, SCD3_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41650, 32,  RW, XPT_RAVE, SCD3_SCD_STATE0)
BCHP_REGISTER(0x20a41654, 32,  RW, XPT_RAVE, SCD3_SCD_STATE1)
BCHP_REGISTER(0x20a41658, 32,  RW, XPT_RAVE, SCD3_SCD_STATE2)
BCHP_REGISTER(0x20a4165c, 32,  RW, XPT_RAVE, SCD3_SCD_STATE3)
BCHP_REGISTER(0x20a41660, 32,  RW, XPT_RAVE, SCD3_SCD_STATE4)
BCHP_REGISTER(0x20a41664, 32,  RW, XPT_RAVE, SCD3_SCD_STATE5)
BCHP_REGISTER(0x20a41668, 32,  RW, XPT_RAVE, SCD3_SCD_STATE6)
BCHP_REGISTER(0x20a4166c, 32,  RW, XPT_RAVE, SCD3_SCD_STATE7)
BCHP_REGISTER(0x20a41670, 32,  RW, XPT_RAVE, SCD3_SCD_STATE8)
BCHP_REGISTER(0x20a41674, 32,  RW, XPT_RAVE, SCD3_SCD_STATE9)
BCHP_REGISTER(0x20a41678, 32,  RW, XPT_RAVE, SCD3_SCD_STATE10)
BCHP_REGISTER(0x20a4167c, 32,  RW, XPT_RAVE, SCD3_SCD_STATE11)
BCHP_REGISTER(0x20a41680, 32,  RW, XPT_RAVE, SCD4_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41684, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41688, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4168c, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41690, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41694, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41698, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4169c, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a416a0, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a416a4, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a416a8, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a416ac, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a416b0, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a416b4, 32,  RW, XPT_RAVE, SCD4_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a416b8, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a416bc, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a416c0, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a416c4, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a416c8, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a416cc, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a416d0, 32,  RW, XPT_RAVE, SCD4_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a416d4, 32,  RW, XPT_RAVE, SCD4_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a416d8, 32,  RW, XPT_RAVE, SCD4_SCD_PES_STATE0)
BCHP_REGISTER(0x20a416dc, 32,  RW, XPT_RAVE, SCD4_SCD_PES_STATE1)
BCHP_REGISTER(0x20a416e0, 32,  RW, XPT_RAVE, SCD4_SCD_PES_STATE2)
BCHP_REGISTER(0x20a416e4, 32,  RW, XPT_RAVE, SCD4_SCD_PES_STATE3)
BCHP_REGISTER(0x20a416e8, 32,  RW, XPT_RAVE, SCD4_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a416ec, 32,  RW, XPT_RAVE, SCD4_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a416f0, 32,  RW, XPT_RAVE, SCD4_SCD_STATE0)
BCHP_REGISTER(0x20a416f4, 32,  RW, XPT_RAVE, SCD4_SCD_STATE1)
BCHP_REGISTER(0x20a416f8, 32,  RW, XPT_RAVE, SCD4_SCD_STATE2)
BCHP_REGISTER(0x20a416fc, 32,  RW, XPT_RAVE, SCD4_SCD_STATE3)
BCHP_REGISTER(0x20a41700, 32,  RW, XPT_RAVE, SCD4_SCD_STATE4)
BCHP_REGISTER(0x20a41704, 32,  RW, XPT_RAVE, SCD4_SCD_STATE5)
BCHP_REGISTER(0x20a41708, 32,  RW, XPT_RAVE, SCD4_SCD_STATE6)
BCHP_REGISTER(0x20a4170c, 32,  RW, XPT_RAVE, SCD4_SCD_STATE7)
BCHP_REGISTER(0x20a41710, 32,  RW, XPT_RAVE, SCD4_SCD_STATE8)
BCHP_REGISTER(0x20a41714, 32,  RW, XPT_RAVE, SCD4_SCD_STATE9)
BCHP_REGISTER(0x20a41718, 32,  RW, XPT_RAVE, SCD4_SCD_STATE10)
BCHP_REGISTER(0x20a4171c, 32,  RW, XPT_RAVE, SCD4_SCD_STATE11)
BCHP_REGISTER(0x20a41720, 32,  RW, XPT_RAVE, SCD5_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41724, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41728, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4172c, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41730, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41734, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41738, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4173c, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41740, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41744, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41748, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4174c, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41750, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41754, 32,  RW, XPT_RAVE, SCD5_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41758, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4175c, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41760, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41764, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41768, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4176c, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41770, 32,  RW, XPT_RAVE, SCD5_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41774, 32,  RW, XPT_RAVE, SCD5_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41778, 32,  RW, XPT_RAVE, SCD5_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4177c, 32,  RW, XPT_RAVE, SCD5_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41780, 32,  RW, XPT_RAVE, SCD5_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41784, 32,  RW, XPT_RAVE, SCD5_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41788, 32,  RW, XPT_RAVE, SCD5_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4178c, 32,  RW, XPT_RAVE, SCD5_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41790, 32,  RW, XPT_RAVE, SCD5_SCD_STATE0)
BCHP_REGISTER(0x20a41794, 32,  RW, XPT_RAVE, SCD5_SCD_STATE1)
BCHP_REGISTER(0x20a41798, 32,  RW, XPT_RAVE, SCD5_SCD_STATE2)
BCHP_REGISTER(0x20a4179c, 32,  RW, XPT_RAVE, SCD5_SCD_STATE3)
BCHP_REGISTER(0x20a417a0, 32,  RW, XPT_RAVE, SCD5_SCD_STATE4)
BCHP_REGISTER(0x20a417a4, 32,  RW, XPT_RAVE, SCD5_SCD_STATE5)
BCHP_REGISTER(0x20a417a8, 32,  RW, XPT_RAVE, SCD5_SCD_STATE6)
BCHP_REGISTER(0x20a417ac, 32,  RW, XPT_RAVE, SCD5_SCD_STATE7)
BCHP_REGISTER(0x20a417b0, 32,  RW, XPT_RAVE, SCD5_SCD_STATE8)
BCHP_REGISTER(0x20a417b4, 32,  RW, XPT_RAVE, SCD5_SCD_STATE9)
BCHP_REGISTER(0x20a417b8, 32,  RW, XPT_RAVE, SCD5_SCD_STATE10)
BCHP_REGISTER(0x20a417bc, 32,  RW, XPT_RAVE, SCD5_SCD_STATE11)
BCHP_REGISTER(0x20a417c0, 32,  RW, XPT_RAVE, SCD6_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a417c4, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a417c8, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a417cc, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a417d0, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a417d4, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a417d8, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a417dc, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a417e0, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a417e4, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a417e8, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a417ec, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a417f0, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a417f4, 32,  RW, XPT_RAVE, SCD6_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a417f8, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a417fc, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41800, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41804, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41808, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4180c, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41810, 32,  RW, XPT_RAVE, SCD6_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41814, 32,  RW, XPT_RAVE, SCD6_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41818, 32,  RW, XPT_RAVE, SCD6_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4181c, 32,  RW, XPT_RAVE, SCD6_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41820, 32,  RW, XPT_RAVE, SCD6_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41824, 32,  RW, XPT_RAVE, SCD6_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41828, 32,  RW, XPT_RAVE, SCD6_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4182c, 32,  RW, XPT_RAVE, SCD6_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41830, 32,  RW, XPT_RAVE, SCD6_SCD_STATE0)
BCHP_REGISTER(0x20a41834, 32,  RW, XPT_RAVE, SCD6_SCD_STATE1)
BCHP_REGISTER(0x20a41838, 32,  RW, XPT_RAVE, SCD6_SCD_STATE2)
BCHP_REGISTER(0x20a4183c, 32,  RW, XPT_RAVE, SCD6_SCD_STATE3)
BCHP_REGISTER(0x20a41840, 32,  RW, XPT_RAVE, SCD6_SCD_STATE4)
BCHP_REGISTER(0x20a41844, 32,  RW, XPT_RAVE, SCD6_SCD_STATE5)
BCHP_REGISTER(0x20a41848, 32,  RW, XPT_RAVE, SCD6_SCD_STATE6)
BCHP_REGISTER(0x20a4184c, 32,  RW, XPT_RAVE, SCD6_SCD_STATE7)
BCHP_REGISTER(0x20a41850, 32,  RW, XPT_RAVE, SCD6_SCD_STATE8)
BCHP_REGISTER(0x20a41854, 32,  RW, XPT_RAVE, SCD6_SCD_STATE9)
BCHP_REGISTER(0x20a41858, 32,  RW, XPT_RAVE, SCD6_SCD_STATE10)
BCHP_REGISTER(0x20a4185c, 32,  RW, XPT_RAVE, SCD6_SCD_STATE11)
BCHP_REGISTER(0x20a41860, 32,  RW, XPT_RAVE, SCD7_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41864, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41868, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4186c, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41870, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41874, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41878, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4187c, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41880, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41884, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41888, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4188c, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41890, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41894, 32,  RW, XPT_RAVE, SCD7_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41898, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4189c, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a418a0, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a418a4, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a418a8, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a418ac, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a418b0, 32,  RW, XPT_RAVE, SCD7_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a418b4, 32,  RW, XPT_RAVE, SCD7_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a418b8, 32,  RW, XPT_RAVE, SCD7_SCD_PES_STATE0)
BCHP_REGISTER(0x20a418bc, 32,  RW, XPT_RAVE, SCD7_SCD_PES_STATE1)
BCHP_REGISTER(0x20a418c0, 32,  RW, XPT_RAVE, SCD7_SCD_PES_STATE2)
BCHP_REGISTER(0x20a418c4, 32,  RW, XPT_RAVE, SCD7_SCD_PES_STATE3)
BCHP_REGISTER(0x20a418c8, 32,  RW, XPT_RAVE, SCD7_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a418cc, 32,  RW, XPT_RAVE, SCD7_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a418d0, 32,  RW, XPT_RAVE, SCD7_SCD_STATE0)
BCHP_REGISTER(0x20a418d4, 32,  RW, XPT_RAVE, SCD7_SCD_STATE1)
BCHP_REGISTER(0x20a418d8, 32,  RW, XPT_RAVE, SCD7_SCD_STATE2)
BCHP_REGISTER(0x20a418dc, 32,  RW, XPT_RAVE, SCD7_SCD_STATE3)
BCHP_REGISTER(0x20a418e0, 32,  RW, XPT_RAVE, SCD7_SCD_STATE4)
BCHP_REGISTER(0x20a418e4, 32,  RW, XPT_RAVE, SCD7_SCD_STATE5)
BCHP_REGISTER(0x20a418e8, 32,  RW, XPT_RAVE, SCD7_SCD_STATE6)
BCHP_REGISTER(0x20a418ec, 32,  RW, XPT_RAVE, SCD7_SCD_STATE7)
BCHP_REGISTER(0x20a418f0, 32,  RW, XPT_RAVE, SCD7_SCD_STATE8)
BCHP_REGISTER(0x20a418f4, 32,  RW, XPT_RAVE, SCD7_SCD_STATE9)
BCHP_REGISTER(0x20a418f8, 32,  RW, XPT_RAVE, SCD7_SCD_STATE10)
BCHP_REGISTER(0x20a418fc, 32,  RW, XPT_RAVE, SCD7_SCD_STATE11)
BCHP_REGISTER(0x20a41900, 32,  RW, XPT_RAVE, SCD8_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41904, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41908, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4190c, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41910, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41914, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41918, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4191c, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41920, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41924, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41928, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4192c, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41930, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41934, 32,  RW, XPT_RAVE, SCD8_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41938, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4193c, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41940, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41944, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41948, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4194c, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41950, 32,  RW, XPT_RAVE, SCD8_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41954, 32,  RW, XPT_RAVE, SCD8_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41958, 32,  RW, XPT_RAVE, SCD8_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4195c, 32,  RW, XPT_RAVE, SCD8_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41960, 32,  RW, XPT_RAVE, SCD8_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41964, 32,  RW, XPT_RAVE, SCD8_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41968, 32,  RW, XPT_RAVE, SCD8_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4196c, 32,  RW, XPT_RAVE, SCD8_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41970, 32,  RW, XPT_RAVE, SCD8_SCD_STATE0)
BCHP_REGISTER(0x20a41974, 32,  RW, XPT_RAVE, SCD8_SCD_STATE1)
BCHP_REGISTER(0x20a41978, 32,  RW, XPT_RAVE, SCD8_SCD_STATE2)
BCHP_REGISTER(0x20a4197c, 32,  RW, XPT_RAVE, SCD8_SCD_STATE3)
BCHP_REGISTER(0x20a41980, 32,  RW, XPT_RAVE, SCD8_SCD_STATE4)
BCHP_REGISTER(0x20a41984, 32,  RW, XPT_RAVE, SCD8_SCD_STATE5)
BCHP_REGISTER(0x20a41988, 32,  RW, XPT_RAVE, SCD8_SCD_STATE6)
BCHP_REGISTER(0x20a4198c, 32,  RW, XPT_RAVE, SCD8_SCD_STATE7)
BCHP_REGISTER(0x20a41990, 32,  RW, XPT_RAVE, SCD8_SCD_STATE8)
BCHP_REGISTER(0x20a41994, 32,  RW, XPT_RAVE, SCD8_SCD_STATE9)
BCHP_REGISTER(0x20a41998, 32,  RW, XPT_RAVE, SCD8_SCD_STATE10)
BCHP_REGISTER(0x20a4199c, 32,  RW, XPT_RAVE, SCD8_SCD_STATE11)
BCHP_REGISTER(0x20a419a0, 32,  RW, XPT_RAVE, SCD9_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a419a4, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a419a8, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a419ac, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a419b0, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a419b4, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a419b8, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a419bc, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a419c0, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a419c4, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a419c8, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a419cc, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a419d0, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a419d4, 32,  RW, XPT_RAVE, SCD9_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a419d8, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a419dc, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a419e0, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a419e4, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a419e8, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a419ec, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a419f0, 32,  RW, XPT_RAVE, SCD9_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a419f4, 32,  RW, XPT_RAVE, SCD9_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a419f8, 32,  RW, XPT_RAVE, SCD9_SCD_PES_STATE0)
BCHP_REGISTER(0x20a419fc, 32,  RW, XPT_RAVE, SCD9_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41a00, 32,  RW, XPT_RAVE, SCD9_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41a04, 32,  RW, XPT_RAVE, SCD9_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41a08, 32,  RW, XPT_RAVE, SCD9_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41a0c, 32,  RW, XPT_RAVE, SCD9_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41a10, 32,  RW, XPT_RAVE, SCD9_SCD_STATE0)
BCHP_REGISTER(0x20a41a14, 32,  RW, XPT_RAVE, SCD9_SCD_STATE1)
BCHP_REGISTER(0x20a41a18, 32,  RW, XPT_RAVE, SCD9_SCD_STATE2)
BCHP_REGISTER(0x20a41a1c, 32,  RW, XPT_RAVE, SCD9_SCD_STATE3)
BCHP_REGISTER(0x20a41a20, 32,  RW, XPT_RAVE, SCD9_SCD_STATE4)
BCHP_REGISTER(0x20a41a24, 32,  RW, XPT_RAVE, SCD9_SCD_STATE5)
BCHP_REGISTER(0x20a41a28, 32,  RW, XPT_RAVE, SCD9_SCD_STATE6)
BCHP_REGISTER(0x20a41a2c, 32,  RW, XPT_RAVE, SCD9_SCD_STATE7)
BCHP_REGISTER(0x20a41a30, 32,  RW, XPT_RAVE, SCD9_SCD_STATE8)
BCHP_REGISTER(0x20a41a34, 32,  RW, XPT_RAVE, SCD9_SCD_STATE9)
BCHP_REGISTER(0x20a41a38, 32,  RW, XPT_RAVE, SCD9_SCD_STATE10)
BCHP_REGISTER(0x20a41a3c, 32,  RW, XPT_RAVE, SCD9_SCD_STATE11)
BCHP_REGISTER(0x20a41a40, 32,  RW, XPT_RAVE, SCD10_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41a44, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41a48, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41a4c, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41a50, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41a54, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41a58, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41a5c, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41a60, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41a64, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41a68, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41a6c, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41a70, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41a74, 32,  RW, XPT_RAVE, SCD10_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41a78, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41a7c, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41a80, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41a84, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41a88, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41a8c, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41a90, 32,  RW, XPT_RAVE, SCD10_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41a94, 32,  RW, XPT_RAVE, SCD10_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41a98, 32,  RW, XPT_RAVE, SCD10_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41a9c, 32,  RW, XPT_RAVE, SCD10_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41aa0, 32,  RW, XPT_RAVE, SCD10_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41aa4, 32,  RW, XPT_RAVE, SCD10_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41aa8, 32,  RW, XPT_RAVE, SCD10_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41aac, 32,  RW, XPT_RAVE, SCD10_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41ab0, 32,  RW, XPT_RAVE, SCD10_SCD_STATE0)
BCHP_REGISTER(0x20a41ab4, 32,  RW, XPT_RAVE, SCD10_SCD_STATE1)
BCHP_REGISTER(0x20a41ab8, 32,  RW, XPT_RAVE, SCD10_SCD_STATE2)
BCHP_REGISTER(0x20a41abc, 32,  RW, XPT_RAVE, SCD10_SCD_STATE3)
BCHP_REGISTER(0x20a41ac0, 32,  RW, XPT_RAVE, SCD10_SCD_STATE4)
BCHP_REGISTER(0x20a41ac4, 32,  RW, XPT_RAVE, SCD10_SCD_STATE5)
BCHP_REGISTER(0x20a41ac8, 32,  RW, XPT_RAVE, SCD10_SCD_STATE6)
BCHP_REGISTER(0x20a41acc, 32,  RW, XPT_RAVE, SCD10_SCD_STATE7)
BCHP_REGISTER(0x20a41ad0, 32,  RW, XPT_RAVE, SCD10_SCD_STATE8)
BCHP_REGISTER(0x20a41ad4, 32,  RW, XPT_RAVE, SCD10_SCD_STATE9)
BCHP_REGISTER(0x20a41ad8, 32,  RW, XPT_RAVE, SCD10_SCD_STATE10)
BCHP_REGISTER(0x20a41adc, 32,  RW, XPT_RAVE, SCD10_SCD_STATE11)
BCHP_REGISTER(0x20a41ae0, 32,  RW, XPT_RAVE, SCD11_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41ae4, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41ae8, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41aec, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41af0, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41af4, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41af8, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41afc, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41b00, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41b04, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41b08, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41b0c, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41b10, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41b14, 32,  RW, XPT_RAVE, SCD11_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41b18, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41b1c, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41b20, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41b24, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41b28, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41b2c, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41b30, 32,  RW, XPT_RAVE, SCD11_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41b34, 32,  RW, XPT_RAVE, SCD11_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41b38, 32,  RW, XPT_RAVE, SCD11_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41b3c, 32,  RW, XPT_RAVE, SCD11_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41b40, 32,  RW, XPT_RAVE, SCD11_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41b44, 32,  RW, XPT_RAVE, SCD11_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41b48, 32,  RW, XPT_RAVE, SCD11_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41b4c, 32,  RW, XPT_RAVE, SCD11_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41b50, 32,  RW, XPT_RAVE, SCD11_SCD_STATE0)
BCHP_REGISTER(0x20a41b54, 32,  RW, XPT_RAVE, SCD11_SCD_STATE1)
BCHP_REGISTER(0x20a41b58, 32,  RW, XPT_RAVE, SCD11_SCD_STATE2)
BCHP_REGISTER(0x20a41b5c, 32,  RW, XPT_RAVE, SCD11_SCD_STATE3)
BCHP_REGISTER(0x20a41b60, 32,  RW, XPT_RAVE, SCD11_SCD_STATE4)
BCHP_REGISTER(0x20a41b64, 32,  RW, XPT_RAVE, SCD11_SCD_STATE5)
BCHP_REGISTER(0x20a41b68, 32,  RW, XPT_RAVE, SCD11_SCD_STATE6)
BCHP_REGISTER(0x20a41b6c, 32,  RW, XPT_RAVE, SCD11_SCD_STATE7)
BCHP_REGISTER(0x20a41b70, 32,  RW, XPT_RAVE, SCD11_SCD_STATE8)
BCHP_REGISTER(0x20a41b74, 32,  RW, XPT_RAVE, SCD11_SCD_STATE9)
BCHP_REGISTER(0x20a41b78, 32,  RW, XPT_RAVE, SCD11_SCD_STATE10)
BCHP_REGISTER(0x20a41b7c, 32,  RW, XPT_RAVE, SCD11_SCD_STATE11)
BCHP_REGISTER(0x20a41b80, 32,  RW, XPT_RAVE, SCD12_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41b84, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41b88, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41b8c, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41b90, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41b94, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41b98, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41b9c, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41ba0, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41ba4, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41ba8, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41bac, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41bb0, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41bb4, 32,  RW, XPT_RAVE, SCD12_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41bb8, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41bbc, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41bc0, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41bc4, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41bc8, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41bcc, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41bd0, 32,  RW, XPT_RAVE, SCD12_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41bd4, 32,  RW, XPT_RAVE, SCD12_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41bd8, 32,  RW, XPT_RAVE, SCD12_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41bdc, 32,  RW, XPT_RAVE, SCD12_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41be0, 32,  RW, XPT_RAVE, SCD12_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41be4, 32,  RW, XPT_RAVE, SCD12_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41be8, 32,  RW, XPT_RAVE, SCD12_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41bec, 32,  RW, XPT_RAVE, SCD12_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41bf0, 32,  RW, XPT_RAVE, SCD12_SCD_STATE0)
BCHP_REGISTER(0x20a41bf4, 32,  RW, XPT_RAVE, SCD12_SCD_STATE1)
BCHP_REGISTER(0x20a41bf8, 32,  RW, XPT_RAVE, SCD12_SCD_STATE2)
BCHP_REGISTER(0x20a41bfc, 32,  RW, XPT_RAVE, SCD12_SCD_STATE3)
BCHP_REGISTER(0x20a41c00, 32,  RW, XPT_RAVE, SCD12_SCD_STATE4)
BCHP_REGISTER(0x20a41c04, 32,  RW, XPT_RAVE, SCD12_SCD_STATE5)
BCHP_REGISTER(0x20a41c08, 32,  RW, XPT_RAVE, SCD12_SCD_STATE6)
BCHP_REGISTER(0x20a41c0c, 32,  RW, XPT_RAVE, SCD12_SCD_STATE7)
BCHP_REGISTER(0x20a41c10, 32,  RW, XPT_RAVE, SCD12_SCD_STATE8)
BCHP_REGISTER(0x20a41c14, 32,  RW, XPT_RAVE, SCD12_SCD_STATE9)
BCHP_REGISTER(0x20a41c18, 32,  RW, XPT_RAVE, SCD12_SCD_STATE10)
BCHP_REGISTER(0x20a41c1c, 32,  RW, XPT_RAVE, SCD12_SCD_STATE11)
BCHP_REGISTER(0x20a41c20, 32,  RW, XPT_RAVE, SCD13_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41c24, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41c28, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41c2c, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41c30, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41c34, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41c38, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41c3c, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41c40, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41c44, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41c48, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41c4c, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41c50, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41c54, 32,  RW, XPT_RAVE, SCD13_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41c58, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41c5c, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41c60, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41c64, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41c68, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41c6c, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41c70, 32,  RW, XPT_RAVE, SCD13_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41c74, 32,  RW, XPT_RAVE, SCD13_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41c78, 32,  RW, XPT_RAVE, SCD13_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41c7c, 32,  RW, XPT_RAVE, SCD13_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41c80, 32,  RW, XPT_RAVE, SCD13_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41c84, 32,  RW, XPT_RAVE, SCD13_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41c88, 32,  RW, XPT_RAVE, SCD13_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41c8c, 32,  RW, XPT_RAVE, SCD13_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41c90, 32,  RW, XPT_RAVE, SCD13_SCD_STATE0)
BCHP_REGISTER(0x20a41c94, 32,  RW, XPT_RAVE, SCD13_SCD_STATE1)
BCHP_REGISTER(0x20a41c98, 32,  RW, XPT_RAVE, SCD13_SCD_STATE2)
BCHP_REGISTER(0x20a41c9c, 32,  RW, XPT_RAVE, SCD13_SCD_STATE3)
BCHP_REGISTER(0x20a41ca0, 32,  RW, XPT_RAVE, SCD13_SCD_STATE4)
BCHP_REGISTER(0x20a41ca4, 32,  RW, XPT_RAVE, SCD13_SCD_STATE5)
BCHP_REGISTER(0x20a41ca8, 32,  RW, XPT_RAVE, SCD13_SCD_STATE6)
BCHP_REGISTER(0x20a41cac, 32,  RW, XPT_RAVE, SCD13_SCD_STATE7)
BCHP_REGISTER(0x20a41cb0, 32,  RW, XPT_RAVE, SCD13_SCD_STATE8)
BCHP_REGISTER(0x20a41cb4, 32,  RW, XPT_RAVE, SCD13_SCD_STATE9)
BCHP_REGISTER(0x20a41cb8, 32,  RW, XPT_RAVE, SCD13_SCD_STATE10)
BCHP_REGISTER(0x20a41cbc, 32,  RW, XPT_RAVE, SCD13_SCD_STATE11)
BCHP_REGISTER(0x20a41cc0, 32,  RW, XPT_RAVE, SCD14_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41cc4, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41cc8, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41ccc, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41cd0, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41cd4, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41cd8, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41cdc, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41ce0, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41ce4, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41ce8, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41cec, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41cf0, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41cf4, 32,  RW, XPT_RAVE, SCD14_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41cf8, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41cfc, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41d00, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41d04, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41d08, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41d0c, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41d10, 32,  RW, XPT_RAVE, SCD14_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41d14, 32,  RW, XPT_RAVE, SCD14_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41d18, 32,  RW, XPT_RAVE, SCD14_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41d1c, 32,  RW, XPT_RAVE, SCD14_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41d20, 32,  RW, XPT_RAVE, SCD14_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41d24, 32,  RW, XPT_RAVE, SCD14_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41d28, 32,  RW, XPT_RAVE, SCD14_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41d2c, 32,  RW, XPT_RAVE, SCD14_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41d30, 32,  RW, XPT_RAVE, SCD14_SCD_STATE0)
BCHP_REGISTER(0x20a41d34, 32,  RW, XPT_RAVE, SCD14_SCD_STATE1)
BCHP_REGISTER(0x20a41d38, 32,  RW, XPT_RAVE, SCD14_SCD_STATE2)
BCHP_REGISTER(0x20a41d3c, 32,  RW, XPT_RAVE, SCD14_SCD_STATE3)
BCHP_REGISTER(0x20a41d40, 32,  RW, XPT_RAVE, SCD14_SCD_STATE4)
BCHP_REGISTER(0x20a41d44, 32,  RW, XPT_RAVE, SCD14_SCD_STATE5)
BCHP_REGISTER(0x20a41d48, 32,  RW, XPT_RAVE, SCD14_SCD_STATE6)
BCHP_REGISTER(0x20a41d4c, 32,  RW, XPT_RAVE, SCD14_SCD_STATE7)
BCHP_REGISTER(0x20a41d50, 32,  RW, XPT_RAVE, SCD14_SCD_STATE8)
BCHP_REGISTER(0x20a41d54, 32,  RW, XPT_RAVE, SCD14_SCD_STATE9)
BCHP_REGISTER(0x20a41d58, 32,  RW, XPT_RAVE, SCD14_SCD_STATE10)
BCHP_REGISTER(0x20a41d5c, 32,  RW, XPT_RAVE, SCD14_SCD_STATE11)
BCHP_REGISTER(0x20a41d60, 32,  RW, XPT_RAVE, SCD15_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41d64, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41d68, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41d6c, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41d70, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41d74, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41d78, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41d7c, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41d80, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41d84, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41d88, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41d8c, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41d90, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41d94, 32,  RW, XPT_RAVE, SCD15_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41d98, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41d9c, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41da0, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41da4, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41da8, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41dac, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41db0, 32,  RW, XPT_RAVE, SCD15_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41db4, 32,  RW, XPT_RAVE, SCD15_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41db8, 32,  RW, XPT_RAVE, SCD15_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41dbc, 32,  RW, XPT_RAVE, SCD15_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41dc0, 32,  RW, XPT_RAVE, SCD15_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41dc4, 32,  RW, XPT_RAVE, SCD15_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41dc8, 32,  RW, XPT_RAVE, SCD15_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41dcc, 32,  RW, XPT_RAVE, SCD15_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41dd0, 32,  RW, XPT_RAVE, SCD15_SCD_STATE0)
BCHP_REGISTER(0x20a41dd4, 32,  RW, XPT_RAVE, SCD15_SCD_STATE1)
BCHP_REGISTER(0x20a41dd8, 32,  RW, XPT_RAVE, SCD15_SCD_STATE2)
BCHP_REGISTER(0x20a41ddc, 32,  RW, XPT_RAVE, SCD15_SCD_STATE3)
BCHP_REGISTER(0x20a41de0, 32,  RW, XPT_RAVE, SCD15_SCD_STATE4)
BCHP_REGISTER(0x20a41de4, 32,  RW, XPT_RAVE, SCD15_SCD_STATE5)
BCHP_REGISTER(0x20a41de8, 32,  RW, XPT_RAVE, SCD15_SCD_STATE6)
BCHP_REGISTER(0x20a41dec, 32,  RW, XPT_RAVE, SCD15_SCD_STATE7)
BCHP_REGISTER(0x20a41df0, 32,  RW, XPT_RAVE, SCD15_SCD_STATE8)
BCHP_REGISTER(0x20a41df4, 32,  RW, XPT_RAVE, SCD15_SCD_STATE9)
BCHP_REGISTER(0x20a41df8, 32,  RW, XPT_RAVE, SCD15_SCD_STATE10)
BCHP_REGISTER(0x20a41dfc, 32,  RW, XPT_RAVE, SCD15_SCD_STATE11)
BCHP_REGISTER(0x20a41e00, 32,  RW, XPT_RAVE, SCD16_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41e04, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41e08, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41e0c, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41e10, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41e14, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41e18, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41e1c, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41e20, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41e24, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41e28, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41e2c, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41e30, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41e34, 32,  RW, XPT_RAVE, SCD16_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41e38, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41e3c, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41e40, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41e44, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41e48, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41e4c, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41e50, 32,  RW, XPT_RAVE, SCD16_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41e54, 32,  RW, XPT_RAVE, SCD16_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41e58, 32,  RW, XPT_RAVE, SCD16_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41e5c, 32,  RW, XPT_RAVE, SCD16_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41e60, 32,  RW, XPT_RAVE, SCD16_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41e64, 32,  RW, XPT_RAVE, SCD16_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41e68, 32,  RW, XPT_RAVE, SCD16_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41e6c, 32,  RW, XPT_RAVE, SCD16_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41e70, 32,  RW, XPT_RAVE, SCD16_SCD_STATE0)
BCHP_REGISTER(0x20a41e74, 32,  RW, XPT_RAVE, SCD16_SCD_STATE1)
BCHP_REGISTER(0x20a41e78, 32,  RW, XPT_RAVE, SCD16_SCD_STATE2)
BCHP_REGISTER(0x20a41e7c, 32,  RW, XPT_RAVE, SCD16_SCD_STATE3)
BCHP_REGISTER(0x20a41e80, 32,  RW, XPT_RAVE, SCD16_SCD_STATE4)
BCHP_REGISTER(0x20a41e84, 32,  RW, XPT_RAVE, SCD16_SCD_STATE5)
BCHP_REGISTER(0x20a41e88, 32,  RW, XPT_RAVE, SCD16_SCD_STATE6)
BCHP_REGISTER(0x20a41e8c, 32,  RW, XPT_RAVE, SCD16_SCD_STATE7)
BCHP_REGISTER(0x20a41e90, 32,  RW, XPT_RAVE, SCD16_SCD_STATE8)
BCHP_REGISTER(0x20a41e94, 32,  RW, XPT_RAVE, SCD16_SCD_STATE9)
BCHP_REGISTER(0x20a41e98, 32,  RW, XPT_RAVE, SCD16_SCD_STATE10)
BCHP_REGISTER(0x20a41e9c, 32,  RW, XPT_RAVE, SCD16_SCD_STATE11)
BCHP_REGISTER(0x20a41ea0, 32,  RW, XPT_RAVE, SCD17_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41ea4, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41ea8, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41eac, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41eb0, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41eb4, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41eb8, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41ebc, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41ec0, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41ec4, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41ec8, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41ecc, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41ed0, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41ed4, 32,  RW, XPT_RAVE, SCD17_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41ed8, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41edc, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41ee0, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41ee4, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41ee8, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41eec, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41ef0, 32,  RW, XPT_RAVE, SCD17_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41ef4, 32,  RW, XPT_RAVE, SCD17_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41ef8, 32,  RW, XPT_RAVE, SCD17_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41efc, 32,  RW, XPT_RAVE, SCD17_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41f00, 32,  RW, XPT_RAVE, SCD17_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41f04, 32,  RW, XPT_RAVE, SCD17_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41f08, 32,  RW, XPT_RAVE, SCD17_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41f0c, 32,  RW, XPT_RAVE, SCD17_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41f10, 32,  RW, XPT_RAVE, SCD17_SCD_STATE0)
BCHP_REGISTER(0x20a41f14, 32,  RW, XPT_RAVE, SCD17_SCD_STATE1)
BCHP_REGISTER(0x20a41f18, 32,  RW, XPT_RAVE, SCD17_SCD_STATE2)
BCHP_REGISTER(0x20a41f1c, 32,  RW, XPT_RAVE, SCD17_SCD_STATE3)
BCHP_REGISTER(0x20a41f20, 32,  RW, XPT_RAVE, SCD17_SCD_STATE4)
BCHP_REGISTER(0x20a41f24, 32,  RW, XPT_RAVE, SCD17_SCD_STATE5)
BCHP_REGISTER(0x20a41f28, 32,  RW, XPT_RAVE, SCD17_SCD_STATE6)
BCHP_REGISTER(0x20a41f2c, 32,  RW, XPT_RAVE, SCD17_SCD_STATE7)
BCHP_REGISTER(0x20a41f30, 32,  RW, XPT_RAVE, SCD17_SCD_STATE8)
BCHP_REGISTER(0x20a41f34, 32,  RW, XPT_RAVE, SCD17_SCD_STATE9)
BCHP_REGISTER(0x20a41f38, 32,  RW, XPT_RAVE, SCD17_SCD_STATE10)
BCHP_REGISTER(0x20a41f3c, 32,  RW, XPT_RAVE, SCD17_SCD_STATE11)
BCHP_REGISTER(0x20a41f40, 32,  RW, XPT_RAVE, SCD18_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41f44, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41f48, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41f4c, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41f50, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41f54, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41f58, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41f5c, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a41f60, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a41f64, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a41f68, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a41f6c, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a41f70, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a41f74, 32,  RW, XPT_RAVE, SCD18_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a41f78, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a41f7c, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a41f80, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a41f84, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a41f88, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a41f8c, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a41f90, 32,  RW, XPT_RAVE, SCD18_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a41f94, 32,  RW, XPT_RAVE, SCD18_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a41f98, 32,  RW, XPT_RAVE, SCD18_SCD_PES_STATE0)
BCHP_REGISTER(0x20a41f9c, 32,  RW, XPT_RAVE, SCD18_SCD_PES_STATE1)
BCHP_REGISTER(0x20a41fa0, 32,  RW, XPT_RAVE, SCD18_SCD_PES_STATE2)
BCHP_REGISTER(0x20a41fa4, 32,  RW, XPT_RAVE, SCD18_SCD_PES_STATE3)
BCHP_REGISTER(0x20a41fa8, 32,  RW, XPT_RAVE, SCD18_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a41fac, 32,  RW, XPT_RAVE, SCD18_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a41fb0, 32,  RW, XPT_RAVE, SCD18_SCD_STATE0)
BCHP_REGISTER(0x20a41fb4, 32,  RW, XPT_RAVE, SCD18_SCD_STATE1)
BCHP_REGISTER(0x20a41fb8, 32,  RW, XPT_RAVE, SCD18_SCD_STATE2)
BCHP_REGISTER(0x20a41fbc, 32,  RW, XPT_RAVE, SCD18_SCD_STATE3)
BCHP_REGISTER(0x20a41fc0, 32,  RW, XPT_RAVE, SCD18_SCD_STATE4)
BCHP_REGISTER(0x20a41fc4, 32,  RW, XPT_RAVE, SCD18_SCD_STATE5)
BCHP_REGISTER(0x20a41fc8, 32,  RW, XPT_RAVE, SCD18_SCD_STATE6)
BCHP_REGISTER(0x20a41fcc, 32,  RW, XPT_RAVE, SCD18_SCD_STATE7)
BCHP_REGISTER(0x20a41fd0, 32,  RW, XPT_RAVE, SCD18_SCD_STATE8)
BCHP_REGISTER(0x20a41fd4, 32,  RW, XPT_RAVE, SCD18_SCD_STATE9)
BCHP_REGISTER(0x20a41fd8, 32,  RW, XPT_RAVE, SCD18_SCD_STATE10)
BCHP_REGISTER(0x20a41fdc, 32,  RW, XPT_RAVE, SCD18_SCD_STATE11)
BCHP_REGISTER(0x20a41fe0, 32,  RW, XPT_RAVE, SCD19_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a41fe4, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a41fe8, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a41fec, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a41ff0, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a41ff4, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a41ff8, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a41ffc, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a42000, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a42004, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a42008, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4200c, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a42010, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a42014, 32,  RW, XPT_RAVE, SCD19_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a42018, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4201c, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a42020, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a42024, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a42028, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4202c, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a42030, 32,  RW, XPT_RAVE, SCD19_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a42034, 32,  RW, XPT_RAVE, SCD19_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a42038, 32,  RW, XPT_RAVE, SCD19_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4203c, 32,  RW, XPT_RAVE, SCD19_SCD_PES_STATE1)
BCHP_REGISTER(0x20a42040, 32,  RW, XPT_RAVE, SCD19_SCD_PES_STATE2)
BCHP_REGISTER(0x20a42044, 32,  RW, XPT_RAVE, SCD19_SCD_PES_STATE3)
BCHP_REGISTER(0x20a42048, 32,  RW, XPT_RAVE, SCD19_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4204c, 32,  RW, XPT_RAVE, SCD19_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a42050, 32,  RW, XPT_RAVE, SCD19_SCD_STATE0)
BCHP_REGISTER(0x20a42054, 32,  RW, XPT_RAVE, SCD19_SCD_STATE1)
BCHP_REGISTER(0x20a42058, 32,  RW, XPT_RAVE, SCD19_SCD_STATE2)
BCHP_REGISTER(0x20a4205c, 32,  RW, XPT_RAVE, SCD19_SCD_STATE3)
BCHP_REGISTER(0x20a42060, 32,  RW, XPT_RAVE, SCD19_SCD_STATE4)
BCHP_REGISTER(0x20a42064, 32,  RW, XPT_RAVE, SCD19_SCD_STATE5)
BCHP_REGISTER(0x20a42068, 32,  RW, XPT_RAVE, SCD19_SCD_STATE6)
BCHP_REGISTER(0x20a4206c, 32,  RW, XPT_RAVE, SCD19_SCD_STATE7)
BCHP_REGISTER(0x20a42070, 32,  RW, XPT_RAVE, SCD19_SCD_STATE8)
BCHP_REGISTER(0x20a42074, 32,  RW, XPT_RAVE, SCD19_SCD_STATE9)
BCHP_REGISTER(0x20a42078, 32,  RW, XPT_RAVE, SCD19_SCD_STATE10)
BCHP_REGISTER(0x20a4207c, 32,  RW, XPT_RAVE, SCD19_SCD_STATE11)
BCHP_REGISTER(0x20a42080, 32,  RW, XPT_RAVE, SCD20_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a42084, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a42088, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4208c, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a42090, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a42094, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a42098, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4209c, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a420a0, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a420a4, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a420a8, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a420ac, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a420b0, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a420b4, 32,  RW, XPT_RAVE, SCD20_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a420b8, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a420bc, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a420c0, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a420c4, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a420c8, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a420cc, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a420d0, 32,  RW, XPT_RAVE, SCD20_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a420d4, 32,  RW, XPT_RAVE, SCD20_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a420d8, 32,  RW, XPT_RAVE, SCD20_SCD_PES_STATE0)
BCHP_REGISTER(0x20a420dc, 32,  RW, XPT_RAVE, SCD20_SCD_PES_STATE1)
BCHP_REGISTER(0x20a420e0, 32,  RW, XPT_RAVE, SCD20_SCD_PES_STATE2)
BCHP_REGISTER(0x20a420e4, 32,  RW, XPT_RAVE, SCD20_SCD_PES_STATE3)
BCHP_REGISTER(0x20a420e8, 32,  RW, XPT_RAVE, SCD20_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a420ec, 32,  RW, XPT_RAVE, SCD20_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a420f0, 32,  RW, XPT_RAVE, SCD20_SCD_STATE0)
BCHP_REGISTER(0x20a420f4, 32,  RW, XPT_RAVE, SCD20_SCD_STATE1)
BCHP_REGISTER(0x20a420f8, 32,  RW, XPT_RAVE, SCD20_SCD_STATE2)
BCHP_REGISTER(0x20a420fc, 32,  RW, XPT_RAVE, SCD20_SCD_STATE3)
BCHP_REGISTER(0x20a42100, 32,  RW, XPT_RAVE, SCD20_SCD_STATE4)
BCHP_REGISTER(0x20a42104, 32,  RW, XPT_RAVE, SCD20_SCD_STATE5)
BCHP_REGISTER(0x20a42108, 32,  RW, XPT_RAVE, SCD20_SCD_STATE6)
BCHP_REGISTER(0x20a4210c, 32,  RW, XPT_RAVE, SCD20_SCD_STATE7)
BCHP_REGISTER(0x20a42110, 32,  RW, XPT_RAVE, SCD20_SCD_STATE8)
BCHP_REGISTER(0x20a42114, 32,  RW, XPT_RAVE, SCD20_SCD_STATE9)
BCHP_REGISTER(0x20a42118, 32,  RW, XPT_RAVE, SCD20_SCD_STATE10)
BCHP_REGISTER(0x20a4211c, 32,  RW, XPT_RAVE, SCD20_SCD_STATE11)
BCHP_REGISTER(0x20a42120, 32,  RW, XPT_RAVE, SCD21_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a42124, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a42128, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4212c, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a42130, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a42134, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a42138, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4213c, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a42140, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a42144, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a42148, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4214c, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a42150, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a42154, 32,  RW, XPT_RAVE, SCD21_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a42158, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4215c, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a42160, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a42164, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a42168, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4216c, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a42170, 32,  RW, XPT_RAVE, SCD21_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a42174, 32,  RW, XPT_RAVE, SCD21_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a42178, 32,  RW, XPT_RAVE, SCD21_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4217c, 32,  RW, XPT_RAVE, SCD21_SCD_PES_STATE1)
BCHP_REGISTER(0x20a42180, 32,  RW, XPT_RAVE, SCD21_SCD_PES_STATE2)
BCHP_REGISTER(0x20a42184, 32,  RW, XPT_RAVE, SCD21_SCD_PES_STATE3)
BCHP_REGISTER(0x20a42188, 32,  RW, XPT_RAVE, SCD21_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4218c, 32,  RW, XPT_RAVE, SCD21_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a42190, 32,  RW, XPT_RAVE, SCD21_SCD_STATE0)
BCHP_REGISTER(0x20a42194, 32,  RW, XPT_RAVE, SCD21_SCD_STATE1)
BCHP_REGISTER(0x20a42198, 32,  RW, XPT_RAVE, SCD21_SCD_STATE2)
BCHP_REGISTER(0x20a4219c, 32,  RW, XPT_RAVE, SCD21_SCD_STATE3)
BCHP_REGISTER(0x20a421a0, 32,  RW, XPT_RAVE, SCD21_SCD_STATE4)
BCHP_REGISTER(0x20a421a4, 32,  RW, XPT_RAVE, SCD21_SCD_STATE5)
BCHP_REGISTER(0x20a421a8, 32,  RW, XPT_RAVE, SCD21_SCD_STATE6)
BCHP_REGISTER(0x20a421ac, 32,  RW, XPT_RAVE, SCD21_SCD_STATE7)
BCHP_REGISTER(0x20a421b0, 32,  RW, XPT_RAVE, SCD21_SCD_STATE8)
BCHP_REGISTER(0x20a421b4, 32,  RW, XPT_RAVE, SCD21_SCD_STATE9)
BCHP_REGISTER(0x20a421b8, 32,  RW, XPT_RAVE, SCD21_SCD_STATE10)
BCHP_REGISTER(0x20a421bc, 32,  RW, XPT_RAVE, SCD21_SCD_STATE11)
BCHP_REGISTER(0x20a421c0, 32,  RW, XPT_RAVE, SCD22_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a421c4, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a421c8, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a421cc, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a421d0, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a421d4, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a421d8, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a421dc, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a421e0, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a421e4, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a421e8, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a421ec, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a421f0, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a421f4, 32,  RW, XPT_RAVE, SCD22_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a421f8, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a421fc, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a42200, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a42204, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a42208, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a4220c, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a42210, 32,  RW, XPT_RAVE, SCD22_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a42214, 32,  RW, XPT_RAVE, SCD22_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a42218, 32,  RW, XPT_RAVE, SCD22_SCD_PES_STATE0)
BCHP_REGISTER(0x20a4221c, 32,  RW, XPT_RAVE, SCD22_SCD_PES_STATE1)
BCHP_REGISTER(0x20a42220, 32,  RW, XPT_RAVE, SCD22_SCD_PES_STATE2)
BCHP_REGISTER(0x20a42224, 32,  RW, XPT_RAVE, SCD22_SCD_PES_STATE3)
BCHP_REGISTER(0x20a42228, 32,  RW, XPT_RAVE, SCD22_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a4222c, 32,  RW, XPT_RAVE, SCD22_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a42230, 32,  RW, XPT_RAVE, SCD22_SCD_STATE0)
BCHP_REGISTER(0x20a42234, 32,  RW, XPT_RAVE, SCD22_SCD_STATE1)
BCHP_REGISTER(0x20a42238, 32,  RW, XPT_RAVE, SCD22_SCD_STATE2)
BCHP_REGISTER(0x20a4223c, 32,  RW, XPT_RAVE, SCD22_SCD_STATE3)
BCHP_REGISTER(0x20a42240, 32,  RW, XPT_RAVE, SCD22_SCD_STATE4)
BCHP_REGISTER(0x20a42244, 32,  RW, XPT_RAVE, SCD22_SCD_STATE5)
BCHP_REGISTER(0x20a42248, 32,  RW, XPT_RAVE, SCD22_SCD_STATE6)
BCHP_REGISTER(0x20a4224c, 32,  RW, XPT_RAVE, SCD22_SCD_STATE7)
BCHP_REGISTER(0x20a42250, 32,  RW, XPT_RAVE, SCD22_SCD_STATE8)
BCHP_REGISTER(0x20a42254, 32,  RW, XPT_RAVE, SCD22_SCD_STATE9)
BCHP_REGISTER(0x20a42258, 32,  RW, XPT_RAVE, SCD22_SCD_STATE10)
BCHP_REGISTER(0x20a4225c, 32,  RW, XPT_RAVE, SCD22_SCD_STATE11)
BCHP_REGISTER(0x20a42260, 32,  RW, XPT_RAVE, SCD23_SCD_MISC_CONFIG)
BCHP_REGISTER(0x20a42264, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE0)
BCHP_REGISTER(0x20a42268, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE1)
BCHP_REGISTER(0x20a4226c, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE2)
BCHP_REGISTER(0x20a42270, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE3)
BCHP_REGISTER(0x20a42274, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE4)
BCHP_REGISTER(0x20a42278, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE5)
BCHP_REGISTER(0x20a4227c, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE6)
BCHP_REGISTER(0x20a42280, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE7)
BCHP_REGISTER(0x20a42284, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE8)
BCHP_REGISTER(0x20a42288, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE9)
BCHP_REGISTER(0x20a4228c, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE10)
BCHP_REGISTER(0x20a42290, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE11)
BCHP_REGISTER(0x20a42294, 32,  RW, XPT_RAVE, SCD23_EPBR_STATE_WORD)
BCHP_REGISTER(0x20a42298, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE12)
BCHP_REGISTER(0x20a4229c, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE13)
BCHP_REGISTER(0x20a422a0, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE14)
BCHP_REGISTER(0x20a422a4, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE15)
BCHP_REGISTER(0x20a422a8, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE16)
BCHP_REGISTER(0x20a422ac, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE17)
BCHP_REGISTER(0x20a422b0, 32,  RW, XPT_RAVE, SCD23_SCD_COMP_STATE18)
BCHP_REGISTER(0x20a422b4, 32,  RW, XPT_RAVE, SCD23_RESERVE_COMP_STATE3)
BCHP_REGISTER(0x20a422b8, 32,  RW, XPT_RAVE, SCD23_SCD_PES_STATE0)
BCHP_REGISTER(0x20a422bc, 32,  RW, XPT_RAVE, SCD23_SCD_PES_STATE1)
BCHP_REGISTER(0x20a422c0, 32,  RW, XPT_RAVE, SCD23_SCD_PES_STATE2)
BCHP_REGISTER(0x20a422c4, 32,  RW, XPT_RAVE, SCD23_SCD_PES_STATE3)
BCHP_REGISTER(0x20a422c8, 32,  RW, XPT_RAVE, SCD23_SCD_PACKET_COUNT)
BCHP_REGISTER(0x20a422cc, 32,  RW, XPT_RAVE, SCD23_RESERVE_PES_STATE0)
BCHP_REGISTER(0x20a422d0, 32,  RW, XPT_RAVE, SCD23_SCD_STATE0)
BCHP_REGISTER(0x20a422d4, 32,  RW, XPT_RAVE, SCD23_SCD_STATE1)
BCHP_REGISTER(0x20a422d8, 32,  RW, XPT_RAVE, SCD23_SCD_STATE2)
BCHP_REGISTER(0x20a422dc, 32,  RW, XPT_RAVE, SCD23_SCD_STATE3)
BCHP_REGISTER(0x20a422e0, 32,  RW, XPT_RAVE, SCD23_SCD_STATE4)
BCHP_REGISTER(0x20a422e4, 32,  RW, XPT_RAVE, SCD23_SCD_STATE5)
BCHP_REGISTER(0x20a422e8, 32,  RW, XPT_RAVE, SCD23_SCD_STATE6)
BCHP_REGISTER(0x20a422ec, 32,  RW, XPT_RAVE, SCD23_SCD_STATE7)
BCHP_REGISTER(0x20a422f0, 32,  RW, XPT_RAVE, SCD23_SCD_STATE8)
BCHP_REGISTER(0x20a422f4, 32,  RW, XPT_RAVE, SCD23_SCD_STATE9)
BCHP_REGISTER(0x20a422f8, 32,  RW, XPT_RAVE, SCD23_SCD_STATE10)
BCHP_REGISTER(0x20a422fc, 32,  RW, XPT_RAVE, SCD23_SCD_STATE11)
BCHP_REGISTER(0x20a42300, 32,  RW, XPT_RAVE, XPU_IMEM_ACCESS_CONTROL)
BCHP_REGISTER(0x20a42304, 32,  RO, XPT_RAVE, XPU_IMEM_ACCESS_STATUS)
BCHP_REGISTER(0x20a42308, 32,  RW, XPT_RAVE, XPU_CONFIG)
BCHP_REGISTER(0x20a4230c, 32,  RW, XPT_RAVE, XPU_TEST_CONTROL)
BCHP_REGISTER(0x20a42310, 32,  RW, XPT_RAVE, XPU_TEST_CONTROL_EXT_IO)
BCHP_REGISTER(0x20a42314, 32,  RO, XPT_RAVE, XPU_TEST_OBSERVE_0)
BCHP_REGISTER(0x20a42318, 32,  RO, XPT_RAVE, XPU_TEST_OBSERVE_1)
BCHP_REGISTER(0x20a4231c, 32,  RO, XPT_RAVE, XPU_TEST_OBSERVE_EXT_IO)
BCHP_REGISTER(0x20a42320, 32,  RW, XPT_RAVE, RAVE_DIAGNOSTICS_CONTROL)
BCHP_REGISTER(0x20a42324, 32,  RW, XPT_RAVE, STOP_PACKET_COUNT_VALUE)
BCHP_REGISTER(0x20a42328, 32,  RO, XPT_RAVE, RAVE_DIAGNOSTICS_READ)
BCHP_REGISTER(0x20a4232c, 32,  RW, XPT_RAVE, AVS_SCV_FILTER_MODE_CONTROL)
BCHP_REGISTER(0x20a42330, 32,  RW, XPT_RAVE, AVS_SCV_FILTER_VALUE_0_TO_3)
BCHP_REGISTER(0x20a42334, 32,  RW, XPT_RAVE, AVS_SCV_FILTER_VALUE_4_TO_7)
BCHP_REGISTER(0x20a42338, 32,  RO, XPT_RAVE, AV_STATUS)
BCHP_REGISTER(0x20a4233c, 32,  RO, XPT_RAVE, PACKET_COUNT)
BCHP_REGISTER(0x20a42340, 32,  RW, XPT_RAVE, DATA_START_ADDR_A)
BCHP_REGISTER(0x20a42344, 32,  RW, XPT_RAVE, DATA_START_ADDR_B)
BCHP_REGISTER(0x20a42348, 32,  RW, XPT_RAVE, WATCHDOG_TIMER_VALUE)
BCHP_REGISTER(0x20a4234c, 32,  RW, XPT_RAVE, MISC_CONTROL)
BCHP_REGISTER(0x20a42350, 32,  RW, XPT_RAVE, BASE_ADDRESSES)
BCHP_REGISTER(0x20a42354, 32,  RW, XPT_RAVE, CX_HOLD_CLR_STATUS)
BCHP_REGISTER(0x20a42358, 32,  RW, XPT_RAVE, CX_HOLD_CLR_STATUS_1)
BCHP_REGISTER(0x20a4235c, 32,  RW, XPT_RAVE, PB_BAND_HOLD_CLR_STATUS)
BCHP_REGISTER(0x20a42360, 32,  RW, XPT_RAVE, FE_BAND_HOLD_CLR_STATUS)
BCHP_REGISTER(0x20a42364, 32,  RW, XPT_RAVE, FW_WATERMARK)
BCHP_REGISTER(0x20a42368, 32,  RW, XPT_RAVE, HW_WATCHDOG)
BCHP_REGISTER(0x20a4236c, 32,  RW, XPT_RAVE, MISC_CONTROL2)
BCHP_REGISTER(0x20a42370, 32,  RW, XPT_RAVE, MISC_CONTROL3)
BCHP_REGISTER(0x20a42374, 32,  RW, XPT_RAVE, RC0_SP_CONTROL)
BCHP_REGISTER(0x20a42378, 32,  RW, XPT_RAVE, RC1_SP_CONTROL)
BCHP_REGISTER(0x20a4237c, 32,  RW, XPT_RAVE, RC2_SP_CONTROL)
BCHP_REGISTER(0x20a42380, 32,  RW, XPT_RAVE, RC3_SP_CONTROL)
BCHP_REGISTER(0x20a42384, 32,  RW, XPT_RAVE, RC4_SP_CONTROL)
BCHP_REGISTER(0x20a42388, 32,  RW, XPT_RAVE, RC5_SP_CONTROL)
BCHP_REGISTER(0x20a4238c, 32,  RW, XPT_RAVE, RC6_SP_CONTROL)
BCHP_REGISTER(0x20a42390, 32,  RW, XPT_RAVE, RC7_SP_CONTROL)
BCHP_REGISTER(0x20a42394, 32,  RW, XPT_RAVE, RC8_SP_CONTROL)
BCHP_REGISTER(0x20a42398, 32,  RO, XPT_RAVE, AV_STATUS2)
BCHP_REGISTER(0x20a4239c, 32,  RW, XPT_RAVE, ATSOFFSET_MAX_ERROR)
BCHP_REGISTER(0x20a423a0, 32,  RW, XPT_RAVE, INT_CX0)
BCHP_REGISTER(0x20a423a4, 32,  RW, XPT_RAVE, INT_CX1)
BCHP_REGISTER(0x20a423a8, 32,  RW, XPT_RAVE, INT_CX2)
BCHP_REGISTER(0x20a423ac, 32,  RW, XPT_RAVE, INT_CX3)
BCHP_REGISTER(0x20a423b0, 32,  RW, XPT_RAVE, INT_CX4)
BCHP_REGISTER(0x20a423b4, 32,  RW, XPT_RAVE, INT_CX5)
BCHP_REGISTER(0x20a423b8, 32,  RW, XPT_RAVE, INT_CX6)
BCHP_REGISTER(0x20a423bc, 32,  RW, XPT_RAVE, INT_CX7)
BCHP_REGISTER(0x20a423c0, 32,  RW, XPT_RAVE, INT_CX8)
BCHP_REGISTER(0x20a423c4, 32,  RW, XPT_RAVE, INT_CX9)
BCHP_REGISTER(0x20a423c8, 32,  RW, XPT_RAVE, INT_CX10)
BCHP_REGISTER(0x20a423cc, 32,  RW, XPT_RAVE, INT_CX11)
BCHP_REGISTER(0x20a423d0, 32,  RW, XPT_RAVE, INT_CX12)
BCHP_REGISTER(0x20a423d4, 32,  RW, XPT_RAVE, INT_CX13)
BCHP_REGISTER(0x20a423d8, 32,  RW, XPT_RAVE, INT_CX14)
BCHP_REGISTER(0x20a423dc, 32,  RW, XPT_RAVE, INT_CX15)
BCHP_REGISTER(0x20a423e0, 32,  RW, XPT_RAVE, INT_MISC)
BCHP_REGISTER(0x20a46fe4, 32,  RW, XPT_RAVE, TPIT_TIME_TICK)
BCHP_REGISTER(0x20a46fe8, 32,  RW, XPT_RAVE, TPIT_PKT_TIMEOUT)
BCHP_REGISTER(0x20a46fec, 32,  RW, XPT_RAVE, TPIT_EVE_TIMEOUT)
BCHP_REGISTER(0x20a46ff0, 32,  RW, XPT_RAVE, EMM_TID_MODE)
BCHP_REGISTER(0x20a46ff4, 32,  RW, XPT_RAVE, EMM_TID)
BCHP_REGISTER(0x20a46ff8, 32,  RW, XPT_RAVE, EMM_CTRL_ID)
BCHP_REGISTER(0x20a46ffc, 32,  RW, XPT_RAVE, EMM_DATA_ID_1)
BCHP_REGISTER(0x20a47000, 32,  RW, XPT_RAVE, EMM_DATA_ID_2)
BCHP_REGISTER(0x20a47004, 32,  RW, XPT_RAVE, EMM_DATA_ID_3)
BCHP_REGISTER(0x20a47008, 32,  RW, XPT_RAVE, EMM_DATA_ID_4)
BCHP_REGISTER(0x20a4700c, 32,  RW, XPT_RAVE, EMM_DATA_ID_5)
BCHP_REGISTER(0x20a47010, 32,  RW, XPT_RAVE, EMM_DATA_ID_6)
BCHP_REGISTER(0x20a47014, 32,  RW, XPT_RAVE, EMM_DATA_ID_7)
BCHP_REGISTER(0x20a47018, 32,  RW, XPT_RAVE, EMM_DATA_ID_8)
BCHP_REGISTER(0x20a4701c, 32,  RW, XPT_RAVE, EMM_MASK_ID_1)
BCHP_REGISTER(0x20a47020, 32,  RW, XPT_RAVE, EMM_MASK_ID_2)
BCHP_REGISTER(0x20a47024, 32,  RW, XPT_RAVE, EMM_MASK_ID_3)
BCHP_REGISTER(0x20a47028, 32,  RW, XPT_RAVE, EMM_MASK_ID_4)
BCHP_REGISTER(0x20a4702c, 32,  RW, XPT_RAVE, EMM_MASK_ID_5)
BCHP_REGISTER(0x20a47030, 32,  RW, XPT_RAVE, EMM_MASK_ID_6)
BCHP_REGISTER(0x20a47034, 32,  RW, XPT_RAVE, EMM_MASK_ID_7)
BCHP_REGISTER(0x20a47038, 32,  RW, XPT_RAVE, EMM_MASK_ID_8)
BCHP_REGISTER(0x20a4783c, 32,  RW, XPT_RAVE, TPIT0_CTRL1)
BCHP_REGISTER(0x20a47840, 32,  RW, XPT_RAVE, TPIT0_COR1)
BCHP_REGISTER(0x20a47844, 32,  RW, XPT_RAVE, TPIT0_TID)
BCHP_REGISTER(0x20a47848, 32,  RW, XPT_RAVE, TPIT0_TID2)
BCHP_REGISTER(0x20a4784c, 32,  RW, XPT_RAVE, TPIT0_STATE0)
BCHP_REGISTER(0x20a47850, 32,  RW, XPT_RAVE, TPIT0_STATE1)
BCHP_REGISTER(0x20a47854, 32,  RW, XPT_RAVE, TPIT0_STATE2)
BCHP_REGISTER(0x20a47858, 32,  RW, XPT_RAVE, TPIT0_STATE2a)
BCHP_REGISTER(0x20a4785c, 32,  RW, XPT_RAVE, TPIT0_STATE2b)
BCHP_REGISTER(0x20a47860, 32,  RW, XPT_RAVE, TPIT0_STATE2c)
BCHP_REGISTER(0x20a47864, 32,  RW, XPT_RAVE, TPIT0_STATE2d)
BCHP_REGISTER(0x20a47868, 32,  RW, XPT_RAVE, TPIT0_STATE2e)
BCHP_REGISTER(0x20a4786c, 32,  RW, XPT_RAVE, TPIT0_STATE2f)
BCHP_REGISTER(0x20a47870, 32,  RW, XPT_RAVE, TPIT0_STATE2g)
BCHP_REGISTER(0x20a47874, 32,  RW, XPT_RAVE, TPIT0_STATE2h)
BCHP_REGISTER(0x20a47878, 32,  RW, XPT_RAVE, TPIT0_STATE2i)
BCHP_REGISTER(0x20a4787c, 32,  RW, XPT_RAVE, TPIT0_STATE2j)
BCHP_REGISTER(0x20a47880, 32,  RW, XPT_RAVE, TPIT0_STATE2k)
BCHP_REGISTER(0x20a47884, 32,  RW, XPT_RAVE, TPIT0_STATE2l)
BCHP_REGISTER(0x20a47888, 32,  RW, XPT_RAVE, TPIT0_STATE2m)
BCHP_REGISTER(0x20a4788c, 32,  RW, XPT_RAVE, TPIT0_STATE_RESERVED0)
BCHP_REGISTER(0x20a47890, 32,  RW, XPT_RAVE, TPIT0_STATE_RESERVED1)
BCHP_REGISTER(0x20a47894, 32,  RW, XPT_RAVE, TPIT0_STATE4)
BCHP_REGISTER(0x20a47898, 32,  RW, XPT_RAVE, TPIT0_STATE5)
BCHP_REGISTER(0x20a4789c, 32,  RW, XPT_RAVE, TPIT0_STATE6)
BCHP_REGISTER(0x20a478a0, 32,  RW, XPT_RAVE, TPIT0_STATE7)
BCHP_REGISTER(0x20a478a4, 32,  RW, XPT_RAVE, TPIT0_STATE8)
BCHP_REGISTER(0x20a478a8, 32,  RW, XPT_RAVE, TPIT0_STATE9)
BCHP_REGISTER(0x20a478ac, 32,  RW, XPT_RAVE, TPIT1_CTRL1)
BCHP_REGISTER(0x20a478b0, 32,  RW, XPT_RAVE, TPIT1_COR1)
BCHP_REGISTER(0x20a478b4, 32,  RW, XPT_RAVE, TPIT1_TID)
BCHP_REGISTER(0x20a478b8, 32,  RW, XPT_RAVE, TPIT1_TID2)
BCHP_REGISTER(0x20a478bc, 32,  RW, XPT_RAVE, TPIT1_STATE0)
BCHP_REGISTER(0x20a478c0, 32,  RW, XPT_RAVE, TPIT1_STATE1)
BCHP_REGISTER(0x20a478c4, 32,  RW, XPT_RAVE, TPIT1_STATE2)
BCHP_REGISTER(0x20a478c8, 32,  RW, XPT_RAVE, TPIT1_STATE2a)
BCHP_REGISTER(0x20a478cc, 32,  RW, XPT_RAVE, TPIT1_STATE2b)
BCHP_REGISTER(0x20a478d0, 32,  RW, XPT_RAVE, TPIT1_STATE2c)
BCHP_REGISTER(0x20a478d4, 32,  RW, XPT_RAVE, TPIT1_STATE2d)
BCHP_REGISTER(0x20a478d8, 32,  RW, XPT_RAVE, TPIT1_STATE2e)
BCHP_REGISTER(0x20a478dc, 32,  RW, XPT_RAVE, TPIT1_STATE2f)
BCHP_REGISTER(0x20a478e0, 32,  RW, XPT_RAVE, TPIT1_STATE2g)
BCHP_REGISTER(0x20a478e4, 32,  RW, XPT_RAVE, TPIT1_STATE2h)
BCHP_REGISTER(0x20a478e8, 32,  RW, XPT_RAVE, TPIT1_STATE2i)
BCHP_REGISTER(0x20a478ec, 32,  RW, XPT_RAVE, TPIT1_STATE2j)
BCHP_REGISTER(0x20a478f0, 32,  RW, XPT_RAVE, TPIT1_STATE2k)
BCHP_REGISTER(0x20a478f4, 32,  RW, XPT_RAVE, TPIT1_STATE2l)
BCHP_REGISTER(0x20a478f8, 32,  RW, XPT_RAVE, TPIT1_STATE2m)
BCHP_REGISTER(0x20a478fc, 32,  RW, XPT_RAVE, TPIT1_STATE_RESERVED0)
BCHP_REGISTER(0x20a47900, 32,  RW, XPT_RAVE, TPIT1_STATE_RESERVED1)
BCHP_REGISTER(0x20a47904, 32,  RW, XPT_RAVE, TPIT1_STATE4)
BCHP_REGISTER(0x20a47908, 32,  RW, XPT_RAVE, TPIT1_STATE5)
BCHP_REGISTER(0x20a4790c, 32,  RW, XPT_RAVE, TPIT1_STATE6)
BCHP_REGISTER(0x20a47910, 32,  RW, XPT_RAVE, TPIT1_STATE7)
BCHP_REGISTER(0x20a47914, 32,  RW, XPT_RAVE, TPIT1_STATE8)
BCHP_REGISTER(0x20a47918, 32,  RW, XPT_RAVE, TPIT1_STATE9)
BCHP_REGISTER(0x20a4791c, 32,  RW, XPT_RAVE, TPIT2_CTRL1)
BCHP_REGISTER(0x20a47920, 32,  RW, XPT_RAVE, TPIT2_COR1)
BCHP_REGISTER(0x20a47924, 32,  RW, XPT_RAVE, TPIT2_TID)
BCHP_REGISTER(0x20a47928, 32,  RW, XPT_RAVE, TPIT2_TID2)
BCHP_REGISTER(0x20a4792c, 32,  RW, XPT_RAVE, TPIT2_STATE0)
BCHP_REGISTER(0x20a47930, 32,  RW, XPT_RAVE, TPIT2_STATE1)
BCHP_REGISTER(0x20a47934, 32,  RW, XPT_RAVE, TPIT2_STATE2)
BCHP_REGISTER(0x20a47938, 32,  RW, XPT_RAVE, TPIT2_STATE2a)
BCHP_REGISTER(0x20a4793c, 32,  RW, XPT_RAVE, TPIT2_STATE2b)
BCHP_REGISTER(0x20a47940, 32,  RW, XPT_RAVE, TPIT2_STATE2c)
BCHP_REGISTER(0x20a47944, 32,  RW, XPT_RAVE, TPIT2_STATE2d)
BCHP_REGISTER(0x20a47948, 32,  RW, XPT_RAVE, TPIT2_STATE2e)
BCHP_REGISTER(0x20a4794c, 32,  RW, XPT_RAVE, TPIT2_STATE2f)
BCHP_REGISTER(0x20a47950, 32,  RW, XPT_RAVE, TPIT2_STATE2g)
BCHP_REGISTER(0x20a47954, 32,  RW, XPT_RAVE, TPIT2_STATE2h)
BCHP_REGISTER(0x20a47958, 32,  RW, XPT_RAVE, TPIT2_STATE2i)
BCHP_REGISTER(0x20a4795c, 32,  RW, XPT_RAVE, TPIT2_STATE2j)
BCHP_REGISTER(0x20a47960, 32,  RW, XPT_RAVE, TPIT2_STATE2k)
BCHP_REGISTER(0x20a47964, 32,  RW, XPT_RAVE, TPIT2_STATE2l)
BCHP_REGISTER(0x20a47968, 32,  RW, XPT_RAVE, TPIT2_STATE2m)
BCHP_REGISTER(0x20a4796c, 32,  RW, XPT_RAVE, TPIT2_STATE_RESERVED0)
BCHP_REGISTER(0x20a47970, 32,  RW, XPT_RAVE, TPIT2_STATE_RESERVED1)
BCHP_REGISTER(0x20a47974, 32,  RW, XPT_RAVE, TPIT2_STATE4)
BCHP_REGISTER(0x20a47978, 32,  RW, XPT_RAVE, TPIT2_STATE5)
BCHP_REGISTER(0x20a4797c, 32,  RW, XPT_RAVE, TPIT2_STATE6)
BCHP_REGISTER(0x20a47980, 32,  RW, XPT_RAVE, TPIT2_STATE7)
BCHP_REGISTER(0x20a47984, 32,  RW, XPT_RAVE, TPIT2_STATE8)
BCHP_REGISTER(0x20a47988, 32,  RW, XPT_RAVE, TPIT2_STATE9)
BCHP_REGISTER(0x20a4798c, 32,  RW, XPT_RAVE, TPIT3_CTRL1)
BCHP_REGISTER(0x20a47990, 32,  RW, XPT_RAVE, TPIT3_COR1)
BCHP_REGISTER(0x20a47994, 32,  RW, XPT_RAVE, TPIT3_TID)
BCHP_REGISTER(0x20a47998, 32,  RW, XPT_RAVE, TPIT3_TID2)
BCHP_REGISTER(0x20a4799c, 32,  RW, XPT_RAVE, TPIT3_STATE0)
BCHP_REGISTER(0x20a479a0, 32,  RW, XPT_RAVE, TPIT3_STATE1)
BCHP_REGISTER(0x20a479a4, 32,  RW, XPT_RAVE, TPIT3_STATE2)
BCHP_REGISTER(0x20a479a8, 32,  RW, XPT_RAVE, TPIT3_STATE2a)
BCHP_REGISTER(0x20a479ac, 32,  RW, XPT_RAVE, TPIT3_STATE2b)
BCHP_REGISTER(0x20a479b0, 32,  RW, XPT_RAVE, TPIT3_STATE2c)
BCHP_REGISTER(0x20a479b4, 32,  RW, XPT_RAVE, TPIT3_STATE2d)
BCHP_REGISTER(0x20a479b8, 32,  RW, XPT_RAVE, TPIT3_STATE2e)
BCHP_REGISTER(0x20a479bc, 32,  RW, XPT_RAVE, TPIT3_STATE2f)
BCHP_REGISTER(0x20a479c0, 32,  RW, XPT_RAVE, TPIT3_STATE2g)
BCHP_REGISTER(0x20a479c4, 32,  RW, XPT_RAVE, TPIT3_STATE2h)
BCHP_REGISTER(0x20a479c8, 32,  RW, XPT_RAVE, TPIT3_STATE2i)
BCHP_REGISTER(0x20a479cc, 32,  RW, XPT_RAVE, TPIT3_STATE2j)
BCHP_REGISTER(0x20a479d0, 32,  RW, XPT_RAVE, TPIT3_STATE2k)
BCHP_REGISTER(0x20a479d4, 32,  RW, XPT_RAVE, TPIT3_STATE2l)
BCHP_REGISTER(0x20a479d8, 32,  RW, XPT_RAVE, TPIT3_STATE2m)
BCHP_REGISTER(0x20a479dc, 32,  RW, XPT_RAVE, TPIT3_STATE_RESERVED0)
BCHP_REGISTER(0x20a479e0, 32,  RW, XPT_RAVE, TPIT3_STATE_RESERVED1)
BCHP_REGISTER(0x20a479e4, 32,  RW, XPT_RAVE, TPIT3_STATE4)
BCHP_REGISTER(0x20a479e8, 32,  RW, XPT_RAVE, TPIT3_STATE5)
BCHP_REGISTER(0x20a479ec, 32,  RW, XPT_RAVE, TPIT3_STATE6)
BCHP_REGISTER(0x20a479f0, 32,  RW, XPT_RAVE, TPIT3_STATE7)
BCHP_REGISTER(0x20a479f4, 32,  RW, XPT_RAVE, TPIT3_STATE8)
BCHP_REGISTER(0x20a479f8, 32,  RW, XPT_RAVE, TPIT3_STATE9)
BCHP_REGISTER(0x20a479fc, 32,  RW, XPT_RAVE, TPIT4_CTRL1)
BCHP_REGISTER(0x20a47a00, 32,  RW, XPT_RAVE, TPIT4_COR1)
BCHP_REGISTER(0x20a47a04, 32,  RW, XPT_RAVE, TPIT4_TID)
BCHP_REGISTER(0x20a47a08, 32,  RW, XPT_RAVE, TPIT4_TID2)
BCHP_REGISTER(0x20a47a0c, 32,  RW, XPT_RAVE, TPIT4_STATE0)
BCHP_REGISTER(0x20a47a10, 32,  RW, XPT_RAVE, TPIT4_STATE1)
BCHP_REGISTER(0x20a47a14, 32,  RW, XPT_RAVE, TPIT4_STATE2)
BCHP_REGISTER(0x20a47a18, 32,  RW, XPT_RAVE, TPIT4_STATE2a)
BCHP_REGISTER(0x20a47a1c, 32,  RW, XPT_RAVE, TPIT4_STATE2b)
BCHP_REGISTER(0x20a47a20, 32,  RW, XPT_RAVE, TPIT4_STATE2c)
BCHP_REGISTER(0x20a47a24, 32,  RW, XPT_RAVE, TPIT4_STATE2d)
BCHP_REGISTER(0x20a47a28, 32,  RW, XPT_RAVE, TPIT4_STATE2e)
BCHP_REGISTER(0x20a47a2c, 32,  RW, XPT_RAVE, TPIT4_STATE2f)
BCHP_REGISTER(0x20a47a30, 32,  RW, XPT_RAVE, TPIT4_STATE2g)
BCHP_REGISTER(0x20a47a34, 32,  RW, XPT_RAVE, TPIT4_STATE2h)
BCHP_REGISTER(0x20a47a38, 32,  RW, XPT_RAVE, TPIT4_STATE2i)
BCHP_REGISTER(0x20a47a3c, 32,  RW, XPT_RAVE, TPIT4_STATE2j)
BCHP_REGISTER(0x20a47a40, 32,  RW, XPT_RAVE, TPIT4_STATE2k)
BCHP_REGISTER(0x20a47a44, 32,  RW, XPT_RAVE, TPIT4_STATE2l)
BCHP_REGISTER(0x20a47a48, 32,  RW, XPT_RAVE, TPIT4_STATE2m)
BCHP_REGISTER(0x20a47a4c, 32,  RW, XPT_RAVE, TPIT4_STATE_RESERVED0)
BCHP_REGISTER(0x20a47a50, 32,  RW, XPT_RAVE, TPIT4_STATE_RESERVED1)
BCHP_REGISTER(0x20a47a54, 32,  RW, XPT_RAVE, TPIT4_STATE4)
BCHP_REGISTER(0x20a47a58, 32,  RW, XPT_RAVE, TPIT4_STATE5)
BCHP_REGISTER(0x20a47a5c, 32,  RW, XPT_RAVE, TPIT4_STATE6)
BCHP_REGISTER(0x20a47a60, 32,  RW, XPT_RAVE, TPIT4_STATE7)
BCHP_REGISTER(0x20a47a64, 32,  RW, XPT_RAVE, TPIT4_STATE8)
BCHP_REGISTER(0x20a47a68, 32,  RW, XPT_RAVE, TPIT4_STATE9)
BCHP_REGISTER(0x20a47a6c, 32,  RW, XPT_RAVE, TPIT5_CTRL1)
BCHP_REGISTER(0x20a47a70, 32,  RW, XPT_RAVE, TPIT5_COR1)
BCHP_REGISTER(0x20a47a74, 32,  RW, XPT_RAVE, TPIT5_TID)
BCHP_REGISTER(0x20a47a78, 32,  RW, XPT_RAVE, TPIT5_TID2)
BCHP_REGISTER(0x20a47a7c, 32,  RW, XPT_RAVE, TPIT5_STATE0)
BCHP_REGISTER(0x20a47a80, 32,  RW, XPT_RAVE, TPIT5_STATE1)
BCHP_REGISTER(0x20a47a84, 32,  RW, XPT_RAVE, TPIT5_STATE2)
BCHP_REGISTER(0x20a47a88, 32,  RW, XPT_RAVE, TPIT5_STATE2a)
BCHP_REGISTER(0x20a47a8c, 32,  RW, XPT_RAVE, TPIT5_STATE2b)
BCHP_REGISTER(0x20a47a90, 32,  RW, XPT_RAVE, TPIT5_STATE2c)
BCHP_REGISTER(0x20a47a94, 32,  RW, XPT_RAVE, TPIT5_STATE2d)
BCHP_REGISTER(0x20a47a98, 32,  RW, XPT_RAVE, TPIT5_STATE2e)
BCHP_REGISTER(0x20a47a9c, 32,  RW, XPT_RAVE, TPIT5_STATE2f)
BCHP_REGISTER(0x20a47aa0, 32,  RW, XPT_RAVE, TPIT5_STATE2g)
BCHP_REGISTER(0x20a47aa4, 32,  RW, XPT_RAVE, TPIT5_STATE2h)
BCHP_REGISTER(0x20a47aa8, 32,  RW, XPT_RAVE, TPIT5_STATE2i)
BCHP_REGISTER(0x20a47aac, 32,  RW, XPT_RAVE, TPIT5_STATE2j)
BCHP_REGISTER(0x20a47ab0, 32,  RW, XPT_RAVE, TPIT5_STATE2k)
BCHP_REGISTER(0x20a47ab4, 32,  RW, XPT_RAVE, TPIT5_STATE2l)
BCHP_REGISTER(0x20a47ab8, 32,  RW, XPT_RAVE, TPIT5_STATE2m)
BCHP_REGISTER(0x20a47abc, 32,  RW, XPT_RAVE, TPIT5_STATE_RESERVED0)
BCHP_REGISTER(0x20a47ac0, 32,  RW, XPT_RAVE, TPIT5_STATE_RESERVED1)
BCHP_REGISTER(0x20a47ac4, 32,  RW, XPT_RAVE, TPIT5_STATE4)
BCHP_REGISTER(0x20a47ac8, 32,  RW, XPT_RAVE, TPIT5_STATE5)
BCHP_REGISTER(0x20a47acc, 32,  RW, XPT_RAVE, TPIT5_STATE6)
BCHP_REGISTER(0x20a47ad0, 32,  RW, XPT_RAVE, TPIT5_STATE7)
BCHP_REGISTER(0x20a47ad4, 32,  RW, XPT_RAVE, TPIT5_STATE8)
BCHP_REGISTER(0x20a47ad8, 32,  RW, XPT_RAVE, TPIT5_STATE9)
BCHP_REGISTER(0x20a47adc, 32,  RW, XPT_RAVE, TPIT6_CTRL1)
BCHP_REGISTER(0x20a47ae0, 32,  RW, XPT_RAVE, TPIT6_COR1)
BCHP_REGISTER(0x20a47ae4, 32,  RW, XPT_RAVE, TPIT6_TID)
BCHP_REGISTER(0x20a47ae8, 32,  RW, XPT_RAVE, TPIT6_TID2)
BCHP_REGISTER(0x20a47aec, 32,  RW, XPT_RAVE, TPIT6_STATE0)
BCHP_REGISTER(0x20a47af0, 32,  RW, XPT_RAVE, TPIT6_STATE1)
BCHP_REGISTER(0x20a47af4, 32,  RW, XPT_RAVE, TPIT6_STATE2)
BCHP_REGISTER(0x20a47af8, 32,  RW, XPT_RAVE, TPIT6_STATE2a)
BCHP_REGISTER(0x20a47afc, 32,  RW, XPT_RAVE, TPIT6_STATE2b)
BCHP_REGISTER(0x20a47b00, 32,  RW, XPT_RAVE, TPIT6_STATE2c)
BCHP_REGISTER(0x20a47b04, 32,  RW, XPT_RAVE, TPIT6_STATE2d)
BCHP_REGISTER(0x20a47b08, 32,  RW, XPT_RAVE, TPIT6_STATE2e)
BCHP_REGISTER(0x20a47b0c, 32,  RW, XPT_RAVE, TPIT6_STATE2f)
BCHP_REGISTER(0x20a47b10, 32,  RW, XPT_RAVE, TPIT6_STATE2g)
BCHP_REGISTER(0x20a47b14, 32,  RW, XPT_RAVE, TPIT6_STATE2h)
BCHP_REGISTER(0x20a47b18, 32,  RW, XPT_RAVE, TPIT6_STATE2i)
BCHP_REGISTER(0x20a47b1c, 32,  RW, XPT_RAVE, TPIT6_STATE2j)
BCHP_REGISTER(0x20a47b20, 32,  RW, XPT_RAVE, TPIT6_STATE2k)
BCHP_REGISTER(0x20a47b24, 32,  RW, XPT_RAVE, TPIT6_STATE2l)
BCHP_REGISTER(0x20a47b28, 32,  RW, XPT_RAVE, TPIT6_STATE2m)
BCHP_REGISTER(0x20a47b2c, 32,  RW, XPT_RAVE, TPIT6_STATE_RESERVED0)
BCHP_REGISTER(0x20a47b30, 32,  RW, XPT_RAVE, TPIT6_STATE_RESERVED1)
BCHP_REGISTER(0x20a47b34, 32,  RW, XPT_RAVE, TPIT6_STATE4)
BCHP_REGISTER(0x20a47b38, 32,  RW, XPT_RAVE, TPIT6_STATE5)
BCHP_REGISTER(0x20a47b3c, 32,  RW, XPT_RAVE, TPIT6_STATE6)
BCHP_REGISTER(0x20a47b40, 32,  RW, XPT_RAVE, TPIT6_STATE7)
BCHP_REGISTER(0x20a47b44, 32,  RW, XPT_RAVE, TPIT6_STATE8)
BCHP_REGISTER(0x20a47b48, 32,  RW, XPT_RAVE, TPIT6_STATE9)
BCHP_REGISTER(0x20a47b4c, 32,  RW, XPT_RAVE, TPIT7_CTRL1)
BCHP_REGISTER(0x20a47b50, 32,  RW, XPT_RAVE, TPIT7_COR1)
BCHP_REGISTER(0x20a47b54, 32,  RW, XPT_RAVE, TPIT7_TID)
BCHP_REGISTER(0x20a47b58, 32,  RW, XPT_RAVE, TPIT7_TID2)
BCHP_REGISTER(0x20a47b5c, 32,  RW, XPT_RAVE, TPIT7_STATE0)
BCHP_REGISTER(0x20a47b60, 32,  RW, XPT_RAVE, TPIT7_STATE1)
BCHP_REGISTER(0x20a47b64, 32,  RW, XPT_RAVE, TPIT7_STATE2)
BCHP_REGISTER(0x20a47b68, 32,  RW, XPT_RAVE, TPIT7_STATE2a)
BCHP_REGISTER(0x20a47b6c, 32,  RW, XPT_RAVE, TPIT7_STATE2b)
BCHP_REGISTER(0x20a47b70, 32,  RW, XPT_RAVE, TPIT7_STATE2c)
BCHP_REGISTER(0x20a47b74, 32,  RW, XPT_RAVE, TPIT7_STATE2d)
BCHP_REGISTER(0x20a47b78, 32,  RW, XPT_RAVE, TPIT7_STATE2e)
BCHP_REGISTER(0x20a47b7c, 32,  RW, XPT_RAVE, TPIT7_STATE2f)
BCHP_REGISTER(0x20a47b80, 32,  RW, XPT_RAVE, TPIT7_STATE2g)
BCHP_REGISTER(0x20a47b84, 32,  RW, XPT_RAVE, TPIT7_STATE2h)
BCHP_REGISTER(0x20a47b88, 32,  RW, XPT_RAVE, TPIT7_STATE2i)
BCHP_REGISTER(0x20a47b8c, 32,  RW, XPT_RAVE, TPIT7_STATE2j)
BCHP_REGISTER(0x20a47b90, 32,  RW, XPT_RAVE, TPIT7_STATE2k)
BCHP_REGISTER(0x20a47b94, 32,  RW, XPT_RAVE, TPIT7_STATE2l)
BCHP_REGISTER(0x20a47b98, 32,  RW, XPT_RAVE, TPIT7_STATE2m)
BCHP_REGISTER(0x20a47b9c, 32,  RW, XPT_RAVE, TPIT7_STATE_RESERVED0)
BCHP_REGISTER(0x20a47ba0, 32,  RW, XPT_RAVE, TPIT7_STATE_RESERVED1)
BCHP_REGISTER(0x20a47ba4, 32,  RW, XPT_RAVE, TPIT7_STATE4)
BCHP_REGISTER(0x20a47ba8, 32,  RW, XPT_RAVE, TPIT7_STATE5)
BCHP_REGISTER(0x20a47bac, 32,  RW, XPT_RAVE, TPIT7_STATE6)
BCHP_REGISTER(0x20a47bb0, 32,  RW, XPT_RAVE, TPIT7_STATE7)
BCHP_REGISTER(0x20a47bb4, 32,  RW, XPT_RAVE, TPIT7_STATE8)
BCHP_REGISTER(0x20a47bb8, 32,  RW, XPT_RAVE, TPIT7_STATE9)
BCHP_REGISTER(0x20a47bbc, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT0)
BCHP_REGISTER(0x20a47bc0, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT1)
BCHP_REGISTER(0x20a47bc4, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT2)
BCHP_REGISTER(0x20a47bc8, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT3)
BCHP_REGISTER(0x20a47bcc, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT4)
BCHP_REGISTER(0x20a47bd0, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT5)
BCHP_REGISTER(0x20a47bd4, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT6)
BCHP_REGISTER(0x20a47bd8, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT7)
BCHP_REGISTER(0x20a47bdc, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT8)
BCHP_REGISTER(0x20a47be0, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT9)
BCHP_REGISTER(0x20a47be4, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT10)
BCHP_REGISTER(0x20a47be8, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT11)
BCHP_REGISTER(0x20a47bec, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT12)
BCHP_REGISTER(0x20a47bf0, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT13)
BCHP_REGISTER(0x20a47bf4, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT14)
BCHP_REGISTER(0x20a47bf8, 32,  RW, XPT_RAVE, TPIT_STATE_CONTEXT15)
BCHP_REGISTER(0x20a4f000, 32,  RO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a4f004, 32,  RO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a4f008, 32,  RO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a4f00c, 32,  RO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a4f010, 32,  WO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a4f014, 32,  WO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a4f018, 32,  WO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a4f01c, 32,  WO, XPT_RAVE_CPU_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a4f020, 32,  RO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a4f024, 32,  RO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a4f028, 32,  RO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a4f02c, 32,  RO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a4f030, 32,  WO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a4f034, 32,  WO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a4f038, 32,  WO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a4f03c, 32,  WO, XPT_RAVE_PCI_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a4f040, 32,  RO, XPT_RAVE_MISC_L2_INTR, CPU_STATUS_MISC)
BCHP_REGISTER(0x20a4f044, 32,  WO, XPT_RAVE_MISC_L2_INTR, CPU_SET_MISC)
BCHP_REGISTER(0x20a4f048, 32,  WO, XPT_RAVE_MISC_L2_INTR, CPU_CLEAR_MISC)
BCHP_REGISTER(0x20a4f04c, 32,  RO, XPT_RAVE_MISC_L2_INTR, CPU_MASK_STATUS_MISC)
BCHP_REGISTER(0x20a4f050, 32,  WO, XPT_RAVE_MISC_L2_INTR, CPU_MASK_SET_MISC)
BCHP_REGISTER(0x20a4f054, 32,  WO, XPT_RAVE_MISC_L2_INTR, CPU_MASK_CLEAR_MISC)
BCHP_REGISTER(0x20a4f058, 32,  RO, XPT_RAVE_MISC_L2_INTR, PCI_STATUS_MISC)
BCHP_REGISTER(0x20a4f05c, 32,  WO, XPT_RAVE_MISC_L2_INTR, PCI_SET_MISC)
BCHP_REGISTER(0x20a4f060, 32,  WO, XPT_RAVE_MISC_L2_INTR, PCI_CLEAR_MISC)
BCHP_REGISTER(0x20a4f064, 32,  RO, XPT_RAVE_MISC_L2_INTR, PCI_MASK_STATUS_MISC)
BCHP_REGISTER(0x20a4f068, 32,  WO, XPT_RAVE_MISC_L2_INTR, PCI_MASK_SET_MISC)
BCHP_REGISTER(0x20a4f06c, 32,  WO, XPT_RAVE_MISC_L2_INTR, PCI_MASK_CLEAR_MISC)
BCHP_REGISTER(0x20a4f080, 32,  RO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f084, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f088, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f08c, 32,  RO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f090, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f094, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f098, 32,  RO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f09c, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f0a0, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f0a4, 32,  RO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f0a8, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f0ac, 32,  WO, XPT_RAVE_EMU_ERROR_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f100, 32,  RO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f104, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f108, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f10c, 32,  RO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f110, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f114, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f118, 32,  RO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f11c, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f120, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f124, 32,  RO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f128, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f12c, 32,  WO, XPT_RAVE_PUSI_ERROR_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f180, 32,  RO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f184, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f188, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f18c, 32,  RO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f190, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f194, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f198, 32,  RO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f19c, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f1a0, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f1a4, 32,  RO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f1a8, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f1ac, 32,  WO, XPT_RAVE_TEI_ERROR_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f200, 32,  RO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f204, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f208, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f20c, 32,  RO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f210, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f214, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f218, 32,  RO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f21c, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f220, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f224, 32,  RO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f228, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f22c, 32,  WO, XPT_RAVE_CC_ERROR_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f280, 32,  RO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f284, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f288, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f28c, 32,  RO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f290, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f294, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f298, 32,  RO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f29c, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f2a0, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f2a4, 32,  RO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f2a8, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f2ac, 32,  WO, XPT_RAVE_CDB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f300, 32,  RO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f304, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f308, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f30c, 32,  RO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f310, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f314, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f318, 32,  RO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f31c, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f320, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f324, 32,  RO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f328, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f32c, 32,  WO, XPT_RAVE_ITB_OVERFLOW_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f380, 32,  RO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f384, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f388, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f38c, 32,  RO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f390, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f394, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f398, 32,  RO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f39c, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f3a0, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f3a4, 32,  RO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f3a8, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f3ac, 32,  WO, XPT_RAVE_SPLICE_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f400, 32,  RO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f404, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f408, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f40c, 32,  RO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f410, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f414, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f418, 32,  RO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f41c, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f420, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f424, 32,  RO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f428, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f42c, 32,  WO, XPT_RAVE_LAST_CMD_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f480, 32,  RO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f484, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f488, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f48c, 32,  RO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f490, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f494, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f498, 32,  RO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f49c, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f4a0, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f4a4, 32,  RO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f4a8, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f4ac, 32,  WO, XPT_RAVE_CDB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f500, 32,  RO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f504, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f508, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f50c, 32,  RO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f510, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f514, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f518, 32,  RO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f51c, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f520, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f524, 32,  RO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f528, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f52c, 32,  WO, XPT_RAVE_CDB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f580, 32,  RO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f584, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f588, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f58c, 32,  RO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f590, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f594, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f598, 32,  RO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f59c, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f5a0, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f5a4, 32,  RO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f5a8, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f5ac, 32,  WO, XPT_RAVE_ITB_LOWER_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f600, 32,  RO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f604, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f608, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f60c, 32,  RO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f610, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f614, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f618, 32,  RO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f61c, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f620, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f624, 32,  RO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f628, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f62c, 32,  WO, XPT_RAVE_ITB_UPPER_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f680, 32,  RO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f684, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f688, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f68c, 32,  RO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f690, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f694, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f698, 32,  RO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f69c, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f6a0, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f6a4, 32,  RO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f6a8, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f6ac, 32,  WO, XPT_RAVE_CDB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f700, 32,  RO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f704, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f708, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f70c, 32,  RO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f710, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f714, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f718, 32,  RO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f71c, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f720, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f724, 32,  RO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f728, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f72c, 32,  WO, XPT_RAVE_ITB_MIN_DEPTH_THRESH_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f780, 32,  RO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f784, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f788, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f78c, 32,  RO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f790, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f794, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f798, 32,  RO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f79c, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f7a0, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f7a4, 32,  RO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f7a8, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f7ac, 32,  WO, XPT_RAVE_TSIO_DMA_END_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f800, 32,  RO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4f804, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_SET_0_31)
BCHP_REGISTER(0x20a4f808, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4f80c, 32,  RO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f810, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f814, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4f818, 32,  RO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4f81c, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_SET_0_31)
BCHP_REGISTER(0x20a4f820, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4f824, 32,  RO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4f828, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4f82c, 32,  WO, XPT_RAVE_FW_GENERIC_1_CX00_31_L2_INTR, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4ff80, 32,  RO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_STATUS_0_31)
BCHP_REGISTER(0x20a4ff84, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_SET_0_31)
BCHP_REGISTER(0x20a4ff88, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_CLEAR_0_31)
BCHP_REGISTER(0x20a4ff8c, 32,  RO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4ff90, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_MASK_SET_0_31)
BCHP_REGISTER(0x20a4ff94, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, CPU_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a4ff98, 32,  RO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_STATUS_0_31)
BCHP_REGISTER(0x20a4ff9c, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_SET_0_31)
BCHP_REGISTER(0x20a4ffa0, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_CLEAR_0_31)
BCHP_REGISTER(0x20a4ffa4, 32,  RO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_MASK_STATUS_0_31)
BCHP_REGISTER(0x20a4ffa8, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_MASK_SET_0_31)
BCHP_REGISTER(0x20a4ffac, 32,  WO, XPT_RAVE_TO_SCPU_L2_INTR_0_31, PCI_MASK_CLEAR_0_31)
BCHP_REGISTER(0x20a68000, 32,  RO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a68004, 32,  RO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a68008, 32,  RO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a6800c, 32,  RO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a68010, 32,  WO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a68014, 32,  WO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a68018, 32,  WO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a6801c, 32,  WO, XPT_WDMA_PCI_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a68020, 32,  RO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a68024, 32,  RO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a68028, 32,  RO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a6802c, 32,  RO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a68030, 32,  WO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a68034, 32,  WO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a68038, 32,  WO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a6803c, 32,  WO, XPT_WDMA_CPU_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a68040, 32,  RO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a68044, 32,  RO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a68048, 32,  RO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a6804c, 32,  RO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a68050, 32,  WO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a68054, 32,  WO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a68058, 32,  WO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a6805c, 32,  WO, XPT_WDMA_SCPU_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a68100, 32,  RO, XPT_WDMA_BTP_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a68104, 32,  WO, XPT_WDMA_BTP_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a68108, 32,  WO, XPT_WDMA_BTP_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a6810c, 32,  RO, XPT_WDMA_BTP_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a68110, 32,  WO, XPT_WDMA_BTP_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a68114, 32,  WO, XPT_WDMA_BTP_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a68118, 32,  RO, XPT_WDMA_BTP_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a6811c, 32,  WO, XPT_WDMA_BTP_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a68120, 32,  WO, XPT_WDMA_BTP_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a68124, 32,  RO, XPT_WDMA_BTP_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a68128, 32,  WO, XPT_WDMA_BTP_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a6812c, 32,  WO, XPT_WDMA_BTP_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a68130, 32,  RO, XPT_WDMA_BTP_INTR_L2, SCPU_STATUS)
BCHP_REGISTER(0x20a68134, 32,  WO, XPT_WDMA_BTP_INTR_L2, SCPU_SET)
BCHP_REGISTER(0x20a68138, 32,  WO, XPT_WDMA_BTP_INTR_L2, SCPU_CLEAR)
BCHP_REGISTER(0x20a6813c, 32,  RO, XPT_WDMA_BTP_INTR_L2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x20a68140, 32,  WO, XPT_WDMA_BTP_INTR_L2, SCPU_MASK_SET)
BCHP_REGISTER(0x20a68144, 32,  WO, XPT_WDMA_BTP_INTR_L2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x20a68200, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a68204, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a68208, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a6820c, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a68210, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a68214, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a68218, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a6821c, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a68220, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a68224, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a68228, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a6822c, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a68230, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_STATUS)
BCHP_REGISTER(0x20a68234, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_SET)
BCHP_REGISTER(0x20a68238, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_CLEAR)
BCHP_REGISTER(0x20a6823c, 32,  RO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x20a68240, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_MASK_SET)
BCHP_REGISTER(0x20a68244, 32,  WO, XPT_WDMA_OVERFLOW_INTR_L2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x20a68300, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a68304, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a68308, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a6830c, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a68310, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a68314, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a68318, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a6831c, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a68320, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a68324, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a68328, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a6832c, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a68330, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_STATUS)
BCHP_REGISTER(0x20a68334, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_SET)
BCHP_REGISTER(0x20a68338, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_CLEAR)
BCHP_REGISTER(0x20a6833c, 32,  RO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x20a68340, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_MASK_SET)
BCHP_REGISTER(0x20a68344, 32,  WO, XPT_WDMA_DESC_DONE_INTR_L2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x20a69000, 32,  RW, XPT_WDMA_REGS, RUN_SET_CLEAR)
BCHP_REGISTER(0x20a69004, 32,  RW, XPT_WDMA_REGS, WAKE_SET)
BCHP_REGISTER(0x20a69008, 32,  RW, XPT_WDMA_REGS, RBUF_MODE_CONFIG)
BCHP_REGISTER(0x20a6900c, 32,  RW, XPT_WDMA_REGS, TIMESTAMP_MODE_CONFIG)
BCHP_REGISTER(0x20a69010, 32,  RW, XPT_WDMA_REGS, MATCH_RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a69014, 32,  RW, XPT_WDMA_REGS, LDL_MODE_CONFIG)
BCHP_REGISTER(0x20a69018, 32,  RW, XPT_WDMA_REGS, DMQ_RESET_CMD)
BCHP_REGISTER(0x20a6901c, 32,  RW, XPT_WDMA_REGS, DMQ_PUSH_CMD)
BCHP_REGISTER(0x20a69020, 32,  RO, XPT_WDMA_REGS, RUN_BITS_0_31)
BCHP_REGISTER(0x20a69024, 32,  RO, XPT_WDMA_REGS, WAKE_BITS_0_31)
BCHP_REGISTER(0x20a69028, 32,  RO, XPT_WDMA_REGS, RBUF_MODE_BITS_0_31)
BCHP_REGISTER(0x20a6902c, 32,  RO, XPT_WDMA_REGS, TIMESTAMP_MODE_BITS_0_31)
BCHP_REGISTER(0x20a69030, 32,  RO, XPT_WDMA_REGS, LDL_MODE_BITS_0_31)
BCHP_REGISTER(0x20a69034, 32,  RO, XPT_WDMA_REGS, MATCH_RUN_VERSION_BITS_0_31)
BCHP_REGISTER(0x20a69038, 32,  RO, XPT_WDMA_REGS, SLEEP_STATUS_0_31)
BCHP_REGISTER(0x20a6903c, 32,  RO, XPT_WDMA_REGS, CONTEXT_VALID_0_31)
BCHP_REGISTER(0x20a69040, 32,  RW, XPT_WDMA_REGS, DATA_STALL_TIMEOUT)
BCHP_REGISTER(0x20a69044, 32,  RW, XPT_WDMA_REGS, SPECULATIVE_READ_ENABLE)
BCHP_REGISTER(0x20a69048, 32,  RO, XPT_WDMA_REGS, OUTSTANDING_READ_FLAG_0_31)
BCHP_REGISTER(0x20a6904c, 32,  RO, XPT_WDMA_REGS, OUTSTANDING_WRITE_FLAG_0_31)
BCHP_REGISTER(0x20a69050, 32,  RW, XPT_WDMA_REGS, OUTSTANDING_READ_FLAG_CLEAR)
BCHP_REGISTER(0x20a69054, 32,  RW, XPT_WDMA_REGS, OUTSTANDING_WRITE_FLAG_CLEAR)
BCHP_REGISTER(0x20a69058, 32,  RO, XPT_WDMA_REGS, DRR_STATE)
BCHP_REGISTER(0x20a6905c, 32,  RO, XPT_WDMA_REGS, DRC_STATE)
BCHP_REGISTER(0x20a69060, 32,  RW, XPT_WDMA_REGS, DAP_STATE)
BCHP_REGISTER(0x20a69064, 32,  RO, XPT_WDMA_REGS, RPT_STATE)
BCHP_REGISTER(0x20a69068, 32,  RO, XPT_WDMA_REGS, READY_ACCEPT_PROBE)
BCHP_REGISTER(0x20a6a000, 32,  RW, XPT_WDMA_CH0, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a004, 32,  RW, XPT_WDMA_CH0, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a008, 32,  RW, XPT_WDMA_CH0, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a00c, 32,  RW, XPT_WDMA_CH0, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a010, 32,  RW, XPT_WDMA_CH0, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a014, 32,  RW, XPT_WDMA_CH0, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a018, 32,  RO, XPT_WDMA_CH0, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a01c, 32,  RW, XPT_WDMA_CH0, DATA_CONTROL)
BCHP_REGISTER(0x20a6a080, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a084, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a088, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a08c, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a090, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a094, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a098, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a09c, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a0a0, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a0a4, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a0a8, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a0ac, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a0b0, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a0b4, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a0b8, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a0bc, 32,  RW, XPT_WDMA_CH0, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a0c0, 32,  RW, XPT_WDMA_CH0, DMQ_0_0)
BCHP_REGISTER(0x20a6a0c4, 32,  RW, XPT_WDMA_CH0, DMQ_0_1)
BCHP_REGISTER(0x20a6a0c8, 32,  RW, XPT_WDMA_CH0, DMQ_0_2)
BCHP_REGISTER(0x20a6a0cc, 32,  RW, XPT_WDMA_CH0, DMQ_0_3)
BCHP_REGISTER(0x20a6a0d0, 32,  RW, XPT_WDMA_CH0, DMQ_1_0)
BCHP_REGISTER(0x20a6a0d4, 32,  RW, XPT_WDMA_CH0, DMQ_1_1)
BCHP_REGISTER(0x20a6a0d8, 32,  RW, XPT_WDMA_CH0, DMQ_1_2)
BCHP_REGISTER(0x20a6a0dc, 32,  RW, XPT_WDMA_CH0, DMQ_1_3)
BCHP_REGISTER(0x20a6a0e0, 32,  RW, XPT_WDMA_CH0, DMQ_2_0)
BCHP_REGISTER(0x20a6a0e4, 32,  RW, XPT_WDMA_CH0, DMQ_2_1)
BCHP_REGISTER(0x20a6a0e8, 32,  RW, XPT_WDMA_CH0, DMQ_2_2)
BCHP_REGISTER(0x20a6a0ec, 32,  RW, XPT_WDMA_CH0, DMQ_2_3)
BCHP_REGISTER(0x20a6a0f0, 32,  RW, XPT_WDMA_CH0, DMQ_3_0)
BCHP_REGISTER(0x20a6a0f4, 32,  RW, XPT_WDMA_CH0, DMQ_3_1)
BCHP_REGISTER(0x20a6a0f8, 32,  RW, XPT_WDMA_CH0, DMQ_3_2)
BCHP_REGISTER(0x20a6a0fc, 32,  RW, XPT_WDMA_CH0, DMQ_3_3)
BCHP_REGISTER(0x20a6a100, 32,  RW, XPT_WDMA_CH1, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a104, 32,  RW, XPT_WDMA_CH1, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a108, 32,  RW, XPT_WDMA_CH1, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a10c, 32,  RW, XPT_WDMA_CH1, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a110, 32,  RW, XPT_WDMA_CH1, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a114, 32,  RW, XPT_WDMA_CH1, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a118, 32,  RO, XPT_WDMA_CH1, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a11c, 32,  RW, XPT_WDMA_CH1, DATA_CONTROL)
BCHP_REGISTER(0x20a6a180, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a184, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a188, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a18c, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a190, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a194, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a198, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a19c, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a1a0, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a1a4, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a1a8, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a1ac, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a1b0, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a1b4, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a1b8, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a1bc, 32,  RW, XPT_WDMA_CH1, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a1c0, 32,  RW, XPT_WDMA_CH1, DMQ_0_0)
BCHP_REGISTER(0x20a6a1c4, 32,  RW, XPT_WDMA_CH1, DMQ_0_1)
BCHP_REGISTER(0x20a6a1c8, 32,  RW, XPT_WDMA_CH1, DMQ_0_2)
BCHP_REGISTER(0x20a6a1cc, 32,  RW, XPT_WDMA_CH1, DMQ_0_3)
BCHP_REGISTER(0x20a6a1d0, 32,  RW, XPT_WDMA_CH1, DMQ_1_0)
BCHP_REGISTER(0x20a6a1d4, 32,  RW, XPT_WDMA_CH1, DMQ_1_1)
BCHP_REGISTER(0x20a6a1d8, 32,  RW, XPT_WDMA_CH1, DMQ_1_2)
BCHP_REGISTER(0x20a6a1dc, 32,  RW, XPT_WDMA_CH1, DMQ_1_3)
BCHP_REGISTER(0x20a6a1e0, 32,  RW, XPT_WDMA_CH1, DMQ_2_0)
BCHP_REGISTER(0x20a6a1e4, 32,  RW, XPT_WDMA_CH1, DMQ_2_1)
BCHP_REGISTER(0x20a6a1e8, 32,  RW, XPT_WDMA_CH1, DMQ_2_2)
BCHP_REGISTER(0x20a6a1ec, 32,  RW, XPT_WDMA_CH1, DMQ_2_3)
BCHP_REGISTER(0x20a6a1f0, 32,  RW, XPT_WDMA_CH1, DMQ_3_0)
BCHP_REGISTER(0x20a6a1f4, 32,  RW, XPT_WDMA_CH1, DMQ_3_1)
BCHP_REGISTER(0x20a6a1f8, 32,  RW, XPT_WDMA_CH1, DMQ_3_2)
BCHP_REGISTER(0x20a6a1fc, 32,  RW, XPT_WDMA_CH1, DMQ_3_3)
BCHP_REGISTER(0x20a6a200, 32,  RW, XPT_WDMA_CH2, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a204, 32,  RW, XPT_WDMA_CH2, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a208, 32,  RW, XPT_WDMA_CH2, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a20c, 32,  RW, XPT_WDMA_CH2, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a210, 32,  RW, XPT_WDMA_CH2, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a214, 32,  RW, XPT_WDMA_CH2, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a218, 32,  RO, XPT_WDMA_CH2, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a21c, 32,  RW, XPT_WDMA_CH2, DATA_CONTROL)
BCHP_REGISTER(0x20a6a280, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a284, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a288, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a28c, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a290, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a294, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a298, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a29c, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a2a0, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a2a4, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a2a8, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a2ac, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a2b0, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a2b4, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a2b8, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a2bc, 32,  RW, XPT_WDMA_CH2, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a2c0, 32,  RW, XPT_WDMA_CH2, DMQ_0_0)
BCHP_REGISTER(0x20a6a2c4, 32,  RW, XPT_WDMA_CH2, DMQ_0_1)
BCHP_REGISTER(0x20a6a2c8, 32,  RW, XPT_WDMA_CH2, DMQ_0_2)
BCHP_REGISTER(0x20a6a2cc, 32,  RW, XPT_WDMA_CH2, DMQ_0_3)
BCHP_REGISTER(0x20a6a2d0, 32,  RW, XPT_WDMA_CH2, DMQ_1_0)
BCHP_REGISTER(0x20a6a2d4, 32,  RW, XPT_WDMA_CH2, DMQ_1_1)
BCHP_REGISTER(0x20a6a2d8, 32,  RW, XPT_WDMA_CH2, DMQ_1_2)
BCHP_REGISTER(0x20a6a2dc, 32,  RW, XPT_WDMA_CH2, DMQ_1_3)
BCHP_REGISTER(0x20a6a2e0, 32,  RW, XPT_WDMA_CH2, DMQ_2_0)
BCHP_REGISTER(0x20a6a2e4, 32,  RW, XPT_WDMA_CH2, DMQ_2_1)
BCHP_REGISTER(0x20a6a2e8, 32,  RW, XPT_WDMA_CH2, DMQ_2_2)
BCHP_REGISTER(0x20a6a2ec, 32,  RW, XPT_WDMA_CH2, DMQ_2_3)
BCHP_REGISTER(0x20a6a2f0, 32,  RW, XPT_WDMA_CH2, DMQ_3_0)
BCHP_REGISTER(0x20a6a2f4, 32,  RW, XPT_WDMA_CH2, DMQ_3_1)
BCHP_REGISTER(0x20a6a2f8, 32,  RW, XPT_WDMA_CH2, DMQ_3_2)
BCHP_REGISTER(0x20a6a2fc, 32,  RW, XPT_WDMA_CH2, DMQ_3_3)
BCHP_REGISTER(0x20a6a300, 32,  RW, XPT_WDMA_CH3, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a304, 32,  RW, XPT_WDMA_CH3, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a308, 32,  RW, XPT_WDMA_CH3, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a30c, 32,  RW, XPT_WDMA_CH3, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a310, 32,  RW, XPT_WDMA_CH3, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a314, 32,  RW, XPT_WDMA_CH3, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a318, 32,  RO, XPT_WDMA_CH3, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a31c, 32,  RW, XPT_WDMA_CH3, DATA_CONTROL)
BCHP_REGISTER(0x20a6a380, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a384, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a388, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a38c, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a390, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a394, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a398, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a39c, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a3a0, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a3a4, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a3a8, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a3ac, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a3b0, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a3b4, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a3b8, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a3bc, 32,  RW, XPT_WDMA_CH3, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a3c0, 32,  RW, XPT_WDMA_CH3, DMQ_0_0)
BCHP_REGISTER(0x20a6a3c4, 32,  RW, XPT_WDMA_CH3, DMQ_0_1)
BCHP_REGISTER(0x20a6a3c8, 32,  RW, XPT_WDMA_CH3, DMQ_0_2)
BCHP_REGISTER(0x20a6a3cc, 32,  RW, XPT_WDMA_CH3, DMQ_0_3)
BCHP_REGISTER(0x20a6a3d0, 32,  RW, XPT_WDMA_CH3, DMQ_1_0)
BCHP_REGISTER(0x20a6a3d4, 32,  RW, XPT_WDMA_CH3, DMQ_1_1)
BCHP_REGISTER(0x20a6a3d8, 32,  RW, XPT_WDMA_CH3, DMQ_1_2)
BCHP_REGISTER(0x20a6a3dc, 32,  RW, XPT_WDMA_CH3, DMQ_1_3)
BCHP_REGISTER(0x20a6a3e0, 32,  RW, XPT_WDMA_CH3, DMQ_2_0)
BCHP_REGISTER(0x20a6a3e4, 32,  RW, XPT_WDMA_CH3, DMQ_2_1)
BCHP_REGISTER(0x20a6a3e8, 32,  RW, XPT_WDMA_CH3, DMQ_2_2)
BCHP_REGISTER(0x20a6a3ec, 32,  RW, XPT_WDMA_CH3, DMQ_2_3)
BCHP_REGISTER(0x20a6a3f0, 32,  RW, XPT_WDMA_CH3, DMQ_3_0)
BCHP_REGISTER(0x20a6a3f4, 32,  RW, XPT_WDMA_CH3, DMQ_3_1)
BCHP_REGISTER(0x20a6a3f8, 32,  RW, XPT_WDMA_CH3, DMQ_3_2)
BCHP_REGISTER(0x20a6a3fc, 32,  RW, XPT_WDMA_CH3, DMQ_3_3)
BCHP_REGISTER(0x20a6a400, 32,  RW, XPT_WDMA_CH4, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a404, 32,  RW, XPT_WDMA_CH4, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a408, 32,  RW, XPT_WDMA_CH4, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a40c, 32,  RW, XPT_WDMA_CH4, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a410, 32,  RW, XPT_WDMA_CH4, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a414, 32,  RW, XPT_WDMA_CH4, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a418, 32,  RO, XPT_WDMA_CH4, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a41c, 32,  RW, XPT_WDMA_CH4, DATA_CONTROL)
BCHP_REGISTER(0x20a6a480, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a484, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a488, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a48c, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a490, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a494, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a498, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a49c, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a4a0, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a4a4, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a4a8, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a4ac, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a4b0, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a4b4, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a4b8, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a4bc, 32,  RW, XPT_WDMA_CH4, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a4c0, 32,  RW, XPT_WDMA_CH4, DMQ_0_0)
BCHP_REGISTER(0x20a6a4c4, 32,  RW, XPT_WDMA_CH4, DMQ_0_1)
BCHP_REGISTER(0x20a6a4c8, 32,  RW, XPT_WDMA_CH4, DMQ_0_2)
BCHP_REGISTER(0x20a6a4cc, 32,  RW, XPT_WDMA_CH4, DMQ_0_3)
BCHP_REGISTER(0x20a6a4d0, 32,  RW, XPT_WDMA_CH4, DMQ_1_0)
BCHP_REGISTER(0x20a6a4d4, 32,  RW, XPT_WDMA_CH4, DMQ_1_1)
BCHP_REGISTER(0x20a6a4d8, 32,  RW, XPT_WDMA_CH4, DMQ_1_2)
BCHP_REGISTER(0x20a6a4dc, 32,  RW, XPT_WDMA_CH4, DMQ_1_3)
BCHP_REGISTER(0x20a6a4e0, 32,  RW, XPT_WDMA_CH4, DMQ_2_0)
BCHP_REGISTER(0x20a6a4e4, 32,  RW, XPT_WDMA_CH4, DMQ_2_1)
BCHP_REGISTER(0x20a6a4e8, 32,  RW, XPT_WDMA_CH4, DMQ_2_2)
BCHP_REGISTER(0x20a6a4ec, 32,  RW, XPT_WDMA_CH4, DMQ_2_3)
BCHP_REGISTER(0x20a6a4f0, 32,  RW, XPT_WDMA_CH4, DMQ_3_0)
BCHP_REGISTER(0x20a6a4f4, 32,  RW, XPT_WDMA_CH4, DMQ_3_1)
BCHP_REGISTER(0x20a6a4f8, 32,  RW, XPT_WDMA_CH4, DMQ_3_2)
BCHP_REGISTER(0x20a6a4fc, 32,  RW, XPT_WDMA_CH4, DMQ_3_3)
BCHP_REGISTER(0x20a6a500, 32,  RW, XPT_WDMA_CH5, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a504, 32,  RW, XPT_WDMA_CH5, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a508, 32,  RW, XPT_WDMA_CH5, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a50c, 32,  RW, XPT_WDMA_CH5, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a510, 32,  RW, XPT_WDMA_CH5, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a514, 32,  RW, XPT_WDMA_CH5, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a518, 32,  RO, XPT_WDMA_CH5, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a51c, 32,  RW, XPT_WDMA_CH5, DATA_CONTROL)
BCHP_REGISTER(0x20a6a580, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a584, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a588, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a58c, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a590, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a594, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a598, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a59c, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a5a0, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a5a4, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a5a8, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a5ac, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a5b0, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a5b4, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a5b8, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a5bc, 32,  RW, XPT_WDMA_CH5, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a5c0, 32,  RW, XPT_WDMA_CH5, DMQ_0_0)
BCHP_REGISTER(0x20a6a5c4, 32,  RW, XPT_WDMA_CH5, DMQ_0_1)
BCHP_REGISTER(0x20a6a5c8, 32,  RW, XPT_WDMA_CH5, DMQ_0_2)
BCHP_REGISTER(0x20a6a5cc, 32,  RW, XPT_WDMA_CH5, DMQ_0_3)
BCHP_REGISTER(0x20a6a5d0, 32,  RW, XPT_WDMA_CH5, DMQ_1_0)
BCHP_REGISTER(0x20a6a5d4, 32,  RW, XPT_WDMA_CH5, DMQ_1_1)
BCHP_REGISTER(0x20a6a5d8, 32,  RW, XPT_WDMA_CH5, DMQ_1_2)
BCHP_REGISTER(0x20a6a5dc, 32,  RW, XPT_WDMA_CH5, DMQ_1_3)
BCHP_REGISTER(0x20a6a5e0, 32,  RW, XPT_WDMA_CH5, DMQ_2_0)
BCHP_REGISTER(0x20a6a5e4, 32,  RW, XPT_WDMA_CH5, DMQ_2_1)
BCHP_REGISTER(0x20a6a5e8, 32,  RW, XPT_WDMA_CH5, DMQ_2_2)
BCHP_REGISTER(0x20a6a5ec, 32,  RW, XPT_WDMA_CH5, DMQ_2_3)
BCHP_REGISTER(0x20a6a5f0, 32,  RW, XPT_WDMA_CH5, DMQ_3_0)
BCHP_REGISTER(0x20a6a5f4, 32,  RW, XPT_WDMA_CH5, DMQ_3_1)
BCHP_REGISTER(0x20a6a5f8, 32,  RW, XPT_WDMA_CH5, DMQ_3_2)
BCHP_REGISTER(0x20a6a5fc, 32,  RW, XPT_WDMA_CH5, DMQ_3_3)
BCHP_REGISTER(0x20a6a600, 32,  RW, XPT_WDMA_CH6, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a604, 32,  RW, XPT_WDMA_CH6, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a608, 32,  RW, XPT_WDMA_CH6, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a60c, 32,  RW, XPT_WDMA_CH6, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a610, 32,  RW, XPT_WDMA_CH6, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a614, 32,  RW, XPT_WDMA_CH6, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a618, 32,  RO, XPT_WDMA_CH6, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a61c, 32,  RW, XPT_WDMA_CH6, DATA_CONTROL)
BCHP_REGISTER(0x20a6a680, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a684, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a688, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a68c, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a690, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a694, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a698, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a69c, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a6a0, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a6a4, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a6a8, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a6ac, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a6b0, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a6b4, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a6b8, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a6bc, 32,  RW, XPT_WDMA_CH6, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a6c0, 32,  RW, XPT_WDMA_CH6, DMQ_0_0)
BCHP_REGISTER(0x20a6a6c4, 32,  RW, XPT_WDMA_CH6, DMQ_0_1)
BCHP_REGISTER(0x20a6a6c8, 32,  RW, XPT_WDMA_CH6, DMQ_0_2)
BCHP_REGISTER(0x20a6a6cc, 32,  RW, XPT_WDMA_CH6, DMQ_0_3)
BCHP_REGISTER(0x20a6a6d0, 32,  RW, XPT_WDMA_CH6, DMQ_1_0)
BCHP_REGISTER(0x20a6a6d4, 32,  RW, XPT_WDMA_CH6, DMQ_1_1)
BCHP_REGISTER(0x20a6a6d8, 32,  RW, XPT_WDMA_CH6, DMQ_1_2)
BCHP_REGISTER(0x20a6a6dc, 32,  RW, XPT_WDMA_CH6, DMQ_1_3)
BCHP_REGISTER(0x20a6a6e0, 32,  RW, XPT_WDMA_CH6, DMQ_2_0)
BCHP_REGISTER(0x20a6a6e4, 32,  RW, XPT_WDMA_CH6, DMQ_2_1)
BCHP_REGISTER(0x20a6a6e8, 32,  RW, XPT_WDMA_CH6, DMQ_2_2)
BCHP_REGISTER(0x20a6a6ec, 32,  RW, XPT_WDMA_CH6, DMQ_2_3)
BCHP_REGISTER(0x20a6a6f0, 32,  RW, XPT_WDMA_CH6, DMQ_3_0)
BCHP_REGISTER(0x20a6a6f4, 32,  RW, XPT_WDMA_CH6, DMQ_3_1)
BCHP_REGISTER(0x20a6a6f8, 32,  RW, XPT_WDMA_CH6, DMQ_3_2)
BCHP_REGISTER(0x20a6a6fc, 32,  RW, XPT_WDMA_CH6, DMQ_3_3)
BCHP_REGISTER(0x20a6a700, 32,  RW, XPT_WDMA_CH7, FIRST_DESC_ADDR)
BCHP_REGISTER(0x20a6a704, 32,  RW, XPT_WDMA_CH7, NEXT_DESC_ADDR)
BCHP_REGISTER(0x20a6a708, 32,  RW, XPT_WDMA_CH7, COMPLETED_DESC_ADDRESS)
BCHP_REGISTER(0x20a6a70c, 32,  RW, XPT_WDMA_CH7, BTP_PACKET_GROUP_ID)
BCHP_REGISTER(0x20a6a710, 32,  RW, XPT_WDMA_CH7, RUN_VERSION_CONFIG)
BCHP_REGISTER(0x20a6a714, 32,  RW, XPT_WDMA_CH7, OVERFLOW_REASONS)
BCHP_REGISTER(0x20a6a718, 32,  RO, XPT_WDMA_CH7, DMQ_CONTROL_STRUCT)
BCHP_REGISTER(0x20a6a71c, 32,  RW, XPT_WDMA_CH7, DATA_CONTROL)
BCHP_REGISTER(0x20a6a780, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_BASE_PTR_HI)
BCHP_REGISTER(0x20a6a784, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_BASE_PTR)
BCHP_REGISTER(0x20a6a788, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_END_PTR_HI)
BCHP_REGISTER(0x20a6a78c, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_END_PTR)
BCHP_REGISTER(0x20a6a790, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_RD_PTR_HI)
BCHP_REGISTER(0x20a6a794, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_RD_PTR)
BCHP_REGISTER(0x20a6a798, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_WR_PTR_HI)
BCHP_REGISTER(0x20a6a79c, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_WR_PTR)
BCHP_REGISTER(0x20a6a7a0, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_VALID_PTR_HI)
BCHP_REGISTER(0x20a6a7a4, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_VALID_PTR)
BCHP_REGISTER(0x20a6a7a8, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_LOWER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a7ac, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_LOWER_THRESHOLD)
BCHP_REGISTER(0x20a6a7b0, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_UPPER_THRESHOLD_HI)
BCHP_REGISTER(0x20a6a7b4, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_UPPER_THRESHOLD)
BCHP_REGISTER(0x20a6a7b8, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_STATUS)
BCHP_REGISTER(0x20a6a7bc, 32,  RW, XPT_WDMA_CH7, DRAM_BUFF_CONTROL)
BCHP_REGISTER(0x20a6a7c0, 32,  RW, XPT_WDMA_CH7, DMQ_0_0)
BCHP_REGISTER(0x20a6a7c4, 32,  RW, XPT_WDMA_CH7, DMQ_0_1)
BCHP_REGISTER(0x20a6a7c8, 32,  RW, XPT_WDMA_CH7, DMQ_0_2)
BCHP_REGISTER(0x20a6a7cc, 32,  RW, XPT_WDMA_CH7, DMQ_0_3)
BCHP_REGISTER(0x20a6a7d0, 32,  RW, XPT_WDMA_CH7, DMQ_1_0)
BCHP_REGISTER(0x20a6a7d4, 32,  RW, XPT_WDMA_CH7, DMQ_1_1)
BCHP_REGISTER(0x20a6a7d8, 32,  RW, XPT_WDMA_CH7, DMQ_1_2)
BCHP_REGISTER(0x20a6a7dc, 32,  RW, XPT_WDMA_CH7, DMQ_1_3)
BCHP_REGISTER(0x20a6a7e0, 32,  RW, XPT_WDMA_CH7, DMQ_2_0)
BCHP_REGISTER(0x20a6a7e4, 32,  RW, XPT_WDMA_CH7, DMQ_2_1)
BCHP_REGISTER(0x20a6a7e8, 32,  RW, XPT_WDMA_CH7, DMQ_2_2)
BCHP_REGISTER(0x20a6a7ec, 32,  RW, XPT_WDMA_CH7, DMQ_2_3)
BCHP_REGISTER(0x20a6a7f0, 32,  RW, XPT_WDMA_CH7, DMQ_3_0)
BCHP_REGISTER(0x20a6a7f4, 32,  RW, XPT_WDMA_CH7, DMQ_3_1)
BCHP_REGISTER(0x20a6a7f8, 32,  RW, XPT_WDMA_CH7, DMQ_3_2)
BCHP_REGISTER(0x20a6a7fc, 32,  RW, XPT_WDMA_CH7, DMQ_3_3)
BCHP_REGISTER(0x20a70000, 32,  RO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a70004, 32,  RO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a70008, 32,  RO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a7000c, 32,  RO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a70010, 32,  WO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a70014, 32,  WO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a70018, 32,  WO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a7001c, 32,  WO, XPT_MCPB_CPU_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a70020, 32,  RO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W0_STATUS)
BCHP_REGISTER(0x20a70024, 32,  RO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W1_STATUS)
BCHP_REGISTER(0x20a70028, 32,  RO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x20a7002c, 32,  RO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x20a70030, 32,  WO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W0_MASK_SET)
BCHP_REGISTER(0x20a70034, 32,  WO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W1_MASK_SET)
BCHP_REGISTER(0x20a70038, 32,  WO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x20a7003c, 32,  WO, XPT_MCPB_PCI_INTR_AGGREGATOR, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x20a70040, 32,  RO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70044, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70048, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7004c, 32,  RO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70050, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70054, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70058, 32,  RO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7005c, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70060, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70064, 32,  RO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70068, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7006c, 32,  WO, XPT_MCPB_DESC_DONE_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70080, 32,  RO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70084, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70088, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7008c, 32,  RO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70090, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70094, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70098, 32,  RO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7009c, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a700a0, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a700a4, 32,  RO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a700a8, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a700ac, 32,  WO, XPT_MCPB_MISC_FALSE_WAKE_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a700c0, 32,  RO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a700c4, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a700c8, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a700cc, 32,  RO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a700d0, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a700d4, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a700d8, 32,  RO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a700dc, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a700e0, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a700e4, 32,  RO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a700e8, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a700ec, 32,  WO, XPT_MCPB_MISC_OOS_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70100, 32,  RO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70104, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70108, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7010c, 32,  RO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70110, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70114, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70118, 32,  RO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7011c, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70120, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70124, 32,  RO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70128, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7012c, 32,  WO, XPT_MCPB_MISC_TS_PARITY_ERR_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70140, 32,  RO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70144, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70148, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7014c, 32,  RO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70150, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70154, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70158, 32,  RO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7015c, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70160, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70164, 32,  RO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70168, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7016c, 32,  WO, XPT_MCPB_MISC_TEI_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a701c0, 32,  RO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a701c4, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a701c8, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a701cc, 32,  RO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a701d0, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a701d4, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a701d8, 32,  RO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a701dc, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a701e0, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a701e4, 32,  RO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a701e8, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a701ec, 32,  WO, XPT_MCPB_MISC_WATCHDOG_TIMEOUT_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a702c0, 32,  RO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a702c4, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a702c8, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a702cc, 32,  RO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a702d0, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a702d4, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a702d8, 32,  RO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a702dc, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a702e0, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a702e4, 32,  RO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a702e8, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a702ec, 32,  WO, XPT_MCPB_MISC_TS_RANGE_ERR_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70300, 32,  RO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70304, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70308, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7030c, 32,  RO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70310, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70314, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70318, 32,  RO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7031c, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70320, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70324, 32,  RO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70328, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7032c, 32,  WO, XPT_MCPB_MISC_PES_NEXT_TS_RANGE_ERR_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70340, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70344, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70348, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7034c, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70350, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70354, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70358, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7035c, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70360, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70364, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70368, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7036c, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_READ_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70380, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70384, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70388, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7038c, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70390, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70394, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70398, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7039c, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a703a0, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a703a4, 32,  RO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a703a8, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a703ac, 32,  WO, XPT_MCPB_MISC_PAUSE_AT_DESC_END_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a703c0, 32,  RO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a703c4, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a703c8, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a703cc, 32,  RO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a703d0, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a703d4, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a703d8, 32,  RO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a703dc, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a703e0, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a703e4, 32,  RO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a703e8, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a703ec, 32,  WO, XPT_MCPB_MISC_PAUSE_AFTER_GROUP_PACKETS_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70400, 32,  RO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70404, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70408, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7040c, 32,  RO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70410, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70414, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70418, 32,  RO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7041c, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70420, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70424, 32,  RO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70428, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7042c, 32,  WO, XPT_MCPB_MISC_DESC_TAGID_MISMATCH_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70440, 32,  RO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70444, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70448, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7044c, 32,  RO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70450, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70454, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70458, 32,  RO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7045c, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a70460, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a70464, 32,  RO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a70468, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a7046c, 32,  WO, XPT_MCPB_MISC_DATA_TAGID_MISMATCH_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70480, 32,  RO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_STATUS)
BCHP_REGISTER(0x20a70484, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_SET)
BCHP_REGISTER(0x20a70488, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_CLEAR)
BCHP_REGISTER(0x20a7048c, 32,  RO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20a70490, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_MASK_SET)
BCHP_REGISTER(0x20a70494, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20a70498, 32,  RO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_STATUS)
BCHP_REGISTER(0x20a7049c, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_SET)
BCHP_REGISTER(0x20a704a0, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_CLEAR)
BCHP_REGISTER(0x20a704a4, 32,  RO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20a704a8, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_MASK_SET)
BCHP_REGISTER(0x20a704ac, 32,  WO, XPT_MCPB_MISC_CRC_COMPARE_ERROR_INTR_L2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20a70800, 32,  RW, XPT_MCPB, RUN_SET_CLEAR)
BCHP_REGISTER(0x20a70804, 32,  RW, XPT_MCPB, WAKE_SET)
BCHP_REGISTER(0x20a70808, 32,  RW, XPT_MCPB, WAKE_MODE_SET_CLEAR)
BCHP_REGISTER(0x20a7080c, 32,  RW, XPT_MCPB, BUFF_DATA_RDY_SET)
BCHP_REGISTER(0x20a70810, 32,  RW, XPT_MCPB, PAUSE_AT_DESC_READ_CLEAR)
BCHP_REGISTER(0x20a70814, 32,  RW, XPT_MCPB, PAUSE_AT_DESC_END_CLEAR)
BCHP_REGISTER(0x20a70818, 32,  RW, XPT_MCPB, PAUSE_AFTER_GROUP_PACKETS_CLEAR)
BCHP_REGISTER(0x20a7081c, 32,  RW, XPT_MCPB, CRC_COMPARE_ERROR_PAUSE_CLEAR)
BCHP_REGISTER(0x20a70820, 32,  RW, XPT_MCPB, MICRO_PAUSE_SET_CLEAR)
BCHP_REGISTER(0x20a70824, 32,  RO, XPT_MCPB, RUN_STATUS_0_31)
BCHP_REGISTER(0x20a70828, 32,  RO, XPT_MCPB, WAKE_STATUS_0_31)
BCHP_REGISTER(0x20a7082c, 32,  RO, XPT_MCPB, WAKE_MODE_STATUS_0_31)
BCHP_REGISTER(0x20a70830, 32,  RO, XPT_MCPB, PAUSE_AT_DESC_READ_STATUS_0_31)
BCHP_REGISTER(0x20a70834, 32,  RO, XPT_MCPB, PAUSE_AT_DESC_END_STATUS_0_31)
BCHP_REGISTER(0x20a70838, 32,  RO, XPT_MCPB, PAUSE_AFTER_GROUP_PACKETS_STATUS_0_31)
BCHP_REGISTER(0x20a7083c, 32,  RO, XPT_MCPB, CRC_COMPARE_ERROR_PAUSE_STATUS_0_31)
BCHP_REGISTER(0x20a70840, 32,  RO, XPT_MCPB, MICRO_PAUSE_STATUS_0_31)
BCHP_REGISTER(0x20a70844, 32,  RO, XPT_MCPB, FINAL_PAUSE_STATUS_0_31)
BCHP_REGISTER(0x20a70848, 32,  RO, XPT_MCPB, HW_PAUSE_STATUS_0_31)
BCHP_REGISTER(0x20a7084c, 32,  RW, XPT_MCPB, DESC_RD_IN_PROGRESS_0_31)
BCHP_REGISTER(0x20a70850, 32,  RW, XPT_MCPB, DATA_RD_IN_PROGRESS_0_31)
BCHP_REGISTER(0x20a70854, 32,  RW, XPT_MCPB, BBUFF_RD_IN_PROGRESS_0_31)
BCHP_REGISTER(0x20a70858, 32,  RW, XPT_MCPB, LAST_DESC_REACHED_0_31)
BCHP_REGISTER(0x20a7085c, 32,  RO, XPT_MCPB, BUFF_DATA_RDY_0_31)
BCHP_REGISTER(0x20a70860, 32,  RW, XPT_MCPB, FIRST_DATA_RD_OPN_PRIORITY_0_31)
BCHP_REGISTER(0x20a70864, 32,  RW, XPT_MCPB, RUN_INVALID_SET_CLEAR)
BCHP_REGISTER(0x20a70868, 32,  RO, XPT_MCPB, RUN_INVALID_STATUS_0_31)
BCHP_REGISTER(0x20a7086c, 32,  RW, XPT_MCPB, CHANNEL_PRIORITY_SET)
BCHP_REGISTER(0x20a70870, 32,  RO, XPT_MCPB, CHANNEL_PRIORITY_STATUS_0_15)
BCHP_REGISTER(0x20a70878, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_0)
BCHP_REGISTER(0x20a7087c, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_1)
BCHP_REGISTER(0x20a70880, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_2)
BCHP_REGISTER(0x20a70884, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_3)
BCHP_REGISTER(0x20a70888, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_4)
BCHP_REGISTER(0x20a7088c, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_5)
BCHP_REGISTER(0x20a70890, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_6)
BCHP_REGISTER(0x20a70894, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_7)
BCHP_REGISTER(0x20a70898, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_8)
BCHP_REGISTER(0x20a7089c, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_9)
BCHP_REGISTER(0x20a708a0, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_10)
BCHP_REGISTER(0x20a708a4, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_11)
BCHP_REGISTER(0x20a708a8, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_12)
BCHP_REGISTER(0x20a708ac, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_13)
BCHP_REGISTER(0x20a708b0, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_14)
BCHP_REGISTER(0x20a708b4, 32, CFG, XPT_MCPB, BAND_PAUSE_MAPPING_VECTOR_15)
BCHP_REGISTER(0x20a708f8, 32,  RW, XPT_MCPB, TMEU_CHANNEL_BYPASS_SET_CLEAR)
BCHP_REGISTER(0x20a708fc, 32,  RO, XPT_MCPB, TMEU_CHANNEL_BYPASS_STATUS_0_31)
BCHP_REGISTER(0x20a70900, 32,  RW, XPT_MCPB, GPC_COUNT_RELOAD_CTRL)
BCHP_REGISTER(0x20a70904, 32,  RW, XPT_MCPB, GPC0_CTRL)
BCHP_REGISTER(0x20a70908, 32,  RW, XPT_MCPB, GPC0_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a7090c, 32,  RW, XPT_MCPB, GPC0_PAUSE_0_31)
BCHP_REGISTER(0x20a70910, 32,  RW, XPT_MCPB, GPC1_CTRL)
BCHP_REGISTER(0x20a70914, 32,  RW, XPT_MCPB, GPC1_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70918, 32,  RW, XPT_MCPB, GPC1_PAUSE_0_31)
BCHP_REGISTER(0x20a7091c, 32,  RW, XPT_MCPB, GPC2_CTRL)
BCHP_REGISTER(0x20a70920, 32,  RW, XPT_MCPB, GPC2_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70924, 32,  RW, XPT_MCPB, GPC2_PAUSE_0_31)
BCHP_REGISTER(0x20a70928, 32,  RW, XPT_MCPB, GPC3_CTRL)
BCHP_REGISTER(0x20a7092c, 32,  RW, XPT_MCPB, GPC3_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70930, 32,  RW, XPT_MCPB, GPC3_PAUSE_0_31)
BCHP_REGISTER(0x20a70934, 32,  RW, XPT_MCPB, GPC4_CTRL)
BCHP_REGISTER(0x20a70938, 32,  RW, XPT_MCPB, GPC4_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a7093c, 32,  RW, XPT_MCPB, GPC4_PAUSE_0_31)
BCHP_REGISTER(0x20a70940, 32,  RW, XPT_MCPB, GPC5_CTRL)
BCHP_REGISTER(0x20a70944, 32,  RW, XPT_MCPB, GPC5_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70948, 32,  RW, XPT_MCPB, GPC5_PAUSE_0_31)
BCHP_REGISTER(0x20a7094c, 32,  RW, XPT_MCPB, GPC6_CTRL)
BCHP_REGISTER(0x20a70950, 32,  RW, XPT_MCPB, GPC6_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70954, 32,  RW, XPT_MCPB, GPC6_PAUSE_0_31)
BCHP_REGISTER(0x20a70958, 32,  RW, XPT_MCPB, GPC7_CTRL)
BCHP_REGISTER(0x20a7095c, 32,  RW, XPT_MCPB, GPC7_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70960, 32,  RW, XPT_MCPB, GPC7_PAUSE_0_31)
BCHP_REGISTER(0x20a70964, 32,  RW, XPT_MCPB, GPC8_CTRL)
BCHP_REGISTER(0x20a70968, 32,  RW, XPT_MCPB, GPC8_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a7096c, 32,  RW, XPT_MCPB, GPC8_PAUSE_0_31)
BCHP_REGISTER(0x20a70970, 32,  RW, XPT_MCPB, GPC9_CTRL)
BCHP_REGISTER(0x20a70974, 32,  RW, XPT_MCPB, GPC9_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70978, 32,  RW, XPT_MCPB, GPC9_PAUSE_0_31)
BCHP_REGISTER(0x20a7097c, 32,  RW, XPT_MCPB, GPC10_CTRL)
BCHP_REGISTER(0x20a70980, 32,  RW, XPT_MCPB, GPC10_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70984, 32,  RW, XPT_MCPB, GPC10_PAUSE_0_31)
BCHP_REGISTER(0x20a70988, 32,  RW, XPT_MCPB, GPC11_CTRL)
BCHP_REGISTER(0x20a7098c, 32,  RW, XPT_MCPB, GPC11_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a70990, 32,  RW, XPT_MCPB, GPC11_PAUSE_0_31)
BCHP_REGISTER(0x20a70994, 32,  RW, XPT_MCPB, GPC12_CTRL)
BCHP_REGISTER(0x20a70998, 32,  RW, XPT_MCPB, GPC12_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a7099c, 32,  RW, XPT_MCPB, GPC12_PAUSE_0_31)
BCHP_REGISTER(0x20a709a0, 32,  RW, XPT_MCPB, GPC13_CTRL)
BCHP_REGISTER(0x20a709a4, 32,  RW, XPT_MCPB, GPC13_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a709a8, 32,  RW, XPT_MCPB, GPC13_PAUSE_0_31)
BCHP_REGISTER(0x20a709ac, 32,  RW, XPT_MCPB, GPC14_CTRL)
BCHP_REGISTER(0x20a709b0, 32,  RW, XPT_MCPB, GPC14_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a709b4, 32,  RW, XPT_MCPB, GPC14_PAUSE_0_31)
BCHP_REGISTER(0x20a709b8, 32,  RW, XPT_MCPB, GPC15_CTRL)
BCHP_REGISTER(0x20a709bc, 32,  RW, XPT_MCPB, GPC15_CURR_COUNTER_VAL)
BCHP_REGISTER(0x20a709c0, 32,  RW, XPT_MCPB, GPC15_PAUSE_0_31)
BCHP_REGISTER(0x20a709c4, 32,  RW, XPT_MCPB, TMEU_ARB_DELAY)
BCHP_REGISTER(0x20a709c8, 32,  RW, XPT_MCPB, DMA_MEM_ADDR_START)
BCHP_REGISTER(0x20a709cc, 32,  RW, XPT_MCPB, BBUFF_MEM_ADDR_START)
BCHP_REGISTER(0x20a709d0, 32,  RW, XPT_MCPB, TMEU_MEM_ADDR_START)
BCHP_REGISTER(0x20a709d4, 32,  RW, XPT_MCPB, DCPM_MEM_ADDR_START)
BCHP_REGISTER(0x20a709d8, 32,  RW, XPT_MCPB, PER_CH_MEM_ADDR_END)
BCHP_REGISTER(0x20a709dc, 32,  RW, XPT_MCPB, GLOBAL_CTRL_SIGNALS)
BCHP_REGISTER(0x20a709e0, 32,  RW, XPT_MCPB, MASK_CLEAR_PAUSE_AT_DESC_END_FROM_MEMDMA_SET_CLEAR)
BCHP_REGISTER(0x20a709e4, 32,  RO, XPT_MCPB, MASK_CLEAR_PAUSE_AT_DESC_END_FROM_MEMDMA_STATUS_0_31)
BCHP_REGISTER(0x20a709e8, 32,  RW, XPT_MCPB, MASK_CLEAR_PAUSE_AT_DESC_END_FROM_HOST_SET_CLEAR)
BCHP_REGISTER(0x20a709ec, 32,  RO, XPT_MCPB, MASK_CLEAR_PAUSE_AT_DESC_END_FROM_HOST_STATUS_0_31)
BCHP_REGISTER(0x20a709f0, 32,  RW, XPT_MCPB, DESCRIPTOR_LESS_MODE_SET_CLEAR)
BCHP_REGISTER(0x20a709f4, 32,  RO, XPT_MCPB, DESCRIPTOR_LESS_MODE_STATUS_0_31)
BCHP_REGISTER(0x20a709f8, 32,  RW, XPT_MCPB, ARBITER_ZERO_BYTE_TRANS_PRIORITY_SET_CLEAR)
BCHP_REGISTER(0x20a709fc, 32,  RO, XPT_MCPB, ARBITER_ZERO_BYTE_TRANS_PRIORITY_STATUS_0_31)
BCHP_REGISTER(0x20a70a00, 32,  RW, XPT_MCPB, ARBITER_SEND_DCP_ONLY_TRANS_AS_HIGH_PRIORITY_SET_CLEAR)
BCHP_REGISTER(0x20a70a04, 32,  RO, XPT_MCPB, ARBITER_SEND_DCP_ONLY_TRANS_AS_HIGH_PRIORITY_STATUS_0_31)
BCHP_REGISTER(0x20a70a08, 32,  RW, XPT_MCPB, MPOD_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a0c, 32,  RW, XPT_MCPB, SEC_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a10, 32,  RW, XPT_MCPB, TSIO0_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a14, 32,  RW, XPT_MCPB, TSIO1_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a18, 32,  RW, XPT_MCPB, RAVE_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a1c, 32,  RW, XPT_MCPB, MEMDMA_OUTPUT_PIPE_PACKET_GAPPER)
BCHP_REGISTER(0x20a70a20, 32,  RW, XPT_MCPB, MANUAL_MODE_SEL_0)
BCHP_REGISTER(0x20a70a24, 32,  RW, XPT_MCPB, MANUAL_MODE_SEL_1)
BCHP_REGISTER(0x20a70a28, 32,  RW, XPT_MCPB, MANUAL_MODE_SEL_2)
BCHP_REGISTER(0x20a70a2c, 32,  RW, XPT_MCPB, MANUAL_MODE_SEL_3)
BCHP_REGISTER(0x20a70a30, 32,  RO, XPT_MCPB, DEBUG_0)
BCHP_REGISTER(0x20a70a34, 32,  RO, XPT_MCPB, DEBUG_1)
BCHP_REGISTER(0x20a70a38, 32,  RO, XPT_MCPB, DEBUG_2)
BCHP_REGISTER(0x20a70a3c, 32,  RO, XPT_MCPB, DEBUG_3)
BCHP_REGISTER(0x20a70a40, 32,  RO, XPT_MCPB, DEBUG_4)
BCHP_REGISTER(0x20a70a44, 32,  RO, XPT_MCPB, DEBUG_5)
BCHP_REGISTER(0x20a70a48, 32,  RO, XPT_MCPB, DEBUG_6)
BCHP_REGISTER(0x20a70a4c, 32,  RO, XPT_MCPB, DEBUG_7)
BCHP_REGISTER(0x20a70a50, 32,  RO, XPT_MCPB, DEBUG_8)
BCHP_REGISTER(0x20a70a54, 32,  RO, XPT_MCPB, DEBUG_9)
BCHP_REGISTER(0x20a70a58, 32,  RO, XPT_MCPB, DEBUG_10)
BCHP_REGISTER(0x20a70a5c, 32,  RO, XPT_MCPB, DEBUG_11)
BCHP_REGISTER(0x20a70a60, 32,  RO, XPT_MCPB, DEBUG_12)
BCHP_REGISTER(0x20a70a64, 32,  RO, XPT_MCPB, DEBUG_13)
BCHP_REGISTER(0x20a70a68, 32,  RO, XPT_MCPB, DEBUG_14)
BCHP_REGISTER(0x20a70a6c, 32,  RO, XPT_MCPB, DEBUG_15)
BCHP_REGISTER(0x20a70a70, 32,  RO, XPT_MCPB, DEBUG_16)
BCHP_REGISTER(0x20a70a74, 32,  RO, XPT_MCPB, DEBUG_17)
BCHP_REGISTER(0x20a70a78, 32,  RO, XPT_MCPB, DEBUG_18)
BCHP_REGISTER(0x20a70a7c, 32,  RO, XPT_MCPB, DEBUG_19)
BCHP_REGISTER(0x20a70a80, 32,  RO, XPT_MCPB, DEBUG_20)
BCHP_REGISTER(0x20a70a84, 32,  RO, XPT_MCPB, DEBUG_21)
BCHP_REGISTER(0x20a70a88, 32,  RO, XPT_MCPB, DEBUG_22)
BCHP_REGISTER(0x20a70a8c, 32,  RO, XPT_MCPB, DEBUG_23)
BCHP_REGISTER(0x20a70a90, 32,  RO, XPT_MCPB, DEBUG_24)
BCHP_REGISTER(0x20a70a94, 32,  RO, XPT_MCPB, DEBUG_25)
BCHP_REGISTER(0x20a70a98, 32,  RO, XPT_MCPB, DEBUG_26)
BCHP_REGISTER(0x20a70a9c, 32,  RO, XPT_MCPB, DEBUG_27)
BCHP_REGISTER(0x20a70aa0, 32,  RO, XPT_MCPB, DEBUG_28)
BCHP_REGISTER(0x20a70aa4, 32,  RO, XPT_MCPB, DEBUG_29)
BCHP_REGISTER(0x20a70aa8, 32,  RO, XPT_MCPB, DEBUG_30)
BCHP_REGISTER(0x20a70aac, 32,  RO, XPT_MCPB, DEBUG_31)
BCHP_REGISTER(0x20a70ab0, 32,  RO, XPT_MCPB, DEBUG_32)
BCHP_REGISTER(0x20a70ab4, 32,  RO, XPT_MCPB, DEBUG_33)
BCHP_REGISTER(0x20a70ab8, 32,  RO, XPT_MCPB, DEBUG_34)
BCHP_REGISTER(0x20a70abc, 32,  RO, XPT_MCPB, DEBUG_35)
BCHP_REGISTER(0x20a70ac0, 32,  RO, XPT_MCPB, DEBUG_36)
BCHP_REGISTER(0x20a70ac4, 32,  RO, XPT_MCPB, DEBUG_37)
BCHP_REGISTER(0x20a70ac8, 32,  RO, XPT_MCPB, DEBUG_38)
BCHP_REGISTER(0x20a70acc, 32,  RW, XPT_MCPB, SP_TIME_OUT_THRESHOLD)
BCHP_REGISTER(0x20a70ad0, 32,  RW, XPT_MCPB, DEBUG_SP_FORCE_RECOVER)
BCHP_REGISTER(0x20a70ad4, 32,  RW, XPT_MCPB, DEBUG_SP_TX_SLOT_CMD_AUTO_RECOVER_OVERWR)
BCHP_REGISTER(0x20a70c00, 32,  RW, XPT_MCPB_CH0, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a70c04, 32,  RW, XPT_MCPB_CH0, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a70c08, 32,  RW, XPT_MCPB_CH0, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a70c0c, 32,  RW, XPT_MCPB_CH0, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a70c10, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70c14, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70c18, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70c1c, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70c20, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70c24, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70c28, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70c2c, 32,  RW, XPT_MCPB_CH0, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70c30, 32,  RW, XPT_MCPB_CH0, DMA_STATUS_0)
BCHP_REGISTER(0x20a70c34, 32,  RW, XPT_MCPB_CH0, DMA_STATUS_1)
BCHP_REGISTER(0x20a70c38, 32,  RW, XPT_MCPB_CH0, DMA_STATUS_2)
BCHP_REGISTER(0x20a70c3c, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a70c40, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a70c44, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70c48, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70c4c, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70c50, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70c54, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70c58, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a70c5c, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a70c60, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70c64, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70c68, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70c6c, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70c70, 32,  RW, XPT_MCPB_CH0, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70c74, 32,  RW, XPT_MCPB_CH0, SP_PKT_LEN)
BCHP_REGISTER(0x20a70c78, 32,  RW, XPT_MCPB_CH0, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a70c7c, 32,  RW, XPT_MCPB_CH0, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a70c80, 32,  RW, XPT_MCPB_CH0, SP_TS_CONFIG)
BCHP_REGISTER(0x20a70c84, 32,  RW, XPT_MCPB_CH0, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a70c88, 32,  RW, XPT_MCPB_CH0, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a70c8c, 32,  RW, XPT_MCPB_CH0, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a70c90, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_0)
BCHP_REGISTER(0x20a70c94, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_1)
BCHP_REGISTER(0x20a70c98, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_2)
BCHP_REGISTER(0x20a70c9c, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_3)
BCHP_REGISTER(0x20a70ca0, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_4)
BCHP_REGISTER(0x20a70ca4, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_5)
BCHP_REGISTER(0x20a70ca8, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_6)
BCHP_REGISTER(0x20a70cac, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_7)
BCHP_REGISTER(0x20a70cb0, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_8)
BCHP_REGISTER(0x20a70cb4, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_9)
BCHP_REGISTER(0x20a70cb8, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_10)
BCHP_REGISTER(0x20a70cbc, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_11)
BCHP_REGISTER(0x20a70cc0, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_12)
BCHP_REGISTER(0x20a70cc4, 32,  RW, XPT_MCPB_CH0, SP_STATE_REG_13)
BCHP_REGISTER(0x20a70cc8, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a70ccc, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a70cd0, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a70cd4, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a70cd8, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a70cdc, 32,  RW, XPT_MCPB_CH0, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a70ce0, 32,  RW, XPT_MCPB_CH0, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a70ce4, 32,  RW, XPT_MCPB_CH0, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a70ce8, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a70cec, 32,  RW, XPT_MCPB_CH0, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a70cf0, 32,  RW, XPT_MCPB_CH0, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a70cf4, 32,  RW, XPT_MCPB_CH0, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a70cf8, 32,  RW, XPT_MCPB_CH0, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a70cfc, 32,  RW, XPT_MCPB_CH0, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a70d00, 32,  RW, XPT_MCPB_CH0, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a70d04, 32,  RW, XPT_MCPB_CH0, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a70d08, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a70d0c, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a70d10, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a70d14, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a70d18, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70d1c, 32,  RW, XPT_MCPB_CH0, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70d20, 32,  RW, XPT_MCPB_CH0, DCPM_STATUS)
BCHP_REGISTER(0x20a70d24, 32,  RW, XPT_MCPB_CH0, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a70d28, 32,  RW, XPT_MCPB_CH0, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a70d2c, 32,  RW, XPT_MCPB_CH0, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a70d30, 32,  RW, XPT_MCPB_CH0, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a70d34, 32,  RW, XPT_MCPB_CH0, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a70d38, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70d3c, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70d40, 32,  RW, XPT_MCPB_CH0, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70d44, 32,  RW, XPT_MCPB_CH0, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a70d48, 32,  RW, XPT_MCPB_CH0, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a70d4c, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a70d50, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a70d54, 32,  RW, XPT_MCPB_CH0, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a70d58, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a70d5c, 32,  RW, XPT_MCPB_CH0, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a70e00, 32,  RW, XPT_MCPB_CH1, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a70e04, 32,  RW, XPT_MCPB_CH1, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a70e08, 32,  RW, XPT_MCPB_CH1, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a70e0c, 32,  RW, XPT_MCPB_CH1, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a70e10, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70e14, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70e18, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70e1c, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70e20, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70e24, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70e28, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a70e2c, 32,  RW, XPT_MCPB_CH1, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a70e30, 32,  RW, XPT_MCPB_CH1, DMA_STATUS_0)
BCHP_REGISTER(0x20a70e34, 32,  RW, XPT_MCPB_CH1, DMA_STATUS_1)
BCHP_REGISTER(0x20a70e38, 32,  RW, XPT_MCPB_CH1, DMA_STATUS_2)
BCHP_REGISTER(0x20a70e3c, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a70e40, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a70e44, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70e48, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70e4c, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70e50, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70e54, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70e58, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a70e5c, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a70e60, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70e64, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70e68, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70e6c, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70e70, 32,  RW, XPT_MCPB_CH1, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70e74, 32,  RW, XPT_MCPB_CH1, SP_PKT_LEN)
BCHP_REGISTER(0x20a70e78, 32,  RW, XPT_MCPB_CH1, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a70e7c, 32,  RW, XPT_MCPB_CH1, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a70e80, 32,  RW, XPT_MCPB_CH1, SP_TS_CONFIG)
BCHP_REGISTER(0x20a70e84, 32,  RW, XPT_MCPB_CH1, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a70e88, 32,  RW, XPT_MCPB_CH1, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a70e8c, 32,  RW, XPT_MCPB_CH1, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a70e90, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_0)
BCHP_REGISTER(0x20a70e94, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_1)
BCHP_REGISTER(0x20a70e98, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_2)
BCHP_REGISTER(0x20a70e9c, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_3)
BCHP_REGISTER(0x20a70ea0, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_4)
BCHP_REGISTER(0x20a70ea4, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_5)
BCHP_REGISTER(0x20a70ea8, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_6)
BCHP_REGISTER(0x20a70eac, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_7)
BCHP_REGISTER(0x20a70eb0, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_8)
BCHP_REGISTER(0x20a70eb4, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_9)
BCHP_REGISTER(0x20a70eb8, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_10)
BCHP_REGISTER(0x20a70ebc, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_11)
BCHP_REGISTER(0x20a70ec0, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_12)
BCHP_REGISTER(0x20a70ec4, 32,  RW, XPT_MCPB_CH1, SP_STATE_REG_13)
BCHP_REGISTER(0x20a70ec8, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a70ecc, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a70ed0, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a70ed4, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a70ed8, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a70edc, 32,  RW, XPT_MCPB_CH1, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a70ee0, 32,  RW, XPT_MCPB_CH1, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a70ee4, 32,  RW, XPT_MCPB_CH1, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a70ee8, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a70eec, 32,  RW, XPT_MCPB_CH1, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a70ef0, 32,  RW, XPT_MCPB_CH1, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a70ef4, 32,  RW, XPT_MCPB_CH1, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a70ef8, 32,  RW, XPT_MCPB_CH1, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a70efc, 32,  RW, XPT_MCPB_CH1, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a70f00, 32,  RW, XPT_MCPB_CH1, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a70f04, 32,  RW, XPT_MCPB_CH1, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a70f08, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a70f0c, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a70f10, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a70f14, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a70f18, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a70f1c, 32,  RW, XPT_MCPB_CH1, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a70f20, 32,  RW, XPT_MCPB_CH1, DCPM_STATUS)
BCHP_REGISTER(0x20a70f24, 32,  RW, XPT_MCPB_CH1, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a70f28, 32,  RW, XPT_MCPB_CH1, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a70f2c, 32,  RW, XPT_MCPB_CH1, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a70f30, 32,  RW, XPT_MCPB_CH1, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a70f34, 32,  RW, XPT_MCPB_CH1, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a70f38, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a70f3c, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a70f40, 32,  RW, XPT_MCPB_CH1, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a70f44, 32,  RW, XPT_MCPB_CH1, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a70f48, 32,  RW, XPT_MCPB_CH1, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a70f4c, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a70f50, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a70f54, 32,  RW, XPT_MCPB_CH1, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a70f58, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a70f5c, 32,  RW, XPT_MCPB_CH1, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71000, 32,  RW, XPT_MCPB_CH2, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71004, 32,  RW, XPT_MCPB_CH2, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71008, 32,  RW, XPT_MCPB_CH2, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7100c, 32,  RW, XPT_MCPB_CH2, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71010, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71014, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71018, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7101c, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71020, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71024, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71028, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7102c, 32,  RW, XPT_MCPB_CH2, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71030, 32,  RW, XPT_MCPB_CH2, DMA_STATUS_0)
BCHP_REGISTER(0x20a71034, 32,  RW, XPT_MCPB_CH2, DMA_STATUS_1)
BCHP_REGISTER(0x20a71038, 32,  RW, XPT_MCPB_CH2, DMA_STATUS_2)
BCHP_REGISTER(0x20a7103c, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71040, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71044, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71048, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7104c, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71050, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71054, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71058, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7105c, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71060, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71064, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71068, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7106c, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71070, 32,  RW, XPT_MCPB_CH2, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71074, 32,  RW, XPT_MCPB_CH2, SP_PKT_LEN)
BCHP_REGISTER(0x20a71078, 32,  RW, XPT_MCPB_CH2, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7107c, 32,  RW, XPT_MCPB_CH2, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71080, 32,  RW, XPT_MCPB_CH2, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71084, 32,  RW, XPT_MCPB_CH2, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71088, 32,  RW, XPT_MCPB_CH2, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7108c, 32,  RW, XPT_MCPB_CH2, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71090, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71094, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71098, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7109c, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_3)
BCHP_REGISTER(0x20a710a0, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_4)
BCHP_REGISTER(0x20a710a4, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_5)
BCHP_REGISTER(0x20a710a8, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_6)
BCHP_REGISTER(0x20a710ac, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_7)
BCHP_REGISTER(0x20a710b0, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_8)
BCHP_REGISTER(0x20a710b4, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_9)
BCHP_REGISTER(0x20a710b8, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_10)
BCHP_REGISTER(0x20a710bc, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_11)
BCHP_REGISTER(0x20a710c0, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_12)
BCHP_REGISTER(0x20a710c4, 32,  RW, XPT_MCPB_CH2, SP_STATE_REG_13)
BCHP_REGISTER(0x20a710c8, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a710cc, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a710d0, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a710d4, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a710d8, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a710dc, 32,  RW, XPT_MCPB_CH2, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a710e0, 32,  RW, XPT_MCPB_CH2, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a710e4, 32,  RW, XPT_MCPB_CH2, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a710e8, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a710ec, 32,  RW, XPT_MCPB_CH2, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a710f0, 32,  RW, XPT_MCPB_CH2, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a710f4, 32,  RW, XPT_MCPB_CH2, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a710f8, 32,  RW, XPT_MCPB_CH2, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a710fc, 32,  RW, XPT_MCPB_CH2, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71100, 32,  RW, XPT_MCPB_CH2, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71104, 32,  RW, XPT_MCPB_CH2, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71108, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7110c, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71110, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71114, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71118, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7111c, 32,  RW, XPT_MCPB_CH2, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71120, 32,  RW, XPT_MCPB_CH2, DCPM_STATUS)
BCHP_REGISTER(0x20a71124, 32,  RW, XPT_MCPB_CH2, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71128, 32,  RW, XPT_MCPB_CH2, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7112c, 32,  RW, XPT_MCPB_CH2, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71130, 32,  RW, XPT_MCPB_CH2, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71134, 32,  RW, XPT_MCPB_CH2, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71138, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7113c, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71140, 32,  RW, XPT_MCPB_CH2, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71144, 32,  RW, XPT_MCPB_CH2, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71148, 32,  RW, XPT_MCPB_CH2, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7114c, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71150, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71154, 32,  RW, XPT_MCPB_CH2, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71158, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7115c, 32,  RW, XPT_MCPB_CH2, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71200, 32,  RW, XPT_MCPB_CH3, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71204, 32,  RW, XPT_MCPB_CH3, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71208, 32,  RW, XPT_MCPB_CH3, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7120c, 32,  RW, XPT_MCPB_CH3, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71210, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71214, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71218, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7121c, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71220, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71224, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71228, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7122c, 32,  RW, XPT_MCPB_CH3, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71230, 32,  RW, XPT_MCPB_CH3, DMA_STATUS_0)
BCHP_REGISTER(0x20a71234, 32,  RW, XPT_MCPB_CH3, DMA_STATUS_1)
BCHP_REGISTER(0x20a71238, 32,  RW, XPT_MCPB_CH3, DMA_STATUS_2)
BCHP_REGISTER(0x20a7123c, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71240, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71244, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71248, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7124c, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71250, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71254, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71258, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7125c, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71260, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71264, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71268, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7126c, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71270, 32,  RW, XPT_MCPB_CH3, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71274, 32,  RW, XPT_MCPB_CH3, SP_PKT_LEN)
BCHP_REGISTER(0x20a71278, 32,  RW, XPT_MCPB_CH3, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7127c, 32,  RW, XPT_MCPB_CH3, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71280, 32,  RW, XPT_MCPB_CH3, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71284, 32,  RW, XPT_MCPB_CH3, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71288, 32,  RW, XPT_MCPB_CH3, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7128c, 32,  RW, XPT_MCPB_CH3, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71290, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71294, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71298, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7129c, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_3)
BCHP_REGISTER(0x20a712a0, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_4)
BCHP_REGISTER(0x20a712a4, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_5)
BCHP_REGISTER(0x20a712a8, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_6)
BCHP_REGISTER(0x20a712ac, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_7)
BCHP_REGISTER(0x20a712b0, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_8)
BCHP_REGISTER(0x20a712b4, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_9)
BCHP_REGISTER(0x20a712b8, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_10)
BCHP_REGISTER(0x20a712bc, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_11)
BCHP_REGISTER(0x20a712c0, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_12)
BCHP_REGISTER(0x20a712c4, 32,  RW, XPT_MCPB_CH3, SP_STATE_REG_13)
BCHP_REGISTER(0x20a712c8, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a712cc, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a712d0, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a712d4, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a712d8, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a712dc, 32,  RW, XPT_MCPB_CH3, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a712e0, 32,  RW, XPT_MCPB_CH3, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a712e4, 32,  RW, XPT_MCPB_CH3, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a712e8, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a712ec, 32,  RW, XPT_MCPB_CH3, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a712f0, 32,  RW, XPT_MCPB_CH3, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a712f4, 32,  RW, XPT_MCPB_CH3, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a712f8, 32,  RW, XPT_MCPB_CH3, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a712fc, 32,  RW, XPT_MCPB_CH3, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71300, 32,  RW, XPT_MCPB_CH3, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71304, 32,  RW, XPT_MCPB_CH3, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71308, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7130c, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71310, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71314, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71318, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7131c, 32,  RW, XPT_MCPB_CH3, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71320, 32,  RW, XPT_MCPB_CH3, DCPM_STATUS)
BCHP_REGISTER(0x20a71324, 32,  RW, XPT_MCPB_CH3, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71328, 32,  RW, XPT_MCPB_CH3, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7132c, 32,  RW, XPT_MCPB_CH3, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71330, 32,  RW, XPT_MCPB_CH3, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71334, 32,  RW, XPT_MCPB_CH3, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71338, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7133c, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71340, 32,  RW, XPT_MCPB_CH3, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71344, 32,  RW, XPT_MCPB_CH3, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71348, 32,  RW, XPT_MCPB_CH3, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7134c, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71350, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71354, 32,  RW, XPT_MCPB_CH3, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71358, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7135c, 32,  RW, XPT_MCPB_CH3, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71400, 32,  RW, XPT_MCPB_CH4, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71404, 32,  RW, XPT_MCPB_CH4, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71408, 32,  RW, XPT_MCPB_CH4, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7140c, 32,  RW, XPT_MCPB_CH4, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71410, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71414, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71418, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7141c, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71420, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71424, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71428, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7142c, 32,  RW, XPT_MCPB_CH4, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71430, 32,  RW, XPT_MCPB_CH4, DMA_STATUS_0)
BCHP_REGISTER(0x20a71434, 32,  RW, XPT_MCPB_CH4, DMA_STATUS_1)
BCHP_REGISTER(0x20a71438, 32,  RW, XPT_MCPB_CH4, DMA_STATUS_2)
BCHP_REGISTER(0x20a7143c, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71440, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71444, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71448, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7144c, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71450, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71454, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71458, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7145c, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71460, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71464, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71468, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7146c, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71470, 32,  RW, XPT_MCPB_CH4, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71474, 32,  RW, XPT_MCPB_CH4, SP_PKT_LEN)
BCHP_REGISTER(0x20a71478, 32,  RW, XPT_MCPB_CH4, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7147c, 32,  RW, XPT_MCPB_CH4, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71480, 32,  RW, XPT_MCPB_CH4, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71484, 32,  RW, XPT_MCPB_CH4, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71488, 32,  RW, XPT_MCPB_CH4, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7148c, 32,  RW, XPT_MCPB_CH4, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71490, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71494, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71498, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7149c, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_3)
BCHP_REGISTER(0x20a714a0, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_4)
BCHP_REGISTER(0x20a714a4, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_5)
BCHP_REGISTER(0x20a714a8, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_6)
BCHP_REGISTER(0x20a714ac, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_7)
BCHP_REGISTER(0x20a714b0, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_8)
BCHP_REGISTER(0x20a714b4, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_9)
BCHP_REGISTER(0x20a714b8, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_10)
BCHP_REGISTER(0x20a714bc, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_11)
BCHP_REGISTER(0x20a714c0, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_12)
BCHP_REGISTER(0x20a714c4, 32,  RW, XPT_MCPB_CH4, SP_STATE_REG_13)
BCHP_REGISTER(0x20a714c8, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a714cc, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a714d0, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a714d4, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a714d8, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a714dc, 32,  RW, XPT_MCPB_CH4, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a714e0, 32,  RW, XPT_MCPB_CH4, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a714e4, 32,  RW, XPT_MCPB_CH4, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a714e8, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a714ec, 32,  RW, XPT_MCPB_CH4, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a714f0, 32,  RW, XPT_MCPB_CH4, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a714f4, 32,  RW, XPT_MCPB_CH4, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a714f8, 32,  RW, XPT_MCPB_CH4, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a714fc, 32,  RW, XPT_MCPB_CH4, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71500, 32,  RW, XPT_MCPB_CH4, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71504, 32,  RW, XPT_MCPB_CH4, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71508, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7150c, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71510, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71514, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71518, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7151c, 32,  RW, XPT_MCPB_CH4, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71520, 32,  RW, XPT_MCPB_CH4, DCPM_STATUS)
BCHP_REGISTER(0x20a71524, 32,  RW, XPT_MCPB_CH4, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71528, 32,  RW, XPT_MCPB_CH4, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7152c, 32,  RW, XPT_MCPB_CH4, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71530, 32,  RW, XPT_MCPB_CH4, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71534, 32,  RW, XPT_MCPB_CH4, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71538, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7153c, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71540, 32,  RW, XPT_MCPB_CH4, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71544, 32,  RW, XPT_MCPB_CH4, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71548, 32,  RW, XPT_MCPB_CH4, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7154c, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71550, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71554, 32,  RW, XPT_MCPB_CH4, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71558, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7155c, 32,  RW, XPT_MCPB_CH4, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71600, 32,  RW, XPT_MCPB_CH5, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71604, 32,  RW, XPT_MCPB_CH5, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71608, 32,  RW, XPT_MCPB_CH5, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7160c, 32,  RW, XPT_MCPB_CH5, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71610, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71614, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71618, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7161c, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71620, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71624, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71628, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7162c, 32,  RW, XPT_MCPB_CH5, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71630, 32,  RW, XPT_MCPB_CH5, DMA_STATUS_0)
BCHP_REGISTER(0x20a71634, 32,  RW, XPT_MCPB_CH5, DMA_STATUS_1)
BCHP_REGISTER(0x20a71638, 32,  RW, XPT_MCPB_CH5, DMA_STATUS_2)
BCHP_REGISTER(0x20a7163c, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71640, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71644, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71648, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7164c, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71650, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71654, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71658, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7165c, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71660, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71664, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71668, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7166c, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71670, 32,  RW, XPT_MCPB_CH5, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71674, 32,  RW, XPT_MCPB_CH5, SP_PKT_LEN)
BCHP_REGISTER(0x20a71678, 32,  RW, XPT_MCPB_CH5, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7167c, 32,  RW, XPT_MCPB_CH5, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71680, 32,  RW, XPT_MCPB_CH5, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71684, 32,  RW, XPT_MCPB_CH5, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71688, 32,  RW, XPT_MCPB_CH5, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7168c, 32,  RW, XPT_MCPB_CH5, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71690, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71694, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71698, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7169c, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_3)
BCHP_REGISTER(0x20a716a0, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_4)
BCHP_REGISTER(0x20a716a4, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_5)
BCHP_REGISTER(0x20a716a8, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_6)
BCHP_REGISTER(0x20a716ac, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_7)
BCHP_REGISTER(0x20a716b0, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_8)
BCHP_REGISTER(0x20a716b4, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_9)
BCHP_REGISTER(0x20a716b8, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_10)
BCHP_REGISTER(0x20a716bc, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_11)
BCHP_REGISTER(0x20a716c0, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_12)
BCHP_REGISTER(0x20a716c4, 32,  RW, XPT_MCPB_CH5, SP_STATE_REG_13)
BCHP_REGISTER(0x20a716c8, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a716cc, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a716d0, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a716d4, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a716d8, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a716dc, 32,  RW, XPT_MCPB_CH5, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a716e0, 32,  RW, XPT_MCPB_CH5, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a716e4, 32,  RW, XPT_MCPB_CH5, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a716e8, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a716ec, 32,  RW, XPT_MCPB_CH5, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a716f0, 32,  RW, XPT_MCPB_CH5, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a716f4, 32,  RW, XPT_MCPB_CH5, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a716f8, 32,  RW, XPT_MCPB_CH5, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a716fc, 32,  RW, XPT_MCPB_CH5, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71700, 32,  RW, XPT_MCPB_CH5, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71704, 32,  RW, XPT_MCPB_CH5, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71708, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7170c, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71710, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71714, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71718, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7171c, 32,  RW, XPT_MCPB_CH5, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71720, 32,  RW, XPT_MCPB_CH5, DCPM_STATUS)
BCHP_REGISTER(0x20a71724, 32,  RW, XPT_MCPB_CH5, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71728, 32,  RW, XPT_MCPB_CH5, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7172c, 32,  RW, XPT_MCPB_CH5, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71730, 32,  RW, XPT_MCPB_CH5, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71734, 32,  RW, XPT_MCPB_CH5, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71738, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7173c, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71740, 32,  RW, XPT_MCPB_CH5, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71744, 32,  RW, XPT_MCPB_CH5, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71748, 32,  RW, XPT_MCPB_CH5, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7174c, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71750, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71754, 32,  RW, XPT_MCPB_CH5, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71758, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7175c, 32,  RW, XPT_MCPB_CH5, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71800, 32,  RW, XPT_MCPB_CH6, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71804, 32,  RW, XPT_MCPB_CH6, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71808, 32,  RW, XPT_MCPB_CH6, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7180c, 32,  RW, XPT_MCPB_CH6, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71810, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71814, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71818, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7181c, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71820, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71824, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71828, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7182c, 32,  RW, XPT_MCPB_CH6, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71830, 32,  RW, XPT_MCPB_CH6, DMA_STATUS_0)
BCHP_REGISTER(0x20a71834, 32,  RW, XPT_MCPB_CH6, DMA_STATUS_1)
BCHP_REGISTER(0x20a71838, 32,  RW, XPT_MCPB_CH6, DMA_STATUS_2)
BCHP_REGISTER(0x20a7183c, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71840, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71844, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71848, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7184c, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71850, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71854, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71858, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7185c, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71860, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71864, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71868, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7186c, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71870, 32,  RW, XPT_MCPB_CH6, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71874, 32,  RW, XPT_MCPB_CH6, SP_PKT_LEN)
BCHP_REGISTER(0x20a71878, 32,  RW, XPT_MCPB_CH6, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7187c, 32,  RW, XPT_MCPB_CH6, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71880, 32,  RW, XPT_MCPB_CH6, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71884, 32,  RW, XPT_MCPB_CH6, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71888, 32,  RW, XPT_MCPB_CH6, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7188c, 32,  RW, XPT_MCPB_CH6, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71890, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71894, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71898, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7189c, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_3)
BCHP_REGISTER(0x20a718a0, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_4)
BCHP_REGISTER(0x20a718a4, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_5)
BCHP_REGISTER(0x20a718a8, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_6)
BCHP_REGISTER(0x20a718ac, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_7)
BCHP_REGISTER(0x20a718b0, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_8)
BCHP_REGISTER(0x20a718b4, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_9)
BCHP_REGISTER(0x20a718b8, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_10)
BCHP_REGISTER(0x20a718bc, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_11)
BCHP_REGISTER(0x20a718c0, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_12)
BCHP_REGISTER(0x20a718c4, 32,  RW, XPT_MCPB_CH6, SP_STATE_REG_13)
BCHP_REGISTER(0x20a718c8, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a718cc, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a718d0, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a718d4, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a718d8, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a718dc, 32,  RW, XPT_MCPB_CH6, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a718e0, 32,  RW, XPT_MCPB_CH6, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a718e4, 32,  RW, XPT_MCPB_CH6, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a718e8, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a718ec, 32,  RW, XPT_MCPB_CH6, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a718f0, 32,  RW, XPT_MCPB_CH6, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a718f4, 32,  RW, XPT_MCPB_CH6, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a718f8, 32,  RW, XPT_MCPB_CH6, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a718fc, 32,  RW, XPT_MCPB_CH6, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71900, 32,  RW, XPT_MCPB_CH6, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71904, 32,  RW, XPT_MCPB_CH6, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71908, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7190c, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71910, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71914, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71918, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7191c, 32,  RW, XPT_MCPB_CH6, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71920, 32,  RW, XPT_MCPB_CH6, DCPM_STATUS)
BCHP_REGISTER(0x20a71924, 32,  RW, XPT_MCPB_CH6, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71928, 32,  RW, XPT_MCPB_CH6, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7192c, 32,  RW, XPT_MCPB_CH6, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71930, 32,  RW, XPT_MCPB_CH6, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71934, 32,  RW, XPT_MCPB_CH6, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71938, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7193c, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71940, 32,  RW, XPT_MCPB_CH6, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71944, 32,  RW, XPT_MCPB_CH6, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71948, 32,  RW, XPT_MCPB_CH6, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7194c, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71950, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71954, 32,  RW, XPT_MCPB_CH6, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71958, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7195c, 32,  RW, XPT_MCPB_CH6, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71a00, 32,  RW, XPT_MCPB_CH7, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71a04, 32,  RW, XPT_MCPB_CH7, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71a08, 32,  RW, XPT_MCPB_CH7, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a71a0c, 32,  RW, XPT_MCPB_CH7, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71a10, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71a14, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71a18, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71a1c, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71a20, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71a24, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71a28, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71a2c, 32,  RW, XPT_MCPB_CH7, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71a30, 32,  RW, XPT_MCPB_CH7, DMA_STATUS_0)
BCHP_REGISTER(0x20a71a34, 32,  RW, XPT_MCPB_CH7, DMA_STATUS_1)
BCHP_REGISTER(0x20a71a38, 32,  RW, XPT_MCPB_CH7, DMA_STATUS_2)
BCHP_REGISTER(0x20a71a3c, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71a40, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71a44, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71a48, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71a4c, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71a50, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71a54, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71a58, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a71a5c, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71a60, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71a64, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71a68, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71a6c, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71a70, 32,  RW, XPT_MCPB_CH7, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71a74, 32,  RW, XPT_MCPB_CH7, SP_PKT_LEN)
BCHP_REGISTER(0x20a71a78, 32,  RW, XPT_MCPB_CH7, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a71a7c, 32,  RW, XPT_MCPB_CH7, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71a80, 32,  RW, XPT_MCPB_CH7, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71a84, 32,  RW, XPT_MCPB_CH7, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71a88, 32,  RW, XPT_MCPB_CH7, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a71a8c, 32,  RW, XPT_MCPB_CH7, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71a90, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71a94, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71a98, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_2)
BCHP_REGISTER(0x20a71a9c, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_3)
BCHP_REGISTER(0x20a71aa0, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_4)
BCHP_REGISTER(0x20a71aa4, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_5)
BCHP_REGISTER(0x20a71aa8, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_6)
BCHP_REGISTER(0x20a71aac, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_7)
BCHP_REGISTER(0x20a71ab0, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_8)
BCHP_REGISTER(0x20a71ab4, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_9)
BCHP_REGISTER(0x20a71ab8, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_10)
BCHP_REGISTER(0x20a71abc, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_11)
BCHP_REGISTER(0x20a71ac0, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_12)
BCHP_REGISTER(0x20a71ac4, 32,  RW, XPT_MCPB_CH7, SP_STATE_REG_13)
BCHP_REGISTER(0x20a71ac8, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a71acc, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a71ad0, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a71ad4, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a71ad8, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a71adc, 32,  RW, XPT_MCPB_CH7, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a71ae0, 32,  RW, XPT_MCPB_CH7, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a71ae4, 32,  RW, XPT_MCPB_CH7, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a71ae8, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a71aec, 32,  RW, XPT_MCPB_CH7, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a71af0, 32,  RW, XPT_MCPB_CH7, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a71af4, 32,  RW, XPT_MCPB_CH7, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a71af8, 32,  RW, XPT_MCPB_CH7, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a71afc, 32,  RW, XPT_MCPB_CH7, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71b00, 32,  RW, XPT_MCPB_CH7, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71b04, 32,  RW, XPT_MCPB_CH7, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71b08, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a71b0c, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71b10, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71b14, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71b18, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71b1c, 32,  RW, XPT_MCPB_CH7, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71b20, 32,  RW, XPT_MCPB_CH7, DCPM_STATUS)
BCHP_REGISTER(0x20a71b24, 32,  RW, XPT_MCPB_CH7, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71b28, 32,  RW, XPT_MCPB_CH7, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a71b2c, 32,  RW, XPT_MCPB_CH7, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71b30, 32,  RW, XPT_MCPB_CH7, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71b34, 32,  RW, XPT_MCPB_CH7, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71b38, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71b3c, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71b40, 32,  RW, XPT_MCPB_CH7, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71b44, 32,  RW, XPT_MCPB_CH7, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71b48, 32,  RW, XPT_MCPB_CH7, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a71b4c, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71b50, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71b54, 32,  RW, XPT_MCPB_CH7, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71b58, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a71b5c, 32,  RW, XPT_MCPB_CH7, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71c00, 32,  RW, XPT_MCPB_CH8, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71c04, 32,  RW, XPT_MCPB_CH8, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71c08, 32,  RW, XPT_MCPB_CH8, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a71c0c, 32,  RW, XPT_MCPB_CH8, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71c10, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71c14, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71c18, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71c1c, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71c20, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71c24, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71c28, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71c2c, 32,  RW, XPT_MCPB_CH8, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71c30, 32,  RW, XPT_MCPB_CH8, DMA_STATUS_0)
BCHP_REGISTER(0x20a71c34, 32,  RW, XPT_MCPB_CH8, DMA_STATUS_1)
BCHP_REGISTER(0x20a71c38, 32,  RW, XPT_MCPB_CH8, DMA_STATUS_2)
BCHP_REGISTER(0x20a71c3c, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71c40, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71c44, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71c48, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71c4c, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71c50, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71c54, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71c58, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a71c5c, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71c60, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71c64, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71c68, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71c6c, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71c70, 32,  RW, XPT_MCPB_CH8, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71c74, 32,  RW, XPT_MCPB_CH8, SP_PKT_LEN)
BCHP_REGISTER(0x20a71c78, 32,  RW, XPT_MCPB_CH8, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a71c7c, 32,  RW, XPT_MCPB_CH8, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71c80, 32,  RW, XPT_MCPB_CH8, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71c84, 32,  RW, XPT_MCPB_CH8, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71c88, 32,  RW, XPT_MCPB_CH8, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a71c8c, 32,  RW, XPT_MCPB_CH8, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71c90, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71c94, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71c98, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_2)
BCHP_REGISTER(0x20a71c9c, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_3)
BCHP_REGISTER(0x20a71ca0, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_4)
BCHP_REGISTER(0x20a71ca4, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_5)
BCHP_REGISTER(0x20a71ca8, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_6)
BCHP_REGISTER(0x20a71cac, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_7)
BCHP_REGISTER(0x20a71cb0, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_8)
BCHP_REGISTER(0x20a71cb4, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_9)
BCHP_REGISTER(0x20a71cb8, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_10)
BCHP_REGISTER(0x20a71cbc, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_11)
BCHP_REGISTER(0x20a71cc0, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_12)
BCHP_REGISTER(0x20a71cc4, 32,  RW, XPT_MCPB_CH8, SP_STATE_REG_13)
BCHP_REGISTER(0x20a71cc8, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a71ccc, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a71cd0, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a71cd4, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a71cd8, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a71cdc, 32,  RW, XPT_MCPB_CH8, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a71ce0, 32,  RW, XPT_MCPB_CH8, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a71ce4, 32,  RW, XPT_MCPB_CH8, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a71ce8, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a71cec, 32,  RW, XPT_MCPB_CH8, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a71cf0, 32,  RW, XPT_MCPB_CH8, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a71cf4, 32,  RW, XPT_MCPB_CH8, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a71cf8, 32,  RW, XPT_MCPB_CH8, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a71cfc, 32,  RW, XPT_MCPB_CH8, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71d00, 32,  RW, XPT_MCPB_CH8, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71d04, 32,  RW, XPT_MCPB_CH8, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71d08, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a71d0c, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71d10, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71d14, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71d18, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71d1c, 32,  RW, XPT_MCPB_CH8, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71d20, 32,  RW, XPT_MCPB_CH8, DCPM_STATUS)
BCHP_REGISTER(0x20a71d24, 32,  RW, XPT_MCPB_CH8, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71d28, 32,  RW, XPT_MCPB_CH8, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a71d2c, 32,  RW, XPT_MCPB_CH8, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71d30, 32,  RW, XPT_MCPB_CH8, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71d34, 32,  RW, XPT_MCPB_CH8, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71d38, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71d3c, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71d40, 32,  RW, XPT_MCPB_CH8, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71d44, 32,  RW, XPT_MCPB_CH8, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71d48, 32,  RW, XPT_MCPB_CH8, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a71d4c, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71d50, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71d54, 32,  RW, XPT_MCPB_CH8, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71d58, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a71d5c, 32,  RW, XPT_MCPB_CH8, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a71e00, 32,  RW, XPT_MCPB_CH9, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a71e04, 32,  RW, XPT_MCPB_CH9, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a71e08, 32,  RW, XPT_MCPB_CH9, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a71e0c, 32,  RW, XPT_MCPB_CH9, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a71e10, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71e14, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71e18, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71e1c, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71e20, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71e24, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71e28, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a71e2c, 32,  RW, XPT_MCPB_CH9, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a71e30, 32,  RW, XPT_MCPB_CH9, DMA_STATUS_0)
BCHP_REGISTER(0x20a71e34, 32,  RW, XPT_MCPB_CH9, DMA_STATUS_1)
BCHP_REGISTER(0x20a71e38, 32,  RW, XPT_MCPB_CH9, DMA_STATUS_2)
BCHP_REGISTER(0x20a71e3c, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a71e40, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a71e44, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71e48, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71e4c, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71e50, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71e54, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71e58, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a71e5c, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a71e60, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71e64, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71e68, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71e6c, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71e70, 32,  RW, XPT_MCPB_CH9, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71e74, 32,  RW, XPT_MCPB_CH9, SP_PKT_LEN)
BCHP_REGISTER(0x20a71e78, 32,  RW, XPT_MCPB_CH9, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a71e7c, 32,  RW, XPT_MCPB_CH9, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a71e80, 32,  RW, XPT_MCPB_CH9, SP_TS_CONFIG)
BCHP_REGISTER(0x20a71e84, 32,  RW, XPT_MCPB_CH9, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a71e88, 32,  RW, XPT_MCPB_CH9, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a71e8c, 32,  RW, XPT_MCPB_CH9, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a71e90, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_0)
BCHP_REGISTER(0x20a71e94, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_1)
BCHP_REGISTER(0x20a71e98, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_2)
BCHP_REGISTER(0x20a71e9c, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_3)
BCHP_REGISTER(0x20a71ea0, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_4)
BCHP_REGISTER(0x20a71ea4, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_5)
BCHP_REGISTER(0x20a71ea8, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_6)
BCHP_REGISTER(0x20a71eac, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_7)
BCHP_REGISTER(0x20a71eb0, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_8)
BCHP_REGISTER(0x20a71eb4, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_9)
BCHP_REGISTER(0x20a71eb8, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_10)
BCHP_REGISTER(0x20a71ebc, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_11)
BCHP_REGISTER(0x20a71ec0, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_12)
BCHP_REGISTER(0x20a71ec4, 32,  RW, XPT_MCPB_CH9, SP_STATE_REG_13)
BCHP_REGISTER(0x20a71ec8, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a71ecc, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a71ed0, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a71ed4, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a71ed8, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a71edc, 32,  RW, XPT_MCPB_CH9, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a71ee0, 32,  RW, XPT_MCPB_CH9, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a71ee4, 32,  RW, XPT_MCPB_CH9, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a71ee8, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a71eec, 32,  RW, XPT_MCPB_CH9, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a71ef0, 32,  RW, XPT_MCPB_CH9, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a71ef4, 32,  RW, XPT_MCPB_CH9, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a71ef8, 32,  RW, XPT_MCPB_CH9, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a71efc, 32,  RW, XPT_MCPB_CH9, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a71f00, 32,  RW, XPT_MCPB_CH9, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a71f04, 32,  RW, XPT_MCPB_CH9, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a71f08, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a71f0c, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a71f10, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a71f14, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a71f18, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a71f1c, 32,  RW, XPT_MCPB_CH9, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a71f20, 32,  RW, XPT_MCPB_CH9, DCPM_STATUS)
BCHP_REGISTER(0x20a71f24, 32,  RW, XPT_MCPB_CH9, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a71f28, 32,  RW, XPT_MCPB_CH9, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a71f2c, 32,  RW, XPT_MCPB_CH9, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a71f30, 32,  RW, XPT_MCPB_CH9, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a71f34, 32,  RW, XPT_MCPB_CH9, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a71f38, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a71f3c, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a71f40, 32,  RW, XPT_MCPB_CH9, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a71f44, 32,  RW, XPT_MCPB_CH9, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a71f48, 32,  RW, XPT_MCPB_CH9, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a71f4c, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a71f50, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a71f54, 32,  RW, XPT_MCPB_CH9, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a71f58, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a71f5c, 32,  RW, XPT_MCPB_CH9, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72000, 32,  RW, XPT_MCPB_CH10, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72004, 32,  RW, XPT_MCPB_CH10, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72008, 32,  RW, XPT_MCPB_CH10, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7200c, 32,  RW, XPT_MCPB_CH10, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72010, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72014, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72018, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7201c, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72020, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72024, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72028, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7202c, 32,  RW, XPT_MCPB_CH10, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72030, 32,  RW, XPT_MCPB_CH10, DMA_STATUS_0)
BCHP_REGISTER(0x20a72034, 32,  RW, XPT_MCPB_CH10, DMA_STATUS_1)
BCHP_REGISTER(0x20a72038, 32,  RW, XPT_MCPB_CH10, DMA_STATUS_2)
BCHP_REGISTER(0x20a7203c, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72040, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72044, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72048, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7204c, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72050, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72054, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72058, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7205c, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72060, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72064, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72068, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7206c, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72070, 32,  RW, XPT_MCPB_CH10, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72074, 32,  RW, XPT_MCPB_CH10, SP_PKT_LEN)
BCHP_REGISTER(0x20a72078, 32,  RW, XPT_MCPB_CH10, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7207c, 32,  RW, XPT_MCPB_CH10, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72080, 32,  RW, XPT_MCPB_CH10, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72084, 32,  RW, XPT_MCPB_CH10, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72088, 32,  RW, XPT_MCPB_CH10, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7208c, 32,  RW, XPT_MCPB_CH10, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72090, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72094, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72098, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7209c, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_3)
BCHP_REGISTER(0x20a720a0, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_4)
BCHP_REGISTER(0x20a720a4, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_5)
BCHP_REGISTER(0x20a720a8, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_6)
BCHP_REGISTER(0x20a720ac, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_7)
BCHP_REGISTER(0x20a720b0, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_8)
BCHP_REGISTER(0x20a720b4, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_9)
BCHP_REGISTER(0x20a720b8, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_10)
BCHP_REGISTER(0x20a720bc, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_11)
BCHP_REGISTER(0x20a720c0, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_12)
BCHP_REGISTER(0x20a720c4, 32,  RW, XPT_MCPB_CH10, SP_STATE_REG_13)
BCHP_REGISTER(0x20a720c8, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a720cc, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a720d0, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a720d4, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a720d8, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a720dc, 32,  RW, XPT_MCPB_CH10, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a720e0, 32,  RW, XPT_MCPB_CH10, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a720e4, 32,  RW, XPT_MCPB_CH10, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a720e8, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a720ec, 32,  RW, XPT_MCPB_CH10, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a720f0, 32,  RW, XPT_MCPB_CH10, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a720f4, 32,  RW, XPT_MCPB_CH10, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a720f8, 32,  RW, XPT_MCPB_CH10, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a720fc, 32,  RW, XPT_MCPB_CH10, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72100, 32,  RW, XPT_MCPB_CH10, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72104, 32,  RW, XPT_MCPB_CH10, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72108, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7210c, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72110, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72114, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72118, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7211c, 32,  RW, XPT_MCPB_CH10, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72120, 32,  RW, XPT_MCPB_CH10, DCPM_STATUS)
BCHP_REGISTER(0x20a72124, 32,  RW, XPT_MCPB_CH10, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72128, 32,  RW, XPT_MCPB_CH10, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7212c, 32,  RW, XPT_MCPB_CH10, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72130, 32,  RW, XPT_MCPB_CH10, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72134, 32,  RW, XPT_MCPB_CH10, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72138, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7213c, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72140, 32,  RW, XPT_MCPB_CH10, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72144, 32,  RW, XPT_MCPB_CH10, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72148, 32,  RW, XPT_MCPB_CH10, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7214c, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72150, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72154, 32,  RW, XPT_MCPB_CH10, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72158, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7215c, 32,  RW, XPT_MCPB_CH10, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72200, 32,  RW, XPT_MCPB_CH11, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72204, 32,  RW, XPT_MCPB_CH11, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72208, 32,  RW, XPT_MCPB_CH11, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7220c, 32,  RW, XPT_MCPB_CH11, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72210, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72214, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72218, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7221c, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72220, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72224, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72228, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7222c, 32,  RW, XPT_MCPB_CH11, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72230, 32,  RW, XPT_MCPB_CH11, DMA_STATUS_0)
BCHP_REGISTER(0x20a72234, 32,  RW, XPT_MCPB_CH11, DMA_STATUS_1)
BCHP_REGISTER(0x20a72238, 32,  RW, XPT_MCPB_CH11, DMA_STATUS_2)
BCHP_REGISTER(0x20a7223c, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72240, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72244, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72248, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7224c, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72250, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72254, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72258, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7225c, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72260, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72264, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72268, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7226c, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72270, 32,  RW, XPT_MCPB_CH11, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72274, 32,  RW, XPT_MCPB_CH11, SP_PKT_LEN)
BCHP_REGISTER(0x20a72278, 32,  RW, XPT_MCPB_CH11, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7227c, 32,  RW, XPT_MCPB_CH11, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72280, 32,  RW, XPT_MCPB_CH11, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72284, 32,  RW, XPT_MCPB_CH11, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72288, 32,  RW, XPT_MCPB_CH11, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7228c, 32,  RW, XPT_MCPB_CH11, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72290, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72294, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72298, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7229c, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_3)
BCHP_REGISTER(0x20a722a0, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_4)
BCHP_REGISTER(0x20a722a4, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_5)
BCHP_REGISTER(0x20a722a8, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_6)
BCHP_REGISTER(0x20a722ac, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_7)
BCHP_REGISTER(0x20a722b0, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_8)
BCHP_REGISTER(0x20a722b4, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_9)
BCHP_REGISTER(0x20a722b8, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_10)
BCHP_REGISTER(0x20a722bc, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_11)
BCHP_REGISTER(0x20a722c0, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_12)
BCHP_REGISTER(0x20a722c4, 32,  RW, XPT_MCPB_CH11, SP_STATE_REG_13)
BCHP_REGISTER(0x20a722c8, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a722cc, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a722d0, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a722d4, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a722d8, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a722dc, 32,  RW, XPT_MCPB_CH11, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a722e0, 32,  RW, XPT_MCPB_CH11, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a722e4, 32,  RW, XPT_MCPB_CH11, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a722e8, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a722ec, 32,  RW, XPT_MCPB_CH11, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a722f0, 32,  RW, XPT_MCPB_CH11, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a722f4, 32,  RW, XPT_MCPB_CH11, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a722f8, 32,  RW, XPT_MCPB_CH11, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a722fc, 32,  RW, XPT_MCPB_CH11, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72300, 32,  RW, XPT_MCPB_CH11, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72304, 32,  RW, XPT_MCPB_CH11, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72308, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7230c, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72310, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72314, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72318, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7231c, 32,  RW, XPT_MCPB_CH11, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72320, 32,  RW, XPT_MCPB_CH11, DCPM_STATUS)
BCHP_REGISTER(0x20a72324, 32,  RW, XPT_MCPB_CH11, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72328, 32,  RW, XPT_MCPB_CH11, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7232c, 32,  RW, XPT_MCPB_CH11, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72330, 32,  RW, XPT_MCPB_CH11, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72334, 32,  RW, XPT_MCPB_CH11, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72338, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7233c, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72340, 32,  RW, XPT_MCPB_CH11, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72344, 32,  RW, XPT_MCPB_CH11, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72348, 32,  RW, XPT_MCPB_CH11, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7234c, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72350, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72354, 32,  RW, XPT_MCPB_CH11, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72358, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7235c, 32,  RW, XPT_MCPB_CH11, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72400, 32,  RW, XPT_MCPB_CH12, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72404, 32,  RW, XPT_MCPB_CH12, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72408, 32,  RW, XPT_MCPB_CH12, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7240c, 32,  RW, XPT_MCPB_CH12, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72410, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72414, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72418, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7241c, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72420, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72424, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72428, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7242c, 32,  RW, XPT_MCPB_CH12, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72430, 32,  RW, XPT_MCPB_CH12, DMA_STATUS_0)
BCHP_REGISTER(0x20a72434, 32,  RW, XPT_MCPB_CH12, DMA_STATUS_1)
BCHP_REGISTER(0x20a72438, 32,  RW, XPT_MCPB_CH12, DMA_STATUS_2)
BCHP_REGISTER(0x20a7243c, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72440, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72444, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72448, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7244c, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72450, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72454, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72458, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7245c, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72460, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72464, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72468, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7246c, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72470, 32,  RW, XPT_MCPB_CH12, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72474, 32,  RW, XPT_MCPB_CH12, SP_PKT_LEN)
BCHP_REGISTER(0x20a72478, 32,  RW, XPT_MCPB_CH12, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7247c, 32,  RW, XPT_MCPB_CH12, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72480, 32,  RW, XPT_MCPB_CH12, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72484, 32,  RW, XPT_MCPB_CH12, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72488, 32,  RW, XPT_MCPB_CH12, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7248c, 32,  RW, XPT_MCPB_CH12, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72490, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72494, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72498, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7249c, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_3)
BCHP_REGISTER(0x20a724a0, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_4)
BCHP_REGISTER(0x20a724a4, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_5)
BCHP_REGISTER(0x20a724a8, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_6)
BCHP_REGISTER(0x20a724ac, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_7)
BCHP_REGISTER(0x20a724b0, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_8)
BCHP_REGISTER(0x20a724b4, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_9)
BCHP_REGISTER(0x20a724b8, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_10)
BCHP_REGISTER(0x20a724bc, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_11)
BCHP_REGISTER(0x20a724c0, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_12)
BCHP_REGISTER(0x20a724c4, 32,  RW, XPT_MCPB_CH12, SP_STATE_REG_13)
BCHP_REGISTER(0x20a724c8, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a724cc, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a724d0, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a724d4, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a724d8, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a724dc, 32,  RW, XPT_MCPB_CH12, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a724e0, 32,  RW, XPT_MCPB_CH12, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a724e4, 32,  RW, XPT_MCPB_CH12, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a724e8, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a724ec, 32,  RW, XPT_MCPB_CH12, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a724f0, 32,  RW, XPT_MCPB_CH12, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a724f4, 32,  RW, XPT_MCPB_CH12, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a724f8, 32,  RW, XPT_MCPB_CH12, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a724fc, 32,  RW, XPT_MCPB_CH12, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72500, 32,  RW, XPT_MCPB_CH12, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72504, 32,  RW, XPT_MCPB_CH12, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72508, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7250c, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72510, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72514, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72518, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7251c, 32,  RW, XPT_MCPB_CH12, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72520, 32,  RW, XPT_MCPB_CH12, DCPM_STATUS)
BCHP_REGISTER(0x20a72524, 32,  RW, XPT_MCPB_CH12, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72528, 32,  RW, XPT_MCPB_CH12, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7252c, 32,  RW, XPT_MCPB_CH12, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72530, 32,  RW, XPT_MCPB_CH12, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72534, 32,  RW, XPT_MCPB_CH12, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72538, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7253c, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72540, 32,  RW, XPT_MCPB_CH12, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72544, 32,  RW, XPT_MCPB_CH12, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72548, 32,  RW, XPT_MCPB_CH12, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7254c, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72550, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72554, 32,  RW, XPT_MCPB_CH12, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72558, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7255c, 32,  RW, XPT_MCPB_CH12, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72600, 32,  RW, XPT_MCPB_CH13, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72604, 32,  RW, XPT_MCPB_CH13, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72608, 32,  RW, XPT_MCPB_CH13, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7260c, 32,  RW, XPT_MCPB_CH13, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72610, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72614, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72618, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7261c, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72620, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72624, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72628, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7262c, 32,  RW, XPT_MCPB_CH13, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72630, 32,  RW, XPT_MCPB_CH13, DMA_STATUS_0)
BCHP_REGISTER(0x20a72634, 32,  RW, XPT_MCPB_CH13, DMA_STATUS_1)
BCHP_REGISTER(0x20a72638, 32,  RW, XPT_MCPB_CH13, DMA_STATUS_2)
BCHP_REGISTER(0x20a7263c, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72640, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72644, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72648, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7264c, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72650, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72654, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72658, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7265c, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72660, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72664, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72668, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7266c, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72670, 32,  RW, XPT_MCPB_CH13, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72674, 32,  RW, XPT_MCPB_CH13, SP_PKT_LEN)
BCHP_REGISTER(0x20a72678, 32,  RW, XPT_MCPB_CH13, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7267c, 32,  RW, XPT_MCPB_CH13, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72680, 32,  RW, XPT_MCPB_CH13, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72684, 32,  RW, XPT_MCPB_CH13, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72688, 32,  RW, XPT_MCPB_CH13, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7268c, 32,  RW, XPT_MCPB_CH13, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72690, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72694, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72698, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7269c, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_3)
BCHP_REGISTER(0x20a726a0, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_4)
BCHP_REGISTER(0x20a726a4, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_5)
BCHP_REGISTER(0x20a726a8, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_6)
BCHP_REGISTER(0x20a726ac, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_7)
BCHP_REGISTER(0x20a726b0, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_8)
BCHP_REGISTER(0x20a726b4, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_9)
BCHP_REGISTER(0x20a726b8, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_10)
BCHP_REGISTER(0x20a726bc, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_11)
BCHP_REGISTER(0x20a726c0, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_12)
BCHP_REGISTER(0x20a726c4, 32,  RW, XPT_MCPB_CH13, SP_STATE_REG_13)
BCHP_REGISTER(0x20a726c8, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a726cc, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a726d0, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a726d4, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a726d8, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a726dc, 32,  RW, XPT_MCPB_CH13, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a726e0, 32,  RW, XPT_MCPB_CH13, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a726e4, 32,  RW, XPT_MCPB_CH13, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a726e8, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a726ec, 32,  RW, XPT_MCPB_CH13, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a726f0, 32,  RW, XPT_MCPB_CH13, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a726f4, 32,  RW, XPT_MCPB_CH13, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a726f8, 32,  RW, XPT_MCPB_CH13, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a726fc, 32,  RW, XPT_MCPB_CH13, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72700, 32,  RW, XPT_MCPB_CH13, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72704, 32,  RW, XPT_MCPB_CH13, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72708, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7270c, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72710, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72714, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72718, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7271c, 32,  RW, XPT_MCPB_CH13, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72720, 32,  RW, XPT_MCPB_CH13, DCPM_STATUS)
BCHP_REGISTER(0x20a72724, 32,  RW, XPT_MCPB_CH13, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72728, 32,  RW, XPT_MCPB_CH13, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7272c, 32,  RW, XPT_MCPB_CH13, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72730, 32,  RW, XPT_MCPB_CH13, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72734, 32,  RW, XPT_MCPB_CH13, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72738, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7273c, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72740, 32,  RW, XPT_MCPB_CH13, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72744, 32,  RW, XPT_MCPB_CH13, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72748, 32,  RW, XPT_MCPB_CH13, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7274c, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72750, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72754, 32,  RW, XPT_MCPB_CH13, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72758, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7275c, 32,  RW, XPT_MCPB_CH13, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72800, 32,  RW, XPT_MCPB_CH14, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72804, 32,  RW, XPT_MCPB_CH14, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72808, 32,  RW, XPT_MCPB_CH14, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a7280c, 32,  RW, XPT_MCPB_CH14, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72810, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72814, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72818, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7281c, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72820, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72824, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72828, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a7282c, 32,  RW, XPT_MCPB_CH14, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72830, 32,  RW, XPT_MCPB_CH14, DMA_STATUS_0)
BCHP_REGISTER(0x20a72834, 32,  RW, XPT_MCPB_CH14, DMA_STATUS_1)
BCHP_REGISTER(0x20a72838, 32,  RW, XPT_MCPB_CH14, DMA_STATUS_2)
BCHP_REGISTER(0x20a7283c, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72840, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72844, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72848, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7284c, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72850, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72854, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72858, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a7285c, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72860, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72864, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72868, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a7286c, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72870, 32,  RW, XPT_MCPB_CH14, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72874, 32,  RW, XPT_MCPB_CH14, SP_PKT_LEN)
BCHP_REGISTER(0x20a72878, 32,  RW, XPT_MCPB_CH14, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a7287c, 32,  RW, XPT_MCPB_CH14, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72880, 32,  RW, XPT_MCPB_CH14, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72884, 32,  RW, XPT_MCPB_CH14, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72888, 32,  RW, XPT_MCPB_CH14, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a7288c, 32,  RW, XPT_MCPB_CH14, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72890, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72894, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72898, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_2)
BCHP_REGISTER(0x20a7289c, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_3)
BCHP_REGISTER(0x20a728a0, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_4)
BCHP_REGISTER(0x20a728a4, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_5)
BCHP_REGISTER(0x20a728a8, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_6)
BCHP_REGISTER(0x20a728ac, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_7)
BCHP_REGISTER(0x20a728b0, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_8)
BCHP_REGISTER(0x20a728b4, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_9)
BCHP_REGISTER(0x20a728b8, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_10)
BCHP_REGISTER(0x20a728bc, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_11)
BCHP_REGISTER(0x20a728c0, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_12)
BCHP_REGISTER(0x20a728c4, 32,  RW, XPT_MCPB_CH14, SP_STATE_REG_13)
BCHP_REGISTER(0x20a728c8, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a728cc, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a728d0, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a728d4, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a728d8, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a728dc, 32,  RW, XPT_MCPB_CH14, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a728e0, 32,  RW, XPT_MCPB_CH14, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a728e4, 32,  RW, XPT_MCPB_CH14, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a728e8, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a728ec, 32,  RW, XPT_MCPB_CH14, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a728f0, 32,  RW, XPT_MCPB_CH14, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a728f4, 32,  RW, XPT_MCPB_CH14, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a728f8, 32,  RW, XPT_MCPB_CH14, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a728fc, 32,  RW, XPT_MCPB_CH14, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72900, 32,  RW, XPT_MCPB_CH14, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72904, 32,  RW, XPT_MCPB_CH14, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72908, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a7290c, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72910, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72914, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72918, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a7291c, 32,  RW, XPT_MCPB_CH14, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72920, 32,  RW, XPT_MCPB_CH14, DCPM_STATUS)
BCHP_REGISTER(0x20a72924, 32,  RW, XPT_MCPB_CH14, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72928, 32,  RW, XPT_MCPB_CH14, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a7292c, 32,  RW, XPT_MCPB_CH14, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72930, 32,  RW, XPT_MCPB_CH14, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72934, 32,  RW, XPT_MCPB_CH14, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72938, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a7293c, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72940, 32,  RW, XPT_MCPB_CH14, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72944, 32,  RW, XPT_MCPB_CH14, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72948, 32,  RW, XPT_MCPB_CH14, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a7294c, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72950, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72954, 32,  RW, XPT_MCPB_CH14, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72958, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a7295c, 32,  RW, XPT_MCPB_CH14, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a72a00, 32,  RW, XPT_MCPB_CH15, DMA_DESC_CONTROL)
BCHP_REGISTER(0x20a72a04, 32,  RW, XPT_MCPB_CH15, DMA_DATA_CONTROL)
BCHP_REGISTER(0x20a72a08, 32,  RW, XPT_MCPB_CH15, DMA_CURR_DESC_ADDRESS)
BCHP_REGISTER(0x20a72a0c, 32,  RW, XPT_MCPB_CH15, DMA_NEXT_DESC_ADDRESS)
BCHP_REGISTER(0x20a72a10, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_BASE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72a14, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_BASE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72a18, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_END_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72a1c, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_END_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72a20, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_CURR_RD_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72a24, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_CURR_RD_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72a28, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_WRITE_ADDRESS_UPPER)
BCHP_REGISTER(0x20a72a2c, 32,  RW, XPT_MCPB_CH15, DMA_BUFF_WRITE_ADDRESS_LOWER)
BCHP_REGISTER(0x20a72a30, 32,  RW, XPT_MCPB_CH15, DMA_STATUS_0)
BCHP_REGISTER(0x20a72a34, 32,  RW, XPT_MCPB_CH15, DMA_STATUS_1)
BCHP_REGISTER(0x20a72a38, 32,  RW, XPT_MCPB_CH15, DMA_STATUS_2)
BCHP_REGISTER(0x20a72a3c, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_STATUS_0)
BCHP_REGISTER(0x20a72a40, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_STATUS_1)
BCHP_REGISTER(0x20a72a44, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72a48, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72a4c, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72a50, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72a54, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT0_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72a58, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_STATUS_0)
BCHP_REGISTER(0x20a72a5c, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_STATUS_1)
BCHP_REGISTER(0x20a72a60, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72a64, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_CURR_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72a68, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_CURR_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72a6c, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72a70, 32,  RW, XPT_MCPB_CH15, DMA_DESC_SLOT1_PKT2PKT_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72a74, 32,  RW, XPT_MCPB_CH15, SP_PKT_LEN)
BCHP_REGISTER(0x20a72a78, 32,  RW, XPT_MCPB_CH15, SP_PARSER_CTRL)
BCHP_REGISTER(0x20a72a7c, 32,  RW, XPT_MCPB_CH15, SP_PARSER_CTRL1)
BCHP_REGISTER(0x20a72a80, 32,  RW, XPT_MCPB_CH15, SP_TS_CONFIG)
BCHP_REGISTER(0x20a72a84, 32,  RW, XPT_MCPB_CH15, SP_PES_ES_CONFIG)
BCHP_REGISTER(0x20a72a88, 32,  RW, XPT_MCPB_CH15, SP_PES_SYNC_COUNTER)
BCHP_REGISTER(0x20a72a8c, 32,  RW, XPT_MCPB_CH15, SP_ASF_CONFIG)
BCHP_REGISTER(0x20a72a90, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_0)
BCHP_REGISTER(0x20a72a94, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_1)
BCHP_REGISTER(0x20a72a98, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_2)
BCHP_REGISTER(0x20a72a9c, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_3)
BCHP_REGISTER(0x20a72aa0, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_4)
BCHP_REGISTER(0x20a72aa4, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_5)
BCHP_REGISTER(0x20a72aa8, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_6)
BCHP_REGISTER(0x20a72aac, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_7)
BCHP_REGISTER(0x20a72ab0, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_8)
BCHP_REGISTER(0x20a72ab4, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_9)
BCHP_REGISTER(0x20a72ab8, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_10)
BCHP_REGISTER(0x20a72abc, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_11)
BCHP_REGISTER(0x20a72ac0, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_12)
BCHP_REGISTER(0x20a72ac4, 32,  RW, XPT_MCPB_CH15, SP_STATE_REG_13)
BCHP_REGISTER(0x20a72ac8, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF_CTRL)
BCHP_REGISTER(0x20a72acc, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF_CRC)
BCHP_REGISTER(0x20a72ad0, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF0_RW_STATUS)
BCHP_REGISTER(0x20a72ad4, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF0_RO_STATUS)
BCHP_REGISTER(0x20a72ad8, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF1_RW_STATUS)
BCHP_REGISTER(0x20a72adc, 32,  RW, XPT_MCPB_CH15, DMA_BBUFF1_RO_STATUS)
BCHP_REGISTER(0x20a72ae0, 32,  RW, XPT_MCPB_CH15, TMEU_BLOCKOUT_CTRL)
BCHP_REGISTER(0x20a72ae4, 32,  RW, XPT_MCPB_CH15, TMEU_NEXT_BO_MON)
BCHP_REGISTER(0x20a72ae8, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_CTRL)
BCHP_REGISTER(0x20a72aec, 32,  RW, XPT_MCPB_CH15, TMEU_REF_DIFF_VALUE_TS_MBOX)
BCHP_REGISTER(0x20a72af0, 32,  RW, XPT_MCPB_CH15, TMEU_TS_ERR_BOUND_EARLY)
BCHP_REGISTER(0x20a72af4, 32,  RW, XPT_MCPB_CH15, TMEU_TS_ERR_BOUND_LATE)
BCHP_REGISTER(0x20a72af8, 32,  RW, XPT_MCPB_CH15, TMEU_NEXT_GPC_MON)
BCHP_REGISTER(0x20a72afc, 32,  RW, XPT_MCPB_CH15, TMEU_REF_DIFF_VALUE_SIGN)
BCHP_REGISTER(0x20a72b00, 32,  RW, XPT_MCPB_CH15, TMEU_PES_PACING_CTRL)
BCHP_REGISTER(0x20a72b04, 32,  RW, XPT_MCPB_CH15, TMEU_SLOT_STATUS)
BCHP_REGISTER(0x20a72b08, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_SLOT0_REG1)
BCHP_REGISTER(0x20a72b0c, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_SLOT0_REG2)
BCHP_REGISTER(0x20a72b10, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_SLOT1_REG1)
BCHP_REGISTER(0x20a72b14, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_SLOT1_REG2)
BCHP_REGISTER(0x20a72b18, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_LAST_TIMESTAMP_DELTA)
BCHP_REGISTER(0x20a72b1c, 32,  RW, XPT_MCPB_CH15, TMEU_TIMING_INFO_LAST_NEXT_TIMESTAMP)
BCHP_REGISTER(0x20a72b20, 32,  RW, XPT_MCPB_CH15, DCPM_STATUS)
BCHP_REGISTER(0x20a72b24, 32,  RW, XPT_MCPB_CH15, DCPM_DESC_ADDR)
BCHP_REGISTER(0x20a72b28, 32,  RW, XPT_MCPB_CH15, DCPM_DESC_DONE_INT_ADDR)
BCHP_REGISTER(0x20a72b2c, 32,  RW, XPT_MCPB_CH15, DCPM_PAUSE_AFTER_GROUP_PACKETS_CTRL)
BCHP_REGISTER(0x20a72b30, 32,  RW, XPT_MCPB_CH15, DCPM_PAUSE_AFTER_GROUP_PACKETS_PKT_COUNTER)
BCHP_REGISTER(0x20a72b34, 32,  RW, XPT_MCPB_CH15, DCPM_LOCAL_PACKET_COUNTER)
BCHP_REGISTER(0x20a72b38, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_UPPER)
BCHP_REGISTER(0x20a72b3c, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_LOWER)
BCHP_REGISTER(0x20a72b40, 32,  RW, XPT_MCPB_CH15, DCPM_CURR_DESC_ADDR)
BCHP_REGISTER(0x20a72b44, 32,  RW, XPT_MCPB_CH15, DCPM_SLOT_STATUS)
BCHP_REGISTER(0x20a72b48, 32,  RW, XPT_MCPB_CH15, DCPM_DESC_ADDR_SLOT_0)
BCHP_REGISTER(0x20a72b4c, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_SLOT_0_UPPER)
BCHP_REGISTER(0x20a72b50, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_SLOT_0_LOWER)
BCHP_REGISTER(0x20a72b54, 32,  RW, XPT_MCPB_CH15, DCPM_DESC_ADDR_SLOT_1)
BCHP_REGISTER(0x20a72b58, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_SLOT_1_UPPER)
BCHP_REGISTER(0x20a72b5c, 32,  RW, XPT_MCPB_CH15, DCPM_DATA_ADDR_SLOT_1_LOWER)
BCHP_REGISTER(0x20a78000, 32,  RW, XPT_XPU, TESTREG)
BCHP_REGISTER(0x20a78004, 32,  RW, XPT_XPU, PSW)
BCHP_REGISTER(0x20a78008, 32,  RW, XPT_XPU, PSWSH)
BCHP_REGISTER(0x20a78010, 32,  RW, XPT_XPU, SP)
BCHP_REGISTER(0x20a78018, 32,  RW, XPT_XPU, PC)
BCHP_REGISTER(0x20a78020, 32,  RW, XPT_XPU, STACK_0)
BCHP_REGISTER(0x20a78024, 32,  RW, XPT_XPU, STACK_1)
BCHP_REGISTER(0x20a78028, 32,  RW, XPT_XPU, STACK_2)
BCHP_REGISTER(0x20a7802c, 32,  RW, XPT_XPU, STACK_3)
BCHP_REGISTER(0x20a78030, 32,  RW, XPT_XPU, REG_R0_R1)
BCHP_REGISTER(0x20a78034, 32,  RW, XPT_XPU, REG_R2_R3)
BCHP_REGISTER(0x20a78038, 32,  RW, XPT_XPU, REG_R4_R5)
BCHP_REGISTER(0x20a7803c, 32,  RW, XPT_XPU, REG_R6_R7)
BCHP_REGISTER(0x20a78040, 32,  RW, XPT_XPU, REG_R8_R9)
BCHP_REGISTER(0x20a78044, 32,  RW, XPT_XPU, REG_R10_R11)
BCHP_REGISTER(0x20a78048, 32,  RW, XPT_XPU, REG_R12_R13)
BCHP_REGISTER(0x20a7804c, 32,  RW, XPT_XPU, REG_R14_R15)
BCHP_REGISTER(0x20a7f000, 32,  RW, XPT_SECURE_BUS_IF, DUMMY)
BCHP_REGISTER(0x20b00000, 32,  RO, USB_CAPS, USB_EHCI_CAPS)
BCHP_REGISTER(0x20b00004, 32,  RO, USB_CAPS, USB_OHCI_CAPS)
BCHP_REGISTER(0x20b00008, 32,  RO, USB_CAPS, USB_XHCI_CAPS)
BCHP_REGISTER(0x20b0000c, 32,  RO, USB_CAPS, USB_DEV_CAPS)
BCHP_REGISTER(0x20b00010, 32,  RO, USB_CAPS, USB_EHCI1_CAPS)
BCHP_REGISTER(0x20b00014, 32,  RO, USB_CAPS, USB_OHCI1_CAPS)
BCHP_REGISTER(0x20b00018, 32,  RO, USB_CAPS, USB_XHCI1_CAPS)
BCHP_REGISTER(0x20b0001c, 32,  RO, USB_CAPS, USB_DEV1_CAPS)
BCHP_REGISTER(0x20b00020, 32,  RO, USB_CAPS, USB_EHCI2_CAPS)
BCHP_REGISTER(0x20b00024, 32,  RO, USB_CAPS, USB_OHCI2_CAPS)
BCHP_REGISTER(0x20b00028, 32,  RO, USB_CAPS, USB_XHCI2_CAPS)
BCHP_REGISTER(0x20b0002c, 32,  RO, USB_CAPS, USB_DEV2_CAPS)
BCHP_REGISTER(0x20b00100, 32,  RO, USB_GR_BRIDGE, REVISION)
BCHP_REGISTER(0x20b00104, 32,  RW, USB_GR_BRIDGE, CTRL)
BCHP_REGISTER(0x20b00108, 32,  RW, USB_GR_BRIDGE, SW_INIT_0)
BCHP_REGISTER(0x20b0010c, 32,  RW, USB_GR_BRIDGE, SW_INIT_1)
BCHP_REGISTER(0x20b00180, 32,  RO, USB_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20b00184, 32,  WO, USB_INTR2, CPU_SET)
BCHP_REGISTER(0x20b00188, 32,  WO, USB_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x20b0018c, 32,  RO, USB_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20b00190, 32,  WO, USB_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20b00194, 32,  WO, USB_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20b00198, 32,  RO, USB_INTR2, PCI_STATUS)
BCHP_REGISTER(0x20b0019c, 32,  WO, USB_INTR2, PCI_SET)
BCHP_REGISTER(0x20b001a0, 32,  WO, USB_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20b001a4, 32,  RO, USB_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20b001a8, 32,  WO, USB_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x20b001ac, 32,  WO, USB_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20b00200, 32,  RW, USB_CTRL, SETUP)
BCHP_REGISTER(0x20b00204, 32,  RW, USB_CTRL, PLL_CTL)
BCHP_REGISTER(0x20b00208, 32,  RW, USB_CTRL, FLADJ_VALUE)
BCHP_REGISTER(0x20b0020c, 32,  RW, USB_CTRL, EBRIDGE)
BCHP_REGISTER(0x20b00210, 32,  RW, USB_CTRL, OBRIDGE)
BCHP_REGISTER(0x20b00214, 32,  RW, USB_CTRL, MDIO)
BCHP_REGISTER(0x20b00218, 32,  RO, USB_CTRL, MDIO2)
BCHP_REGISTER(0x20b0021c, 32,  RW, USB_CTRL, TEST_PORT_CTL)
BCHP_REGISTER(0x20b00220, 32,  RW, USB_CTRL, USB_SIMCTL)
BCHP_REGISTER(0x20b00224, 32,  RW, USB_CTRL, USB_TESTCTL)
BCHP_REGISTER(0x20b00228, 32,  RO, USB_CTRL, USB_TESTMON)
BCHP_REGISTER(0x20b0022c, 32,  RW, USB_CTRL, UTMI_CTL_1)
BCHP_REGISTER(0x20b00230, 32,  RW, USB_CTRL, UTMI_CTL_2)
BCHP_REGISTER(0x20b00234, 32,  RW, USB_CTRL, USB_PM)
BCHP_REGISTER(0x20b00238, 32,  RW, USB_CTRL, USB_PM_STATUS)
BCHP_REGISTER(0x20b0023c, 32,  RW, USB_CTRL, OHCI_ADDR_EXT)
BCHP_REGISTER(0x20b00240, 32,  RW, USB_CTRL, PLL_LDO_CTL)
BCHP_REGISTER(0x20b00244, 32,  RW, USB_CTRL, PLL_LDO_PLLBIAS)
BCHP_REGISTER(0x20b00248, 32,  RW, USB_CTRL, PLL_AFE_BG_CNTL)
BCHP_REGISTER(0x20b0024c, 32,  RW, USB_CTRL, AFE_USBIO_TST)
BCHP_REGISTER(0x20b00250, 32,  RW, USB_CTRL, PLL_NDIV_FRAC)
BCHP_REGISTER(0x20b00254, 32,  RW, USB_CTRL, TP_DIAG)
BCHP_REGISTER(0x20b00258, 32,  RW, USB_CTRL, TP_DIAG1)
BCHP_REGISTER(0x20b0025c, 32,  RO, USB_CTRL, USBD_DRD_STATUS)
BCHP_REGISTER(0x20b00278, 32,  RW, USB_CTRL, SPARE5)
BCHP_REGISTER(0x20b0027c, 32,  RW, USB_CTRL, SPARE6)
BCHP_REGISTER(0x20b00290, 32,  RW, USB_CTRL, USB_DEVICE_CTL1)
BCHP_REGISTER(0x20b00294, 32,  RW, USB_CTRL, USB_DEVICE_CTL2)
BCHP_REGISTER(0x20b00298, 32,  RW, USB_CTRL, USB_DEBOUNCE_COUNT)
BCHP_REGISTER(0x20b002a0, 32,  RW, USB_CTRL, SCB0_BASE_RANGE)
BCHP_REGISTER(0x20b002a4, 32,  RW, USB_CTRL, SPARE7)
BCHP_REGISTER(0x20b002a8, 32,  RW, USB_CTRL, SPARE8)
BCHP_REGISTER(0x20b002ac, 32,  RW, USB_CTRL, SCB0_EXTN_RANGE)
BCHP_REGISTER(0x20b002b0, 32,  RW, USB_CTRL, SPARE9)
BCHP_REGISTER(0x20b002b4, 32,  RW, USB_CTRL, SPARE10)
BCHP_REGISTER(0x20b002f0, 32,  RO, USB_CTRL, USB20_ID)
BCHP_REGISTER(0x20b002f8, 32,  RO, USB_CTRL, BDC_COREID)
BCHP_REGISTER(0x20b002fc, 32,  RO, USB_CTRL, USB_REVID)
BCHP_REGISTER(0x20b00300, 32,  RO, USB_EHCI, HCCAPBASE)
BCHP_REGISTER(0x20b00304, 32,  RO, USB_EHCI, HCSPARAMS)
BCHP_REGISTER(0x20b00308, 32,  RO, USB_EHCI, HCCPARAMS)
BCHP_REGISTER(0x20b00310, 32,  RW, USB_EHCI, USBCMD)
BCHP_REGISTER(0x20b00314, 32,  RW, USB_EHCI, USBSTS)
BCHP_REGISTER(0x20b00318, 32,  RW, USB_EHCI, USBINTR)
BCHP_REGISTER(0x20b0031c, 32,  RW, USB_EHCI, FRINDEX)
BCHP_REGISTER(0x20b00320, 32,  RW, USB_EHCI, CTRLDSSEGMENT)
BCHP_REGISTER(0x20b00324, 32,  RW, USB_EHCI, PERIODICLISTBASE)
BCHP_REGISTER(0x20b00328, 32,  RW, USB_EHCI, ASYNCLISTADDR)
BCHP_REGISTER(0x20b00350, 32,  RW, USB_EHCI, CONFIGFLAG)
BCHP_REGISTER(0x20b00354, 32,  RW, USB_EHCI, PORTSC_0)
BCHP_REGISTER(0x20b00390, 32,  RW, USB_EHCI, INSNREG00)
BCHP_REGISTER(0x20b00394, 32,  RW, USB_EHCI, INSNREG01)
BCHP_REGISTER(0x20b00398, 32,  RW, USB_EHCI, INSNREG02)
BCHP_REGISTER(0x20b0039c, 32,  RW, USB_EHCI, INSNREG03)
BCHP_REGISTER(0x20b003a0, 32,  RW, USB_EHCI, INSNREG04)
BCHP_REGISTER(0x20b003a4, 32,  RW, USB_EHCI, INSNREG05)
BCHP_REGISTER(0x20b00400, 32,  RO, USB_OHCI, HcRevision)
BCHP_REGISTER(0x20b00404, 32,  RW, USB_OHCI, HcControl)
BCHP_REGISTER(0x20b00408, 32,  RW, USB_OHCI, HcCommandStatus)
BCHP_REGISTER(0x20b0040c, 32,  RW, USB_OHCI, HcInterruptStatus)
BCHP_REGISTER(0x20b00410, 32,  RW, USB_OHCI, HcInterruptEnable)
BCHP_REGISTER(0x20b00414, 32,  RW, USB_OHCI, HcInterruptDisable)
BCHP_REGISTER(0x20b00418, 32,  RO, USB_OHCI, HcHCCA)
BCHP_REGISTER(0x20b0041c, 32,  RO, USB_OHCI, HcPeriodCurrentED)
BCHP_REGISTER(0x20b00420, 32,  RO, USB_OHCI, HcControlHeadED)
BCHP_REGISTER(0x20b00424, 32,  RO, USB_OHCI, HcControlCurrentED)
BCHP_REGISTER(0x20b00428, 32,  RO, USB_OHCI, HcBulkHeadED)
BCHP_REGISTER(0x20b0042c, 32,  RO, USB_OHCI, HcBulkCurrentED)
BCHP_REGISTER(0x20b00430, 32,  RO, USB_OHCI, HcDoneHead)
BCHP_REGISTER(0x20b00434, 32,  RO, USB_OHCI, HcFmInterval)
BCHP_REGISTER(0x20b00438, 32,  RO, USB_OHCI, HcFmRemaining)
BCHP_REGISTER(0x20b0043c, 32,  RO, USB_OHCI, HcFmNumber)
BCHP_REGISTER(0x20b00440, 32,  RO, USB_OHCI, HcPeriodicStart)
BCHP_REGISTER(0x20b00444, 32,  RO, USB_OHCI, HcLSThreshold)
BCHP_REGISTER(0x20b00448, 32,  RO, USB_OHCI, HcRhDescriptorA)
BCHP_REGISTER(0x20b0044c, 32,  RO, USB_OHCI, HcRhDescriptorB)
BCHP_REGISTER(0x20b00450, 32,  RW, USB_OHCI, HcRhStatus)
BCHP_REGISTER(0x20b00454, 32,  RO, USB_OHCI, HcRhPortStatus1)
BCHP_REGISTER(0x20b00500, 32,  RO, USB_EHCI1, HCCAPBASE)
BCHP_REGISTER(0x20b00504, 32,  RO, USB_EHCI1, HCSPARAMS)
BCHP_REGISTER(0x20b00508, 32,  RO, USB_EHCI1, HCCPARAMS)
BCHP_REGISTER(0x20b00510, 32,  RW, USB_EHCI1, USBCMD)
BCHP_REGISTER(0x20b00514, 32,  RW, USB_EHCI1, USBSTS)
BCHP_REGISTER(0x20b00518, 32,  RW, USB_EHCI1, USBINTR)
BCHP_REGISTER(0x20b0051c, 32,  RW, USB_EHCI1, FRINDEX)
BCHP_REGISTER(0x20b00520, 32,  RW, USB_EHCI1, CTRLDSSEGMENT)
BCHP_REGISTER(0x20b00524, 32,  RW, USB_EHCI1, PERIODICLISTBASE)
BCHP_REGISTER(0x20b00528, 32,  RW, USB_EHCI1, ASYNCLISTADDR)
BCHP_REGISTER(0x20b00550, 32,  RW, USB_EHCI1, CONFIGFLAG)
BCHP_REGISTER(0x20b00554, 32,  RW, USB_EHCI1, PORTSC_0)
BCHP_REGISTER(0x20b00590, 32,  RW, USB_EHCI1, INSNREG00)
BCHP_REGISTER(0x20b00594, 32,  RW, USB_EHCI1, INSNREG01)
BCHP_REGISTER(0x20b00598, 32,  RW, USB_EHCI1, INSNREG02)
BCHP_REGISTER(0x20b0059c, 32,  RW, USB_EHCI1, INSNREG03)
BCHP_REGISTER(0x20b005a0, 32,  RW, USB_EHCI1, INSNREG04)
BCHP_REGISTER(0x20b005a4, 32,  RW, USB_EHCI1, INSNREG05)
BCHP_REGISTER(0x20b00600, 32,  RO, USB_OHCI1, HcRevision)
BCHP_REGISTER(0x20b00604, 32,  RW, USB_OHCI1, HcControl)
BCHP_REGISTER(0x20b00608, 32,  RW, USB_OHCI1, HcCommandStatus)
BCHP_REGISTER(0x20b0060c, 32,  RW, USB_OHCI1, HcInterruptStatus)
BCHP_REGISTER(0x20b00610, 32,  RW, USB_OHCI1, HcInterruptEnable)
BCHP_REGISTER(0x20b00614, 32,  RW, USB_OHCI1, HcInterruptDisable)
BCHP_REGISTER(0x20b00618, 32,  RO, USB_OHCI1, HcHCCA)
BCHP_REGISTER(0x20b0061c, 32,  RO, USB_OHCI1, HcPeriodCurrentED)
BCHP_REGISTER(0x20b00620, 32,  RO, USB_OHCI1, HcControlHeadED)
BCHP_REGISTER(0x20b00624, 32,  RO, USB_OHCI1, HcControlCurrentED)
BCHP_REGISTER(0x20b00628, 32,  RO, USB_OHCI1, HcBulkHeadED)
BCHP_REGISTER(0x20b0062c, 32,  RO, USB_OHCI1, HcBulkCurrentED)
BCHP_REGISTER(0x20b00630, 32,  RO, USB_OHCI1, HcDoneHead)
BCHP_REGISTER(0x20b00634, 32,  RO, USB_OHCI1, HcFmInterval)
BCHP_REGISTER(0x20b00638, 32,  RO, USB_OHCI1, HcFmRemaining)
BCHP_REGISTER(0x20b0063c, 32,  RO, USB_OHCI1, HcFmNumber)
BCHP_REGISTER(0x20b00640, 32,  RO, USB_OHCI1, HcPeriodicStart)
BCHP_REGISTER(0x20b00644, 32,  RO, USB_OHCI1, HcLSThreshold)
BCHP_REGISTER(0x20b00648, 32,  RO, USB_OHCI1, HcRhDescriptorA)
BCHP_REGISTER(0x20b0064c, 32,  RO, USB_OHCI1, HcRhDescriptorB)
BCHP_REGISTER(0x20b00650, 32,  RW, USB_OHCI1, HcRhStatus)
BCHP_REGISTER(0x20b00654, 32,  RO, USB_OHCI1, HcRhPortStatus1)
BCHP_REGISTER(0x20b02000, 32,  RW, USB_BDC, BDCCFG0)
BCHP_REGISTER(0x20b02004, 32,  RW, USB_BDC, BDCCFG1)
BCHP_REGISTER(0x20b02008, 32,  RW, USB_BDC, BDCCAP0)
BCHP_REGISTER(0x20b0200c, 32,  RW, USB_BDC, BDCCAP1)
BCHP_REGISTER(0x20b02010, 32,  RW, USB_BDC, CMDPAR0)
BCHP_REGISTER(0x20b02014, 32,  RW, USB_BDC, CMDPAR1)
BCHP_REGISTER(0x20b02018, 32,  RW, USB_BDC, CMDPAR2)
BCHP_REGISTER(0x20b0201c, 32,  RW, USB_BDC, CMDSC)
BCHP_REGISTER(0x20b02020, 32,  RW, USB_BDC, USPSC)
BCHP_REGISTER(0x20b0202c, 32,  RW, USB_BDC, USPPM2)
BCHP_REGISTER(0x20b02030, 32,  RW, USB_BDC, EXCPBA)
BCHP_REGISTER(0x20b02038, 32,  RW, USB_BDC, SPBBAL)
BCHP_REGISTER(0x20b0203c, 32,  RW, USB_BDC, SPBBAH)
BCHP_REGISTER(0x20b02040, 32,  RW, USB_BDC, BDCSC)
BCHP_REGISTER(0x20b02048, 32,  RW, USB_BDC, MFNUM)
BCHP_REGISTER(0x20b0204c, 32,  RW, USB_BDC, XSFNTF)
BCHP_REGISTER(0x20b02050, 32,  RW, USB_BDC, DVCSA)
BCHP_REGISTER(0x20b02054, 32,  RW, USB_BDC, DVCSB)
BCHP_REGISTER(0x20b02058, 32,  RW, USB_BDC, DVCSC)
BCHP_REGISTER(0x20b0205c, 32,  RW, USB_BDC, DVCSD)
BCHP_REGISTER(0x20b02060, 32,  RW, USB_BDC, EPS0)
BCHP_REGISTER(0x20b02064, 32,  RW, USB_BDC, EPS1)
BCHP_REGISTER(0x20b02068, 32,  RW, USB_BDC, EPS2)
BCHP_REGISTER(0x20b0206c, 32,  RW, USB_BDC, EPS3)
BCHP_REGISTER(0x20b02070, 32,  RW, USB_BDC, EPS4)
BCHP_REGISTER(0x20b02074, 32,  RW, USB_BDC, EPS5)
BCHP_REGISTER(0x20b02078, 32,  RW, USB_BDC, EPS6)
BCHP_REGISTER(0x20b0207c, 32,  RW, USB_BDC, EPS7)
BCHP_REGISTER(0x20b02080, 32,  RW, USB_BDC, OSC0)
BCHP_REGISTER(0x20b02084, 32,  RW, USB_BDC, OSC1)
BCHP_REGISTER(0x20b02088, 32,  RW, USB_BDC, OSC2)
BCHP_REGISTER(0x20b0208c, 32,  RW, USB_BDC, OSC3)
BCHP_REGISTER(0x20b02200, 32,  RW, USB_BDC, SRRBAL0)
BCHP_REGISTER(0x20b02204, 32,  RW, USB_BDC, SRRBAH0)
BCHP_REGISTER(0x20b02208, 32,  RW, USB_BDC, SRRINT0)
BCHP_REGISTER(0x20b0220c, 32,  RW, USB_BDC, INTCLS0)
BCHP_REGISTER(0x20b02210, 32,  RW, USB_BDC, SRRBAL1)
BCHP_REGISTER(0x20b02214, 32,  RW, USB_BDC, SRRBAH1)
BCHP_REGISTER(0x20b02218, 32,  RW, USB_BDC, SRRINT1)
BCHP_REGISTER(0x20b0221c, 32,  RW, USB_BDC, INTCLS1)
BCHP_REGISTER(0x20b02220, 32,  RW, USB_BDC, SRRBAL2)
BCHP_REGISTER(0x20b02224, 32,  RW, USB_BDC, SRRBAH2)
BCHP_REGISTER(0x20b02228, 32,  RW, USB_BDC, SRRINT2)
BCHP_REGISTER(0x20b0222c, 32,  RW, USB_BDC, INTCLS2)
BCHP_REGISTER(0x20b02230, 32,  RW, USB_BDC, SRRBAL3)
BCHP_REGISTER(0x20b02234, 32,  RW, USB_BDC, SRRBAH3)
BCHP_REGISTER(0x20b02238, 32,  RW, USB_BDC, SRRINT3)
BCHP_REGISTER(0x20b0223c, 32,  RW, USB_BDC, INTCLS3)
BCHP_REGISTER(0x20b02240, 32,  RW, USB_BDC, SRRBAL4)
BCHP_REGISTER(0x20b02244, 32,  RW, USB_BDC, SRRBAH4)
BCHP_REGISTER(0x20b02248, 32,  RW, USB_BDC, SRRINT4)
BCHP_REGISTER(0x20b0224c, 32,  RW, USB_BDC, INTCLS4)
BCHP_REGISTER(0x20b02250, 32,  RW, USB_BDC, SRRBAL5)
BCHP_REGISTER(0x20b02254, 32,  RW, USB_BDC, SRRBAH5)
BCHP_REGISTER(0x20b02258, 32,  RW, USB_BDC, SRRINT5)
BCHP_REGISTER(0x20b0225c, 32,  RW, USB_BDC, INTCLS5)
BCHP_REGISTER(0x20b02260, 32,  RW, USB_BDC, SRRBAL6)
BCHP_REGISTER(0x20b02264, 32,  RW, USB_BDC, SRRBAH6)
BCHP_REGISTER(0x20b02268, 32,  RW, USB_BDC, SRRINT6)
BCHP_REGISTER(0x20b0226c, 32,  RW, USB_BDC, INTCLS6)
BCHP_REGISTER(0x20b02270, 32,  RW, USB_BDC, SRRBAL7)
BCHP_REGISTER(0x20b02274, 32,  RW, USB_BDC, SRRBAH7)
BCHP_REGISTER(0x20b02278, 32,  RW, USB_BDC, SRRINT7)
BCHP_REGISTER(0x20b0227c, 32,  RW, USB_BDC, INTCLS7)
BCHP_REGISTER(0x20b02280, 32,  RW, USB_BDC, SRRBAL8)
BCHP_REGISTER(0x20b02284, 32,  RW, USB_BDC, SRRBAH8)
BCHP_REGISTER(0x20b02288, 32,  RW, USB_BDC, SRRINT8)
BCHP_REGISTER(0x20b0228c, 32,  RW, USB_BDC, INTCLS8)
BCHP_REGISTER(0x20b02290, 32,  RW, USB_BDC, SRRBAL9)
BCHP_REGISTER(0x20b02294, 32,  RW, USB_BDC, SRRBAH9)
BCHP_REGISTER(0x20b02298, 32,  RW, USB_BDC, SRRINT9)
BCHP_REGISTER(0x20b0229c, 32,  RW, USB_BDC, INTCLS9)
BCHP_REGISTER(0x20b022a0, 32,  RW, USB_BDC, SRRBAL10)
BCHP_REGISTER(0x20b022a4, 32,  RW, USB_BDC, SRRBAH10)
BCHP_REGISTER(0x20b022a8, 32,  RW, USB_BDC, SRRINT10)
BCHP_REGISTER(0x20b022ac, 32,  RW, USB_BDC, INTCLS10)
BCHP_REGISTER(0x20b022b0, 32,  RW, USB_BDC, SRRBAL11)
BCHP_REGISTER(0x20b022b4, 32,  RW, USB_BDC, SRRBAH11)
BCHP_REGISTER(0x20b022b8, 32,  RW, USB_BDC, SRRINT11)
BCHP_REGISTER(0x20b022bc, 32,  RW, USB_BDC, INTCLS11)
BCHP_REGISTER(0x20b022c0, 32,  RW, USB_BDC, SRRBAL12)
BCHP_REGISTER(0x20b022c4, 32,  RW, USB_BDC, SRRBAH12)
BCHP_REGISTER(0x20b022c8, 32,  RW, USB_BDC, SRRINT12)
BCHP_REGISTER(0x20b022cc, 32,  RW, USB_BDC, INTCLS12)
BCHP_REGISTER(0x20b022d0, 32,  RW, USB_BDC, SRRBAL13)
BCHP_REGISTER(0x20b022d4, 32,  RW, USB_BDC, SRRBAH13)
BCHP_REGISTER(0x20b022d8, 32,  RW, USB_BDC, SRRINT13)
BCHP_REGISTER(0x20b022dc, 32,  RW, USB_BDC, INTCLS13)
BCHP_REGISTER(0x20b022e0, 32,  RW, USB_BDC, SRRBAL14)
BCHP_REGISTER(0x20b022e4, 32,  RW, USB_BDC, SRRBAH14)
BCHP_REGISTER(0x20b022e8, 32,  RW, USB_BDC, SRRINT14)
BCHP_REGISTER(0x20b022ec, 32,  RW, USB_BDC, INTCLS14)
BCHP_REGISTER(0x20b022f0, 32,  RW, USB_BDC, SRRBAL15)
BCHP_REGISTER(0x20b022f4, 32,  RW, USB_BDC, SRRBAH15)
BCHP_REGISTER(0x20b022f8, 32,  RW, USB_BDC, SRRINT15)
BCHP_REGISTER(0x20b022fc, 32,  RW, USB_BDC, INTCLS15)
BCHP_REGISTER(0x20b02300, 32,  RW, USB_BDC, SRRBAL16)
BCHP_REGISTER(0x20b02304, 32,  RW, USB_BDC, SRRBAH16)
BCHP_REGISTER(0x20b02308, 32,  RW, USB_BDC, SRRINT16)
BCHP_REGISTER(0x20b0230c, 32,  RW, USB_BDC, INTCLS16)
BCHP_REGISTER(0x20b02310, 32,  RW, USB_BDC, SRRBAL17)
BCHP_REGISTER(0x20b02314, 32,  RW, USB_BDC, SRRBAH17)
BCHP_REGISTER(0x20b02318, 32,  RW, USB_BDC, SRRINT17)
BCHP_REGISTER(0x20b0231c, 32,  RW, USB_BDC, INTCLS17)
BCHP_REGISTER(0x20b02320, 32,  RW, USB_BDC, SRRBAL18)
BCHP_REGISTER(0x20b02324, 32,  RW, USB_BDC, SRRBAH18)
BCHP_REGISTER(0x20b02328, 32,  RW, USB_BDC, SRRINT18)
BCHP_REGISTER(0x20b0232c, 32,  RW, USB_BDC, INTCLS18)
BCHP_REGISTER(0x20b02330, 32,  RW, USB_BDC, SRRBAL19)
BCHP_REGISTER(0x20b02334, 32,  RW, USB_BDC, SRRBAH19)
BCHP_REGISTER(0x20b02338, 32,  RW, USB_BDC, SRRINT19)
BCHP_REGISTER(0x20b0233c, 32,  RW, USB_BDC, INTCLS19)
BCHP_REGISTER(0x20b02340, 32,  RW, USB_BDC, SRRBAL20)
BCHP_REGISTER(0x20b02344, 32,  RW, USB_BDC, SRRBAH20)
BCHP_REGISTER(0x20b02348, 32,  RW, USB_BDC, SRRINT20)
BCHP_REGISTER(0x20b0234c, 32,  RW, USB_BDC, INTCLS20)
BCHP_REGISTER(0x20b02350, 32,  RW, USB_BDC, SRRBAL21)
BCHP_REGISTER(0x20b02354, 32,  RW, USB_BDC, SRRBAH21)
BCHP_REGISTER(0x20b02358, 32,  RW, USB_BDC, SRRINT21)
BCHP_REGISTER(0x20b0235c, 32,  RW, USB_BDC, INTCLS21)
BCHP_REGISTER(0x20b02360, 32,  RW, USB_BDC, SRRBAL22)
BCHP_REGISTER(0x20b02364, 32,  RW, USB_BDC, SRRBAH22)
BCHP_REGISTER(0x20b02368, 32,  RW, USB_BDC, SRRINT22)
BCHP_REGISTER(0x20b0236c, 32,  RW, USB_BDC, INTCLS22)
BCHP_REGISTER(0x20b02370, 32,  RW, USB_BDC, SRRBAL23)
BCHP_REGISTER(0x20b02374, 32,  RW, USB_BDC, SRRBAH23)
BCHP_REGISTER(0x20b02378, 32,  RW, USB_BDC, SRRINT23)
BCHP_REGISTER(0x20b0237c, 32,  RW, USB_BDC, INTCLS23)
BCHP_REGISTER(0x20b02380, 32,  RW, USB_BDC, SRRBAL24)
BCHP_REGISTER(0x20b02384, 32,  RW, USB_BDC, SRRBAH24)
BCHP_REGISTER(0x20b02388, 32,  RW, USB_BDC, SRRINT24)
BCHP_REGISTER(0x20b0238c, 32,  RW, USB_BDC, INTCLS24)
BCHP_REGISTER(0x20b02390, 32,  RW, USB_BDC, SRRBAL25)
BCHP_REGISTER(0x20b02394, 32,  RW, USB_BDC, SRRBAH25)
BCHP_REGISTER(0x20b02398, 32,  RW, USB_BDC, SRRINT25)
BCHP_REGISTER(0x20b0239c, 32,  RW, USB_BDC, INTCLS25)
BCHP_REGISTER(0x20b023a0, 32,  RW, USB_BDC, SRRBAL26)
BCHP_REGISTER(0x20b023a4, 32,  RW, USB_BDC, SRRBAH26)
BCHP_REGISTER(0x20b023a8, 32,  RW, USB_BDC, SRRINT26)
BCHP_REGISTER(0x20b023ac, 32,  RW, USB_BDC, INTCLS26)
BCHP_REGISTER(0x20b023b0, 32,  RW, USB_BDC, SRRBAL27)
BCHP_REGISTER(0x20b023b4, 32,  RW, USB_BDC, SRRBAH27)
BCHP_REGISTER(0x20b023b8, 32,  RW, USB_BDC, SRRINT27)
BCHP_REGISTER(0x20b023bc, 32,  RW, USB_BDC, INTCLS27)
BCHP_REGISTER(0x20b023c0, 32,  RW, USB_BDC, SRRBAL28)
BCHP_REGISTER(0x20b023c4, 32,  RW, USB_BDC, SRRBAH28)
BCHP_REGISTER(0x20b023c8, 32,  RW, USB_BDC, SRRINT28)
BCHP_REGISTER(0x20b023cc, 32,  RW, USB_BDC, INTCLS28)
BCHP_REGISTER(0x20b023d0, 32,  RW, USB_BDC, SRRBAL29)
BCHP_REGISTER(0x20b023d4, 32,  RW, USB_BDC, SRRBAH29)
BCHP_REGISTER(0x20b023d8, 32,  RW, USB_BDC, SRRINT29)
BCHP_REGISTER(0x20b023dc, 32,  RW, USB_BDC, INTCLS29)
BCHP_REGISTER(0x20b023e0, 32,  RW, USB_BDC, SRRBAL30)
BCHP_REGISTER(0x20b023e4, 32,  RW, USB_BDC, SRRBAH30)
BCHP_REGISTER(0x20b023e8, 32,  RW, USB_BDC, SRRINT30)
BCHP_REGISTER(0x20b023ec, 32,  RW, USB_BDC, INTCLS30)
BCHP_REGISTER(0x20b023f0, 32,  RW, USB_BDC, SRRBAL31)
BCHP_REGISTER(0x20b023f4, 32,  RW, USB_BDC, SRRBAH31)
BCHP_REGISTER(0x20b023f8, 32,  RW, USB_BDC, SRRINT31)
BCHP_REGISTER(0x20b023fc, 32,  RW, USB_BDC, INTCLS31)
BCHP_REGISTER(0x20b02c00, 32,  RW, USB_BDC_EC, ECHBIU)
BCHP_REGISTER(0x20b02c04, 32,  RW, USB_BDC_EC, BIUSPC)
BCHP_REGISTER(0x20b02c08, 32,  RW, USB_BDC_EC, AXIWRA)
BCHP_REGISTER(0x20b02c0c, 32,  RW, USB_BDC_EC, AXIRDA)
BCHP_REGISTER(0x20b02c10, 32,  RW, USB_BDC_EC, AXILPM)
BCHP_REGISTER(0x20b02c14, 32,  RW, USB_BDC_EC, AXIQOS)
BCHP_REGISTER(0x20b02c20, 32,  RW, USB_BDC_EC, ECHCSR)
BCHP_REGISTER(0x20b02c24, 32,  RW, USB_BDC_EC, CSRSPC)
BCHP_REGISTER(0x20b02c30, 32,  RW, USB_BDC_EC, ECHAIU)
BCHP_REGISTER(0x20b02c34, 32,  RW, USB_BDC_EC, AIUDMA)
BCHP_REGISTER(0x20b02c40, 32,  RW, USB_BDC_EC, AIUOEPS0)
BCHP_REGISTER(0x20b02c44, 32,  RW, USB_BDC_EC, AIUOEPS1)
BCHP_REGISTER(0x20b02c48, 32,  RW, USB_BDC_EC, AIUOEPS2)
BCHP_REGISTER(0x20b02c4c, 32,  RW, USB_BDC_EC, AIUOEPS3)
BCHP_REGISTER(0x20b02c50, 32,  RW, USB_BDC_EC, AIUOEPS4)
BCHP_REGISTER(0x20b02c54, 32,  RW, USB_BDC_EC, AIUOEPS5)
BCHP_REGISTER(0x20b02c58, 32,  RW, USB_BDC_EC, AIUOEPS6)
BCHP_REGISTER(0x20b02c5c, 32,  RW, USB_BDC_EC, AIUOEPS7)
BCHP_REGISTER(0x20b02c60, 32,  RW, USB_BDC_EC, AIUOEPS8)
BCHP_REGISTER(0x20b02c64, 32,  RW, USB_BDC_EC, AIUOEPS9)
BCHP_REGISTER(0x20b02c68, 32,  RW, USB_BDC_EC, AIUOEPS10)
BCHP_REGISTER(0x20b02c6c, 32,  RW, USB_BDC_EC, AIUOEPS11)
BCHP_REGISTER(0x20b02c70, 32,  RW, USB_BDC_EC, AIUOEPS12)
BCHP_REGISTER(0x20b02c74, 32,  RW, USB_BDC_EC, AIUOEPS13)
BCHP_REGISTER(0x20b02c78, 32,  RW, USB_BDC_EC, AIUOEPS14)
BCHP_REGISTER(0x20b02c7c, 32,  RW, USB_BDC_EC, AIUOEPS15)
BCHP_REGISTER(0x20b02c80, 32,  RW, USB_BDC_EC, AIUIEPS0)
BCHP_REGISTER(0x20b02c84, 32,  RW, USB_BDC_EC, AIUIEPS1)
BCHP_REGISTER(0x20b02c88, 32,  RW, USB_BDC_EC, AIUIEPS2)
BCHP_REGISTER(0x20b02c8c, 32,  RW, USB_BDC_EC, AIUIEPS3)
BCHP_REGISTER(0x20b02c90, 32,  RW, USB_BDC_EC, AIUIEPS4)
BCHP_REGISTER(0x20b02c94, 32,  RW, USB_BDC_EC, AIUIEPS5)
BCHP_REGISTER(0x20b02c98, 32,  RW, USB_BDC_EC, AIUIEPS6)
BCHP_REGISTER(0x20b02c9c, 32,  RW, USB_BDC_EC, AIUIEPS7)
BCHP_REGISTER(0x20b02ca0, 32,  RW, USB_BDC_EC, AIUIEPS8)
BCHP_REGISTER(0x20b02ca4, 32,  RW, USB_BDC_EC, AIUIEPS9)
BCHP_REGISTER(0x20b02ca8, 32,  RW, USB_BDC_EC, AIUIEPS10)
BCHP_REGISTER(0x20b02cac, 32,  RW, USB_BDC_EC, AIUIEPS11)
BCHP_REGISTER(0x20b02cb0, 32,  RW, USB_BDC_EC, AIUIEPS12)
BCHP_REGISTER(0x20b02cb4, 32,  RW, USB_BDC_EC, AIUIEPS13)
BCHP_REGISTER(0x20b02cb8, 32,  RW, USB_BDC_EC, AIUIEPS14)
BCHP_REGISTER(0x20b02cbc, 32,  RW, USB_BDC_EC, AIUIEPS15)
BCHP_REGISTER(0x20b02cc0, 32,  RW, USB_BDC_EC, ECHFSC)
BCHP_REGISTER(0x20b02cd0, 32,  RW, USB_BDC_EC, FSCOUT)
BCHP_REGISTER(0x20b02cd4, 32,  RW, USB_BDC_EC, FSCNOC)
BCHP_REGISTER(0x20b02cd8, 32,  RW, USB_BDC_EC, FSCLOC)
BCHP_REGISTER(0x20b02cdc, 32,  RW, USB_BDC_EC, FSCHOC)
BCHP_REGISTER(0x20b02ce4, 32,  RW, USB_BDC_EC, FSCNIC)
BCHP_REGISTER(0x20b02ce8, 32,  RW, USB_BDC_EC, FSCLIC)
BCHP_REGISTER(0x20b02cec, 32,  RW, USB_BDC_EC, FSCHIC)
BCHP_REGISTER(0x20b02d00, 32,  RW, USB_BDC_EC, FSCICH0)
BCHP_REGISTER(0x20b02d04, 32,  RW, USB_BDC_EC, FSCICH1)
BCHP_REGISTER(0x20b02d08, 32,  RW, USB_BDC_EC, FSCICH2)
BCHP_REGISTER(0x20b02d0c, 32,  RW, USB_BDC_EC, FSCICH3)
BCHP_REGISTER(0x20b02d10, 32,  RW, USB_BDC_EC, FSCICH4)
BCHP_REGISTER(0x20b02d14, 32,  RW, USB_BDC_EC, FSCICH5)
BCHP_REGISTER(0x20b02d18, 32,  RW, USB_BDC_EC, FSCICH6)
BCHP_REGISTER(0x20b02d1c, 32,  RW, USB_BDC_EC, FSCICH7)
BCHP_REGISTER(0x20b02d20, 32,  RW, USB_BDC_EC, FSCICH8)
BCHP_REGISTER(0x20b02d24, 32,  RW, USB_BDC_EC, FSCICH9)
BCHP_REGISTER(0x20b02d28, 32,  RW, USB_BDC_EC, FSCICH10)
BCHP_REGISTER(0x20b02d2c, 32,  RW, USB_BDC_EC, FSCICH11)
BCHP_REGISTER(0x20b02d30, 32,  RW, USB_BDC_EC, FSCICH12)
BCHP_REGISTER(0x20b02d34, 32,  RW, USB_BDC_EC, FSCICH13)
BCHP_REGISTER(0x20b02d38, 32,  RW, USB_BDC_EC, FSCICH14)
BCHP_REGISTER(0x20b02d3c, 32,  RW, USB_BDC_EC, FSCICH15)
BCHP_REGISTER(0x20b02d40, 32,  RW, USB_BDC_EC, FSCOBDC0)
BCHP_REGISTER(0x20b02d44, 32,  RW, USB_BDC_EC, FSCOBDC1)
BCHP_REGISTER(0x20b02d48, 32,  RW, USB_BDC_EC, FSCOBDC2)
BCHP_REGISTER(0x20b02d4c, 32,  RW, USB_BDC_EC, FSCOBDC3)
BCHP_REGISTER(0x20b02d50, 32,  RW, USB_BDC_EC, FSCOBDC4)
BCHP_REGISTER(0x20b02d54, 32,  RW, USB_BDC_EC, FSCOBDC5)
BCHP_REGISTER(0x20b02d58, 32,  RW, USB_BDC_EC, FSCOBDC6)
BCHP_REGISTER(0x20b02d5c, 32,  RW, USB_BDC_EC, FSCOBDC7)
BCHP_REGISTER(0x20b02d60, 32,  RW, USB_BDC_EC, FSCOBDC8)
BCHP_REGISTER(0x20b02d64, 32,  RW, USB_BDC_EC, FSCOBDC9)
BCHP_REGISTER(0x20b02d68, 32,  RW, USB_BDC_EC, FSCOBDC10)
BCHP_REGISTER(0x20b02d6c, 32,  RW, USB_BDC_EC, FSCOBDC11)
BCHP_REGISTER(0x20b02d70, 32,  RW, USB_BDC_EC, FSCOBDC12)
BCHP_REGISTER(0x20b02d74, 32,  RW, USB_BDC_EC, FSCOBDC13)
BCHP_REGISTER(0x20b02d78, 32,  RW, USB_BDC_EC, FSCOBDC14)
BCHP_REGISTER(0x20b02d7c, 32,  RW, USB_BDC_EC, FSCOBDC15)
BCHP_REGISTER(0x20b02d80, 32,  RW, USB_BDC_EC, FSCIBDC0)
BCHP_REGISTER(0x20b02d84, 32,  RW, USB_BDC_EC, FSCIBDC1)
BCHP_REGISTER(0x20b02d88, 32,  RW, USB_BDC_EC, FSCIBDC2)
BCHP_REGISTER(0x20b02d8c, 32,  RW, USB_BDC_EC, FSCIBDC3)
BCHP_REGISTER(0x20b02d90, 32,  RW, USB_BDC_EC, FSCIBDC4)
BCHP_REGISTER(0x20b02d94, 32,  RW, USB_BDC_EC, FSCIBDC5)
BCHP_REGISTER(0x20b02d98, 32,  RW, USB_BDC_EC, FSCIBDC6)
BCHP_REGISTER(0x20b02d9c, 32,  RW, USB_BDC_EC, FSCIBDC7)
BCHP_REGISTER(0x20b02da0, 32,  RW, USB_BDC_EC, FSCIBDC8)
BCHP_REGISTER(0x20b02da4, 32,  RW, USB_BDC_EC, FSCIBDC9)
BCHP_REGISTER(0x20b02da8, 32,  RW, USB_BDC_EC, FSCIBDC10)
BCHP_REGISTER(0x20b02dac, 32,  RW, USB_BDC_EC, FSCIBDC11)
BCHP_REGISTER(0x20b02db0, 32,  RW, USB_BDC_EC, FSCIBDC12)
BCHP_REGISTER(0x20b02db4, 32,  RW, USB_BDC_EC, FSCIBDC13)
BCHP_REGISTER(0x20b02db8, 32,  RW, USB_BDC_EC, FSCIBDC14)
BCHP_REGISTER(0x20b02dbc, 32,  RW, USB_BDC_EC, FSCIBDC15)
BCHP_REGISTER(0x20b02dc0, 32,  RW, USB_BDC_EC, FSCICHX0)
BCHP_REGISTER(0x20b02dc4, 32,  RW, USB_BDC_EC, FSCICHX1)
BCHP_REGISTER(0x20b02dc8, 32,  RW, USB_BDC_EC, FSCICHX2)
BCHP_REGISTER(0x20b02dcc, 32,  RW, USB_BDC_EC, FSCICHX3)
BCHP_REGISTER(0x20b02dd0, 32,  RW, USB_BDC_EC, FSCICHX4)
BCHP_REGISTER(0x20b02dd4, 32,  RW, USB_BDC_EC, FSCICHX5)
BCHP_REGISTER(0x20b02dd8, 32,  RW, USB_BDC_EC, FSCICHX6)
BCHP_REGISTER(0x20b02ddc, 32,  RW, USB_BDC_EC, FSCICHX7)
BCHP_REGISTER(0x20b02de0, 32,  RW, USB_BDC_EC, FSCICHX8)
BCHP_REGISTER(0x20b02de4, 32,  RW, USB_BDC_EC, FSCICHX9)
BCHP_REGISTER(0x20b02de8, 32,  RW, USB_BDC_EC, FSCICHX10)
BCHP_REGISTER(0x20b02dec, 32,  RW, USB_BDC_EC, FSCICHX11)
BCHP_REGISTER(0x20b02df0, 32,  RW, USB_BDC_EC, FSCICHX12)
BCHP_REGISTER(0x20b02df4, 32,  RW, USB_BDC_EC, FSCICHX13)
BCHP_REGISTER(0x20b02df8, 32,  RW, USB_BDC_EC, FSCICHX14)
BCHP_REGISTER(0x20b02dfc, 32,  RW, USB_BDC_EC, FSCICHX15)
BCHP_REGISTER(0x20b02e20, 32,  RW, USB_BDC_EC, ECHPHY)
BCHP_REGISTER(0x20b02e28, 32,  RW, USB_BDC_EC, PHYSSP)
BCHP_REGISTER(0x20b02e2c, 32,  RW, USB_BDC_EC, PHYU2P)
BCHP_REGISTER(0x20b02e30, 32,  RW, USB_BDC_EC, ECHRSV)
BCHP_REGISTER(0x20b02f90, 32,  RW, USB_BDC_EC, ECHIRA)
BCHP_REGISTER(0x20b02f98, 32,  RW, USB_BDC_EC, IRAADR)
BCHP_REGISTER(0x20b02f9c, 32,  RW, USB_BDC_EC, IRADAT)
BCHP_REGISTER(0x20b02fa0, 32,  RW, USB_BDC_EC, ECHDVC)
BCHP_REGISTER(0x20b02fa8, 32,  RW, USB_BDC_EC, DVCNPL)
BCHP_REGISTER(0x20b02fac, 32,  RW, USB_BDC_EC, DVCNPH)
BCHP_REGISTER(0x20b02fb0, 32,  RW, USB_BDC_EC, ECHRBV)
BCHP_REGISTER(0x20b02fb8, 32,  RW, USB_BDC_EC, RBVPDT)
BCHP_REGISTER(0x20b02fbc, 32,  RW, USB_BDC_EC, RBVMGN)
BCHP_REGISTER(0x20b02fc0, 32,  RW, USB_BDC_EC, ECR0)
BCHP_REGISTER(0x20b10000, 32,  RO, SATA_GRB, REVISION)
BCHP_REGISTER(0x20b10004, 32,  RW, SATA_GRB, CTRL)
BCHP_REGISTER(0x20b10008, 32,  RW, SATA_GRB, SW_INIT_0)
BCHP_REGISTER(0x20b1000c, 32,  RW, SATA_GRB, SW_INIT_1)
BCHP_REGISTER(0x20b10040, 32,  RO, SATA_TOP_CTRL, Version)
BCHP_REGISTER(0x20b10044, 32,  RW, SATA_TOP_CTRL, BUS_CTRL)
BCHP_REGISTER(0x20b10048, 32,  RW, SATA_TOP_CTRL, TP_CTRL)
BCHP_REGISTER(0x20b1004c, 32,  RW, SATA_TOP_CTRL, PHY_CTRL_1)
BCHP_REGISTER(0x20b10050, 32,  RW, SATA_TOP_CTRL, PHY_CTRL_2)
BCHP_REGISTER(0x20b1005c, 32,  RO, SATA_TOP_CTRL, SATA_TP_OUT)
BCHP_REGISTER(0x20b10060, 32,  RW, SATA_TOP_CTRL, CLIENT_INIT_CTRL)
BCHP_REGISTER(0x20b10080, 32,  RO, SATA3_INTR2, CPU_STATUS)
BCHP_REGISTER(0x20b10084, 32,  WO, SATA3_INTR2, CPU_SET)
BCHP_REGISTER(0x20b10088, 32,  WO, SATA3_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x20b1008c, 32,  RO, SATA3_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x20b10090, 32,  WO, SATA3_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x20b10094, 32,  WO, SATA3_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x20b10098, 32,  RO, SATA3_INTR2, PCI_STATUS)
BCHP_REGISTER(0x20b1009c, 32,  WO, SATA3_INTR2, PCI_SET)
BCHP_REGISTER(0x20b100a0, 32,  WO, SATA3_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x20b100a4, 32,  RO, SATA3_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x20b100a8, 32,  WO, SATA3_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x20b100ac, 32,  WO, SATA3_INTR2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20b10100, 32,  RO, PORT0_SATA3_PCB, START)
BCHP_REGISTER(0x20b10300, 32,  RW, PORT0_SATA3_PCB, REG0)
BCHP_REGISTER(0x20b10304, 32,  RW, PORT0_SATA3_PCB, REG1)
BCHP_REGISTER(0x20b10308, 32,  RW, PORT0_SATA3_PCB, REG2)
BCHP_REGISTER(0x20b1030c, 32,  RW, PORT0_SATA3_PCB, REG3)
BCHP_REGISTER(0x20b10310, 32,  RW, PORT0_SATA3_PCB, REG4)
BCHP_REGISTER(0x20b10314, 32,  RW, PORT0_SATA3_PCB, REG5)
BCHP_REGISTER(0x20b10318, 32,  RW, PORT0_SATA3_PCB, REG6)
BCHP_REGISTER(0x20b1031c, 32,  RW, PORT0_SATA3_PCB, REG7)
BCHP_REGISTER(0x20b10320, 32,  RW, PORT0_SATA3_PCB, REG8)
BCHP_REGISTER(0x20b10324, 32,  RW, PORT0_SATA3_PCB, REG9)
BCHP_REGISTER(0x20b10328, 32,  RW, PORT0_SATA3_PCB, REG10)
BCHP_REGISTER(0x20b1032c, 32,  RW, PORT0_SATA3_PCB, REG11)
BCHP_REGISTER(0x20b10330, 32,  RW, PORT0_SATA3_PCB, REG12)
BCHP_REGISTER(0x20b10334, 32,  RW, PORT0_SATA3_PCB, REG13)
BCHP_REGISTER(0x20b10338, 32,  RW, PORT0_SATA3_PCB, REG14)
BCHP_REGISTER(0x20b1033c, 32,  RW, PORT0_SATA3_PCB, BLOCK_ADDR)
BCHP_REGISTER(0x20b10ffc, 32,  RO, PORT0_SATA3_PCB, END)
BCHP_REGISTER(0x20b12000, 32,  RO, SATA_AHCI_GHC, HBA_CAP)
BCHP_REGISTER(0x20b12004, 32,  RW, SATA_AHCI_GHC, Global_HBA_Control)
BCHP_REGISTER(0x20b12008, 32,  RW, SATA_AHCI_GHC, Interrupt_Status)
BCHP_REGISTER(0x20b1200c, 32,  RO, SATA_AHCI_GHC, Ports_Implemented)
BCHP_REGISTER(0x20b12010, 32,  RO, SATA_AHCI_GHC, AHCI_Version)
BCHP_REGISTER(0x20b12014, 32,  RW, SATA_AHCI_GHC, CCC_CTL)
BCHP_REGISTER(0x20b12018, 32,  RW, SATA_AHCI_GHC, CCC_PORTS)
BCHP_REGISTER(0x20b1201c, 32,  RO, SATA_AHCI_GHC, EM_LOC_RES)
BCHP_REGISTER(0x20b12020, 32,  RO, SATA_AHCI_GHC, EM_CTL_RES)
BCHP_REGISTER(0x20b12024, 32,  RO, SATA_AHCI_GHC, HBA_CAP2)
BCHP_REGISTER(0x20b12028, 32,  RW, SATA_AHCI_GHC, BO_Handoff_Control_and_Status)
BCHP_REGISTER(0x20b1202c, 32,  RO, SATA_GLOBAL_RESERVED, reserved0)
BCHP_REGISTER(0x20b12030, 32,  RO, SATA_GLOBAL_RESERVED, reserved1)
BCHP_REGISTER(0x20b12034, 32,  RO, SATA_GLOBAL_RESERVED, reserved2)
BCHP_REGISTER(0x20b12038, 32,  RO, SATA_GLOBAL_RESERVED, reserved3)
BCHP_REGISTER(0x20b1203c, 32,  RO, SATA_GLOBAL_RESERVED, reserved4)
BCHP_REGISTER(0x20b12040, 32,  RO, SATA_GLOBAL_RESERVED, reserved5)
BCHP_REGISTER(0x20b12044, 32,  RO, SATA_GLOBAL_RESERVED, reserved6)
BCHP_REGISTER(0x20b12048, 32,  RO, SATA_GLOBAL_RESERVED, reserved7)
BCHP_REGISTER(0x20b1204c, 32,  RO, SATA_GLOBAL_RESERVED, reserved8)
BCHP_REGISTER(0x20b12050, 32,  RO, SATA_GLOBAL_RESERVED, reserved9)
BCHP_REGISTER(0x20b12054, 32,  RO, SATA_GLOBAL_RESERVED, reserved10)
BCHP_REGISTER(0x20b12058, 32,  RO, SATA_GLOBAL_RESERVED, reserved11)
BCHP_REGISTER(0x20b1205c, 32,  RO, SATA_GLOBAL_RESERVED, reserved12)
BCHP_REGISTER(0x20b12060, 32,  RO, SATA_GLOBAL_RESERVED, reserved13)
BCHP_REGISTER(0x20b12064, 32,  RO, SATA_GLOBAL_RESERVED, reserved14)
BCHP_REGISTER(0x20b12068, 32,  RO, SATA_GLOBAL_RESERVED, reserved15)
BCHP_REGISTER(0x20b1206c, 32,  RO, SATA_GLOBAL_RESERVED, reserved16)
BCHP_REGISTER(0x20b12070, 32,  RO, SATA_GLOBAL_RESERVED, reserved17)
BCHP_REGISTER(0x20b12074, 32,  RO, SATA_GLOBAL_RESERVED, reserved18)
BCHP_REGISTER(0x20b12078, 32,  RO, SATA_GLOBAL_RESERVED, reserved19)
BCHP_REGISTER(0x20b1207c, 32,  RO, SATA_GLOBAL_RESERVED, reserved20)
BCHP_REGISTER(0x20b12080, 32,  RO, SATA_GLOBAL_RESERVED, reserved21)
BCHP_REGISTER(0x20b12084, 32,  RO, SATA_GLOBAL_RESERVED, reserved22)
BCHP_REGISTER(0x20b12088, 32,  RO, SATA_GLOBAL_RESERVED, reserved23)
BCHP_REGISTER(0x20b1208c, 32,  RO, SATA_GLOBAL_RESERVED, reserved24)
BCHP_REGISTER(0x20b12090, 32,  RO, SATA_GLOBAL_RESERVED, reserved25)
BCHP_REGISTER(0x20b12094, 32,  RO, SATA_GLOBAL_RESERVED, reserved26)
BCHP_REGISTER(0x20b12098, 32,  RO, SATA_GLOBAL_RESERVED, reserved27)
BCHP_REGISTER(0x20b1209c, 32,  RO, SATA_GLOBAL_RESERVED, reserved28)
BCHP_REGISTER(0x20b12100, 32,  RW, SATA_PORT0_AHCI_S1, PxCLB)
BCHP_REGISTER(0x20b12104, 32,  RW, SATA_PORT0_AHCI_S1, PxCLBU)
BCHP_REGISTER(0x20b12108, 32,  RW, SATA_PORT0_AHCI_S1, PxFB)
BCHP_REGISTER(0x20b1210c, 32,  RW, SATA_PORT0_AHCI_S1, PxFBU)
BCHP_REGISTER(0x20b12110, 32,  RW, SATA_PORT0_AHCI_S1, PxIS)
BCHP_REGISTER(0x20b12114, 32,  RW, SATA_PORT0_AHCI_S1, PxIE)
BCHP_REGISTER(0x20b12118, 32,  RW, SATA_PORT0_AHCI_S1, PxCMD)
BCHP_REGISTER(0x20b1211c, 32,  RO, SATA_PORT0_AHCI_S1, reserved29)
BCHP_REGISTER(0x20b12120, 32,  RO, SATA_PORT0_AHCI_S2, PxTFD)
BCHP_REGISTER(0x20b12124, 32,  RO, SATA_PORT0_AHCI_S2, PxSIG)
BCHP_REGISTER(0x20b12128, 32,  RO, SATA_PORT0_AHCI_S2, PxSSTS)
BCHP_REGISTER(0x20b1212c, 32,  RW, SATA_PORT0_AHCI_S2, PxSCTL)
BCHP_REGISTER(0x20b12130, 32,  RW, SATA_PORT0_AHCI_S2, PxSERR)
BCHP_REGISTER(0x20b12134, 32,  RW, SATA_PORT0_AHCI_S2, PxSACT)
BCHP_REGISTER(0x20b12138, 32,  RW, SATA_PORT0_AHCI_S3, PxCI)
BCHP_REGISTER(0x20b1213c, 32,  RW, SATA_PORT0_AHCI_S3, PxSNTF)
BCHP_REGISTER(0x20b12140, 32,  RO, SATA_PORT0_AHCI_S3, reserved30)
BCHP_REGISTER(0x20b12144, 32,  RO, SATA_PORT0_AHCI_S3, reserved31)
BCHP_REGISTER(0x20b12148, 32,  RO, SATA_PORT0_AHCI_S3, reserved32)
BCHP_REGISTER(0x20b1214c, 32,  RO, SATA_PORT0_AHCI_S3, reserved33)
BCHP_REGISTER(0x20b12150, 32,  RO, SATA_PORT0_AHCI_S3, reserved34)
BCHP_REGISTER(0x20b12154, 32,  RO, SATA_PORT0_AHCI_S3, reserved35)
BCHP_REGISTER(0x20b12158, 32,  RO, SATA_PORT0_AHCI_S3, reserved36)
BCHP_REGISTER(0x20b1215c, 32,  RO, SATA_PORT0_AHCI_S3, reserved37)
BCHP_REGISTER(0x20b12160, 32,  RO, SATA_PORT0_AHCI_S3, reserved38)
BCHP_REGISTER(0x20b12164, 32,  RO, SATA_PORT0_AHCI_S3, reserved39)
BCHP_REGISTER(0x20b12168, 32,  RO, SATA_PORT0_AHCI_S3, reserved40)
BCHP_REGISTER(0x20b1216c, 32,  RO, SATA_PORT0_AHCI_S3, reserved41)
BCHP_REGISTER(0x20b12170, 32,  RO, SATA_PORT0_AHCI_S3, reserved42)
BCHP_REGISTER(0x20b12174, 32,  RO, SATA_PORT0_AHCI_S3, reserved43)
BCHP_REGISTER(0x20b12178, 32,  RO, SATA_PORT0_AHCI_S3, reserved44)
BCHP_REGISTER(0x20b1217c, 32,  RO, SATA_PORT0_AHCI_S3, reserved45)
BCHP_REGISTER(0x20b12600, 32,  RO, SATA_AHCI_PCICFG, Vendor_DEVICE_ID)
BCHP_REGISTER(0x20b12604, 32,  RW, SATA_AHCI_PCICFG, PCI_COMMAND_STATUS)
BCHP_REGISTER(0x20b12608, 32,  RO, SATA_AHCI_PCICFG, REV_ID_CLASS_CODE)
BCHP_REGISTER(0x20b1260c, 32,  RW, SATA_AHCI_PCICFG, CACHELINE_SIZE)
BCHP_REGISTER(0x20b12624, 32,  RW, SATA_AHCI_PCICFG, AHCI_BASE_ADDR)
BCHP_REGISTER(0x20b1262c, 32,  RO, SATA_AHCI_PCICFG, SUB_VENDOR_DEVICE_ID)
BCHP_REGISTER(0x20b12634, 32,  RO, SATA_AHCI_PCICFG, CAP_PTR)
BCHP_REGISTER(0x20b1263c, 32,  RW, SATA_AHCI_PCICFG, INTERRUPT_LINE_PIN)
BCHP_REGISTER(0x20b12660, 32,  RO, SATA_AHCI_PCICFG, PCI_PMCAP_ID_PC)
BCHP_REGISTER(0x20b12664, 32,  RW, SATA_AHCI_PCICFG, PCI_PMCAP_CS)
BCHP_REGISTER(0x20b12700, 32,  RW, SATA_PORT0_CTRL, PCTRL0)
BCHP_REGISTER(0x20b12704, 32,  RW, SATA_PORT0_CTRL, PCTRL1)
BCHP_REGISTER(0x20b12708, 32,  RW, SATA_PORT0_CTRL, PCTRL2)
BCHP_REGISTER(0x20b1270c, 32,  RW, SATA_PORT0_CTRL, PCTRL3)
BCHP_REGISTER(0x20b12710, 32,  RW, SATA_PORT0_CTRL, PCTRL4)
BCHP_REGISTER(0x20b12714, 32,  RW, SATA_PORT0_CTRL, PCTRL5)
BCHP_REGISTER(0x20b12718, 32,  RW, SATA_PORT0_CTRL, PCTRL6)
BCHP_REGISTER(0x20b1271c, 32,  RW, SATA_PORT0_CTRL, PCTRL7)
BCHP_REGISTER(0x20b12720, 32,  RW, SATA_PORT0_CTRL, PCTRL8)
BCHP_REGISTER(0x20b12724, 32,  RW, SATA_PORT0_CTRL, PCTRL9)
BCHP_REGISTER(0x20b12728, 32,  RW, SATA_PORT0_CTRL, PCTRL10)
BCHP_REGISTER(0x20b1272c, 32,  RW, SATA_PORT0_CTRL, PCTRL11)
BCHP_REGISTER(0x20b12730, 32,  RO, SATA_PORT0_CTRL, PCTRL12)
BCHP_REGISTER(0x20b12740, 32,  RW, SATA_PORT0_CJPAT, CJ_CTRL0)
BCHP_REGISTER(0x20b12744, 32,  RW, SATA_PORT0_CJPAT, CJ_CTRL1)
BCHP_REGISTER(0x20b12748, 32,  RW, SATA_PORT0_CJPAT, CJ_TRAIN_PAT)
BCHP_REGISTER(0x20b1274c, 32,  RW, SATA_PORT0_CJPAT, CJ_CTRL2)
BCHP_REGISTER(0x20b12750, 32,  RW, SATA_PORT0_CJPAT, CJ_RAM_ADDR)
BCHP_REGISTER(0x20b12754, 32,  RW, SATA_PORT0_CJPAT, CJ_RAM_WR_DATA)
BCHP_REGISTER(0x20b12758, 32,  RO, SATA_PORT0_CJPAT, CJ_STATUS)
BCHP_REGISTER(0x20b1275c, 32,  RO, SATA_PORT0_CJPAT, CJ_TOT_ERR_CNT)
BCHP_REGISTER(0x20b12760, 32,  RO, SATA_PORT0_CJPAT, CJ_TOT_FRAME_ERR_CNT)
BCHP_REGISTER(0x20b12764, 32,  RO, SATA_PORT0_CJPAT, CJ_RX_ERROR_PATTERN)
BCHP_REGISTER(0x20b12800, 32,  RO, SATA_LEG_PCICFG, LEG_Vendor_DEVICE_ID)
BCHP_REGISTER(0x20b12804, 32,  RW, SATA_LEG_PCICFG, LEG_PCI_COMMAND_STATUS)
BCHP_REGISTER(0x20b12808, 32,  RW, SATA_LEG_PCICFG, LEG_REV_ID_CLASS_CODE)
BCHP_REGISTER(0x20b1280c, 32,  RO, SATA_LEG_PCICFG, LEG_CACHELINE_SIZE)
BCHP_REGISTER(0x20b12810, 32,  RW, SATA_LEG_PCICFG, LEG_PCS0)
BCHP_REGISTER(0x20b12814, 32,  RW, SATA_LEG_PCICFG, LEG_PCS1)
BCHP_REGISTER(0x20b12818, 32,  RW, SATA_LEG_PCICFG, LEG_SCS0)
BCHP_REGISTER(0x20b1281c, 32,  RW, SATA_LEG_PCICFG, LEG_SCS1)
BCHP_REGISTER(0x20b12820, 32,  RW, SATA_LEG_PCICFG, LEG_BUS_MASTER_BASE_ADDR)
BCHP_REGISTER(0x20b12824, 32,  RW, SATA_LEG_PCICFG, LEG_MMIO_BASE_ADDR)
BCHP_REGISTER(0x20b1282c, 32,  RO, SATA_LEG_PCICFG, LEG_SUB_VENDOR_DEVICE_ID)
BCHP_REGISTER(0x20b1283c, 32,  RW, SATA_LEG_PCICFG, LEG_INTERRUPT_LINE)
BCHP_REGISTER(0x20b12880, 32,  RO, SATA_LEG_PCICFG, LEG_GLOBAL_INTERRUPT_STATUS)
BCHP_REGISTER(0x20b12900, 32,  RW, SATA_PORT0_LEG_S1, PIO_DATA)
BCHP_REGISTER(0x20b12904, 32,  RW, SATA_PORT0_LEG_S1, ERROR_FEATURE)
BCHP_REGISTER(0x20b12908, 32,  RW, SATA_PORT0_LEG_S1, SECTOR_COUNT)
BCHP_REGISTER(0x20b1290c, 32,  RW, SATA_PORT0_LEG_S1, SECTOR_NUMBER)
BCHP_REGISTER(0x20b12910, 32,  RW, SATA_PORT0_LEG_S1, CYLINDER_LOW)
BCHP_REGISTER(0x20b12914, 32,  RW, SATA_PORT0_LEG_S1, CYLINDER_HIGH)
BCHP_REGISTER(0x20b12918, 32,  RW, SATA_PORT0_LEG_S1, DEVICE_HEAD)
BCHP_REGISTER(0x20b1291c, 32,  RW, SATA_PORT0_LEG_S1, STATUS_COMMAND)
BCHP_REGISTER(0x20b12920, 32,  RW, SATA_PORT0_LEG_S1, ALT_STATUS_DEVICE_CTRL)
BCHP_REGISTER(0x20b12930, 32,  RW, SATA_PORT0_LEG_S1, BM_STATUS_COMMAND)
BCHP_REGISTER(0x20b12934, 32,  RW, SATA_PORT0_LEG_S1, PRD_TABLE_BASE)
BCHP_REGISTER(0x20b12940, 32,  RO, SATA_PORT0_LEG_S2, SATA_STATUS)
BCHP_REGISTER(0x20b12944, 32,  RW, SATA_PORT0_LEG_S2, SATA_ERROR)
BCHP_REGISTER(0x20b12948, 32,  RW, SATA_PORT0_LEG_S2, SATA_CONTROL)
BCHP_REGISTER(0x20b12950, 32,  RW, SATA_PORT0_LEG_S2, NOTIFY)
BCHP_REGISTER(0x20b12954, 32,  RW, SATA_PORT0_LEG_S2, SPARE0)
BCHP_REGISTER(0x20b12958, 32,  RW, SATA_PORT0_LEG_S3, BIST_CTRL)
BCHP_REGISTER(0x20b12960, 32,  RO, SATA_PORT0_LEG_S3, BIST_ERROR_COUNT)
BCHP_REGISTER(0x20b12980, 32,  RW, SATA_PORT0_LEG_S3, SATA_CONTROL1)
BCHP_REGISTER(0x20b12984, 32,  RW, SATA_PORT0_LEG_S3, SATA_CONTROL2)
BCHP_REGISTER(0x20b12988, 32,  RW, SATA_PORT0_LEG_S3, SATA_MASK)
BCHP_REGISTER(0x20b12990, 32,  RW, SATA_PORT0_LEG_S3, SATA_BIST_DW0)
BCHP_REGISTER(0x20b12994, 32,  RW, SATA_PORT0_LEG_S3, SATA_BIST_DW1)
BCHP_REGISTER(0x20b12998, 32,  RW, SATA_PORT0_LEG_S3, SATA_BIST_DW2)
BCHP_REGISTER(0x20c80000, 32,  RO, AUD_MISC, REVISION)
BCHP_REGISTER(0x20c80004, 32,  RW, AUD_MISC, INIT)
BCHP_REGISTER(0x20c80008, 32,  RO, AUD_MISC, INIT_ACK)
BCHP_REGISTER(0x20c8000c, 32,  RW, AUD_MISC, CTRL)
BCHP_REGISTER(0x20c80010, 32,  RW, AUD_MISC, PWRDOWN)
BCHP_REGISTER(0x20c80014, 32,  RW, AUD_MISC, MAILBOX)
BCHP_REGISTER(0x20c80018, 32,  RW, AUD_MISC, DIAG_SEL)
BCHP_REGISTER(0x20c8001c, 32,  RO, AUD_MISC, TEST_DIAG)
BCHP_REGISTER(0x20c80020, 32,  RW, AUD_MISC, STCRX_MODE_SEL)
BCHP_REGISTER(0x20c800a0, 32,  RW, AUD_MISC, SEROUT_OE)
BCHP_REGISTER(0x20c800a4, 32,  RW, AUD_MISC, SEROUT_SEL)
BCHP_REGISTER(0x20c800a8, 32,  RW, AUD_MISC, SERIN_SEL)
BCHP_REGISTER(0x20c800ac, 32,  RW, AUD_MISC, FCI_DIAG_CTRL)
BCHP_REGISTER(0x20c800b0, 32,  RO, AUD_MISC, FCI_DIAG_OUTL)
BCHP_REGISTER(0x20c800b4, 32,  RO, AUD_MISC, FCI_DIAG_OUTR)
BCHP_REGISTER(0x20c800b8, 32,  RO, AUD_MISC, FCI_DIAG_OUTD)
BCHP_REGISTER(0x20c800bc, 32,  RW, AUD_MISC, CRC_FCI_BLOCK_ID)
BCHP_REGISTER(0x20c800f0, 32,  RO, AUD_MISC, CRC_ESR_STATUS)
BCHP_REGISTER(0x20c800f4, 32,  WO, AUD_MISC, CRC_ESR_STATUS_SET)
BCHP_REGISTER(0x20c800f8, 32,  WO, AUD_MISC, CRC_ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20c800fc, 32,  RO, AUD_MISC, CRC_ESR_MASK)
BCHP_REGISTER(0x20c80100, 32,  WO, AUD_MISC, CRC_ESR_MASK_SET)
BCHP_REGISTER(0x20c80104, 32,  WO, AUD_MISC, CRC_ESR_MASK_CLEAR)
BCHP_REGISTER(0x20c80800, 32,  RO, AUD_INTH, R5F_STATUS)
BCHP_REGISTER(0x20c80804, 32,  WO, AUD_INTH, R5F_SET)
BCHP_REGISTER(0x20c80808, 32,  WO, AUD_INTH, R5F_CLEAR)
BCHP_REGISTER(0x20c8080c, 32,  RO, AUD_INTH, R5F_MASK_STATUS)
BCHP_REGISTER(0x20c80810, 32,  WO, AUD_INTH, R5F_MASK_SET)
BCHP_REGISTER(0x20c80814, 32,  WO, AUD_INTH, R5F_MASK_CLEAR)
BCHP_REGISTER(0x20c80818, 32,  RO, AUD_INTH, PCI_STATUS)
BCHP_REGISTER(0x20c8081c, 32,  WO, AUD_INTH, PCI_SET)
BCHP_REGISTER(0x20c80820, 32,  WO, AUD_INTH, PCI_CLEAR)
BCHP_REGISTER(0x20c80824, 32,  RO, AUD_INTH, PCI_MASK_STATUS)
BCHP_REGISTER(0x20c80828, 32,  WO, AUD_INTH, PCI_MASK_SET)
BCHP_REGISTER(0x20c8082c, 32,  WO, AUD_INTH, PCI_MASK_CLEAR)
BCHP_REGISTER(0x20ca00f8, 32,  RW, AUD_FMM_BF_CTRL, MISC_CONFIG)
BCHP_REGISTER(0x20ca00fc, 32,  RW, AUD_FMM_BF_CTRL, BLOCKCNT_RESET_PERIOD)
BCHP_REGISTER(0x20ca0100, 32,  RW, AUD_FMM_BF_CTRL, FIFO_RW_ADDR_SEL)
BCHP_REGISTER(0x20ca0104, 32,  RO, AUD_FMM_BF_CTRL, FIFO_RW_ADDR)
BCHP_REGISTER(0x20ca0108, 32,  RO, AUD_FMM_BF_CTRL, FIFO_FLOWON_STAT)
BCHP_REGISTER(0x20ca013c, 32,  RO, AUD_FMM_BF_CTRL, ADAPTRATE_REPEATDROP_CNT_ZERO_STAT)
BCHP_REGISTER(0x20ca0140, 32,  RO, AUD_FMM_BF_CTRL, SOURCEFIFO_RD_REPEATORDROP_STAT)
BCHP_REGISTER(0x20ca0174, 32,  RO, AUD_FMM_BF_CTRL, SOURCECH_GROUP_BEGIN)
BCHP_REGISTER(0x20ca0178, 32,  RO, AUD_FMM_BF_CTRL, SOURCECH_GROUP_ENABLE)
BCHP_REGISTER(0x20ca017c, 32,  RO, AUD_FMM_BF_CTRL, SOURCECH_GROUP_FLOWON)
BCHP_REGISTER(0x20ca0180, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_GROUP_SYNC_DIS)
BCHP_REGISTER(0x20ca0184, 32,  RO, AUD_FMM_BF_CTRL, SOURCECH_GROUP_DMA_ON)
BCHP_REGISTER(0x20ca0188, 32,  RO, AUD_FMM_BF_CTRL, DMA_READ_REQUEST)
BCHP_REGISTER(0x20ca018c, 32,  RO, AUD_FMM_BF_CTRL, DMA_WRITE_REQUEST)
BCHP_REGISTER(0x20ca0190, 32,  RO, AUD_FMM_BF_CTRL, DMA_STATUS)
BCHP_REGISTER(0x20ca0194, 32,  RO, AUD_FMM_BF_CTRL, FREE_MARK_TRIG_STATE)
BCHP_REGISTER(0x20ca0198, 32,  RO, AUD_FMM_BF_CTRL, FULL_MARK_TRIG_STATE)
BCHP_REGISTER(0x20ca019c, 32,  WO, AUD_FMM_BF_CTRL, REARM_FREE_MARK)
BCHP_REGISTER(0x20ca01a0, 32,  WO, AUD_FMM_BF_CTRL, REARM_FULL_MARK)
BCHP_REGISTER(0x20ca01a4, 32,  RO, AUD_FMM_BF_CTRL, SOURCECH_CLIENTPAIR_FLAGS)
BCHP_REGISTER(0x20ca01a8, 32,  RO, AUD_FMM_BF_CTRL, DESTCH_CLIENTPAIR_FLAGS)
BCHP_REGISTER(0x20ca01ac, 32,  RO, AUD_FMM_BF_CTRL, CLIENTPAIR_STATUS)
BCHP_REGISTER(0x20ca01b0, 32,  WO, AUD_FMM_BF_CTRL, CLIENTPAIR_REARM)
BCHP_REGISTER(0x20ca01b4, 32,  RO, AUD_FMM_BF_CTRL, SCB_BRIDGE_STATUS)
BCHP_REGISTER(0x20ca0800, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_RDADDR)
BCHP_REGISTER(0x20ca0804, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_WRADDR)
BCHP_REGISTER(0x20ca0808, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_BASEADDR)
BCHP_REGISTER(0x20ca080c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_ENDADDR)
BCHP_REGISTER(0x20ca0810, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_FREE_MARK)
BCHP_REGISTER(0x20ca0814, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_START_WRPOINT)
BCHP_REGISTER(0x20ca0818, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_RDADDR)
BCHP_REGISTER(0x20ca081c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_WRADDR)
BCHP_REGISTER(0x20ca0820, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_BASEADDR)
BCHP_REGISTER(0x20ca0824, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_ENDADDR)
BCHP_REGISTER(0x20ca0828, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_FREE_MARK)
BCHP_REGISTER(0x20ca082c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_START_WRPOINT)
BCHP_REGISTER(0x20ca0830, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_RDADDR)
BCHP_REGISTER(0x20ca0834, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_WRADDR)
BCHP_REGISTER(0x20ca0838, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_BASEADDR)
BCHP_REGISTER(0x20ca083c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_ENDADDR)
BCHP_REGISTER(0x20ca0840, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_FREE_MARK)
BCHP_REGISTER(0x20ca0844, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_START_WRPOINT)
BCHP_REGISTER(0x20ca0848, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_RDADDR)
BCHP_REGISTER(0x20ca084c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_WRADDR)
BCHP_REGISTER(0x20ca0850, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_BASEADDR)
BCHP_REGISTER(0x20ca0854, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_ENDADDR)
BCHP_REGISTER(0x20ca0858, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_FREE_MARK)
BCHP_REGISTER(0x20ca085c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_START_WRPOINT)
BCHP_REGISTER(0x20ca0860, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_RDADDR)
BCHP_REGISTER(0x20ca0864, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_WRADDR)
BCHP_REGISTER(0x20ca0868, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_BASEADDR)
BCHP_REGISTER(0x20ca086c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_ENDADDR)
BCHP_REGISTER(0x20ca0870, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_FREE_MARK)
BCHP_REGISTER(0x20ca0874, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_START_WRPOINT)
BCHP_REGISTER(0x20ca0878, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_RDADDR)
BCHP_REGISTER(0x20ca087c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_WRADDR)
BCHP_REGISTER(0x20ca0880, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_BASEADDR)
BCHP_REGISTER(0x20ca0884, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_ENDADDR)
BCHP_REGISTER(0x20ca0888, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_FREE_MARK)
BCHP_REGISTER(0x20ca088c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_START_WRPOINT)
BCHP_REGISTER(0x20ca0890, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_RDADDR)
BCHP_REGISTER(0x20ca0894, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_WRADDR)
BCHP_REGISTER(0x20ca0898, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_BASEADDR)
BCHP_REGISTER(0x20ca089c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_ENDADDR)
BCHP_REGISTER(0x20ca08a0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_FREE_MARK)
BCHP_REGISTER(0x20ca08a4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_START_WRPOINT)
BCHP_REGISTER(0x20ca08a8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_RDADDR)
BCHP_REGISTER(0x20ca08ac, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_WRADDR)
BCHP_REGISTER(0x20ca08b0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_BASEADDR)
BCHP_REGISTER(0x20ca08b4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_ENDADDR)
BCHP_REGISTER(0x20ca08b8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_FREE_MARK)
BCHP_REGISTER(0x20ca08bc, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_START_WRPOINT)
BCHP_REGISTER(0x20ca08c0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_RDADDR)
BCHP_REGISTER(0x20ca08c4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_WRADDR)
BCHP_REGISTER(0x20ca08c8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_BASEADDR)
BCHP_REGISTER(0x20ca08cc, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_ENDADDR)
BCHP_REGISTER(0x20ca08d0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_FREE_MARK)
BCHP_REGISTER(0x20ca08d4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_START_WRPOINT)
BCHP_REGISTER(0x20ca08d8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_RDADDR)
BCHP_REGISTER(0x20ca08dc, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_WRADDR)
BCHP_REGISTER(0x20ca08e0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_BASEADDR)
BCHP_REGISTER(0x20ca08e4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_ENDADDR)
BCHP_REGISTER(0x20ca08e8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_FREE_MARK)
BCHP_REGISTER(0x20ca08ec, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_START_WRPOINT)
BCHP_REGISTER(0x20ca08f0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_RDADDR)
BCHP_REGISTER(0x20ca08f4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_WRADDR)
BCHP_REGISTER(0x20ca08f8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_BASEADDR)
BCHP_REGISTER(0x20ca08fc, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_ENDADDR)
BCHP_REGISTER(0x20ca0900, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_FREE_MARK)
BCHP_REGISTER(0x20ca0904, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_START_WRPOINT)
BCHP_REGISTER(0x20ca0908, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_RDADDR)
BCHP_REGISTER(0x20ca090c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_WRADDR)
BCHP_REGISTER(0x20ca0910, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_BASEADDR)
BCHP_REGISTER(0x20ca0914, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_ENDADDR)
BCHP_REGISTER(0x20ca0918, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_FREE_MARK)
BCHP_REGISTER(0x20ca091c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_START_WRPOINT)
BCHP_REGISTER(0x20ca0920, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_RDADDR)
BCHP_REGISTER(0x20ca0924, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_WRADDR)
BCHP_REGISTER(0x20ca0928, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_BASEADDR)
BCHP_REGISTER(0x20ca092c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_ENDADDR)
BCHP_REGISTER(0x20ca0930, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_FREE_MARK)
BCHP_REGISTER(0x20ca0934, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_START_WRPOINT)
BCHP_REGISTER(0x20ca0938, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_RDADDR)
BCHP_REGISTER(0x20ca093c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_WRADDR)
BCHP_REGISTER(0x20ca0940, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_BASEADDR)
BCHP_REGISTER(0x20ca0944, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_ENDADDR)
BCHP_REGISTER(0x20ca0948, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_FREE_MARK)
BCHP_REGISTER(0x20ca094c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_START_WRPOINT)
BCHP_REGISTER(0x20ca0950, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_RDADDR)
BCHP_REGISTER(0x20ca0954, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_WRADDR)
BCHP_REGISTER(0x20ca0958, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_BASEADDR)
BCHP_REGISTER(0x20ca095c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_ENDADDR)
BCHP_REGISTER(0x20ca0960, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_FREE_MARK)
BCHP_REGISTER(0x20ca0964, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_START_WRPOINT)
BCHP_REGISTER(0x20ca0968, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_RDADDR)
BCHP_REGISTER(0x20ca096c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_WRADDR)
BCHP_REGISTER(0x20ca0970, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_BASEADDR)
BCHP_REGISTER(0x20ca0974, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_ENDADDR)
BCHP_REGISTER(0x20ca0978, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_FREE_MARK)
BCHP_REGISTER(0x20ca097c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_START_WRPOINT)
BCHP_REGISTER(0x20ca0980, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_RDADDR)
BCHP_REGISTER(0x20ca0984, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_WRADDR)
BCHP_REGISTER(0x20ca0988, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_BASEADDR)
BCHP_REGISTER(0x20ca098c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_ENDADDR)
BCHP_REGISTER(0x20ca0990, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_FULL_MARK)
BCHP_REGISTER(0x20ca0994, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_START_WRPOINT)
BCHP_REGISTER(0x20ca0998, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_RDADDR)
BCHP_REGISTER(0x20ca099c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_WRADDR)
BCHP_REGISTER(0x20ca09a0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_BASEADDR)
BCHP_REGISTER(0x20ca09a4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_ENDADDR)
BCHP_REGISTER(0x20ca09a8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_FULL_MARK)
BCHP_REGISTER(0x20ca09ac, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_START_WRPOINT)
BCHP_REGISTER(0x20ca09b0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_RDADDR)
BCHP_REGISTER(0x20ca09b4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_WRADDR)
BCHP_REGISTER(0x20ca09b8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_BASEADDR)
BCHP_REGISTER(0x20ca09bc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_ENDADDR)
BCHP_REGISTER(0x20ca09c0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_FULL_MARK)
BCHP_REGISTER(0x20ca09c4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_START_WRPOINT)
BCHP_REGISTER(0x20ca09c8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_RDADDR)
BCHP_REGISTER(0x20ca09cc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_WRADDR)
BCHP_REGISTER(0x20ca09d0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_BASEADDR)
BCHP_REGISTER(0x20ca09d4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_ENDADDR)
BCHP_REGISTER(0x20ca09d8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_FULL_MARK)
BCHP_REGISTER(0x20ca09dc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_START_WRPOINT)
BCHP_REGISTER(0x20ca09e0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_RDADDR)
BCHP_REGISTER(0x20ca09e4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_WRADDR)
BCHP_REGISTER(0x20ca09e8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_BASEADDR)
BCHP_REGISTER(0x20ca09ec, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_ENDADDR)
BCHP_REGISTER(0x20ca09f0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_FULL_MARK)
BCHP_REGISTER(0x20ca09f4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_START_WRPOINT)
BCHP_REGISTER(0x20ca09f8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_RDADDR)
BCHP_REGISTER(0x20ca09fc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_WRADDR)
BCHP_REGISTER(0x20ca0a00, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_BASEADDR)
BCHP_REGISTER(0x20ca0a04, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_ENDADDR)
BCHP_REGISTER(0x20ca0a08, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_FULL_MARK)
BCHP_REGISTER(0x20ca0a0c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_START_WRPOINT)
BCHP_REGISTER(0x20ca0a10, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_RDADDR)
BCHP_REGISTER(0x20ca0a14, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_WRADDR)
BCHP_REGISTER(0x20ca0a18, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_BASEADDR)
BCHP_REGISTER(0x20ca0a1c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_ENDADDR)
BCHP_REGISTER(0x20ca0a20, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_FULL_MARK)
BCHP_REGISTER(0x20ca0a24, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_START_WRPOINT)
BCHP_REGISTER(0x20ca0a28, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_RDADDR)
BCHP_REGISTER(0x20ca0a2c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_WRADDR)
BCHP_REGISTER(0x20ca0a30, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_BASEADDR)
BCHP_REGISTER(0x20ca0a34, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_ENDADDR)
BCHP_REGISTER(0x20ca0a38, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_FULL_MARK)
BCHP_REGISTER(0x20ca0a3c, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_START_WRPOINT)
BCHP_REGISTER(0x20ca0a40, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_FRMSTADDR)
BCHP_REGISTER(0x20ca0a44, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_0_MI_VALID)
BCHP_REGISTER(0x20ca0a48, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_FRMSTADDR)
BCHP_REGISTER(0x20ca0a4c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_1_MI_VALID)
BCHP_REGISTER(0x20ca0a50, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_FRMSTADDR)
BCHP_REGISTER(0x20ca0a54, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_2_MI_VALID)
BCHP_REGISTER(0x20ca0a58, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_FRMSTADDR)
BCHP_REGISTER(0x20ca0a5c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_3_MI_VALID)
BCHP_REGISTER(0x20ca0a60, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_FRMSTADDR)
BCHP_REGISTER(0x20ca0a64, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_4_MI_VALID)
BCHP_REGISTER(0x20ca0a68, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_FRMSTADDR)
BCHP_REGISTER(0x20ca0a6c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_5_MI_VALID)
BCHP_REGISTER(0x20ca0a70, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_FRMSTADDR)
BCHP_REGISTER(0x20ca0a74, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_6_MI_VALID)
BCHP_REGISTER(0x20ca0a78, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_FRMSTADDR)
BCHP_REGISTER(0x20ca0a7c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_7_MI_VALID)
BCHP_REGISTER(0x20ca0a80, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_FRMSTADDR)
BCHP_REGISTER(0x20ca0a84, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_8_MI_VALID)
BCHP_REGISTER(0x20ca0a88, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_FRMSTADDR)
BCHP_REGISTER(0x20ca0a8c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_9_MI_VALID)
BCHP_REGISTER(0x20ca0a90, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_FRMSTADDR)
BCHP_REGISTER(0x20ca0a94, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_10_MI_VALID)
BCHP_REGISTER(0x20ca0a98, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_FRMSTADDR)
BCHP_REGISTER(0x20ca0a9c, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_11_MI_VALID)
BCHP_REGISTER(0x20ca0aa0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_FRMSTADDR)
BCHP_REGISTER(0x20ca0aa4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_12_MI_VALID)
BCHP_REGISTER(0x20ca0aa8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_FRMSTADDR)
BCHP_REGISTER(0x20ca0aac, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_13_MI_VALID)
BCHP_REGISTER(0x20ca0ab0, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_FRMSTADDR)
BCHP_REGISTER(0x20ca0ab4, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_14_MI_VALID)
BCHP_REGISTER(0x20ca0ab8, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_FRMSTADDR)
BCHP_REGISTER(0x20ca0abc, 32,  RW, AUD_FMM_BF_CTRL, SOURCECH_RINGBUF_15_MI_VALID)
BCHP_REGISTER(0x20ca0ac0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_FRMSTADDR)
BCHP_REGISTER(0x20ca0ac4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_0_MI_VALID)
BCHP_REGISTER(0x20ca0ac8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_FRMSTADDR)
BCHP_REGISTER(0x20ca0acc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_1_MI_VALID)
BCHP_REGISTER(0x20ca0ad0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_FRMSTADDR)
BCHP_REGISTER(0x20ca0ad4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_2_MI_VALID)
BCHP_REGISTER(0x20ca0ad8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_FRMSTADDR)
BCHP_REGISTER(0x20ca0adc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_3_MI_VALID)
BCHP_REGISTER(0x20ca0ae0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_FRMSTADDR)
BCHP_REGISTER(0x20ca0ae4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_4_MI_VALID)
BCHP_REGISTER(0x20ca0ae8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_FRMSTADDR)
BCHP_REGISTER(0x20ca0aec, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_5_MI_VALID)
BCHP_REGISTER(0x20ca0af0, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_FRMSTADDR)
BCHP_REGISTER(0x20ca0af4, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_6_MI_VALID)
BCHP_REGISTER(0x20ca0af8, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_FRMSTADDR)
BCHP_REGISTER(0x20ca0afc, 32,  RW, AUD_FMM_BF_CTRL, DESTCH_RINGBUF_7_MI_VALID)
BCHP_REGISTER(0x20ca1000, 32,  RO, AUD_FMM_BF_ESR, ESR0_STATUS)
BCHP_REGISTER(0x20ca1004, 32,  WO, AUD_FMM_BF_ESR, ESR0_STATUS_SET)
BCHP_REGISTER(0x20ca1008, 32,  WO, AUD_FMM_BF_ESR, ESR0_STATUS_CLEAR)
BCHP_REGISTER(0x20ca100c, 32,  RO, AUD_FMM_BF_ESR, ESR0_MASK)
BCHP_REGISTER(0x20ca1010, 32,  WO, AUD_FMM_BF_ESR, ESR0_MASK_SET)
BCHP_REGISTER(0x20ca1014, 32,  WO, AUD_FMM_BF_ESR, ESR0_MASK_CLEAR)
BCHP_REGISTER(0x20ca1018, 32,  RO, AUD_FMM_BF_ESR, ESR1_STATUS)
BCHP_REGISTER(0x20ca101c, 32,  WO, AUD_FMM_BF_ESR, ESR1_STATUS_SET)
BCHP_REGISTER(0x20ca1020, 32,  WO, AUD_FMM_BF_ESR, ESR1_STATUS_CLEAR)
BCHP_REGISTER(0x20ca1024, 32,  RO, AUD_FMM_BF_ESR, ESR1_MASK)
BCHP_REGISTER(0x20ca1028, 32,  WO, AUD_FMM_BF_ESR, ESR1_MASK_SET)
BCHP_REGISTER(0x20ca102c, 32,  WO, AUD_FMM_BF_ESR, ESR1_MASK_CLEAR)
BCHP_REGISTER(0x20ca1030, 32,  RO, AUD_FMM_BF_ESR, ESR2_STATUS)
BCHP_REGISTER(0x20ca1034, 32,  WO, AUD_FMM_BF_ESR, ESR2_STATUS_SET)
BCHP_REGISTER(0x20ca1038, 32,  WO, AUD_FMM_BF_ESR, ESR2_STATUS_CLEAR)
BCHP_REGISTER(0x20ca103c, 32,  RO, AUD_FMM_BF_ESR, ESR2_MASK)
BCHP_REGISTER(0x20ca1040, 32,  WO, AUD_FMM_BF_ESR, ESR2_MASK_SET)
BCHP_REGISTER(0x20ca1044, 32,  WO, AUD_FMM_BF_ESR, ESR2_MASK_CLEAR)
BCHP_REGISTER(0x20ca1048, 32,  RO, AUD_FMM_BF_ESR, ESR3_STATUS)
BCHP_REGISTER(0x20ca104c, 32,  WO, AUD_FMM_BF_ESR, ESR3_STATUS_SET)
BCHP_REGISTER(0x20ca1050, 32,  WO, AUD_FMM_BF_ESR, ESR3_STATUS_CLEAR)
BCHP_REGISTER(0x20ca1054, 32,  RO, AUD_FMM_BF_ESR, ESR3_MASK)
BCHP_REGISTER(0x20ca1058, 32,  WO, AUD_FMM_BF_ESR, ESR3_MASK_SET)
BCHP_REGISTER(0x20ca105c, 32,  WO, AUD_FMM_BF_ESR, ESR3_MASK_CLEAR)
BCHP_REGISTER(0x20ca1060, 32,  RO, AUD_FMM_BF_ESR, ESR4_STATUS)
BCHP_REGISTER(0x20ca1064, 32,  WO, AUD_FMM_BF_ESR, ESR4_STATUS_SET)
BCHP_REGISTER(0x20ca1068, 32,  WO, AUD_FMM_BF_ESR, ESR4_STATUS_CLEAR)
BCHP_REGISTER(0x20ca106c, 32,  RO, AUD_FMM_BF_ESR, ESR4_MASK)
BCHP_REGISTER(0x20ca1070, 32,  WO, AUD_FMM_BF_ESR, ESR4_MASK_SET)
BCHP_REGISTER(0x20ca1074, 32,  WO, AUD_FMM_BF_ESR, ESR4_MASK_CLEAR)
BCHP_REGISTER(0x20ca2000, 32,  RW, AUD_FMM_SRC_CTRL0, RAMP_STEP)
BCHP_REGISTER(0x20ca2004, 32,  RO, AUD_FMM_SRC_CTRL0, RD_BANK_SEL)
BCHP_REGISTER(0x20ca2008, 32,  RO, AUD_FMM_SRC_CTRL0, FLT_STAT)
BCHP_REGISTER(0x20ca200c, 32,  RW, AUD_FMM_SRC_CTRL0, ALT_ENABLE)
BCHP_REGISTER(0x20ca2010, 32,  RW, AUD_FMM_SRC_CTRL0, MISC_CFG)
BCHP_REGISTER(0x20ca2014, 32,  RW, AUD_FMM_SRC_CTRL0, STRM_RESET)
BCHP_REGISTER(0x20ca2018, 32,  RO, AUD_FMM_SRC_CTRL0, GROUP_ENABLE)
BCHP_REGISTER(0x20ca201c, 32,  RO, AUD_FMM_SRC_CTRL0, DIAG)
BCHP_REGISTER(0x20ca3000, 32,  RO, AUD_FMM_SRC_ESR0, STATUS)
BCHP_REGISTER(0x20ca3004, 32,  WO, AUD_FMM_SRC_ESR0, STATUS_SET)
BCHP_REGISTER(0x20ca3008, 32,  WO, AUD_FMM_SRC_ESR0, STATUS_CLEAR)
BCHP_REGISTER(0x20ca300c, 32,  RO, AUD_FMM_SRC_ESR0, MASK)
BCHP_REGISTER(0x20ca3010, 32,  WO, AUD_FMM_SRC_ESR0, MASK_SET)
BCHP_REGISTER(0x20ca3014, 32,  WO, AUD_FMM_SRC_ESR0, MASK_CLEAR)
BCHP_REGISTER(0x20ca4200, 32,  RW, AUD_FMM_DP_CTRL0, VOLUME_RAMP_UP_STEP)
BCHP_REGISTER(0x20ca4204, 32,  RW, AUD_FMM_DP_CTRL0, VOLUME_RAMP_DOWN_STEP)
BCHP_REGISTER(0x20ca4208, 32,  RW, AUD_FMM_DP_CTRL0, DP_MISC_CTRL)
BCHP_REGISTER(0x20ca420c, 32,  RO, AUD_FMM_DP_CTRL0, DP_SM)
BCHP_REGISTER(0x20ca58c0, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEFA)
BCHP_REGISTER(0x20ca58c4, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEFB)
BCHP_REGISTER(0x20ca58c8, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEFD)
BCHP_REGISTER(0x20ca58cc, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEFE)
BCHP_REGISTER(0x20ca58d0, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEFF)
BCHP_REGISTER(0x20ca58d4, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEF_0_5)
BCHP_REGISTER(0x20ca58d8, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEF_0_8)
BCHP_REGISTER(0x20ca58dc, 32,  RW, AUD_FMM_DP_CTRL0, SOFT_COEF_1_25)
BCHP_REGISTER(0x20ca7c00, 32,  RO, AUD_FMM_DP_ESR0, ESR0_STATUS)
BCHP_REGISTER(0x20ca7c04, 32,  WO, AUD_FMM_DP_ESR0, ESR0_STATUS_SET)
BCHP_REGISTER(0x20ca7c08, 32,  WO, AUD_FMM_DP_ESR0, ESR0_STATUS_CLEAR)
BCHP_REGISTER(0x20ca7c0c, 32,  RO, AUD_FMM_DP_ESR0, ESR0_MASK)
BCHP_REGISTER(0x20ca7c10, 32,  WO, AUD_FMM_DP_ESR0, ESR0_MASK_SET)
BCHP_REGISTER(0x20ca7c14, 32,  WO, AUD_FMM_DP_ESR0, ESR0_MASK_CLEAR)
BCHP_REGISTER(0x20ca7c18, 32,  RO, AUD_FMM_DP_ESR0, ESR1_STATUS)
BCHP_REGISTER(0x20ca7c1c, 32,  WO, AUD_FMM_DP_ESR0, ESR1_STATUS_SET)
BCHP_REGISTER(0x20ca7c20, 32,  WO, AUD_FMM_DP_ESR0, ESR1_STATUS_CLEAR)
BCHP_REGISTER(0x20ca7c24, 32,  RO, AUD_FMM_DP_ESR0, ESR1_MASK)
BCHP_REGISTER(0x20ca7c28, 32,  WO, AUD_FMM_DP_ESR0, ESR1_MASK_SET)
BCHP_REGISTER(0x20ca7c2c, 32,  WO, AUD_FMM_DP_ESR0, ESR1_MASK_CLEAR)
BCHP_REGISTER(0x20cb0000, 32,  RW, AUD_FMM_IOP_OUT_I2S_0, STREAM_CFG_0)
BCHP_REGISTER(0x20cb0004, 32,  RW, AUD_FMM_IOP_OUT_I2S_0, I2S_CFG)
BCHP_REGISTER(0x20cb0008, 32,  RW, AUD_FMM_IOP_OUT_I2S_0, I2S_CROSSBAR)
BCHP_REGISTER(0x20cb000c, 32,  RW, AUD_FMM_IOP_OUT_I2S_0, MCLK_CFG_0)
BCHP_REGISTER(0x20cb0018, 32,  RW, AUD_FMM_IOP_OUT_I2S_0, I2S_LEGACY)
BCHP_REGISTER(0x20cb0020, 32,  RO, AUD_FMM_IOP_OUT_I2S_0, ESR_STATUS)
BCHP_REGISTER(0x20cb0024, 32,  WO, AUD_FMM_IOP_OUT_I2S_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb0028, 32,  WO, AUD_FMM_IOP_OUT_I2S_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb002c, 32,  RO, AUD_FMM_IOP_OUT_I2S_0, ESR_MASK)
BCHP_REGISTER(0x20cb0030, 32,  WO, AUD_FMM_IOP_OUT_I2S_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb0034, 32,  WO, AUD_FMM_IOP_OUT_I2S_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb0100, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, STREAM_CFG_0)
BCHP_REGISTER(0x20cb0120, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_CTRL)
BCHP_REGISTER(0x20cb0124, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_CHANSTAT_0)
BCHP_REGISTER(0x20cb0128, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_CHANSTAT_1)
BCHP_REGISTER(0x20cb012c, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_CHANSTAT_2)
BCHP_REGISTER(0x20cb0130, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_RAMP_BURST)
BCHP_REGISTER(0x20cb0134, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_RAMP_STEP_IN_OVERWRITE_MODE)
BCHP_REGISTER(0x20cb0140, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, SPDIF_FORMAT_CFG)
BCHP_REGISTER(0x20cb0160, 32,  RW, AUD_FMM_IOP_OUT_SPDIF_0, MCLK_CFG_0)
BCHP_REGISTER(0x20cb0170, 32,  RO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_STATUS)
BCHP_REGISTER(0x20cb0174, 32,  WO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb0178, 32,  WO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb017c, 32,  RO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_MASK)
BCHP_REGISTER(0x20cb0180, 32,  WO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb0184, 32,  WO, AUD_FMM_IOP_OUT_SPDIF_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb0220, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_CTRL)
BCHP_REGISTER(0x20cb0224, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_CHANSTAT_0)
BCHP_REGISTER(0x20cb0228, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_CHANSTAT_1)
BCHP_REGISTER(0x20cb022c, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_CHANSTAT_2)
BCHP_REGISTER(0x20cb0230, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_RAMP_BURST)
BCHP_REGISTER(0x20cb0234, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, SPDIF_RAMP_STEP_IN_OVERWRITE_MODE)
BCHP_REGISTER(0x20cb0240, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, MAI_FORMAT_CFG)
BCHP_REGISTER(0x20cb0244, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, MAI_FORMAT_WORD)
BCHP_REGISTER(0x20cb0248, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, MAI_CROSSBAR)
BCHP_REGISTER(0x20cb0260, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, MCLK_CFG_0)
BCHP_REGISTER(0x20cb0264, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, LOW_LATENCY_PASSTHROUGH_CFG)
BCHP_REGISTER(0x20cb0268, 32,  RW, AUD_FMM_IOP_OUT_MAI_0, HONOR_HW_MUTE)
BCHP_REGISTER(0x20cb026c, 32,  WO, AUD_FMM_IOP_OUT_MAI_0, LONG_TERM_MUTE_DETECTOR_INTERVAL)
BCHP_REGISTER(0x20cb0270, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, FORMAT_WORD_TRANSMITTED)
BCHP_REGISTER(0x20cb0274, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, L0_DATA)
BCHP_REGISTER(0x20cb0278, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, R0_DATA)
BCHP_REGISTER(0x20cb027c, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, L1_DATA)
BCHP_REGISTER(0x20cb0280, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, R1_DATA)
BCHP_REGISTER(0x20cb0284, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, L2_DATA)
BCHP_REGISTER(0x20cb0288, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, R2_DATA)
BCHP_REGISTER(0x20cb028c, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, L3_DATA)
BCHP_REGISTER(0x20cb0290, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, R3_DATA)
BCHP_REGISTER(0x20cb0294, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, LOW_LATENCY_PASSTHROUGH_STATUS)
BCHP_REGISTER(0x20cb0298, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, LONG_TERM_MUTE_DETECTOR_COUNT)
BCHP_REGISTER(0x20cb02a0, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, ESR_STATUS)
BCHP_REGISTER(0x20cb02a4, 32,  WO, AUD_FMM_IOP_OUT_MAI_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb02a8, 32,  WO, AUD_FMM_IOP_OUT_MAI_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb02ac, 32,  RO, AUD_FMM_IOP_OUT_MAI_0, ESR_MASK)
BCHP_REGISTER(0x20cb02b0, 32,  WO, AUD_FMM_IOP_OUT_MAI_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb02b4, 32,  WO, AUD_FMM_IOP_OUT_MAI_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb0300, 32,  RW, AUD_FMM_IOP_PLL_0, MACRO)
BCHP_REGISTER(0x20cb0304, 32,  RW, AUD_FMM_IOP_PLL_0, CONTROL_0)
BCHP_REGISTER(0x20cb0308, 32,  RW, AUD_FMM_IOP_PLL_0, USER_NDIV)
BCHP_REGISTER(0x20cb030c, 32,  RW, AUD_FMM_IOP_PLL_0, USER_CTLBUS_HI)
BCHP_REGISTER(0x20cb0310, 32,  RW, AUD_FMM_IOP_PLL_0, USER_CTLBUS_LO)
BCHP_REGISTER(0x20cb0320, 32,  RW, AUD_FMM_IOP_PLL_0, USER_MDIV_Ch0)
BCHP_REGISTER(0x20cb0324, 32,  RW, AUD_FMM_IOP_PLL_0, USER_MDIV_Ch1)
BCHP_REGISTER(0x20cb0328, 32,  RW, AUD_FMM_IOP_PLL_0, USER_MDIV_Ch2)
BCHP_REGISTER(0x20cb0340, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_NDIV)
BCHP_REGISTER(0x20cb0344, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_CTLBUS_HI)
BCHP_REGISTER(0x20cb0348, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_CTLBUS_LO)
BCHP_REGISTER(0x20cb0350, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_MDIV_Ch0)
BCHP_REGISTER(0x20cb0354, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_MDIV_Ch1)
BCHP_REGISTER(0x20cb0358, 32,  RO, AUD_FMM_IOP_PLL_0, ACTIVE_MDIV_Ch2)
BCHP_REGISTER(0x20cb0360, 32,  RW, AUD_FMM_IOP_PLL_0, BG_PWRON)
BCHP_REGISTER(0x20cb0364, 32,  RW, AUD_FMM_IOP_PLL_0, PDIV)
BCHP_REGISTER(0x20cb0368, 32,  RW, AUD_FMM_IOP_PLL_0, GAIN)
BCHP_REGISTER(0x20cb036c, 32,  RW, AUD_FMM_IOP_PLL_0, LDO_CTRL)
BCHP_REGISTER(0x20cb0370, 32,  RW, AUD_FMM_IOP_PLL_0, LDO_PWRON)
BCHP_REGISTER(0x20cb0374, 32,  RO, AUD_FMM_IOP_PLL_0, LOCK_STATUS)
BCHP_REGISTER(0x20cb0378, 32,  RW, AUD_FMM_IOP_PLL_0, PWRON)
BCHP_REGISTER(0x20cb037c, 32,  RW, AUD_FMM_IOP_PLL_0, RESET)
BCHP_REGISTER(0x20cb0380, 32,  RW, AUD_FMM_IOP_PLL_0, SSC_MODE_CONTROL_HIGH)
BCHP_REGISTER(0x20cb0384, 32,  RW, AUD_FMM_IOP_PLL_0, SSC_MODE_CONTROL_LOW)
BCHP_REGISTER(0x20cb0388, 32,  RO, AUD_FMM_IOP_PLL_0, TEST_STATUS)
BCHP_REGISTER(0x20cb038c, 32,  RW, AUD_FMM_IOP_PLL_0, ISOLATION)
BCHP_REGISTER(0x20cb0400, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_CONTROL)
BCHP_REGISTER(0x20cb0404, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_RATE_RATIO)
BCHP_REGISTER(0x20cb0408, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_SAMPLE_INC)
BCHP_REGISTER(0x20cb040c, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_PHASE_INC)
BCHP_REGISTER(0x20cb0410, 32,  WO, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_INTEGRATOR_HI)
BCHP_REGISTER(0x20cb0414, 32,  WO, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_INTEGRATOR_LO)
BCHP_REGISTER(0x20cb0418, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_OFFSET)
BCHP_REGISTER(0x20cb041c, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_FORMAT)
BCHP_REGISTER(0x20cb0420, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x20cb0424, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_SKIP_REPEAT_GAP)
BCHP_REGISTER(0x20cb0428, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x20cb042c, 32,  RO, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x20cb0430, 32,  RO, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x20cb0434, 32,  RO, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_STATUS)
BCHP_REGISTER(0x20cb0438, 32,  RW, AUD_FMM_IOP_NCO_0, MCLK_GEN_0_STATUS_CLEAR)
BCHP_REGISTER(0x20cb0500, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_CONTROL)
BCHP_REGISTER(0x20cb0504, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_RATE_RATIO)
BCHP_REGISTER(0x20cb0508, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_SAMPLE_INC)
BCHP_REGISTER(0x20cb050c, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_PHASE_INC)
BCHP_REGISTER(0x20cb0510, 32,  WO, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_INTEGRATOR_HI)
BCHP_REGISTER(0x20cb0514, 32,  WO, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_INTEGRATOR_LO)
BCHP_REGISTER(0x20cb0518, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_OFFSET)
BCHP_REGISTER(0x20cb051c, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_FORMAT)
BCHP_REGISTER(0x20cb0520, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_SKIP_REPEAT_CONTROL)
BCHP_REGISTER(0x20cb0524, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_SKIP_REPEAT_GAP)
BCHP_REGISTER(0x20cb0528, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_SKIP_REPEAT_NUMBER)
BCHP_REGISTER(0x20cb052c, 32,  RO, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_INTEGRATOR_HI_STATUS)
BCHP_REGISTER(0x20cb0530, 32,  RO, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_INTEGRATOR_LO_STATUS)
BCHP_REGISTER(0x20cb0534, 32,  RO, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_STATUS)
BCHP_REGISTER(0x20cb0538, 32,  RW, AUD_FMM_IOP_NCO_1, MCLK_GEN_0_STATUS_CLEAR)
BCHP_REGISTER(0x20cb0700, 32,  RO, AUD_FMM_IOP_LOOPBACK_0, CAPTURE_FCI_ID_TABLE)
BCHP_REGISTER(0x20cb0710, 32,  RO, AUD_FMM_IOP_LOOPBACK_0, ESR_STATUS)
BCHP_REGISTER(0x20cb0714, 32,  WO, AUD_FMM_IOP_LOOPBACK_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb0718, 32,  WO, AUD_FMM_IOP_LOOPBACK_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb071c, 32,  RO, AUD_FMM_IOP_LOOPBACK_0, ESR_MASK)
BCHP_REGISTER(0x20cb0720, 32,  WO, AUD_FMM_IOP_LOOPBACK_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb0724, 32,  WO, AUD_FMM_IOP_LOOPBACK_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb1000, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CAP_STREAM_CFG_0)
BCHP_REGISTER(0x20cb1020, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, REVISION)
BCHP_REGISTER(0x20cb1024, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CONFIG)
BCHP_REGISTER(0x20cb1028, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, ADJUST)
BCHP_REGISTER(0x20cb102c, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, STATUS)
BCHP_REGISTER(0x20cb1030, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, PLL_RANGE_CTRL)
BCHP_REGISTER(0x20cb1034, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, RAW_RATE)
BCHP_REGISTER(0x20cb1038, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, PPM_CTRL)
BCHP_REGISTER(0x20cb103c, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, RATE_PPM)
BCHP_REGISTER(0x20cb1040, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_CTRL)
BCHP_REGISTER(0x20cb1044, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_MASK0)
BCHP_REGISTER(0x20cb1048, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_MASK1)
BCHP_REGISTER(0x20cb104c, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_MASK2)
BCHP_REGISTER(0x20cb1050, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_L0)
BCHP_REGISTER(0x20cb1054, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_R0)
BCHP_REGISTER(0x20cb1058, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_L1)
BCHP_REGISTER(0x20cb105c, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_R1)
BCHP_REGISTER(0x20cb1060, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_L2)
BCHP_REGISTER(0x20cb1064, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CHAN_STAT_R2)
BCHP_REGISTER(0x20cb1068, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, MAX_PLL_ERROR)
BCHP_REGISTER(0x20cb106c, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, RATE_MISMATCH)
BCHP_REGISTER(0x20cb1070, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, PBIT_MISMATCH)
BCHP_REGISTER(0x20cb1074, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, VBIT_MISMATCH)
BCHP_REGISTER(0x20cb1078, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CBIT_MISMATCH)
BCHP_REGISTER(0x20cb107c, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, OUT_RATE_CTRL)
BCHP_REGISTER(0x20cb1080, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, CLKS_PER_SAMP)
BCHP_REGISTER(0x20cb1084, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, INTR_THRESHOLD)
BCHP_REGISTER(0x20cb1088, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_16K)
BCHP_REGISTER(0x20cb108c, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_22P05K)
BCHP_REGISTER(0x20cb1090, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_24K)
BCHP_REGISTER(0x20cb1094, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_32K)
BCHP_REGISTER(0x20cb1098, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_44P1K)
BCHP_REGISTER(0x20cb109c, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_48K)
BCHP_REGISTER(0x20cb10a0, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_64K)
BCHP_REGISTER(0x20cb10a4, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_88P2K)
BCHP_REGISTER(0x20cb10a8, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_96K)
BCHP_REGISTER(0x20cb10ac, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_128K)
BCHP_REGISTER(0x20cb10b0, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_176P4K)
BCHP_REGISTER(0x20cb10b4, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, LOCK_THRESHOLD_192K)
BCHP_REGISTER(0x20cb10d0, 32,  RW, AUD_FMM_IOP_IN_SPDIF_0, MCLK_CFG_0)
BCHP_REGISTER(0x20cb10e0, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, ESR_STATUS)
BCHP_REGISTER(0x20cb10e4, 32,  WO, AUD_FMM_IOP_IN_SPDIF_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb10e8, 32,  WO, AUD_FMM_IOP_IN_SPDIF_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb10ec, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, ESR_MASK)
BCHP_REGISTER(0x20cb10f0, 32,  WO, AUD_FMM_IOP_IN_SPDIF_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb10f4, 32,  WO, AUD_FMM_IOP_IN_SPDIF_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb10f8, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, CAPTURE_FCI_ID_TABLE)
BCHP_REGISTER(0x20cb10fc, 32,  RO, AUD_FMM_IOP_IN_SPDIF_0, DIAG)
BCHP_REGISTER(0x20cb1800, 32,  RW, AUD_FMM_IOP_IN_I2S_0, CAP_STREAM_CFG_0)
BCHP_REGISTER(0x20cb1804, 32,  RW, AUD_FMM_IOP_IN_I2S_0, I2S_IN_CFG)
BCHP_REGISTER(0x20cb1808, 32,  RW, AUD_FMM_IOP_IN_I2S_0, MCLK_CFG_0)
BCHP_REGISTER(0x20cb180c, 32,  RO, AUD_FMM_IOP_IN_I2S_0, CAPTURE_FCI_ID_TABLE)
BCHP_REGISTER(0x20cb1818, 32,  RW, AUD_FMM_IOP_IN_I2S_0, I2S_LEGACY)
BCHP_REGISTER(0x20cb1820, 32,  RO, AUD_FMM_IOP_IN_I2S_0, ESR_STATUS)
BCHP_REGISTER(0x20cb1824, 32,  WO, AUD_FMM_IOP_IN_I2S_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb1828, 32,  WO, AUD_FMM_IOP_IN_I2S_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb182c, 32,  RO, AUD_FMM_IOP_IN_I2S_0, ESR_MASK)
BCHP_REGISTER(0x20cb1830, 32,  WO, AUD_FMM_IOP_IN_I2S_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb1834, 32,  WO, AUD_FMM_IOP_IN_I2S_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb1920, 32,  RW, AUD_FMM_IOP_ATTG_0, ATTG_CFG_0)
BCHP_REGISTER(0x20cb1930, 32,  RW, AUD_FMM_IOP_ATTG_0, KNOWN_PATTERN_SEQ)
BCHP_REGISTER(0x20cb1940, 32,  RO, AUD_FMM_IOP_ATTG_0, CAPTURE_FCI_ID_TABLE)
BCHP_REGISTER(0x20cb1950, 32,  RO, AUD_FMM_IOP_ATTG_0, ESR_STATUS)
BCHP_REGISTER(0x20cb1954, 32,  WO, AUD_FMM_IOP_ATTG_0, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb1958, 32,  WO, AUD_FMM_IOP_ATTG_0, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb195c, 32,  RO, AUD_FMM_IOP_ATTG_0, ESR_MASK)
BCHP_REGISTER(0x20cb1960, 32,  WO, AUD_FMM_IOP_ATTG_0, ESR_MASK_SET)
BCHP_REGISTER(0x20cb1964, 32,  WO, AUD_FMM_IOP_ATTG_0, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cb1b00, 32,  RW, AUD_FMM_IOP_MISC, IOP_SW_INIT_LOGIC)
BCHP_REGISTER(0x20cb1b04, 32,  RW, AUD_FMM_IOP_MISC, IOP_SW_INIT_REGS)
BCHP_REGISTER(0x20cb1b10, 32,  RW, AUD_FMM_IOP_MISC, IOP_DIAG_SEL)
BCHP_REGISTER(0x20cb1b40, 32,  RO, AUD_FMM_IOP_MISC, ESR_STATUS)
BCHP_REGISTER(0x20cb1b44, 32,  WO, AUD_FMM_IOP_MISC, ESR_STATUS_SET)
BCHP_REGISTER(0x20cb1b48, 32,  WO, AUD_FMM_IOP_MISC, ESR_STATUS_CLEAR)
BCHP_REGISTER(0x20cb1b4c, 32,  RO, AUD_FMM_IOP_MISC, ESR_MASK)
BCHP_REGISTER(0x20cb1b50, 32,  WO, AUD_FMM_IOP_MISC, ESR_MASK_SET)
BCHP_REGISTER(0x20cb1b54, 32,  WO, AUD_FMM_IOP_MISC, ESR_MASK_CLEAR)
BCHP_REGISTER(0x20cc0080, 32,  RO, AUD_AIO_GRB, REVISION)
BCHP_REGISTER(0x20cc0084, 32,  RW, AUD_AIO_GRB, CTRL)
BCHP_REGISTER(0x20cc0088, 32,  RW, AUD_AIO_GRB, SW_INIT_0)
BCHP_REGISTER(0x20cc008c, 32,  RW, AUD_AIO_GRB, SW_INIT_1)
BCHP_REGISTER(0x21100000, 32,  RO, MEMC_GEN_0, CORE_REV_ID)
BCHP_REGISTER(0x21100004, 32,  RO, MEMC_GEN_0, CORE_OPTIONS)
BCHP_REGISTER(0x21100008, 32,  RO, MEMC_GEN_0, CORE_PDEPTH)
BCHP_REGISTER(0x2110000c, 32,  RW, MEMC_GEN_0, FIRMWARE_DEBUG)
BCHP_REGISTER(0x21100010, 32,  RO, MEMC_GEN_0, SM_TIMEOUT_INTR_INFO)
BCHP_REGISTER(0x21100014, 32, CFG, MEMC_GEN_0, SM_TIMEOUT_INTR_WRITE_CLEAR)
BCHP_REGISTER(0x21100018, 32,  RO, MEMC_GEN_0, SCB_NOREQ_INTR_INFO)
BCHP_REGISTER(0x2110001c, 32, CFG, MEMC_GEN_0, SCB_NOREQ_INTR_WRITE_CLEAR)
BCHP_REGISTER(0x21100020, 32,  RO, MEMC_GEN_0, SCB_CMD_INTR_INFO)
BCHP_REGISTER(0x21100024, 32, CFG, MEMC_GEN_0, SCB_CMD_INTR_WRITE_CLEAR)
BCHP_REGISTER(0x21100028, 32,  RO, MEMC_GEN_0, SCB_START_ADDR_INTR_INFO)
BCHP_REGISTER(0x2110002c, 32, CFG, MEMC_GEN_0, SCB_START_ADDR_INTR_WRITE_CLEAR)
BCHP_REGISTER(0x21100030, 32,  RO, MEMC_GEN_0, SCB_LAST_WRITE_ERROR_INFO)
BCHP_REGISTER(0x21100034, 32,  RO, MEMC_GEN_0, SCB_LAST_WRITE_ERROR_INFO2)
BCHP_REGISTER(0x21100038, 32, CFG, MEMC_GEN_0, SCB_LAST_WRITE_ERROR_WRITE_CLEAR)
BCHP_REGISTER(0x2110003c, 32, CFG, MEMC_GEN_0, CMD_TRACE_FIFO_MODE)
BCHP_REGISTER(0x21100040, 32,  RO, MEMC_GEN_0, SEQ_CMD_DBG_0)
BCHP_REGISTER(0x21100044, 32,  RO, MEMC_GEN_0, SEQ_CMD_DBG_1)
BCHP_REGISTER(0x21100048, 32,  RO, MEMC_GEN_0, SEQ_CMD_DBG_2)
BCHP_REGISTER(0x2110004c, 32,  RO, MEMC_GEN_0, SEQ_CMD_DBG_3)
BCHP_REGISTER(0x21100050, 32,  RO, MEMC_GEN_0, SEQ_CMD_DBG_4)
BCHP_REGISTER(0x21100054, 32,  RO, MEMC_GEN_0, SEQ_INPUT_DBG_INFO)
BCHP_REGISTER(0x21100058, 32,  RO, MEMC_GEN_0, MISC_SEQ_DBG_INFO)
BCHP_REGISTER(0x2110005c, 32,  RO, MEMC_GEN_0, BIU_DBG_INFO)
BCHP_REGISTER(0x21100060, 32, CFG, MEMC_GEN_0, TP_ADRS)
BCHP_REGISTER(0x21100064, 32,  RO, MEMC_GEN_0, TP_READ_DATA)
BCHP_REGISTER(0x21100068, 32, CFG, MEMC_GEN_0, MISC_BIU_MSA_REG)
BCHP_REGISTER(0x2110006c, 32,  RO, MEMC_GEN_0, SCB_NOREQ_CMDBUS_INTR_INFO_0)
BCHP_REGISTER(0x21100070, 32,  RO, MEMC_GEN_0, SCB_NOREQ_CMDBUS_INTR_INFO_1)
BCHP_REGISTER(0x21100074, 32,  RW, MEMC_GEN_0, SPARE_1)
BCHP_REGISTER(0x21100078, 32,  RW, MEMC_GEN_0, SPARE_2)
BCHP_REGISTER(0x2110007c, 32,  RO, MEMC_GEN_0, SPARE_RO_1)
BCHP_REGISTER(0x21100080, 32,  RO, MEMC_GEN_0, SPARE_RO_2)
BCHP_REGISTER(0x21100084, 32, CFG, MEMC_GEN_0, TP_CORE_SEL)
BCHP_REGISTER(0x21100088, 32,  RO, MEMC_GEN_0, PFRI_0_PAGE_BRK_INTR_INFO_0)
BCHP_REGISTER(0x2110008c, 32,  RO, MEMC_GEN_0, PFRI_0_PAGE_BRK_INTR_INFO_1)
BCHP_REGISTER(0x21100090, 32,  RO, MEMC_GEN_0, PFRI_0_VIOL_ADDR_LSB)
BCHP_REGISTER(0x21100094, 32,  RO, MEMC_GEN_0, PFRI_0_VIOL_ADDR_MSB)
BCHP_REGISTER(0x21100098, 32, CFG, MEMC_GEN_0, PFRI_0_VIOLATION_INFO_WRITE_CLEAR)
BCHP_REGISTER(0x2110009c, 32, CFG, MEMC_GEN_0, PFRI_0_LADDR_FIFO_DEPTH_COUNT)
BCHP_REGISTER(0x211000a0, 32,  RO, MEMC_GEN_0, PFRI_0_LADDR_FIFO_STATUS)
BCHP_REGISTER(0x211000a4, 32, CFG, MEMC_GEN_0, PFRI_0_THROTTLE_CONFIG)
BCHP_REGISTER(0x211000a8, 32, CFG, MEMC_GEN_0, PFRI_0_THROTTLE_FILTER_CTRL)
BCHP_REGISTER(0x211000ac, 32, CFG, MEMC_GEN_0, PFRI_0_THROTTLE_THRESH0)
BCHP_REGISTER(0x211000b0, 32, CFG, MEMC_GEN_0, PFRI_0_THROTTLE_THRESH1)
BCHP_REGISTER(0x211000b4, 32,  RW, MEMC_GEN_0, PFRI_0_THROTTLE_STATUS)
BCHP_REGISTER(0x211000b8, 32,  RW, MEMC_GEN_0, PFRI_0_THROTTLE_STATE_MAX)
BCHP_REGISTER(0x211000bc, 32,  RW, MEMC_GEN_0, PFRI_0_THROTTLE_COUNT_NORM)
BCHP_REGISTER(0x211000c0, 32,  RW, MEMC_GEN_0, PFRI_0_THROTTLE_COUNT_ALT)
BCHP_REGISTER(0x211000c4, 32,  RO, MEMC_GEN_0, PFRI_1_PAGE_BRK_INTR_INFO_0)
BCHP_REGISTER(0x211000c8, 32,  RO, MEMC_GEN_0, PFRI_1_PAGE_BRK_INTR_INFO_1)
BCHP_REGISTER(0x211000cc, 32,  RO, MEMC_GEN_0, PFRI_1_VIOL_ADDR_LSB)
BCHP_REGISTER(0x211000d0, 32,  RO, MEMC_GEN_0, PFRI_1_VIOL_ADDR_MSB)
BCHP_REGISTER(0x211000d4, 32, CFG, MEMC_GEN_0, PFRI_1_VIOLATION_INFO_WRITE_CLEAR)
BCHP_REGISTER(0x211000d8, 32, CFG, MEMC_GEN_0, PFRI_1_LADDR_FIFO_DEPTH_COUNT)
BCHP_REGISTER(0x211000dc, 32,  RO, MEMC_GEN_0, PFRI_1_LADDR_FIFO_STATUS)
BCHP_REGISTER(0x211000e0, 32, CFG, MEMC_GEN_0, PFRI_1_THROTTLE_CONFIG)
BCHP_REGISTER(0x211000e4, 32, CFG, MEMC_GEN_0, PFRI_1_THROTTLE_FILTER_CTRL)
BCHP_REGISTER(0x211000e8, 32, CFG, MEMC_GEN_0, PFRI_1_THROTTLE_THRESH0)
BCHP_REGISTER(0x211000ec, 32, CFG, MEMC_GEN_0, PFRI_1_THROTTLE_THRESH1)
BCHP_REGISTER(0x211000f0, 32,  RW, MEMC_GEN_0, PFRI_1_THROTTLE_STATUS)
BCHP_REGISTER(0x211000f4, 32,  RW, MEMC_GEN_0, PFRI_1_THROTTLE_STATE_MAX)
BCHP_REGISTER(0x211000f8, 32,  RW, MEMC_GEN_0, PFRI_1_THROTTLE_COUNT_NORM)
BCHP_REGISTER(0x211000fc, 32,  RW, MEMC_GEN_0, PFRI_1_THROTTLE_COUNT_ALT)
BCHP_REGISTER(0x21100100, 32,  RO, MEMC_GEN_0, PFRI_2_PAGE_BRK_INTR_INFO_0)
BCHP_REGISTER(0x21100104, 32,  RO, MEMC_GEN_0, PFRI_2_PAGE_BRK_INTR_INFO_1)
BCHP_REGISTER(0x21100108, 32,  RO, MEMC_GEN_0, PFRI_2_VIOL_ADDR_LSB)
BCHP_REGISTER(0x2110010c, 32,  RO, MEMC_GEN_0, PFRI_2_VIOL_ADDR_MSB)
BCHP_REGISTER(0x21100110, 32, CFG, MEMC_GEN_0, PFRI_2_VIOLATION_INFO_WRITE_CLEAR)
BCHP_REGISTER(0x21100114, 32, CFG, MEMC_GEN_0, PFRI_2_LADDR_FIFO_DEPTH_COUNT)
BCHP_REGISTER(0x21100118, 32,  RO, MEMC_GEN_0, PFRI_2_LADDR_FIFO_STATUS)
BCHP_REGISTER(0x2110011c, 32, CFG, MEMC_GEN_0, PFRI_2_THROTTLE_CONFIG)
BCHP_REGISTER(0x21100120, 32, CFG, MEMC_GEN_0, PFRI_2_THROTTLE_FILTER_CTRL)
BCHP_REGISTER(0x21100124, 32, CFG, MEMC_GEN_0, PFRI_2_THROTTLE_THRESH0)
BCHP_REGISTER(0x21100128, 32, CFG, MEMC_GEN_0, PFRI_2_THROTTLE_THRESH1)
BCHP_REGISTER(0x2110012c, 32,  RW, MEMC_GEN_0, PFRI_2_THROTTLE_STATUS)
BCHP_REGISTER(0x21100130, 32,  RW, MEMC_GEN_0, PFRI_2_THROTTLE_STATE_MAX)
BCHP_REGISTER(0x21100134, 32,  RW, MEMC_GEN_0, PFRI_2_THROTTLE_COUNT_NORM)
BCHP_REGISTER(0x21100138, 32,  RW, MEMC_GEN_0, PFRI_2_THROTTLE_COUNT_ALT)
BCHP_REGISTER(0x2110013c, 32,  RO, MEMC_GEN_0, PFRI_3_PAGE_BRK_INTR_INFO_0)
BCHP_REGISTER(0x21100140, 32,  RO, MEMC_GEN_0, PFRI_3_PAGE_BRK_INTR_INFO_1)
BCHP_REGISTER(0x21100144, 32,  RO, MEMC_GEN_0, PFRI_3_VIOL_ADDR_LSB)
BCHP_REGISTER(0x21100148, 32,  RO, MEMC_GEN_0, PFRI_3_VIOL_ADDR_MSB)
BCHP_REGISTER(0x2110014c, 32, CFG, MEMC_GEN_0, PFRI_3_VIOLATION_INFO_WRITE_CLEAR)
BCHP_REGISTER(0x21100150, 32, CFG, MEMC_GEN_0, PFRI_3_LADDR_FIFO_DEPTH_COUNT)
BCHP_REGISTER(0x21100154, 32,  RO, MEMC_GEN_0, PFRI_3_LADDR_FIFO_STATUS)
BCHP_REGISTER(0x21100158, 32, CFG, MEMC_GEN_0, PFRI_3_THROTTLE_CONFIG)
BCHP_REGISTER(0x2110015c, 32, CFG, MEMC_GEN_0, PFRI_3_THROTTLE_FILTER_CTRL)
BCHP_REGISTER(0x21100160, 32, CFG, MEMC_GEN_0, PFRI_3_THROTTLE_THRESH0)
BCHP_REGISTER(0x21100164, 32, CFG, MEMC_GEN_0, PFRI_3_THROTTLE_THRESH1)
BCHP_REGISTER(0x21100168, 32,  RW, MEMC_GEN_0, PFRI_3_THROTTLE_STATUS)
BCHP_REGISTER(0x2110016c, 32,  RW, MEMC_GEN_0, PFRI_3_THROTTLE_STATE_MAX)
BCHP_REGISTER(0x21100170, 32,  RW, MEMC_GEN_0, PFRI_3_THROTTLE_COUNT_NORM)
BCHP_REGISTER(0x21100174, 32,  RW, MEMC_GEN_0, PFRI_3_THROTTLE_COUNT_ALT)
BCHP_REGISTER(0x211001a0, 32, CFG, MEMC_GEN_0, ZQCS_CONTROL)
BCHP_REGISTER(0x211001a4, 32, CFG, MEMC_GEN_0, ZQCS_ADDR)
BCHP_REGISTER(0x211001a8, 32, CFG, MEMC_GEN_0, ZQCS_PERIOD)
BCHP_REGISTER(0x211001ac, 32, CFG, MEMC_GEN_0, ZQCS_PAIR_CONTROL)
BCHP_REGISTER(0x211001b0, 32, CFG, MEMC_GEN_0, ZQCS_PAIR_ADDR)
BCHP_REGISTER(0x211001b4, 32, CFG, MEMC_GEN_0, ZQCS_PAIR_DELAY)
BCHP_REGISTER(0x211001b8, 32,  RO, MEMC_GEN_0, ZQCS_STATUS)
BCHP_REGISTER(0x211001bc, 32, CFG, MEMC_GEN_0, SCB_CRC_UNIT0_ENABLE)
BCHP_REGISTER(0x211001c0, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_0)
BCHP_REGISTER(0x211001c4, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_1)
BCHP_REGISTER(0x211001c8, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_2)
BCHP_REGISTER(0x211001cc, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_3)
BCHP_REGISTER(0x211001d0, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_4)
BCHP_REGISTER(0x211001d4, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_5)
BCHP_REGISTER(0x211001d8, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_6)
BCHP_REGISTER(0x211001dc, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_7)
BCHP_REGISTER(0x211001e0, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_8)
BCHP_REGISTER(0x211001e4, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_9)
BCHP_REGISTER(0x211001e8, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_10)
BCHP_REGISTER(0x211001ec, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_11)
BCHP_REGISTER(0x211001f0, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_12)
BCHP_REGISTER(0x211001f4, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_13)
BCHP_REGISTER(0x211001f8, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_14)
BCHP_REGISTER(0x211001fc, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT0_15)
BCHP_REGISTER(0x21100200, 32, CFG, MEMC_GEN_0, SCB_CRC_UNIT1_ENABLE)
BCHP_REGISTER(0x21100204, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_0)
BCHP_REGISTER(0x21100208, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_1)
BCHP_REGISTER(0x2110020c, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_2)
BCHP_REGISTER(0x21100210, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_3)
BCHP_REGISTER(0x21100214, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_4)
BCHP_REGISTER(0x21100218, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_5)
BCHP_REGISTER(0x2110021c, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_6)
BCHP_REGISTER(0x21100220, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_7)
BCHP_REGISTER(0x21100224, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_8)
BCHP_REGISTER(0x21100228, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_9)
BCHP_REGISTER(0x2110022c, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_10)
BCHP_REGISTER(0x21100230, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_11)
BCHP_REGISTER(0x21100234, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_12)
BCHP_REGISTER(0x21100238, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_13)
BCHP_REGISTER(0x2110023c, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_14)
BCHP_REGISTER(0x21100240, 32,  RO, MEMC_GEN_0, SCB_CRC_UNIT1_15)
BCHP_REGISTER(0x21100244, 32,  RW, MEMC_GEN_0, FIFO_ERROR)
BCHP_REGISTER(0x21100248, 32,  RW, MEMC_GEN_0, PFRI_FIFO_ERROR0)
BCHP_REGISTER(0x2110024c, 32, CFG, MEMC_GEN_0, AXI_0_CONFIG)
BCHP_REGISTER(0x21100250, 32, CFG, MEMC_GEN_0, AXI_0_FIFO_THRESHOLD)
BCHP_REGISTER(0x21100254, 32, CFG, MEMC_GEN_0, AXI_1_CONFIG)
BCHP_REGISTER(0x21100258, 32, CFG, MEMC_GEN_0, AXI_1_FIFO_THRESHOLD)
BCHP_REGISTER(0x211005c0, 32, CFG, MEMC_GEN_0, MSA_MODE)
BCHP_REGISTER(0x211005c4, 32,  RW, MEMC_GEN_0, MSA_STATUS)
BCHP_REGISTER(0x211005c8, 32, CFG, MEMC_GEN_0, MSA_CMD_TYPE)
BCHP_REGISTER(0x211005cc, 32, CFG, MEMC_GEN_0, MSA_CMD_ADDR_UPPER)
BCHP_REGISTER(0x211005d0, 32, CFG, MEMC_GEN_0, MSA_CMD_ADDR)
BCHP_REGISTER(0x211005d4, 32,  WO, MEMC_GEN_0, MSA_MALL)
BCHP_REGISTER(0x211005d8, 32,  WO, MEMC_GEN_0, MSA_DALL)
BCHP_REGISTER(0x211005dc, 32, CFG, MEMC_GEN_0, MSA_RD_DATA_CLR)
BCHP_REGISTER(0x211005e0, 32,  RW, MEMC_GEN_0, MSA_DQM)
BCHP_REGISTER(0x211005e4, 32,  RW, MEMC_GEN_0, MSA_DQM1)
BCHP_REGISTER(0x211005e8, 32,  RW, MEMC_GEN_0, MSA_DQM2)
BCHP_REGISTER(0x211005ec, 32,  RW, MEMC_GEN_0, MSA_DQM3)
BCHP_REGISTER(0x211005f0, 32,  RW, MEMC_GEN_0, MSA_WR_DATA0)
BCHP_REGISTER(0x211005f4, 32,  RW, MEMC_GEN_0, MSA_WR_DATA1)
BCHP_REGISTER(0x211005f8, 32,  RW, MEMC_GEN_0, MSA_WR_DATA2)
BCHP_REGISTER(0x211005fc, 32,  RW, MEMC_GEN_0, MSA_WR_DATA3)
BCHP_REGISTER(0x21100600, 32,  RW, MEMC_GEN_0, MSA_WR_DATA4)
BCHP_REGISTER(0x21100604, 32,  RW, MEMC_GEN_0, MSA_WR_DATA5)
BCHP_REGISTER(0x21100608, 32,  RW, MEMC_GEN_0, MSA_WR_DATA6)
BCHP_REGISTER(0x2110060c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA7)
BCHP_REGISTER(0x21100610, 32,  RW, MEMC_GEN_0, MSA_WR_DATA8)
BCHP_REGISTER(0x21100614, 32,  RW, MEMC_GEN_0, MSA_WR_DATA9)
BCHP_REGISTER(0x21100618, 32,  RW, MEMC_GEN_0, MSA_WR_DATA10)
BCHP_REGISTER(0x2110061c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA11)
BCHP_REGISTER(0x21100620, 32,  RW, MEMC_GEN_0, MSA_WR_DATA12)
BCHP_REGISTER(0x21100624, 32,  RW, MEMC_GEN_0, MSA_WR_DATA13)
BCHP_REGISTER(0x21100628, 32,  RW, MEMC_GEN_0, MSA_WR_DATA14)
BCHP_REGISTER(0x2110062c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA15)
BCHP_REGISTER(0x21100630, 32,  RW, MEMC_GEN_0, MSA_WR_DATA16)
BCHP_REGISTER(0x21100634, 32,  RW, MEMC_GEN_0, MSA_WR_DATA17)
BCHP_REGISTER(0x21100638, 32,  RW, MEMC_GEN_0, MSA_WR_DATA18)
BCHP_REGISTER(0x2110063c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA19)
BCHP_REGISTER(0x21100640, 32,  RW, MEMC_GEN_0, MSA_WR_DATA20)
BCHP_REGISTER(0x21100644, 32,  RW, MEMC_GEN_0, MSA_WR_DATA21)
BCHP_REGISTER(0x21100648, 32,  RW, MEMC_GEN_0, MSA_WR_DATA22)
BCHP_REGISTER(0x2110064c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA23)
BCHP_REGISTER(0x21100650, 32,  RW, MEMC_GEN_0, MSA_WR_DATA24)
BCHP_REGISTER(0x21100654, 32,  RW, MEMC_GEN_0, MSA_WR_DATA25)
BCHP_REGISTER(0x21100658, 32,  RW, MEMC_GEN_0, MSA_WR_DATA26)
BCHP_REGISTER(0x2110065c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA27)
BCHP_REGISTER(0x21100660, 32,  RW, MEMC_GEN_0, MSA_WR_DATA28)
BCHP_REGISTER(0x21100664, 32,  RW, MEMC_GEN_0, MSA_WR_DATA29)
BCHP_REGISTER(0x21100668, 32,  RW, MEMC_GEN_0, MSA_WR_DATA30)
BCHP_REGISTER(0x2110066c, 32,  RW, MEMC_GEN_0, MSA_WR_DATA31)
BCHP_REGISTER(0x21100670, 32,  RO, MEMC_GEN_0, MSA_RD_DATA0)
BCHP_REGISTER(0x21100674, 32,  RO, MEMC_GEN_0, MSA_RD_DATA1)
BCHP_REGISTER(0x21100678, 32,  RO, MEMC_GEN_0, MSA_RD_DATA2)
BCHP_REGISTER(0x2110067c, 32,  RO, MEMC_GEN_0, MSA_RD_DATA3)
BCHP_REGISTER(0x21100680, 32,  RO, MEMC_GEN_0, MSA_RD_DATA4)
BCHP_REGISTER(0x21100684, 32,  RO, MEMC_GEN_0, MSA_RD_DATA5)
BCHP_REGISTER(0x21100688, 32,  RO, MEMC_GEN_0, MSA_RD_DATA6)
BCHP_REGISTER(0x2110068c, 32,  RO, MEMC_GEN_0, MSA_RD_DATA7)
BCHP_REGISTER(0x21100690, 32,  RO, MEMC_GEN_0, MSA_RD_DATA8)
BCHP_REGISTER(0x21100694, 32,  RO, MEMC_GEN_0, MSA_RD_DATA9)
BCHP_REGISTER(0x21100698, 32,  RO, MEMC_GEN_0, MSA_RD_DATA10)
BCHP_REGISTER(0x2110069c, 32,  RO, MEMC_GEN_0, MSA_RD_DATA11)
BCHP_REGISTER(0x211006a0, 32,  RO, MEMC_GEN_0, MSA_RD_DATA12)
BCHP_REGISTER(0x211006a4, 32,  RO, MEMC_GEN_0, MSA_RD_DATA13)
BCHP_REGISTER(0x211006a8, 32,  RO, MEMC_GEN_0, MSA_RD_DATA14)
BCHP_REGISTER(0x211006ac, 32,  RO, MEMC_GEN_0, MSA_RD_DATA15)
BCHP_REGISTER(0x211006b0, 32,  RO, MEMC_GEN_0, MSA_RD_DATA16)
BCHP_REGISTER(0x211006b4, 32,  RO, MEMC_GEN_0, MSA_RD_DATA17)
BCHP_REGISTER(0x211006b8, 32,  RO, MEMC_GEN_0, MSA_RD_DATA18)
BCHP_REGISTER(0x211006bc, 32,  RO, MEMC_GEN_0, MSA_RD_DATA19)
BCHP_REGISTER(0x211006c0, 32,  RO, MEMC_GEN_0, MSA_RD_DATA20)
BCHP_REGISTER(0x211006c4, 32,  RO, MEMC_GEN_0, MSA_RD_DATA21)
BCHP_REGISTER(0x211006c8, 32,  RO, MEMC_GEN_0, MSA_RD_DATA22)
BCHP_REGISTER(0x211006cc, 32,  RO, MEMC_GEN_0, MSA_RD_DATA23)
BCHP_REGISTER(0x211006d0, 32,  RO, MEMC_GEN_0, MSA_RD_DATA24)
BCHP_REGISTER(0x211006d4, 32,  RO, MEMC_GEN_0, MSA_RD_DATA25)
BCHP_REGISTER(0x211006d8, 32,  RO, MEMC_GEN_0, MSA_RD_DATA26)
BCHP_REGISTER(0x211006dc, 32,  RO, MEMC_GEN_0, MSA_RD_DATA27)
BCHP_REGISTER(0x211006e0, 32,  RO, MEMC_GEN_0, MSA_RD_DATA28)
BCHP_REGISTER(0x211006e4, 32,  RO, MEMC_GEN_0, MSA_RD_DATA29)
BCHP_REGISTER(0x211006e8, 32,  RO, MEMC_GEN_0, MSA_RD_DATA30)
BCHP_REGISTER(0x211006ec, 32,  RO, MEMC_GEN_0, MSA_RD_DATA31)
BCHP_REGISTER(0x21100800, 32,  RO, MEMC_EDIS_0_0, REV_ID)
BCHP_REGISTER(0x21100804, 32, CFG, MEMC_EDIS_0_0, CTRL_TRIG)
BCHP_REGISTER(0x21100808, 32, CFG, MEMC_EDIS_0_0, CTRL_MODE)
BCHP_REGISTER(0x2110080c, 32, CFG, MEMC_EDIS_0_0, CTRL_SIZE)
BCHP_REGISTER(0x21100810, 32, CFG, MEMC_EDIS_0_0, CTRL_ADDR_START)
BCHP_REGISTER(0x21100814, 32, CFG, MEMC_EDIS_0_0, CTRL_ADDR_START_EXT)
BCHP_REGISTER(0x21100818, 32, CFG, MEMC_EDIS_0_0, CTRL_ADDR_END)
BCHP_REGISTER(0x2110081c, 32, CFG, MEMC_EDIS_0_0, CTRL_ADDR_END_EXT)
BCHP_REGISTER(0x21100824, 32, CFG, MEMC_EDIS_0_0, CTRL_INT_ENABLES)
BCHP_REGISTER(0x21100840, 32,  RO, MEMC_EDIS_0_0, STAT_MAIN)
BCHP_REGISTER(0x21100844, 32,  RO, MEMC_EDIS_0_0, STAT_WORDS_WRITTEN)
BCHP_REGISTER(0x21100848, 32,  RO, MEMC_EDIS_0_0, STAT_WORDS_READ)
BCHP_REGISTER(0x2110084c, 32,  RO, MEMC_EDIS_0_0, STAT_ERROR_COUNT)
BCHP_REGISTER(0x21100850, 32,  RO, MEMC_EDIS_0_0, STAT_ERROR_BITS)
BCHP_REGISTER(0x2110085c, 32,  RO, MEMC_EDIS_0_0, STAT_CLOCK_CYCLES)
BCHP_REGISTER(0x2110087c, 32,  RO, MEMC_EDIS_0_0, STAT_DEBUG)
BCHP_REGISTER(0x211008a0, 32,  RW, MEMC_EDIS_0_0, GEN_LFSR_STATE_0)
BCHP_REGISTER(0x211008a4, 32,  RW, MEMC_EDIS_0_0, GEN_LFSR_STATE_1)
BCHP_REGISTER(0x211008a8, 32, CFG, MEMC_EDIS_0_0, GEN_PATTERN)
BCHP_REGISTER(0x21100c00, 32, CFG, MEMC_ARC_0, ARC_0_CNTRL)
BCHP_REGISTER(0x21100c04, 32, CFG, MEMC_ARC_0, ARC_0_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100c08, 32, CFG, MEMC_ARC_0, ARC_0_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100c0c, 32, CFG, MEMC_ARC_0, ARC_0_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100c10, 32, CFG, MEMC_ARC_0, ARC_0_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100c14, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_0)
BCHP_REGISTER(0x21100c18, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_1)
BCHP_REGISTER(0x21100c1c, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_2)
BCHP_REGISTER(0x21100c20, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_3)
BCHP_REGISTER(0x21100c24, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_4)
BCHP_REGISTER(0x21100c28, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_5)
BCHP_REGISTER(0x21100c2c, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_6)
BCHP_REGISTER(0x21100c30, 32, CFG, MEMC_ARC_0, ARC_0_READ_RIGHTS_7)
BCHP_REGISTER(0x21100c34, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100c38, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100c3c, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100c40, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100c44, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100c48, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100c4c, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100c50, 32, CFG, MEMC_ARC_0, ARC_0_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100c54, 32,  RO, MEMC_ARC_0, ARC_0_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100c58, 32,  RO, MEMC_ARC_0, ARC_0_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100c5c, 32,  RO, MEMC_ARC_0, ARC_0_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100c60, 32,  RO, MEMC_ARC_0, ARC_0_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100c64, 32,  RO, MEMC_ARC_0, ARC_0_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100c68, 32, CFG, MEMC_ARC_0, ARC_0_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100c6c, 32, CFG, MEMC_ARC_0, ARC_1_CNTRL)
BCHP_REGISTER(0x21100c70, 32, CFG, MEMC_ARC_0, ARC_1_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100c74, 32, CFG, MEMC_ARC_0, ARC_1_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100c78, 32, CFG, MEMC_ARC_0, ARC_1_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100c7c, 32, CFG, MEMC_ARC_0, ARC_1_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100c80, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_0)
BCHP_REGISTER(0x21100c84, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_1)
BCHP_REGISTER(0x21100c88, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_2)
BCHP_REGISTER(0x21100c8c, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_3)
BCHP_REGISTER(0x21100c90, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_4)
BCHP_REGISTER(0x21100c94, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_5)
BCHP_REGISTER(0x21100c98, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_6)
BCHP_REGISTER(0x21100c9c, 32, CFG, MEMC_ARC_0, ARC_1_READ_RIGHTS_7)
BCHP_REGISTER(0x21100ca0, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100ca4, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100ca8, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100cac, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100cb0, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100cb4, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100cb8, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100cbc, 32, CFG, MEMC_ARC_0, ARC_1_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100cc0, 32,  RO, MEMC_ARC_0, ARC_1_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100cc4, 32,  RO, MEMC_ARC_0, ARC_1_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100cc8, 32,  RO, MEMC_ARC_0, ARC_1_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100ccc, 32,  RO, MEMC_ARC_0, ARC_1_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100cd0, 32,  RO, MEMC_ARC_0, ARC_1_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100cd4, 32, CFG, MEMC_ARC_0, ARC_1_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100cd8, 32, CFG, MEMC_ARC_0, ARC_2_CNTRL)
BCHP_REGISTER(0x21100cdc, 32, CFG, MEMC_ARC_0, ARC_2_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100ce0, 32, CFG, MEMC_ARC_0, ARC_2_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100ce4, 32, CFG, MEMC_ARC_0, ARC_2_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100ce8, 32, CFG, MEMC_ARC_0, ARC_2_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100cec, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_0)
BCHP_REGISTER(0x21100cf0, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_1)
BCHP_REGISTER(0x21100cf4, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_2)
BCHP_REGISTER(0x21100cf8, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_3)
BCHP_REGISTER(0x21100cfc, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_4)
BCHP_REGISTER(0x21100d00, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_5)
BCHP_REGISTER(0x21100d04, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_6)
BCHP_REGISTER(0x21100d08, 32, CFG, MEMC_ARC_0, ARC_2_READ_RIGHTS_7)
BCHP_REGISTER(0x21100d0c, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100d10, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100d14, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100d18, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100d1c, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100d20, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100d24, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100d28, 32, CFG, MEMC_ARC_0, ARC_2_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100d2c, 32,  RO, MEMC_ARC_0, ARC_2_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100d30, 32,  RO, MEMC_ARC_0, ARC_2_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100d34, 32,  RO, MEMC_ARC_0, ARC_2_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100d38, 32,  RO, MEMC_ARC_0, ARC_2_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100d3c, 32,  RO, MEMC_ARC_0, ARC_2_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100d40, 32, CFG, MEMC_ARC_0, ARC_2_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100d44, 32, CFG, MEMC_ARC_0, ARC_3_CNTRL)
BCHP_REGISTER(0x21100d48, 32, CFG, MEMC_ARC_0, ARC_3_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100d4c, 32, CFG, MEMC_ARC_0, ARC_3_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100d50, 32, CFG, MEMC_ARC_0, ARC_3_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100d54, 32, CFG, MEMC_ARC_0, ARC_3_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100d58, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_0)
BCHP_REGISTER(0x21100d5c, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_1)
BCHP_REGISTER(0x21100d60, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_2)
BCHP_REGISTER(0x21100d64, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_3)
BCHP_REGISTER(0x21100d68, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_4)
BCHP_REGISTER(0x21100d6c, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_5)
BCHP_REGISTER(0x21100d70, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_6)
BCHP_REGISTER(0x21100d74, 32, CFG, MEMC_ARC_0, ARC_3_READ_RIGHTS_7)
BCHP_REGISTER(0x21100d78, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100d7c, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100d80, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100d84, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100d88, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100d8c, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100d90, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100d94, 32, CFG, MEMC_ARC_0, ARC_3_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100d98, 32,  RO, MEMC_ARC_0, ARC_3_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100d9c, 32,  RO, MEMC_ARC_0, ARC_3_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100da0, 32,  RO, MEMC_ARC_0, ARC_3_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100da4, 32,  RO, MEMC_ARC_0, ARC_3_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100da8, 32,  RO, MEMC_ARC_0, ARC_3_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100dac, 32, CFG, MEMC_ARC_0, ARC_3_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100db0, 32, CFG, MEMC_ARC_0, ARC_4_CNTRL)
BCHP_REGISTER(0x21100db4, 32, CFG, MEMC_ARC_0, ARC_4_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100db8, 32, CFG, MEMC_ARC_0, ARC_4_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100dbc, 32, CFG, MEMC_ARC_0, ARC_4_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100dc0, 32, CFG, MEMC_ARC_0, ARC_4_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100dc4, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_0)
BCHP_REGISTER(0x21100dc8, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_1)
BCHP_REGISTER(0x21100dcc, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_2)
BCHP_REGISTER(0x21100dd0, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_3)
BCHP_REGISTER(0x21100dd4, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_4)
BCHP_REGISTER(0x21100dd8, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_5)
BCHP_REGISTER(0x21100ddc, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_6)
BCHP_REGISTER(0x21100de0, 32, CFG, MEMC_ARC_0, ARC_4_READ_RIGHTS_7)
BCHP_REGISTER(0x21100de4, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100de8, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100dec, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100df0, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100df4, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100df8, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100dfc, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100e00, 32, CFG, MEMC_ARC_0, ARC_4_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100e04, 32,  RO, MEMC_ARC_0, ARC_4_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100e08, 32,  RO, MEMC_ARC_0, ARC_4_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100e0c, 32,  RO, MEMC_ARC_0, ARC_4_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100e10, 32,  RO, MEMC_ARC_0, ARC_4_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100e14, 32,  RO, MEMC_ARC_0, ARC_4_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100e18, 32, CFG, MEMC_ARC_0, ARC_4_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100e1c, 32, CFG, MEMC_ARC_0, ARC_5_CNTRL)
BCHP_REGISTER(0x21100e20, 32, CFG, MEMC_ARC_0, ARC_5_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100e24, 32, CFG, MEMC_ARC_0, ARC_5_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100e28, 32, CFG, MEMC_ARC_0, ARC_5_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100e2c, 32, CFG, MEMC_ARC_0, ARC_5_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100e30, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_0)
BCHP_REGISTER(0x21100e34, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_1)
BCHP_REGISTER(0x21100e38, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_2)
BCHP_REGISTER(0x21100e3c, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_3)
BCHP_REGISTER(0x21100e40, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_4)
BCHP_REGISTER(0x21100e44, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_5)
BCHP_REGISTER(0x21100e48, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_6)
BCHP_REGISTER(0x21100e4c, 32, CFG, MEMC_ARC_0, ARC_5_READ_RIGHTS_7)
BCHP_REGISTER(0x21100e50, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100e54, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100e58, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100e5c, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100e60, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100e64, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100e68, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100e6c, 32, CFG, MEMC_ARC_0, ARC_5_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100e70, 32,  RO, MEMC_ARC_0, ARC_5_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100e74, 32,  RO, MEMC_ARC_0, ARC_5_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100e78, 32,  RO, MEMC_ARC_0, ARC_5_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100e7c, 32,  RO, MEMC_ARC_0, ARC_5_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100e80, 32,  RO, MEMC_ARC_0, ARC_5_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100e84, 32, CFG, MEMC_ARC_0, ARC_5_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100e88, 32, CFG, MEMC_ARC_0, ARC_6_CNTRL)
BCHP_REGISTER(0x21100e8c, 32, CFG, MEMC_ARC_0, ARC_6_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100e90, 32, CFG, MEMC_ARC_0, ARC_6_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100e94, 32, CFG, MEMC_ARC_0, ARC_6_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100e98, 32, CFG, MEMC_ARC_0, ARC_6_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100e9c, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_0)
BCHP_REGISTER(0x21100ea0, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_1)
BCHP_REGISTER(0x21100ea4, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_2)
BCHP_REGISTER(0x21100ea8, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_3)
BCHP_REGISTER(0x21100eac, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_4)
BCHP_REGISTER(0x21100eb0, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_5)
BCHP_REGISTER(0x21100eb4, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_6)
BCHP_REGISTER(0x21100eb8, 32, CFG, MEMC_ARC_0, ARC_6_READ_RIGHTS_7)
BCHP_REGISTER(0x21100ebc, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100ec0, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100ec4, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100ec8, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100ecc, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100ed0, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100ed4, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100ed8, 32, CFG, MEMC_ARC_0, ARC_6_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100edc, 32,  RO, MEMC_ARC_0, ARC_6_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100ee0, 32,  RO, MEMC_ARC_0, ARC_6_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100ee4, 32,  RO, MEMC_ARC_0, ARC_6_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100ee8, 32,  RO, MEMC_ARC_0, ARC_6_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100eec, 32,  RO, MEMC_ARC_0, ARC_6_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100ef0, 32, CFG, MEMC_ARC_0, ARC_6_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100ef4, 32, CFG, MEMC_ARC_0, ARC_7_CNTRL)
BCHP_REGISTER(0x21100ef8, 32, CFG, MEMC_ARC_0, ARC_7_ADRS_RANGE_LOW)
BCHP_REGISTER(0x21100efc, 32, CFG, MEMC_ARC_0, ARC_7_ADRS_RANGE_LOW_MSB)
BCHP_REGISTER(0x21100f00, 32, CFG, MEMC_ARC_0, ARC_7_ADRS_RANGE_HIGH)
BCHP_REGISTER(0x21100f04, 32, CFG, MEMC_ARC_0, ARC_7_ADRS_RANGE_HIGH_MSB)
BCHP_REGISTER(0x21100f08, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_0)
BCHP_REGISTER(0x21100f0c, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_1)
BCHP_REGISTER(0x21100f10, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_2)
BCHP_REGISTER(0x21100f14, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_3)
BCHP_REGISTER(0x21100f18, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_4)
BCHP_REGISTER(0x21100f1c, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_5)
BCHP_REGISTER(0x21100f20, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_6)
BCHP_REGISTER(0x21100f24, 32, CFG, MEMC_ARC_0, ARC_7_READ_RIGHTS_7)
BCHP_REGISTER(0x21100f28, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_0)
BCHP_REGISTER(0x21100f2c, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_1)
BCHP_REGISTER(0x21100f30, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_2)
BCHP_REGISTER(0x21100f34, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_3)
BCHP_REGISTER(0x21100f38, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_4)
BCHP_REGISTER(0x21100f3c, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_5)
BCHP_REGISTER(0x21100f40, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_6)
BCHP_REGISTER(0x21100f44, 32, CFG, MEMC_ARC_0, ARC_7_WRITE_RIGHTS_7)
BCHP_REGISTER(0x21100f48, 32,  RO, MEMC_ARC_0, ARC_7_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100f4c, 32,  RO, MEMC_ARC_0, ARC_7_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100f50, 32,  RO, MEMC_ARC_0, ARC_7_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100f54, 32,  RO, MEMC_ARC_0, ARC_7_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100f58, 32,  RO, MEMC_ARC_0, ARC_7_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100f5c, 32, CFG, MEMC_ARC_0, ARC_7_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100f60, 32,  RO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_START_ADDR)
BCHP_REGISTER(0x21100f64, 32,  RO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_START_ADDR_MSB)
BCHP_REGISTER(0x21100f68, 32,  RO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_END_ADDR)
BCHP_REGISTER(0x21100f6c, 32,  RO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_END_ADDR_MSB)
BCHP_REGISTER(0x21100f70, 32,  RO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_CMD)
BCHP_REGISTER(0x21100f74, 32,  WO, MEMC_ARC_0, ALIAS_VIOLATION_INFO_CLEAR)
BCHP_REGISTER(0x21100f78, 32, CFG, MEMC_ARC_0, ARC_0_MCP_CNTRL_0)
BCHP_REGISTER(0x21100f7c, 32, CFG, MEMC_ARC_0, ARC_0_MCP_CNTRL_1)
BCHP_REGISTER(0x21100f80, 32, CFG, MEMC_ARC_0, ARC_1_MCP_CNTRL_0)
BCHP_REGISTER(0x21100f84, 32, CFG, MEMC_ARC_0, ARC_1_MCP_CNTRL_1)
BCHP_REGISTER(0x21100f88, 32, CFG, MEMC_ARC_0, ARC_2_MCP_CNTRL_0)
BCHP_REGISTER(0x21100f8c, 32, CFG, MEMC_ARC_0, ARC_2_MCP_CNTRL_1)
BCHP_REGISTER(0x21100f90, 32, CFG, MEMC_ARC_0, ARC_3_MCP_CNTRL_0)
BCHP_REGISTER(0x21100f94, 32, CFG, MEMC_ARC_0, ARC_3_MCP_CNTRL_1)
BCHP_REGISTER(0x21100f98, 32, CFG, MEMC_ARC_0, ARC_4_MCP_CNTRL_0)
BCHP_REGISTER(0x21100f9c, 32, CFG, MEMC_ARC_0, ARC_4_MCP_CNTRL_1)
BCHP_REGISTER(0x21100fa0, 32, CFG, MEMC_ARC_0, ARC_5_MCP_CNTRL_0)
BCHP_REGISTER(0x21100fa4, 32, CFG, MEMC_ARC_0, ARC_5_MCP_CNTRL_1)
BCHP_REGISTER(0x21100fa8, 32, CFG, MEMC_ARC_0, ARC_6_MCP_CNTRL_0)
BCHP_REGISTER(0x21100fac, 32, CFG, MEMC_ARC_0, ARC_6_MCP_CNTRL_1)
BCHP_REGISTER(0x21100fb0, 32, CFG, MEMC_ARC_0, ARC_7_MCP_CNTRL_0)
BCHP_REGISTER(0x21100fb4, 32, CFG, MEMC_ARC_0, ARC_7_MCP_CNTRL_1)
BCHP_REGISTER(0x21101000, 32,  RO, MEMC_ARB_0, PHY_DEBUG_REGISTER)
BCHP_REGISTER(0x21101004, 32, CFG, MEMC_ARB_0, CLIENT_INFO_0)
BCHP_REGISTER(0x21101008, 32, CFG, MEMC_ARB_0, CLIENT_INFO_1)
BCHP_REGISTER(0x2110100c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_2)
BCHP_REGISTER(0x21101010, 32, CFG, MEMC_ARB_0, CLIENT_INFO_3)
BCHP_REGISTER(0x21101014, 32, CFG, MEMC_ARB_0, CLIENT_INFO_4)
BCHP_REGISTER(0x21101018, 32, CFG, MEMC_ARB_0, CLIENT_INFO_5)
BCHP_REGISTER(0x2110101c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_6)
BCHP_REGISTER(0x21101020, 32, CFG, MEMC_ARB_0, CLIENT_INFO_7)
BCHP_REGISTER(0x21101024, 32, CFG, MEMC_ARB_0, CLIENT_INFO_8)
BCHP_REGISTER(0x21101028, 32, CFG, MEMC_ARB_0, CLIENT_INFO_9)
BCHP_REGISTER(0x2110102c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_10)
BCHP_REGISTER(0x21101030, 32, CFG, MEMC_ARB_0, CLIENT_INFO_11)
BCHP_REGISTER(0x21101034, 32, CFG, MEMC_ARB_0, CLIENT_INFO_12)
BCHP_REGISTER(0x21101038, 32, CFG, MEMC_ARB_0, CLIENT_INFO_13)
BCHP_REGISTER(0x2110103c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_14)
BCHP_REGISTER(0x21101040, 32, CFG, MEMC_ARB_0, CLIENT_INFO_15)
BCHP_REGISTER(0x21101044, 32, CFG, MEMC_ARB_0, CLIENT_INFO_16)
BCHP_REGISTER(0x21101048, 32, CFG, MEMC_ARB_0, CLIENT_INFO_17)
BCHP_REGISTER(0x2110104c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_18)
BCHP_REGISTER(0x21101050, 32, CFG, MEMC_ARB_0, CLIENT_INFO_19)
BCHP_REGISTER(0x21101054, 32, CFG, MEMC_ARB_0, CLIENT_INFO_20)
BCHP_REGISTER(0x21101058, 32, CFG, MEMC_ARB_0, CLIENT_INFO_21)
BCHP_REGISTER(0x2110105c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_22)
BCHP_REGISTER(0x21101060, 32, CFG, MEMC_ARB_0, CLIENT_INFO_23)
BCHP_REGISTER(0x21101064, 32, CFG, MEMC_ARB_0, CLIENT_INFO_24)
BCHP_REGISTER(0x21101068, 32, CFG, MEMC_ARB_0, CLIENT_INFO_25)
BCHP_REGISTER(0x2110106c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_26)
BCHP_REGISTER(0x21101070, 32, CFG, MEMC_ARB_0, CLIENT_INFO_27)
BCHP_REGISTER(0x21101074, 32, CFG, MEMC_ARB_0, CLIENT_INFO_28)
BCHP_REGISTER(0x21101078, 32, CFG, MEMC_ARB_0, CLIENT_INFO_29)
BCHP_REGISTER(0x2110107c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_30)
BCHP_REGISTER(0x21101080, 32, CFG, MEMC_ARB_0, CLIENT_INFO_31)
BCHP_REGISTER(0x21101084, 32, CFG, MEMC_ARB_0, CLIENT_INFO_32)
BCHP_REGISTER(0x21101088, 32, CFG, MEMC_ARB_0, CLIENT_INFO_33)
BCHP_REGISTER(0x2110108c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_34)
BCHP_REGISTER(0x21101090, 32, CFG, MEMC_ARB_0, CLIENT_INFO_35)
BCHP_REGISTER(0x21101094, 32, CFG, MEMC_ARB_0, CLIENT_INFO_36)
BCHP_REGISTER(0x21101098, 32, CFG, MEMC_ARB_0, CLIENT_INFO_37)
BCHP_REGISTER(0x2110109c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_38)
BCHP_REGISTER(0x211010a0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_39)
BCHP_REGISTER(0x211010a4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_40)
BCHP_REGISTER(0x211010a8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_41)
BCHP_REGISTER(0x211010ac, 32, CFG, MEMC_ARB_0, CLIENT_INFO_42)
BCHP_REGISTER(0x211010b0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_43)
BCHP_REGISTER(0x211010b4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_44)
BCHP_REGISTER(0x211010b8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_45)
BCHP_REGISTER(0x211010bc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_46)
BCHP_REGISTER(0x211010c0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_47)
BCHP_REGISTER(0x211010c4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_48)
BCHP_REGISTER(0x211010c8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_49)
BCHP_REGISTER(0x211010cc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_50)
BCHP_REGISTER(0x211010d0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_51)
BCHP_REGISTER(0x211010d4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_52)
BCHP_REGISTER(0x211010d8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_53)
BCHP_REGISTER(0x211010dc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_54)
BCHP_REGISTER(0x211010e0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_55)
BCHP_REGISTER(0x211010e4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_56)
BCHP_REGISTER(0x211010e8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_57)
BCHP_REGISTER(0x211010ec, 32, CFG, MEMC_ARB_0, CLIENT_INFO_58)
BCHP_REGISTER(0x211010f0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_59)
BCHP_REGISTER(0x211010f4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_60)
BCHP_REGISTER(0x211010f8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_61)
BCHP_REGISTER(0x211010fc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_62)
BCHP_REGISTER(0x21101100, 32, CFG, MEMC_ARB_0, CLIENT_INFO_63)
BCHP_REGISTER(0x21101104, 32, CFG, MEMC_ARB_0, CLIENT_INFO_64)
BCHP_REGISTER(0x21101108, 32, CFG, MEMC_ARB_0, CLIENT_INFO_65)
BCHP_REGISTER(0x2110110c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_66)
BCHP_REGISTER(0x21101110, 32, CFG, MEMC_ARB_0, CLIENT_INFO_67)
BCHP_REGISTER(0x21101114, 32, CFG, MEMC_ARB_0, CLIENT_INFO_68)
BCHP_REGISTER(0x21101118, 32, CFG, MEMC_ARB_0, CLIENT_INFO_69)
BCHP_REGISTER(0x2110111c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_70)
BCHP_REGISTER(0x21101120, 32, CFG, MEMC_ARB_0, CLIENT_INFO_71)
BCHP_REGISTER(0x21101124, 32, CFG, MEMC_ARB_0, CLIENT_INFO_72)
BCHP_REGISTER(0x21101128, 32, CFG, MEMC_ARB_0, CLIENT_INFO_73)
BCHP_REGISTER(0x2110112c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_74)
BCHP_REGISTER(0x21101130, 32, CFG, MEMC_ARB_0, CLIENT_INFO_75)
BCHP_REGISTER(0x21101134, 32, CFG, MEMC_ARB_0, CLIENT_INFO_76)
BCHP_REGISTER(0x21101138, 32, CFG, MEMC_ARB_0, CLIENT_INFO_77)
BCHP_REGISTER(0x2110113c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_78)
BCHP_REGISTER(0x21101140, 32, CFG, MEMC_ARB_0, CLIENT_INFO_79)
BCHP_REGISTER(0x21101144, 32, CFG, MEMC_ARB_0, CLIENT_INFO_80)
BCHP_REGISTER(0x21101148, 32, CFG, MEMC_ARB_0, CLIENT_INFO_81)
BCHP_REGISTER(0x2110114c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_82)
BCHP_REGISTER(0x21101150, 32, CFG, MEMC_ARB_0, CLIENT_INFO_83)
BCHP_REGISTER(0x21101154, 32, CFG, MEMC_ARB_0, CLIENT_INFO_84)
BCHP_REGISTER(0x21101158, 32, CFG, MEMC_ARB_0, CLIENT_INFO_85)
BCHP_REGISTER(0x2110115c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_86)
BCHP_REGISTER(0x21101160, 32, CFG, MEMC_ARB_0, CLIENT_INFO_87)
BCHP_REGISTER(0x21101164, 32, CFG, MEMC_ARB_0, CLIENT_INFO_88)
BCHP_REGISTER(0x21101168, 32, CFG, MEMC_ARB_0, CLIENT_INFO_89)
BCHP_REGISTER(0x2110116c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_90)
BCHP_REGISTER(0x21101170, 32, CFG, MEMC_ARB_0, CLIENT_INFO_91)
BCHP_REGISTER(0x21101174, 32, CFG, MEMC_ARB_0, CLIENT_INFO_92)
BCHP_REGISTER(0x21101178, 32, CFG, MEMC_ARB_0, CLIENT_INFO_93)
BCHP_REGISTER(0x2110117c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_94)
BCHP_REGISTER(0x21101180, 32, CFG, MEMC_ARB_0, CLIENT_INFO_95)
BCHP_REGISTER(0x21101184, 32, CFG, MEMC_ARB_0, CLIENT_INFO_96)
BCHP_REGISTER(0x21101188, 32, CFG, MEMC_ARB_0, CLIENT_INFO_97)
BCHP_REGISTER(0x2110118c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_98)
BCHP_REGISTER(0x21101190, 32, CFG, MEMC_ARB_0, CLIENT_INFO_99)
BCHP_REGISTER(0x21101194, 32, CFG, MEMC_ARB_0, CLIENT_INFO_100)
BCHP_REGISTER(0x21101198, 32, CFG, MEMC_ARB_0, CLIENT_INFO_101)
BCHP_REGISTER(0x2110119c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_102)
BCHP_REGISTER(0x211011a0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_103)
BCHP_REGISTER(0x211011a4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_104)
BCHP_REGISTER(0x211011a8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_105)
BCHP_REGISTER(0x211011ac, 32, CFG, MEMC_ARB_0, CLIENT_INFO_106)
BCHP_REGISTER(0x211011b0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_107)
BCHP_REGISTER(0x211011b4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_108)
BCHP_REGISTER(0x211011b8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_109)
BCHP_REGISTER(0x211011bc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_110)
BCHP_REGISTER(0x211011c0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_111)
BCHP_REGISTER(0x211011c4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_112)
BCHP_REGISTER(0x211011c8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_113)
BCHP_REGISTER(0x211011cc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_114)
BCHP_REGISTER(0x211011d0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_115)
BCHP_REGISTER(0x211011d4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_116)
BCHP_REGISTER(0x211011d8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_117)
BCHP_REGISTER(0x211011dc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_118)
BCHP_REGISTER(0x211011e0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_119)
BCHP_REGISTER(0x211011e4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_120)
BCHP_REGISTER(0x211011e8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_121)
BCHP_REGISTER(0x211011ec, 32, CFG, MEMC_ARB_0, CLIENT_INFO_122)
BCHP_REGISTER(0x211011f0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_123)
BCHP_REGISTER(0x211011f4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_124)
BCHP_REGISTER(0x211011f8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_125)
BCHP_REGISTER(0x211011fc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_126)
BCHP_REGISTER(0x21101200, 32, CFG, MEMC_ARB_0, CLIENT_INFO_127)
BCHP_REGISTER(0x21101204, 32, CFG, MEMC_ARB_0, CLIENT_INFO_128)
BCHP_REGISTER(0x21101208, 32, CFG, MEMC_ARB_0, CLIENT_INFO_129)
BCHP_REGISTER(0x2110120c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_130)
BCHP_REGISTER(0x21101210, 32, CFG, MEMC_ARB_0, CLIENT_INFO_131)
BCHP_REGISTER(0x21101214, 32, CFG, MEMC_ARB_0, CLIENT_INFO_132)
BCHP_REGISTER(0x21101218, 32, CFG, MEMC_ARB_0, CLIENT_INFO_133)
BCHP_REGISTER(0x2110121c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_134)
BCHP_REGISTER(0x21101220, 32, CFG, MEMC_ARB_0, CLIENT_INFO_135)
BCHP_REGISTER(0x21101224, 32, CFG, MEMC_ARB_0, CLIENT_INFO_136)
BCHP_REGISTER(0x21101228, 32, CFG, MEMC_ARB_0, CLIENT_INFO_137)
BCHP_REGISTER(0x2110122c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_138)
BCHP_REGISTER(0x21101230, 32, CFG, MEMC_ARB_0, CLIENT_INFO_139)
BCHP_REGISTER(0x21101234, 32, CFG, MEMC_ARB_0, CLIENT_INFO_140)
BCHP_REGISTER(0x21101238, 32, CFG, MEMC_ARB_0, CLIENT_INFO_141)
BCHP_REGISTER(0x2110123c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_142)
BCHP_REGISTER(0x21101240, 32, CFG, MEMC_ARB_0, CLIENT_INFO_143)
BCHP_REGISTER(0x21101244, 32, CFG, MEMC_ARB_0, CLIENT_INFO_144)
BCHP_REGISTER(0x21101248, 32, CFG, MEMC_ARB_0, CLIENT_INFO_145)
BCHP_REGISTER(0x2110124c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_146)
BCHP_REGISTER(0x21101250, 32, CFG, MEMC_ARB_0, CLIENT_INFO_147)
BCHP_REGISTER(0x21101254, 32, CFG, MEMC_ARB_0, CLIENT_INFO_148)
BCHP_REGISTER(0x21101258, 32, CFG, MEMC_ARB_0, CLIENT_INFO_149)
BCHP_REGISTER(0x2110125c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_150)
BCHP_REGISTER(0x21101260, 32, CFG, MEMC_ARB_0, CLIENT_INFO_151)
BCHP_REGISTER(0x21101264, 32, CFG, MEMC_ARB_0, CLIENT_INFO_152)
BCHP_REGISTER(0x21101268, 32, CFG, MEMC_ARB_0, CLIENT_INFO_153)
BCHP_REGISTER(0x2110126c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_154)
BCHP_REGISTER(0x21101270, 32, CFG, MEMC_ARB_0, CLIENT_INFO_155)
BCHP_REGISTER(0x21101274, 32, CFG, MEMC_ARB_0, CLIENT_INFO_156)
BCHP_REGISTER(0x21101278, 32, CFG, MEMC_ARB_0, CLIENT_INFO_157)
BCHP_REGISTER(0x2110127c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_158)
BCHP_REGISTER(0x21101280, 32, CFG, MEMC_ARB_0, CLIENT_INFO_159)
BCHP_REGISTER(0x21101284, 32, CFG, MEMC_ARB_0, CLIENT_INFO_160)
BCHP_REGISTER(0x21101288, 32, CFG, MEMC_ARB_0, CLIENT_INFO_161)
BCHP_REGISTER(0x2110128c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_162)
BCHP_REGISTER(0x21101290, 32, CFG, MEMC_ARB_0, CLIENT_INFO_163)
BCHP_REGISTER(0x21101294, 32, CFG, MEMC_ARB_0, CLIENT_INFO_164)
BCHP_REGISTER(0x21101298, 32, CFG, MEMC_ARB_0, CLIENT_INFO_165)
BCHP_REGISTER(0x2110129c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_166)
BCHP_REGISTER(0x211012a0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_167)
BCHP_REGISTER(0x211012a4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_168)
BCHP_REGISTER(0x211012a8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_169)
BCHP_REGISTER(0x211012ac, 32, CFG, MEMC_ARB_0, CLIENT_INFO_170)
BCHP_REGISTER(0x211012b0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_171)
BCHP_REGISTER(0x211012b4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_172)
BCHP_REGISTER(0x211012b8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_173)
BCHP_REGISTER(0x211012bc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_174)
BCHP_REGISTER(0x211012c0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_175)
BCHP_REGISTER(0x211012c4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_176)
BCHP_REGISTER(0x211012c8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_177)
BCHP_REGISTER(0x211012cc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_178)
BCHP_REGISTER(0x211012d0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_179)
BCHP_REGISTER(0x211012d4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_180)
BCHP_REGISTER(0x211012d8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_181)
BCHP_REGISTER(0x211012dc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_182)
BCHP_REGISTER(0x211012e0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_183)
BCHP_REGISTER(0x211012e4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_184)
BCHP_REGISTER(0x211012e8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_185)
BCHP_REGISTER(0x211012ec, 32, CFG, MEMC_ARB_0, CLIENT_INFO_186)
BCHP_REGISTER(0x211012f0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_187)
BCHP_REGISTER(0x211012f4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_188)
BCHP_REGISTER(0x211012f8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_189)
BCHP_REGISTER(0x211012fc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_190)
BCHP_REGISTER(0x21101300, 32, CFG, MEMC_ARB_0, CLIENT_INFO_191)
BCHP_REGISTER(0x21101304, 32, CFG, MEMC_ARB_0, CLIENT_INFO_192)
BCHP_REGISTER(0x21101308, 32, CFG, MEMC_ARB_0, CLIENT_INFO_193)
BCHP_REGISTER(0x2110130c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_194)
BCHP_REGISTER(0x21101310, 32, CFG, MEMC_ARB_0, CLIENT_INFO_195)
BCHP_REGISTER(0x21101314, 32, CFG, MEMC_ARB_0, CLIENT_INFO_196)
BCHP_REGISTER(0x21101318, 32, CFG, MEMC_ARB_0, CLIENT_INFO_197)
BCHP_REGISTER(0x2110131c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_198)
BCHP_REGISTER(0x21101320, 32, CFG, MEMC_ARB_0, CLIENT_INFO_199)
BCHP_REGISTER(0x21101324, 32, CFG, MEMC_ARB_0, CLIENT_INFO_200)
BCHP_REGISTER(0x21101328, 32, CFG, MEMC_ARB_0, CLIENT_INFO_201)
BCHP_REGISTER(0x2110132c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_202)
BCHP_REGISTER(0x21101330, 32, CFG, MEMC_ARB_0, CLIENT_INFO_203)
BCHP_REGISTER(0x21101334, 32, CFG, MEMC_ARB_0, CLIENT_INFO_204)
BCHP_REGISTER(0x21101338, 32, CFG, MEMC_ARB_0, CLIENT_INFO_205)
BCHP_REGISTER(0x2110133c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_206)
BCHP_REGISTER(0x21101340, 32, CFG, MEMC_ARB_0, CLIENT_INFO_207)
BCHP_REGISTER(0x21101344, 32, CFG, MEMC_ARB_0, CLIENT_INFO_208)
BCHP_REGISTER(0x21101348, 32, CFG, MEMC_ARB_0, CLIENT_INFO_209)
BCHP_REGISTER(0x2110134c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_210)
BCHP_REGISTER(0x21101350, 32, CFG, MEMC_ARB_0, CLIENT_INFO_211)
BCHP_REGISTER(0x21101354, 32, CFG, MEMC_ARB_0, CLIENT_INFO_212)
BCHP_REGISTER(0x21101358, 32, CFG, MEMC_ARB_0, CLIENT_INFO_213)
BCHP_REGISTER(0x2110135c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_214)
BCHP_REGISTER(0x21101360, 32, CFG, MEMC_ARB_0, CLIENT_INFO_215)
BCHP_REGISTER(0x21101364, 32, CFG, MEMC_ARB_0, CLIENT_INFO_216)
BCHP_REGISTER(0x21101368, 32, CFG, MEMC_ARB_0, CLIENT_INFO_217)
BCHP_REGISTER(0x2110136c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_218)
BCHP_REGISTER(0x21101370, 32, CFG, MEMC_ARB_0, CLIENT_INFO_219)
BCHP_REGISTER(0x21101374, 32, CFG, MEMC_ARB_0, CLIENT_INFO_220)
BCHP_REGISTER(0x21101378, 32, CFG, MEMC_ARB_0, CLIENT_INFO_221)
BCHP_REGISTER(0x2110137c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_222)
BCHP_REGISTER(0x21101380, 32, CFG, MEMC_ARB_0, CLIENT_INFO_223)
BCHP_REGISTER(0x21101384, 32, CFG, MEMC_ARB_0, CLIENT_INFO_224)
BCHP_REGISTER(0x21101388, 32, CFG, MEMC_ARB_0, CLIENT_INFO_225)
BCHP_REGISTER(0x2110138c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_226)
BCHP_REGISTER(0x21101390, 32, CFG, MEMC_ARB_0, CLIENT_INFO_227)
BCHP_REGISTER(0x21101394, 32, CFG, MEMC_ARB_0, CLIENT_INFO_228)
BCHP_REGISTER(0x21101398, 32, CFG, MEMC_ARB_0, CLIENT_INFO_229)
BCHP_REGISTER(0x2110139c, 32, CFG, MEMC_ARB_0, CLIENT_INFO_230)
BCHP_REGISTER(0x211013a0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_231)
BCHP_REGISTER(0x211013a4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_232)
BCHP_REGISTER(0x211013a8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_233)
BCHP_REGISTER(0x211013ac, 32, CFG, MEMC_ARB_0, CLIENT_INFO_234)
BCHP_REGISTER(0x211013b0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_235)
BCHP_REGISTER(0x211013b4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_236)
BCHP_REGISTER(0x211013b8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_237)
BCHP_REGISTER(0x211013bc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_238)
BCHP_REGISTER(0x211013c0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_239)
BCHP_REGISTER(0x211013c4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_240)
BCHP_REGISTER(0x211013c8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_241)
BCHP_REGISTER(0x211013cc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_242)
BCHP_REGISTER(0x211013d0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_243)
BCHP_REGISTER(0x211013d4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_244)
BCHP_REGISTER(0x211013d8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_245)
BCHP_REGISTER(0x211013dc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_246)
BCHP_REGISTER(0x211013e0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_247)
BCHP_REGISTER(0x211013e4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_248)
BCHP_REGISTER(0x211013e8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_249)
BCHP_REGISTER(0x211013ec, 32, CFG, MEMC_ARB_0, CLIENT_INFO_250)
BCHP_REGISTER(0x211013f0, 32, CFG, MEMC_ARB_0, CLIENT_INFO_251)
BCHP_REGISTER(0x211013f4, 32, CFG, MEMC_ARB_0, CLIENT_INFO_252)
BCHP_REGISTER(0x211013f8, 32, CFG, MEMC_ARB_0, CLIENT_INFO_253)
BCHP_REGISTER(0x211013fc, 32, CFG, MEMC_ARB_0, CLIENT_INFO_254)
BCHP_REGISTER(0x21101400, 32, CFG, MEMC_ARB_0, CLIENT_INFO_255)
BCHP_REGISTER(0x21101404, 32, CFG, MEMC_ARB_0, REQ_MASK_0)
BCHP_REGISTER(0x21101408, 32, CFG, MEMC_ARB_0, REQ_MASK_1)
BCHP_REGISTER(0x2110140c, 32, CFG, MEMC_ARB_0, REQ_MASK_2)
BCHP_REGISTER(0x21101410, 32, CFG, MEMC_ARB_0, REQ_MASK_3)
BCHP_REGISTER(0x21101414, 32, CFG, MEMC_ARB_0, REQ_MASK_4)
BCHP_REGISTER(0x21101418, 32, CFG, MEMC_ARB_0, REQ_MASK_5)
BCHP_REGISTER(0x2110141c, 32, CFG, MEMC_ARB_0, REQ_MASK_6)
BCHP_REGISTER(0x21101420, 32, CFG, MEMC_ARB_0, REQ_MASK_7)
BCHP_REGISTER(0x21101424, 32,  RO, MEMC_ARB_0, ARB_WINNER)
BCHP_REGISTER(0x21101428, 32,  RO, MEMC_ARB_0, RTS_ERR_0)
BCHP_REGISTER(0x2110142c, 32,  RO, MEMC_ARB_0, RTS_ERR_1)
BCHP_REGISTER(0x21101430, 32,  RO, MEMC_ARB_0, RTS_ERR_2)
BCHP_REGISTER(0x21101434, 32,  RO, MEMC_ARB_0, RTS_ERR_3)
BCHP_REGISTER(0x21101438, 32,  RO, MEMC_ARB_0, RTS_ERR_4)
BCHP_REGISTER(0x2110143c, 32,  RO, MEMC_ARB_0, RTS_ERR_5)
BCHP_REGISTER(0x21101440, 32,  RO, MEMC_ARB_0, RTS_ERR_6)
BCHP_REGISTER(0x21101444, 32,  RO, MEMC_ARB_0, RTS_ERR_7)
BCHP_REGISTER(0x21101448, 32, CFG, MEMC_ARB_0, FULLNESS_THRESHOLD)
BCHP_REGISTER(0x2110144c, 32, CFG, MEMC_ARB_0, FULLNESS_UPDATE_HOLDOFF)
BCHP_REGISTER(0x21101450, 32, CFG, MEMC_ARB_0, MINIMUM_COMMAND_SIZE)
BCHP_REGISTER(0x21101454, 32, CFG, MEMC_ARB_0, MINIMUM_COMMAND_SIZE2)
BCHP_REGISTER(0x21101458, 32, CFG, MEMC_ARB_0, RTS_ERR_INFO_WRITE_CLEAR)
BCHP_REGISTER(0x2110145c, 32,  RO, MEMC_ARB_0, SCB_ARBITER_DEBUG_REGISTER)
BCHP_REGISTER(0x21101460, 32, CFG, MEMC_ARB_0, SPARE_1)
BCHP_REGISTER(0x21101464, 32, CFG, MEMC_ARB_0, SPARE_2)
BCHP_REGISTER(0x21101468, 32,  RO, MEMC_ARB_0, SPARE_RO_1)
BCHP_REGISTER(0x2110146c, 32,  RO, MEMC_ARB_0, SPARE_RO_2)
BCHP_REGISTER(0x21101470, 32, CFG, MEMC_ARB_0, CLIENT_INIT_ENABLE)
BCHP_REGISTER(0x21101474, 32, CFG, MEMC_ARB_0, CLIENT_INIT_COUNTER_THRESH)
BCHP_REGISTER(0x21101478, 32,  RO, MEMC_ARB_0, CLIENT_INIT_ERROR_INTERRUPT)
BCHP_REGISTER(0x2110147c, 32,  WO, MEMC_ARB_0, CLIENT_INIT_ERROR_WRITE_CLEAR)
BCHP_REGISTER(0x21101480, 32,  RO, MEMC_ARB_0, CLIENT_INIT_ERROR_INFO)
BCHP_REGISTER(0x21101484, 32, CFG, MEMC_ARB_0, CLIENT_INIT_SW_INIT)
BCHP_REGISTER(0x21101488, 32,  RO, MEMC_ARB_0, CLIENT_INIT_STATUS)
BCHP_REGISTER(0x2110148c, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_0)
BCHP_REGISTER(0x21101490, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_1)
BCHP_REGISTER(0x21101494, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_2)
BCHP_REGISTER(0x21101498, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_3)
BCHP_REGISTER(0x2110149c, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_4)
BCHP_REGISTER(0x211014a0, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_5)
BCHP_REGISTER(0x211014a4, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_6)
BCHP_REGISTER(0x211014a8, 32,  RO, MEMC_ARB_0, LCA_VALID_REQ_7)
BCHP_REGISTER(0x211014ac, 32, CFG, MEMC_ARB_0, CMD_FIFO_THRESH)
BCHP_REGISTER(0x211014b0, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_0)
BCHP_REGISTER(0x211014b4, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_1)
BCHP_REGISTER(0x211014b8, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_2)
BCHP_REGISTER(0x211014bc, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_3)
BCHP_REGISTER(0x211014c0, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_4)
BCHP_REGISTER(0x211014c4, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_5)
BCHP_REGISTER(0x211014c8, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_6)
BCHP_REGISTER(0x211014cc, 32,  RO, MEMC_ARB_0, ACTIVE_BLOCKED_STATUS_7)
BCHP_REGISTER(0x211014d0, 32, CFG, MEMC_ARB_0, ARB_CLK_GATE_DISABLE)
BCHP_REGISTER(0x21102000, 32, CFG, MEMC_DDR_0, CNTRLR_CONFIG)
BCHP_REGISTER(0x21102004, 32,  RO, MEMC_DDR_0, CNTRLR_CONFIG_STATUS)
BCHP_REGISTER(0x21102008, 32, CFG, MEMC_DDR_0, CNTRLR_CONFIG_2)
BCHP_REGISTER(0x2110200c, 32,  RO, MEMC_DDR_0, CNTRLR_CONFIG_2_STATUS)
BCHP_REGISTER(0x21102010, 32, CFG, MEMC_DDR_0, DRAM_INIT_CNTRL)
BCHP_REGISTER(0x21102014, 32,  RO, MEMC_DDR_0, DRAM_INIT_STATUS)
BCHP_REGISTER(0x21102018, 32, CFG, MEMC_DDR_0, DRAM_MODE_3)
BCHP_REGISTER(0x2110201c, 32, CFG, MEMC_DDR_0, PPD_CONFIG)
BCHP_REGISTER(0x21102020, 32, CFG, MEMC_DDR_0, SRPD_CONFIG)
BCHP_REGISTER(0x21102024, 32, CFG, MEMC_DDR_0, SSPD_CMD)
BCHP_REGISTER(0x21102028, 32,  RO, MEMC_DDR_0, POWER_DOWN_STATUS)
BCHP_REGISTER(0x2110202c, 32, CFG, MEMC_DDR_0, WARM_BOOT)
BCHP_REGISTER(0x21102030, 32, CFG, MEMC_DDR_0, DRAM_TIMING_0)
BCHP_REGISTER(0x21102034, 32, CFG, MEMC_DDR_0, DRAM_TIMING_1)
BCHP_REGISTER(0x21102038, 32, CFG, MEMC_DDR_0, DRAM_TIMING_2)
BCHP_REGISTER(0x2110203c, 32, CFG, MEMC_DDR_0, DRAM_TIMING_3)
BCHP_REGISTER(0x21102040, 32, CFG, MEMC_DDR_0, DRAM_TIMING_4)
BCHP_REGISTER(0x21102044, 32, CFG, MEMC_DDR_0, DRAM_TIMING_5)
BCHP_REGISTER(0x21102048, 32, CFG, MEMC_DDR_0, DRAM_TIMING_6)
BCHP_REGISTER(0x2110204c, 32, CFG, MEMC_DDR_0, DRAM_TIMING_7)
BCHP_REGISTER(0x21102050, 32, CFG, MEMC_DDR_0, DUAL_RANK_TIMING)
BCHP_REGISTER(0x21102054, 32, CFG, MEMC_DDR_0, MIN_DQ_IDLE_CONTROL)
BCHP_REGISTER(0x21102058, 32, CFG, MEMC_DDR_0, PHY_OP_ACCESS_PENALTY)
BCHP_REGISTER(0x2110205c, 32, CFG, MEMC_DDR_0, CNTRLR_SM_TIMEOUT)
BCHP_REGISTER(0x21102060, 32,  RO, MEMC_DDR_0, BANK_STATUS)
BCHP_REGISTER(0x21102064, 32, CFG, MEMC_DDR_0, TESTER_LATENCY)
BCHP_REGISTER(0x21102068, 32, CFG, MEMC_DDR_0, SEQ_RING_BUF_DEPTH)
BCHP_REGISTER(0x2110206c, 32,  RO, MEMC_DDR_0, SEQ_WRDATA_ERR_INFO)
BCHP_REGISTER(0x21102070, 32,  RO, MEMC_DDR_0, SEQ_WRDATA_TRANSID_MISMATCH_INFO)
BCHP_REGISTER(0x21102074, 32, CFG, MEMC_DDR_0, SEQ_CLEAR_VIOLATIONS)
BCHP_REGISTER(0x21102078, 32, CFG, MEMC_DDR_0, CMD_LOOKAHEAD)
BCHP_REGISTER(0x2110207c, 32, CFG, MEMC_DDR_0, DFI_PHASE_ENABLE)
BCHP_REGISTER(0x21102080, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CONTROL)
BCHP_REGISTER(0x21102084, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_0)
BCHP_REGISTER(0x21102088, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_1)
BCHP_REGISTER(0x2110208c, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_2)
BCHP_REGISTER(0x21102090, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_3)
BCHP_REGISTER(0x21102094, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_4)
BCHP_REGISTER(0x21102098, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_5)
BCHP_REGISTER(0x2110209c, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_6)
BCHP_REGISTER(0x211020a0, 32, CFG, MEMC_DDR_0, WRITE_MASK_FIX_CLIENTS_7)
BCHP_REGISTER(0x21102300, 32, CFG, MEMC_DDR_0, STAT_CONTROL)
BCHP_REGISTER(0x21102304, 32,  RW, MEMC_DDR_0, STAT_TIMER)
BCHP_REGISTER(0x21102308, 32,  RW, MEMC_DDR_0, STAT_IDLE_NOP)
BCHP_REGISTER(0x2110230c, 32,  RW, MEMC_DDR_0, STAT_MAX_IDLE_NOP)
BCHP_REGISTER(0x21102310, 32,  RW, MEMC_DDR_0, STAT_MIN_IDLE_NOP)
BCHP_REGISTER(0x21102314, 32,  RW, MEMC_DDR_0, STAT_CAS_ALL)
BCHP_REGISTER(0x21102318, 32,  RW, MEMC_DDR_0, STAT_MAX_CAS_ALL)
BCHP_REGISTER(0x2110231c, 32,  RW, MEMC_DDR_0, STAT_MIN_CAS_ALL)
BCHP_REGISTER(0x21102320, 32,  RW, MEMC_DDR_0, STAT_PENALTY_ALL)
BCHP_REGISTER(0x21102324, 32,  RW, MEMC_DDR_0, STAT_PAGE_MERGE_ALL)
BCHP_REGISTER(0x21102328, 32,  RW, MEMC_DDR_0, STAT_MAX_TRANS_CYCLES_ALL)
BCHP_REGISTER(0x2110232c, 32,  RW, MEMC_DDR_0, STAT_MIN_TRANS_CYCLES_ALL)
BCHP_REGISTER(0x21102330, 32,  RW, MEMC_DDR_0, STAT_TRANS_READ_ALL)
BCHP_REGISTER(0x21102334, 32,  RW, MEMC_DDR_0, STAT_TRANS_WRITE_ALL)
BCHP_REGISTER(0x21102338, 32,  RW, MEMC_DDR_0, STAT_MAX_TRANS_ALL)
BCHP_REGISTER(0x2110233c, 32,  RW, MEMC_DDR_0, STAT_MIN_TRANS_ALL)
BCHP_REGISTER(0x21102340, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_CAS)
BCHP_REGISTER(0x21102344, 32,  RW, MEMC_DDR_0, STAT_MAX_CLIENT_SERVICE_CAS)
BCHP_REGISTER(0x21102348, 32,  RW, MEMC_DDR_0, STAT_MIN_CLIENT_SERVICE_CAS)
BCHP_REGISTER(0x2110234c, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_INTR_PENALTY)
BCHP_REGISTER(0x21102350, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_POST_PENALTY)
BCHP_REGISTER(0x21102354, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_PAGE_MERGES)
BCHP_REGISTER(0x21102358, 32,  RW, MEMC_DDR_0, STAT_MAX_CLIENT_SERVICE_CYCLES)
BCHP_REGISTER(0x2110235c, 32,  RW, MEMC_DDR_0, STAT_MIN_CLIENT_SERVICE_CYCLES)
BCHP_REGISTER(0x21102360, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_TRANS_READ)
BCHP_REGISTER(0x21102364, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_TRANS_WRITE)
BCHP_REGISTER(0x21102368, 32,  RW, MEMC_DDR_0, STAT_MAX_CLIENT_SERVICE_TRANS)
BCHP_REGISTER(0x2110236c, 32,  RW, MEMC_DDR_0, STAT_MIN_CLIENT_SERVICE_TRANS)
BCHP_REGISTER(0x21102370, 32,  RW, MEMC_DDR_0, STAT_CLIENT_SERVICE_LATENCY)
BCHP_REGISTER(0x21102374, 32,  RW, MEMC_DDR_0, STAT_MAX_CLIENT_SERVICE_LATENCY)
BCHP_REGISTER(0x21102378, 32,  RW, MEMC_DDR_0, STAT_MIN_CLIENT_SERVICE_LATENCY)
BCHP_REGISTER(0x2110237c, 32,  RW, MEMC_DDR_0, STAT_CLIENT_ABS_MAX_SERVICE_LATENCY)
BCHP_REGISTER(0x21102380, 32,  RW, MEMC_DDR_0, STAT_CLIENT_ABS_MIN_SERVICE_LATENCY)
BCHP_REGISTER(0x21102384, 32,  RW, MEMC_DDR_0, STAT_REFRESH)
BCHP_REGISTER(0x21102388, 32,  RW, MEMC_DDR_0, STAT_UNALIGNED_CAS_ALL)
BCHP_REGISTER(0x2110238c, 32,  RW, MEMC_DDR_0, STAT_UNALIGNED_CAS_CLIENT_SERVICE)
BCHP_REGISTER(0x21102390, 32,  RW, MEMC_DDR_0, STAT_MASKED_CAS_ALL)
BCHP_REGISTER(0x21102394, 32,  RW, MEMC_DDR_0, STAT_MASKED_CAS_CLIENT_SERVICE)
BCHP_REGISTER(0x21102398, 32,  RW, MEMC_DDR_0, STAT_MASKED_CAS_MAX_ALL)
BCHP_REGISTER(0x2110239c, 32,  RW, MEMC_DDR_0, STAT_MASKED_CAS_MAX_CLIENT_SERVICE)
BCHP_REGISTER(0x211023a0, 32,  RW, MEMC_DDR_0, STAT_RANK_CROSS)
BCHP_REGISTER(0x211023a4, 32,  RW, MEMC_DDR_0, STAT_RANK_CROSS_PENALTY)
BCHP_REGISTER(0x211023a8, 32,  RW, MEMC_DDR_0, STAT_AUTOFPPD_ENTERED)
BCHP_REGISTER(0x211023ac, 32,  RW, MEMC_DDR_0, STAT_AUTOFPPD_TOTAL)
BCHP_REGISTER(0x21102400, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_0)
BCHP_REGISTER(0x21102404, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_1)
BCHP_REGISTER(0x21102408, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_2)
BCHP_REGISTER(0x2110240c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_3)
BCHP_REGISTER(0x21102410, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_4)
BCHP_REGISTER(0x21102414, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_5)
BCHP_REGISTER(0x21102418, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_6)
BCHP_REGISTER(0x2110241c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_7)
BCHP_REGISTER(0x21102420, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_8)
BCHP_REGISTER(0x21102424, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_9)
BCHP_REGISTER(0x21102428, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_10)
BCHP_REGISTER(0x2110242c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_11)
BCHP_REGISTER(0x21102430, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_12)
BCHP_REGISTER(0x21102434, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_13)
BCHP_REGISTER(0x21102438, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_14)
BCHP_REGISTER(0x2110243c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_15)
BCHP_REGISTER(0x21102440, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_16)
BCHP_REGISTER(0x21102444, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_17)
BCHP_REGISTER(0x21102448, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_18)
BCHP_REGISTER(0x2110244c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_19)
BCHP_REGISTER(0x21102450, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_20)
BCHP_REGISTER(0x21102454, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_21)
BCHP_REGISTER(0x21102458, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_22)
BCHP_REGISTER(0x2110245c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_23)
BCHP_REGISTER(0x21102460, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_24)
BCHP_REGISTER(0x21102464, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_25)
BCHP_REGISTER(0x21102468, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_26)
BCHP_REGISTER(0x2110246c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_27)
BCHP_REGISTER(0x21102470, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_28)
BCHP_REGISTER(0x21102474, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_29)
BCHP_REGISTER(0x21102478, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_30)
BCHP_REGISTER(0x2110247c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_31)
BCHP_REGISTER(0x21102480, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_32)
BCHP_REGISTER(0x21102484, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_33)
BCHP_REGISTER(0x21102488, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_34)
BCHP_REGISTER(0x2110248c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_35)
BCHP_REGISTER(0x21102490, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_36)
BCHP_REGISTER(0x21102494, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_37)
BCHP_REGISTER(0x21102498, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_38)
BCHP_REGISTER(0x2110249c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_39)
BCHP_REGISTER(0x211024a0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_40)
BCHP_REGISTER(0x211024a4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_41)
BCHP_REGISTER(0x211024a8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_42)
BCHP_REGISTER(0x211024ac, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_43)
BCHP_REGISTER(0x211024b0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_44)
BCHP_REGISTER(0x211024b4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_45)
BCHP_REGISTER(0x211024b8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_46)
BCHP_REGISTER(0x211024bc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_47)
BCHP_REGISTER(0x211024c0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_48)
BCHP_REGISTER(0x211024c4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_49)
BCHP_REGISTER(0x211024c8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_50)
BCHP_REGISTER(0x211024cc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_51)
BCHP_REGISTER(0x211024d0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_52)
BCHP_REGISTER(0x211024d4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_53)
BCHP_REGISTER(0x211024d8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_54)
BCHP_REGISTER(0x211024dc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_55)
BCHP_REGISTER(0x211024e0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_56)
BCHP_REGISTER(0x211024e4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_57)
BCHP_REGISTER(0x211024e8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_58)
BCHP_REGISTER(0x211024ec, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_59)
BCHP_REGISTER(0x211024f0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_60)
BCHP_REGISTER(0x211024f4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_61)
BCHP_REGISTER(0x211024f8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_62)
BCHP_REGISTER(0x211024fc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_63)
BCHP_REGISTER(0x21102500, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_64)
BCHP_REGISTER(0x21102504, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_65)
BCHP_REGISTER(0x21102508, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_66)
BCHP_REGISTER(0x2110250c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_67)
BCHP_REGISTER(0x21102510, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_68)
BCHP_REGISTER(0x21102514, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_69)
BCHP_REGISTER(0x21102518, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_70)
BCHP_REGISTER(0x2110251c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_71)
BCHP_REGISTER(0x21102520, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_72)
BCHP_REGISTER(0x21102524, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_73)
BCHP_REGISTER(0x21102528, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_74)
BCHP_REGISTER(0x2110252c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_75)
BCHP_REGISTER(0x21102530, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_76)
BCHP_REGISTER(0x21102534, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_77)
BCHP_REGISTER(0x21102538, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_78)
BCHP_REGISTER(0x2110253c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_79)
BCHP_REGISTER(0x21102540, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_80)
BCHP_REGISTER(0x21102544, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_81)
BCHP_REGISTER(0x21102548, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_82)
BCHP_REGISTER(0x2110254c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_83)
BCHP_REGISTER(0x21102550, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_84)
BCHP_REGISTER(0x21102554, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_85)
BCHP_REGISTER(0x21102558, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_86)
BCHP_REGISTER(0x2110255c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_87)
BCHP_REGISTER(0x21102560, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_88)
BCHP_REGISTER(0x21102564, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_89)
BCHP_REGISTER(0x21102568, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_90)
BCHP_REGISTER(0x2110256c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_91)
BCHP_REGISTER(0x21102570, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_92)
BCHP_REGISTER(0x21102574, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_93)
BCHP_REGISTER(0x21102578, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_94)
BCHP_REGISTER(0x2110257c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_95)
BCHP_REGISTER(0x21102580, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_96)
BCHP_REGISTER(0x21102584, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_97)
BCHP_REGISTER(0x21102588, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_98)
BCHP_REGISTER(0x2110258c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_99)
BCHP_REGISTER(0x21102590, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_100)
BCHP_REGISTER(0x21102594, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_101)
BCHP_REGISTER(0x21102598, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_102)
BCHP_REGISTER(0x2110259c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_103)
BCHP_REGISTER(0x211025a0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_104)
BCHP_REGISTER(0x211025a4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_105)
BCHP_REGISTER(0x211025a8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_106)
BCHP_REGISTER(0x211025ac, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_107)
BCHP_REGISTER(0x211025b0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_108)
BCHP_REGISTER(0x211025b4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_109)
BCHP_REGISTER(0x211025b8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_110)
BCHP_REGISTER(0x211025bc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_111)
BCHP_REGISTER(0x211025c0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_112)
BCHP_REGISTER(0x211025c4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_113)
BCHP_REGISTER(0x211025c8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_114)
BCHP_REGISTER(0x211025cc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_115)
BCHP_REGISTER(0x211025d0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_116)
BCHP_REGISTER(0x211025d4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_117)
BCHP_REGISTER(0x211025d8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_118)
BCHP_REGISTER(0x211025dc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_119)
BCHP_REGISTER(0x211025e0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_120)
BCHP_REGISTER(0x211025e4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_121)
BCHP_REGISTER(0x211025e8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_122)
BCHP_REGISTER(0x211025ec, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_123)
BCHP_REGISTER(0x211025f0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_124)
BCHP_REGISTER(0x211025f4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_125)
BCHP_REGISTER(0x211025f8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_126)
BCHP_REGISTER(0x211025fc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_127)
BCHP_REGISTER(0x21102600, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_128)
BCHP_REGISTER(0x21102604, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_129)
BCHP_REGISTER(0x21102608, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_130)
BCHP_REGISTER(0x2110260c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_131)
BCHP_REGISTER(0x21102610, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_132)
BCHP_REGISTER(0x21102614, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_133)
BCHP_REGISTER(0x21102618, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_134)
BCHP_REGISTER(0x2110261c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_135)
BCHP_REGISTER(0x21102620, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_136)
BCHP_REGISTER(0x21102624, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_137)
BCHP_REGISTER(0x21102628, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_138)
BCHP_REGISTER(0x2110262c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_139)
BCHP_REGISTER(0x21102630, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_140)
BCHP_REGISTER(0x21102634, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_141)
BCHP_REGISTER(0x21102638, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_142)
BCHP_REGISTER(0x2110263c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_143)
BCHP_REGISTER(0x21102640, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_144)
BCHP_REGISTER(0x21102644, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_145)
BCHP_REGISTER(0x21102648, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_146)
BCHP_REGISTER(0x2110264c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_147)
BCHP_REGISTER(0x21102650, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_148)
BCHP_REGISTER(0x21102654, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_149)
BCHP_REGISTER(0x21102658, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_150)
BCHP_REGISTER(0x2110265c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_151)
BCHP_REGISTER(0x21102660, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_152)
BCHP_REGISTER(0x21102664, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_153)
BCHP_REGISTER(0x21102668, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_154)
BCHP_REGISTER(0x2110266c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_155)
BCHP_REGISTER(0x21102670, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_156)
BCHP_REGISTER(0x21102674, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_157)
BCHP_REGISTER(0x21102678, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_158)
BCHP_REGISTER(0x2110267c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_159)
BCHP_REGISTER(0x21102680, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_160)
BCHP_REGISTER(0x21102684, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_161)
BCHP_REGISTER(0x21102688, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_162)
BCHP_REGISTER(0x2110268c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_163)
BCHP_REGISTER(0x21102690, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_164)
BCHP_REGISTER(0x21102694, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_165)
BCHP_REGISTER(0x21102698, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_166)
BCHP_REGISTER(0x2110269c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_167)
BCHP_REGISTER(0x211026a0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_168)
BCHP_REGISTER(0x211026a4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_169)
BCHP_REGISTER(0x211026a8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_170)
BCHP_REGISTER(0x211026ac, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_171)
BCHP_REGISTER(0x211026b0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_172)
BCHP_REGISTER(0x211026b4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_173)
BCHP_REGISTER(0x211026b8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_174)
BCHP_REGISTER(0x211026bc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_175)
BCHP_REGISTER(0x211026c0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_176)
BCHP_REGISTER(0x211026c4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_177)
BCHP_REGISTER(0x211026c8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_178)
BCHP_REGISTER(0x211026cc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_179)
BCHP_REGISTER(0x211026d0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_180)
BCHP_REGISTER(0x211026d4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_181)
BCHP_REGISTER(0x211026d8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_182)
BCHP_REGISTER(0x211026dc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_183)
BCHP_REGISTER(0x211026e0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_184)
BCHP_REGISTER(0x211026e4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_185)
BCHP_REGISTER(0x211026e8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_186)
BCHP_REGISTER(0x211026ec, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_187)
BCHP_REGISTER(0x211026f0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_188)
BCHP_REGISTER(0x211026f4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_189)
BCHP_REGISTER(0x211026f8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_190)
BCHP_REGISTER(0x211026fc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_191)
BCHP_REGISTER(0x21102700, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_192)
BCHP_REGISTER(0x21102704, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_193)
BCHP_REGISTER(0x21102708, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_194)
BCHP_REGISTER(0x2110270c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_195)
BCHP_REGISTER(0x21102710, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_196)
BCHP_REGISTER(0x21102714, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_197)
BCHP_REGISTER(0x21102718, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_198)
BCHP_REGISTER(0x2110271c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_199)
BCHP_REGISTER(0x21102720, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_200)
BCHP_REGISTER(0x21102724, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_201)
BCHP_REGISTER(0x21102728, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_202)
BCHP_REGISTER(0x2110272c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_203)
BCHP_REGISTER(0x21102730, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_204)
BCHP_REGISTER(0x21102734, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_205)
BCHP_REGISTER(0x21102738, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_206)
BCHP_REGISTER(0x2110273c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_207)
BCHP_REGISTER(0x21102740, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_208)
BCHP_REGISTER(0x21102744, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_209)
BCHP_REGISTER(0x21102748, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_210)
BCHP_REGISTER(0x2110274c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_211)
BCHP_REGISTER(0x21102750, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_212)
BCHP_REGISTER(0x21102754, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_213)
BCHP_REGISTER(0x21102758, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_214)
BCHP_REGISTER(0x2110275c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_215)
BCHP_REGISTER(0x21102760, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_216)
BCHP_REGISTER(0x21102764, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_217)
BCHP_REGISTER(0x21102768, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_218)
BCHP_REGISTER(0x2110276c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_219)
BCHP_REGISTER(0x21102770, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_220)
BCHP_REGISTER(0x21102774, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_221)
BCHP_REGISTER(0x21102778, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_222)
BCHP_REGISTER(0x2110277c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_223)
BCHP_REGISTER(0x21102780, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_224)
BCHP_REGISTER(0x21102784, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_225)
BCHP_REGISTER(0x21102788, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_226)
BCHP_REGISTER(0x2110278c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_227)
BCHP_REGISTER(0x21102790, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_228)
BCHP_REGISTER(0x21102794, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_229)
BCHP_REGISTER(0x21102798, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_230)
BCHP_REGISTER(0x2110279c, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_231)
BCHP_REGISTER(0x211027a0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_232)
BCHP_REGISTER(0x211027a4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_233)
BCHP_REGISTER(0x211027a8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_234)
BCHP_REGISTER(0x211027ac, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_235)
BCHP_REGISTER(0x211027b0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_236)
BCHP_REGISTER(0x211027b4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_237)
BCHP_REGISTER(0x211027b8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_238)
BCHP_REGISTER(0x211027bc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_239)
BCHP_REGISTER(0x211027c0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_240)
BCHP_REGISTER(0x211027c4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_241)
BCHP_REGISTER(0x211027c8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_242)
BCHP_REGISTER(0x211027cc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_243)
BCHP_REGISTER(0x211027d0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_244)
BCHP_REGISTER(0x211027d4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_245)
BCHP_REGISTER(0x211027d8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_246)
BCHP_REGISTER(0x211027dc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_247)
BCHP_REGISTER(0x211027e0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_248)
BCHP_REGISTER(0x211027e4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_249)
BCHP_REGISTER(0x211027e8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_250)
BCHP_REGISTER(0x211027ec, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_251)
BCHP_REGISTER(0x211027f0, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_252)
BCHP_REGISTER(0x211027f4, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_253)
BCHP_REGISTER(0x211027f8, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_254)
BCHP_REGISTER(0x211027fc, 32,  RO, MEMC_DDR_0, STAT_CAS_CLIENT_255)
BCHP_REGISTER(0x21103000, 32,  RO, MEMC_L2_0_0, CPU_STATUS)
BCHP_REGISTER(0x21103004, 32,  WO, MEMC_L2_0_0, CPU_SET)
BCHP_REGISTER(0x21103008, 32,  WO, MEMC_L2_0_0, CPU_CLEAR)
BCHP_REGISTER(0x2110300c, 32,  RO, MEMC_L2_0_0, CPU_MASK_STATUS)
BCHP_REGISTER(0x21103010, 32,  WO, MEMC_L2_0_0, CPU_MASK_SET)
BCHP_REGISTER(0x21103014, 32,  WO, MEMC_L2_0_0, CPU_MASK_CLEAR)
BCHP_REGISTER(0x21103018, 32,  RO, MEMC_L2_0_0, PCI_STATUS)
BCHP_REGISTER(0x2110301c, 32,  WO, MEMC_L2_0_0, PCI_SET)
BCHP_REGISTER(0x21103020, 32,  WO, MEMC_L2_0_0, PCI_CLEAR)
BCHP_REGISTER(0x21103024, 32,  RO, MEMC_L2_0_0, PCI_MASK_STATUS)
BCHP_REGISTER(0x21103028, 32,  WO, MEMC_L2_0_0, PCI_MASK_SET)
BCHP_REGISTER(0x2110302c, 32,  WO, MEMC_L2_0_0, PCI_MASK_CLEAR)
BCHP_REGISTER(0x21103030, 32,  RO, MEMC_L2_0_0, SCPU_STATUS)
BCHP_REGISTER(0x21103034, 32,  WO, MEMC_L2_0_0, SCPU_SET)
BCHP_REGISTER(0x21103038, 32,  WO, MEMC_L2_0_0, SCPU_CLEAR)
BCHP_REGISTER(0x2110303c, 32,  RO, MEMC_L2_0_0, SCPU_MASK_STATUS)
BCHP_REGISTER(0x21103040, 32,  WO, MEMC_L2_0_0, SCPU_MASK_SET)
BCHP_REGISTER(0x21103044, 32,  WO, MEMC_L2_0_0, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x21103200, 32,  RO, MEMC_L2_0_1, CPU_STATUS)
BCHP_REGISTER(0x21103204, 32,  WO, MEMC_L2_0_1, CPU_SET)
BCHP_REGISTER(0x21103208, 32,  WO, MEMC_L2_0_1, CPU_CLEAR)
BCHP_REGISTER(0x2110320c, 32,  RO, MEMC_L2_0_1, CPU_MASK_STATUS)
BCHP_REGISTER(0x21103210, 32,  WO, MEMC_L2_0_1, CPU_MASK_SET)
BCHP_REGISTER(0x21103214, 32,  WO, MEMC_L2_0_1, CPU_MASK_CLEAR)
BCHP_REGISTER(0x21103218, 32,  RO, MEMC_L2_0_1, PCI_STATUS)
BCHP_REGISTER(0x2110321c, 32,  WO, MEMC_L2_0_1, PCI_SET)
BCHP_REGISTER(0x21103220, 32,  WO, MEMC_L2_0_1, PCI_CLEAR)
BCHP_REGISTER(0x21103224, 32,  RO, MEMC_L2_0_1, PCI_MASK_STATUS)
BCHP_REGISTER(0x21103228, 32,  WO, MEMC_L2_0_1, PCI_MASK_SET)
BCHP_REGISTER(0x2110322c, 32,  WO, MEMC_L2_0_1, PCI_MASK_CLEAR)
BCHP_REGISTER(0x21103230, 32,  RO, MEMC_L2_0_1, SCPU_STATUS)
BCHP_REGISTER(0x21103234, 32,  WO, MEMC_L2_0_1, SCPU_SET)
BCHP_REGISTER(0x21103238, 32,  WO, MEMC_L2_0_1, SCPU_CLEAR)
BCHP_REGISTER(0x2110323c, 32,  RO, MEMC_L2_0_1, SCPU_MASK_STATUS)
BCHP_REGISTER(0x21103240, 32,  WO, MEMC_L2_0_1, SCPU_MASK_SET)
BCHP_REGISTER(0x21103244, 32,  WO, MEMC_L2_0_1, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x21103400, 32,  RO, MEMC_L2_0_2, CPU_STATUS)
BCHP_REGISTER(0x21103404, 32,  WO, MEMC_L2_0_2, CPU_SET)
BCHP_REGISTER(0x21103408, 32,  WO, MEMC_L2_0_2, CPU_CLEAR)
BCHP_REGISTER(0x2110340c, 32,  RO, MEMC_L2_0_2, CPU_MASK_STATUS)
BCHP_REGISTER(0x21103410, 32,  WO, MEMC_L2_0_2, CPU_MASK_SET)
BCHP_REGISTER(0x21103414, 32,  WO, MEMC_L2_0_2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x21103418, 32,  RO, MEMC_L2_0_2, PCI_STATUS)
BCHP_REGISTER(0x2110341c, 32,  WO, MEMC_L2_0_2, PCI_SET)
BCHP_REGISTER(0x21103420, 32,  WO, MEMC_L2_0_2, PCI_CLEAR)
BCHP_REGISTER(0x21103424, 32,  RO, MEMC_L2_0_2, PCI_MASK_STATUS)
BCHP_REGISTER(0x21103428, 32,  WO, MEMC_L2_0_2, PCI_MASK_SET)
BCHP_REGISTER(0x2110342c, 32,  WO, MEMC_L2_0_2, PCI_MASK_CLEAR)
BCHP_REGISTER(0x21103430, 32,  RO, MEMC_L2_0_2, SCPU_STATUS)
BCHP_REGISTER(0x21103434, 32,  WO, MEMC_L2_0_2, SCPU_SET)
BCHP_REGISTER(0x21103438, 32,  WO, MEMC_L2_0_2, SCPU_CLEAR)
BCHP_REGISTER(0x2110343c, 32,  RO, MEMC_L2_0_2, SCPU_MASK_STATUS)
BCHP_REGISTER(0x21103440, 32,  WO, MEMC_L2_0_2, SCPU_MASK_SET)
BCHP_REGISTER(0x21103444, 32,  WO, MEMC_L2_0_2, SCPU_MASK_CLEAR)
BCHP_REGISTER(0x21103800, 32,  RO, MEMC_TRACELOG_0_0, VERSION)
BCHP_REGISTER(0x21103804, 32, CFG, MEMC_TRACELOG_0_0, CONTROL)
BCHP_REGISTER(0x21103808, 32, CFG, MEMC_TRACELOG_0_0, REMOTE)
BCHP_REGISTER(0x2110380c, 32,  WO, MEMC_TRACELOG_0_0, COMMAND)
BCHP_REGISTER(0x21103810, 32,  RW, MEMC_TRACELOG_0_0, STATUS)
BCHP_REGISTER(0x21103814, 32,  RO, MEMC_TRACELOG_0_0, DEBUG)
BCHP_REGISTER(0x21103820, 32,  RO, MEMC_TRACELOG_0_0, ELAPSED_TIME_LOWER)
BCHP_REGISTER(0x21103824, 32,  RO, MEMC_TRACELOG_0_0, ELAPSED_TIME_UPPER)
BCHP_REGISTER(0x21103828, 32,  RO, MEMC_TRACELOG_0_0, COUNT_TRANS_TOTAL)
BCHP_REGISTER(0x2110382c, 32,  RO, MEMC_TRACELOG_0_0, COUNT_TRIGGER_EVENTS)
BCHP_REGISTER(0x21103830, 32,  RO, MEMC_TRACELOG_0_0, COUNT_MATCHES_TOTAL)
BCHP_REGISTER(0x21103834, 32,  RO, MEMC_TRACELOG_0_0, COUNT_MATCHES_DROPPED)
BCHP_REGISTER(0x21103838, 32,  RO, MEMC_TRACELOG_0_0, COUNT_MATCHES_PRE_TRIGGER)
BCHP_REGISTER(0x2110383c, 32,  RO, MEMC_TRACELOG_0_0, COUNT_MATCHES_POST_TRIGGER)
BCHP_REGISTER(0x21103850, 32, CFG, MEMC_TRACELOG_0_0, BUFFER_PTR)
BCHP_REGISTER(0x21103854, 32, CFG, MEMC_TRACELOG_0_0, BUFFER_PTR_EXT)
BCHP_REGISTER(0x21103858, 32, CFG, MEMC_TRACELOG_0_0, BUFFER_SIZE)
BCHP_REGISTER(0x2110385c, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_WR_PTR)
BCHP_REGISTER(0x21103870, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_0)
BCHP_REGISTER(0x21103874, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_1)
BCHP_REGISTER(0x21103878, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_2)
BCHP_REGISTER(0x2110387c, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_3)
BCHP_REGISTER(0x21103880, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_4)
BCHP_REGISTER(0x21103884, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_5)
BCHP_REGISTER(0x21103888, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_6)
BCHP_REGISTER(0x2110388c, 32,  RO, MEMC_TRACELOG_0_0, BUFFER_DATA_WD_7)
BCHP_REGISTER(0x21103890, 32, CFG, MEMC_TRACELOG_0_0, TRIGGER_MODE)
BCHP_REGISTER(0x21103894, 32, CFG, MEMC_TRACELOG_0_0, TRIGGER_COUNT)
BCHP_REGISTER(0x21103898, 32, CFG, MEMC_TRACELOG_0_0, TRIGGER_DELAY_TIME_LOWER)
BCHP_REGISTER(0x2110389c, 32, CFG, MEMC_TRACELOG_0_0, TRIGGER_DELAY_TIME_UPPER)
BCHP_REGISTER(0x211038a0, 32,  RO, MEMC_TRACELOG_0_0, TRIGGER_WR_PTR)
BCHP_REGISTER(0x211038a8, 32,  RO, MEMC_TRACELOG_0_0, TRIGGER_TIME_LOWER)
BCHP_REGISTER(0x211038ac, 32,  RO, MEMC_TRACELOG_0_0, TRIGGER_TIME_UPPER)
BCHP_REGISTER(0x21105000, 32, CFG, MEMC_MISC_0, SOFT_RESET)
BCHP_REGISTER(0x21105004, 32, CFG, MEMC_MISC_0, MEMC_STRAP_DDR_CONFIG)
BCHP_REGISTER(0x21105008, 32, CFG, MEMC_MISC_0, MEMC_TOP_TM_CNTRL)
BCHP_REGISTER(0x2110500c, 32, CFG, MEMC_MISC_0, FSBL_STATE)
BCHP_REGISTER(0x21105010, 32, CFG, MEMC_MISC_0, SCRATCH_0)
BCHP_REGISTER(0x21105014, 32, CFG, MEMC_MISC_0, SCRATCH_1)
BCHP_REGISTER(0x21108000, 32, CFG, SHIMPHY_ADDR_CNTL_0, CONFIG)
BCHP_REGISTER(0x21108004, 32,  RO, SHIMPHY_ADDR_CNTL_0, SHIMPHY_REV_ID)
BCHP_REGISTER(0x21108008, 32,  RW, SHIMPHY_ADDR_CNTL_0, RESET)
BCHP_REGISTER(0x21108028, 32,  RO, SHIMPHY_ADDR_CNTL_0, CMD_DATA_FIFO)
BCHP_REGISTER(0x2110802c, 32,  RO, SHIMPHY_ADDR_CNTL_0, RD_DATAPATH)
BCHP_REGISTER(0x21108030, 32,  RO, SHIMPHY_ADDR_CNTL_0, FLAG_BUS)
BCHP_REGISTER(0x21108034, 32, CFG, SHIMPHY_ADDR_CNTL_0, MISC)
BCHP_REGISTER(0x21108038, 32, CFG, SHIMPHY_ADDR_CNTL_0, DFI_CONTROL)
BCHP_REGISTER(0x2110803c, 32,  RO, SHIMPHY_ADDR_CNTL_0, DFI_STATUS)
BCHP_REGISTER(0x21108040, 32,  RO, SHIMPHY_ADDR_CNTL_0, PHY_LPM_STAT)
BCHP_REGISTER(0x21108044, 32,  RW, SHIMPHY_ADDR_CNTL_0, ALERT_STATUS)
BCHP_REGISTER(0x21108048, 32, CFG, SHIMPHY_ADDR_CNTL_0, IDLE_POWER_SAVING)
BCHP_REGISTER(0x2110808c, 32, CFG, SHIMPHY_ADDR_CNTL_0, DDR_PAD_CNTRL)
BCHP_REGISTER(0x2110809c, 32,  RO, SHIMPHY_ADDR_CNTL_0, SHIMPHY_STATUS)
BCHP_REGISTER(0x211080a4, 32, CFG, SHIMPHY_ADDR_CNTL_0, SPARE0_RW)
BCHP_REGISTER(0x211080a8, 32, CFG, SHIMPHY_ADDR_CNTL_0, SPARE1_RW)
BCHP_REGISTER(0x211080ac, 32,  RO, SHIMPHY_ADDR_CNTL_0, SPARE0_RO)
BCHP_REGISTER(0x211080b0, 32,  RO, SHIMPHY_ADDR_CNTL_0, SPARE1_RO)
BCHP_REGISTER(0x211080b4, 32, CFG, SHIMPHY_ADDR_CNTL_0, DDR3_RESET_CNTRL)
BCHP_REGISTER(0x211080b8, 32,  RW, SHIMPHY_ADDR_CNTL_0, SHIMPHY_FIFO_ERROR)
BCHP_REGISTER(0x211080bc, 32,  RW, SHIMPHY_ADDR_CNTL_0, SHIMPHY_PHY_GPIO)
BCHP_REGISTER(0x211080c0, 32, CFG, SHIMPHY_ADDR_CNTL_0, SHIMPHY_POSTSEQ_DELAY1)
BCHP_REGISTER(0x211080c4, 32, CFG, SHIMPHY_ADDR_CNTL_0, SHIMPHY_POSTSEQ_DELAY2)
BCHP_REGISTER(0x21120000, 32,  RO, DDR34_PHY_CONTROL_REGS_0, PRIMARY_REVISION)
BCHP_REGISTER(0x21120004, 32,  RO, DDR34_PHY_CONTROL_REGS_0, SECONDARY_REVISION)
BCHP_REGISTER(0x21120008, 32,  RO, DDR34_PHY_CONTROL_REGS_0, FEATURE)
BCHP_REGISTER(0x2112000c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, PLL_STATUS)
BCHP_REGISTER(0x21120010, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_CONFIG)
BCHP_REGISTER(0x21120014, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_CONTROL1)
BCHP_REGISTER(0x21120018, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_CONTROL2)
BCHP_REGISTER(0x2112001c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_CONTROL3)
BCHP_REGISTER(0x21120020, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_DIVIDERS)
BCHP_REGISTER(0x21120024, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_FRAC_DIVIDER)
BCHP_REGISTER(0x21120028, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_SS_CONTROL)
BCHP_REGISTER(0x2112002c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PLL_SS_LIMIT)
BCHP_REGISTER(0x21120030, 32,  RW, DDR34_PHY_CONTROL_REGS_0, RESET_CONTROL)
BCHP_REGISTER(0x21120034, 32,  RW, DDR34_PHY_CONTROL_REGS_0, IDLE_PAD_CONTROL)
BCHP_REGISTER(0x21120038, 32,  RW, DDR34_PHY_CONTROL_REGS_0, IDLE_PAD_ENABLE0)
BCHP_REGISTER(0x2112003c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, IDLE_PAD_ENABLE1)
BCHP_REGISTER(0x21120040, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRIVE_PAD_CTL)
BCHP_REGISTER(0x21120044, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRIVE_PAD_CTL_2T)
BCHP_REGISTER(0x21120048, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRIVE_PAD_CTL_ALERT)
BCHP_REGISTER(0x2112004c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, STATIC_PAD_CTL)
BCHP_REGISTER(0x21120050, 32,  RW, DDR34_PHY_CONTROL_REGS_0, STATIC_PAD_CTL_2T)
BCHP_REGISTER(0x21120054, 32,  RW, DDR34_PHY_CONTROL_REGS_0, STATIC_PAD_CTL_ALERT)
BCHP_REGISTER(0x21120058, 32,  RW, DDR34_PHY_CONTROL_REGS_0, RX_TRIM)
BCHP_REGISTER(0x2112005c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRAM_CONFIG)
BCHP_REGISTER(0x21120060, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRAM_TIMING2)
BCHP_REGISTER(0x21120064, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DRAM_TIMING3)
BCHP_REGISTER(0x21120068, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CALIBRATE)
BCHP_REGISTER(0x2112006c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, VDL_CALIB_STATUS1)
BCHP_REGISTER(0x21120070, 32,  RO, DDR34_PHY_CONTROL_REGS_0, VDL_CALIB_STATUS2)
BCHP_REGISTER(0x21120074, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_CONTROL)
BCHP_REGISTER(0x21120078, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_REF)
BCHP_REGISTER(0x2112007c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_STATUS)
BCHP_REGISTER(0x21120080, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_OVERRIDE)
BCHP_REGISTER(0x21120084, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_OUT_CONTROL)
BCHP_REGISTER(0x21120088, 32,  RO, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_OUT_STATUS)
BCHP_REGISTER(0x2112008c, 32,  WO, DDR34_PHY_CONTROL_REGS_0, VDL_MONITOR_OUT_STATUS_CLEAR)
BCHP_REGISTER(0x21120090, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD00)
BCHP_REGISTER(0x21120094, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD01)
BCHP_REGISTER(0x21120098, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD02)
BCHP_REGISTER(0x2112009c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD03)
BCHP_REGISTER(0x211200a0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD04)
BCHP_REGISTER(0x211200a4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD05)
BCHP_REGISTER(0x211200a8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD06)
BCHP_REGISTER(0x211200ac, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD07)
BCHP_REGISTER(0x211200b0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD08)
BCHP_REGISTER(0x211200b4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD09)
BCHP_REGISTER(0x211200b8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD10)
BCHP_REGISTER(0x211200bc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD11)
BCHP_REGISTER(0x211200c0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD12)
BCHP_REGISTER(0x211200c4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD13)
BCHP_REGISTER(0x211200c8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD14)
BCHP_REGISTER(0x211200cc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AD15)
BCHP_REGISTER(0x211200d0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_BA0)
BCHP_REGISTER(0x211200d4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_BA1)
BCHP_REGISTER(0x211200d8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_BA2)
BCHP_REGISTER(0x211200dc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AUX0)
BCHP_REGISTER(0x211200e0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AUX1)
BCHP_REGISTER(0x211200e4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_AUX2)
BCHP_REGISTER(0x211200e8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_CS0)
BCHP_REGISTER(0x211200ec, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_CS1)
BCHP_REGISTER(0x211200f0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_PAR)
BCHP_REGISTER(0x211200f4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_ALERT_N)
BCHP_REGISTER(0x211200f8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_RAS_N)
BCHP_REGISTER(0x211200fc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_CAS_N)
BCHP_REGISTER(0x21120100, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_CKE)
BCHP_REGISTER(0x21120104, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_RST_N)
BCHP_REGISTER(0x21120108, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_ODT)
BCHP_REGISTER(0x2112010c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_WE_N)
BCHP_REGISTER(0x21120110, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CONTROL_DDR_CK)
BCHP_REGISTER(0x21120114, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_CLK_CONTROL)
BCHP_REGISTER(0x21120118, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VDL_LDE_CONTROL)
BCHP_REGISTER(0x2112011c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, UPDATE_VDL)
BCHP_REGISTER(0x21120120, 32,  RW, DDR34_PHY_CONTROL_REGS_0, UPDATE_VDL_SNOOP1)
BCHP_REGISTER(0x21120124, 32,  RW, DDR34_PHY_CONTROL_REGS_0, UPDATE_VDL_SNOOP2)
BCHP_REGISTER(0x21120128, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_REG1)
BCHP_REGISTER(0x2112012c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_AUX_REG1)
BCHP_REGISTER(0x21120130, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_REG2)
BCHP_REGISTER(0x21120134, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_AUX_REG2)
BCHP_REGISTER(0x21120138, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_REG3)
BCHP_REGISTER(0x2112013c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_AUX_REG3)
BCHP_REGISTER(0x21120140, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_REG4)
BCHP_REGISTER(0x21120144, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMMAND_AUX_REG4)
BCHP_REGISTER(0x21120148, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG0)
BCHP_REGISTER(0x2112014c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG1)
BCHP_REGISTER(0x21120150, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG2)
BCHP_REGISTER(0x21120154, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG3)
BCHP_REGISTER(0x21120158, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG4)
BCHP_REGISTER(0x2112015c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG5)
BCHP_REGISTER(0x21120160, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG6)
BCHP_REGISTER(0x21120164, 32,  RO, DDR34_PHY_CONTROL_REGS_0, MODE_REG7)
BCHP_REGISTER(0x21120168, 32,  WO, DDR34_PHY_CONTROL_REGS_0, ALERT_CLEAR)
BCHP_REGISTER(0x2112016c, 32,  RO, DDR34_PHY_CONTROL_REGS_0, ALERT_STATUS)
BCHP_REGISTER(0x21120170, 32,  RW, DDR34_PHY_CONTROL_REGS_0, ALERT_DFI)
BCHP_REGISTER(0x21120174, 32,  RW, DDR34_PHY_CONTROL_REGS_0, WRITE_LEVELING_CONTROL)
BCHP_REGISTER(0x21120178, 32,  RO, DDR34_PHY_CONTROL_REGS_0, WRITE_LEVELING_STATUS)
BCHP_REGISTER(0x2112017c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, READ_ENABLE_CONTROL)
BCHP_REGISTER(0x21120180, 32,  RO, DDR34_PHY_CONTROL_REGS_0, READ_ENABLE_STATUS)
BCHP_REGISTER(0x21120184, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VIRTUAL_VTT_CONTROL)
BCHP_REGISTER(0x21120188, 32,  RO, DDR34_PHY_CONTROL_REGS_0, VIRTUAL_VTT_STATUS)
BCHP_REGISTER(0x2112018c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VIRTUAL_VTT_CONNECTIONS)
BCHP_REGISTER(0x21120190, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VIRTUAL_VTT_OVERRIDE)
BCHP_REGISTER(0x21120194, 32,  RW, DDR34_PHY_CONTROL_REGS_0, VREF_DAC_CONTROL)
BCHP_REGISTER(0x21120198, 32,  RW, DDR34_PHY_CONTROL_REGS_0, STANDBY_CONTROL)
BCHP_REGISTER(0x2112019c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DEBUG_FREEZE_ENABLE)
BCHP_REGISTER(0x211201a0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DEBUG_MUX_CONTROL)
BCHP_REGISTER(0x211201a4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, DFI_CNTRL)
BCHP_REGISTER(0x211201a8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, WRITE_ODT_CNTRL)
BCHP_REGISTER(0x211201ac, 32,  RW, DDR34_PHY_CONTROL_REGS_0, PAR_CNTRL)
BCHP_REGISTER(0x211201b0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, ZQ_CAL)
BCHP_REGISTER(0x211201b4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, ZQ_CAL2)
BCHP_REGISTER(0x211201b8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, COMR_CAL)
BCHP_REGISTER(0x211201bc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, RO_PROC_MON_CTL)
BCHP_REGISTER(0x211201c0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, RO_PROC_MON_STATUS)
BCHP_REGISTER(0x211201c4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, CK_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211201c8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_ENABLE)
BCHP_REGISTER(0x211201cc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK0)
BCHP_REGISTER(0x211201d0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK1)
BCHP_REGISTER(0x211201d4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK2)
BCHP_REGISTER(0x211201d8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK3)
BCHP_REGISTER(0x211201dc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK4)
BCHP_REGISTER(0x211201e0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK5)
BCHP_REGISTER(0x211201e4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK6)
BCHP_REGISTER(0x211201e8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK7)
BCHP_REGISTER(0x211201ec, 32,  RW, DDR34_PHY_CONTROL_REGS_0, BYTE_LANE_ALIGN_MASK8)
BCHP_REGISTER(0x211201f0, 32,  RW, DDR34_PHY_CONTROL_REGS_0, CLOCK_IDLE)
BCHP_REGISTER(0x211201f4, 32,  RW, DDR34_PHY_CONTROL_REGS_0, AC_CYC_DLY1)
BCHP_REGISTER(0x211201f8, 32,  RW, DDR34_PHY_CONTROL_REGS_0, AC_CYC_DLY2)
BCHP_REGISTER(0x211201fc, 32,  RW, DDR34_PHY_CONTROL_REGS_0, AC_CYC_DLY3)
BCHP_REGISTER(0x21120200, 32,  RW, DDR34_PHY_CONTROL_REGS_0, CA_BIT_CELL_DDR_CLK_CONTROL)
BCHP_REGISTER(0x21120204, 32,  RW, DDR34_PHY_CONTROL_REGS_0, AC_DEFAULT)
BCHP_REGISTER(0x21120208, 32,  RO, DDR34_PHY_CONTROL_REGS_0, AC_READBACK)
BCHP_REGISTER(0x2112020c, 32,  RW, DDR34_PHY_CONTROL_REGS_0, AC_SPARE_REG)
BCHP_REGISTER(0x21120400, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQS)
BCHP_REGISTER(0x21120404, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ0)
BCHP_REGISTER(0x21120408, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ1)
BCHP_REGISTER(0x2112040c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ2)
BCHP_REGISTER(0x21120410, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ3)
BCHP_REGISTER(0x21120414, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ4)
BCHP_REGISTER(0x21120418, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ5)
BCHP_REGISTER(0x2112041c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ6)
BCHP_REGISTER(0x21120420, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DQ7)
BCHP_REGISTER(0x21120424, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_WR_DM)
BCHP_REGISTER(0x21120428, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQSP)
BCHP_REGISTER(0x2112042c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQSN)
BCHP_REGISTER(0x21120430, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ0P)
BCHP_REGISTER(0x21120434, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ0N)
BCHP_REGISTER(0x21120438, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ1P)
BCHP_REGISTER(0x2112043c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ1N)
BCHP_REGISTER(0x21120440, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ2P)
BCHP_REGISTER(0x21120444, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ2N)
BCHP_REGISTER(0x21120448, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ3P)
BCHP_REGISTER(0x2112044c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ3N)
BCHP_REGISTER(0x21120450, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ4P)
BCHP_REGISTER(0x21120454, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ4N)
BCHP_REGISTER(0x21120458, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ5P)
BCHP_REGISTER(0x2112045c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ5N)
BCHP_REGISTER(0x21120460, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ6P)
BCHP_REGISTER(0x21120464, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ6N)
BCHP_REGISTER(0x21120468, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ7P)
BCHP_REGISTER(0x2112046c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DQ7N)
BCHP_REGISTER(0x21120470, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DMP)
BCHP_REGISTER(0x21120474, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_DMN)
BCHP_REGISTER(0x21120478, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_EN_CS0)
BCHP_REGISTER(0x2112047c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CONTROL_RD_EN_CS1)
BCHP_REGISTER(0x21120480, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_CLK_CONTROL)
BCHP_REGISTER(0x21120484, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, VDL_LDE_CONTROL)
BCHP_REGISTER(0x21120488, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, RD_EN_DLY_CYC)
BCHP_REGISTER(0x2112048c, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, WR_CHAN_DLY_CYC)
BCHP_REGISTER(0x21120490, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, READ_CONTROL)
BCHP_REGISTER(0x21120494, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, READ_FIFO_ADDR)
BCHP_REGISTER(0x21120498, 32,  RO, DDR34_PHY_BYTE_LANE_0_0, READ_FIFO_DATA)
BCHP_REGISTER(0x2112049c, 32,  RO, DDR34_PHY_BYTE_LANE_0_0, READ_FIFO_DM_DBI)
BCHP_REGISTER(0x211204a0, 32,  RO, DDR34_PHY_BYTE_LANE_0_0, READ_FIFO_STATUS)
BCHP_REGISTER(0x211204a4, 32,  WO, DDR34_PHY_BYTE_LANE_0_0, READ_FIFO_CLEAR)
BCHP_REGISTER(0x211204a8, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DYNAMIC_CLOCK_CONTROL)
BCHP_REGISTER(0x211204ac, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, IDLE_PAD_CONTROL)
BCHP_REGISTER(0x211204b0, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DRIVE_PAD_CTL)
BCHP_REGISTER(0x211204b4, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DQSP_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211204b8, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DQSN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211204bc, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, RD_EN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211204c0, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, STATIC_PAD_CTL)
BCHP_REGISTER(0x211204c4, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DQ_RX_TRIM)
BCHP_REGISTER(0x211204c8, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, MISC_RX_TRIM)
BCHP_REGISTER(0x211204cc, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, DQS_RX_TRIM)
BCHP_REGISTER(0x211204d0, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, WR_PREAMBLE_MODE)
BCHP_REGISTER(0x211204d4, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, ODT_CONTROL)
BCHP_REGISTER(0x211204d8, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, LDO_CONFIG)
BCHP_REGISTER(0x211204dc, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, CLOCK_ENABLE)
BCHP_REGISTER(0x211204e0, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, CLOCK_IDLE)
BCHP_REGISTER(0x211204e4, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, READ_CHAN_FIFO_CLEAR)
BCHP_REGISTER(0x211204e8, 32,  RW, DDR34_PHY_BYTE_LANE_0_0, BL_SPARE_REG)
BCHP_REGISTER(0x21120600, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQS)
BCHP_REGISTER(0x21120604, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ0)
BCHP_REGISTER(0x21120608, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ1)
BCHP_REGISTER(0x2112060c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ2)
BCHP_REGISTER(0x21120610, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ3)
BCHP_REGISTER(0x21120614, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ4)
BCHP_REGISTER(0x21120618, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ5)
BCHP_REGISTER(0x2112061c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ6)
BCHP_REGISTER(0x21120620, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DQ7)
BCHP_REGISTER(0x21120624, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_WR_DM)
BCHP_REGISTER(0x21120628, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQSP)
BCHP_REGISTER(0x2112062c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQSN)
BCHP_REGISTER(0x21120630, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ0P)
BCHP_REGISTER(0x21120634, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ0N)
BCHP_REGISTER(0x21120638, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ1P)
BCHP_REGISTER(0x2112063c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ1N)
BCHP_REGISTER(0x21120640, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ2P)
BCHP_REGISTER(0x21120644, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ2N)
BCHP_REGISTER(0x21120648, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ3P)
BCHP_REGISTER(0x2112064c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ3N)
BCHP_REGISTER(0x21120650, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ4P)
BCHP_REGISTER(0x21120654, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ4N)
BCHP_REGISTER(0x21120658, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ5P)
BCHP_REGISTER(0x2112065c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ5N)
BCHP_REGISTER(0x21120660, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ6P)
BCHP_REGISTER(0x21120664, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ6N)
BCHP_REGISTER(0x21120668, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ7P)
BCHP_REGISTER(0x2112066c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DQ7N)
BCHP_REGISTER(0x21120670, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DMP)
BCHP_REGISTER(0x21120674, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_DMN)
BCHP_REGISTER(0x21120678, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_EN_CS0)
BCHP_REGISTER(0x2112067c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CONTROL_RD_EN_CS1)
BCHP_REGISTER(0x21120680, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_CLK_CONTROL)
BCHP_REGISTER(0x21120684, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, VDL_LDE_CONTROL)
BCHP_REGISTER(0x21120688, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, RD_EN_DLY_CYC)
BCHP_REGISTER(0x2112068c, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, WR_CHAN_DLY_CYC)
BCHP_REGISTER(0x21120690, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, READ_CONTROL)
BCHP_REGISTER(0x21120694, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, READ_FIFO_ADDR)
BCHP_REGISTER(0x21120698, 32,  RO, DDR34_PHY_BYTE_LANE_1_0, READ_FIFO_DATA)
BCHP_REGISTER(0x2112069c, 32,  RO, DDR34_PHY_BYTE_LANE_1_0, READ_FIFO_DM_DBI)
BCHP_REGISTER(0x211206a0, 32,  RO, DDR34_PHY_BYTE_LANE_1_0, READ_FIFO_STATUS)
BCHP_REGISTER(0x211206a4, 32,  WO, DDR34_PHY_BYTE_LANE_1_0, READ_FIFO_CLEAR)
BCHP_REGISTER(0x211206a8, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DYNAMIC_CLOCK_CONTROL)
BCHP_REGISTER(0x211206ac, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, IDLE_PAD_CONTROL)
BCHP_REGISTER(0x211206b0, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DRIVE_PAD_CTL)
BCHP_REGISTER(0x211206b4, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DQSP_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211206b8, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DQSN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211206bc, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, RD_EN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211206c0, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, STATIC_PAD_CTL)
BCHP_REGISTER(0x211206c4, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DQ_RX_TRIM)
BCHP_REGISTER(0x211206c8, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, MISC_RX_TRIM)
BCHP_REGISTER(0x211206cc, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, DQS_RX_TRIM)
BCHP_REGISTER(0x211206d0, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, WR_PREAMBLE_MODE)
BCHP_REGISTER(0x211206d4, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, ODT_CONTROL)
BCHP_REGISTER(0x211206d8, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, LDO_CONFIG)
BCHP_REGISTER(0x211206dc, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, CLOCK_ENABLE)
BCHP_REGISTER(0x211206e0, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, CLOCK_IDLE)
BCHP_REGISTER(0x211206e4, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, READ_CHAN_FIFO_CLEAR)
BCHP_REGISTER(0x211206e8, 32,  RW, DDR34_PHY_BYTE_LANE_1_0, BL_SPARE_REG)
BCHP_REGISTER(0x21120800, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQS)
BCHP_REGISTER(0x21120804, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ0)
BCHP_REGISTER(0x21120808, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ1)
BCHP_REGISTER(0x2112080c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ2)
BCHP_REGISTER(0x21120810, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ3)
BCHP_REGISTER(0x21120814, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ4)
BCHP_REGISTER(0x21120818, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ5)
BCHP_REGISTER(0x2112081c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ6)
BCHP_REGISTER(0x21120820, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DQ7)
BCHP_REGISTER(0x21120824, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_WR_DM)
BCHP_REGISTER(0x21120828, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQSP)
BCHP_REGISTER(0x2112082c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQSN)
BCHP_REGISTER(0x21120830, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ0P)
BCHP_REGISTER(0x21120834, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ0N)
BCHP_REGISTER(0x21120838, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ1P)
BCHP_REGISTER(0x2112083c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ1N)
BCHP_REGISTER(0x21120840, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ2P)
BCHP_REGISTER(0x21120844, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ2N)
BCHP_REGISTER(0x21120848, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ3P)
BCHP_REGISTER(0x2112084c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ3N)
BCHP_REGISTER(0x21120850, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ4P)
BCHP_REGISTER(0x21120854, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ4N)
BCHP_REGISTER(0x21120858, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ5P)
BCHP_REGISTER(0x2112085c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ5N)
BCHP_REGISTER(0x21120860, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ6P)
BCHP_REGISTER(0x21120864, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ6N)
BCHP_REGISTER(0x21120868, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ7P)
BCHP_REGISTER(0x2112086c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DQ7N)
BCHP_REGISTER(0x21120870, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DMP)
BCHP_REGISTER(0x21120874, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_DMN)
BCHP_REGISTER(0x21120878, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_EN_CS0)
BCHP_REGISTER(0x2112087c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CONTROL_RD_EN_CS1)
BCHP_REGISTER(0x21120880, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_CLK_CONTROL)
BCHP_REGISTER(0x21120884, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, VDL_LDE_CONTROL)
BCHP_REGISTER(0x21120888, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, RD_EN_DLY_CYC)
BCHP_REGISTER(0x2112088c, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, WR_CHAN_DLY_CYC)
BCHP_REGISTER(0x21120890, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, READ_CONTROL)
BCHP_REGISTER(0x21120894, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, READ_FIFO_ADDR)
BCHP_REGISTER(0x21120898, 32,  RO, DDR34_PHY_BYTE_LANE_2_0, READ_FIFO_DATA)
BCHP_REGISTER(0x2112089c, 32,  RO, DDR34_PHY_BYTE_LANE_2_0, READ_FIFO_DM_DBI)
BCHP_REGISTER(0x211208a0, 32,  RO, DDR34_PHY_BYTE_LANE_2_0, READ_FIFO_STATUS)
BCHP_REGISTER(0x211208a4, 32,  WO, DDR34_PHY_BYTE_LANE_2_0, READ_FIFO_CLEAR)
BCHP_REGISTER(0x211208a8, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DYNAMIC_CLOCK_CONTROL)
BCHP_REGISTER(0x211208ac, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, IDLE_PAD_CONTROL)
BCHP_REGISTER(0x211208b0, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DRIVE_PAD_CTL)
BCHP_REGISTER(0x211208b4, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DQSP_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211208b8, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DQSN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211208bc, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, RD_EN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x211208c0, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, STATIC_PAD_CTL)
BCHP_REGISTER(0x211208c4, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DQ_RX_TRIM)
BCHP_REGISTER(0x211208c8, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, MISC_RX_TRIM)
BCHP_REGISTER(0x211208cc, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, DQS_RX_TRIM)
BCHP_REGISTER(0x211208d0, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, WR_PREAMBLE_MODE)
BCHP_REGISTER(0x211208d4, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, ODT_CONTROL)
BCHP_REGISTER(0x211208d8, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, LDO_CONFIG)
BCHP_REGISTER(0x211208dc, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, CLOCK_ENABLE)
BCHP_REGISTER(0x211208e0, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, CLOCK_IDLE)
BCHP_REGISTER(0x211208e4, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, READ_CHAN_FIFO_CLEAR)
BCHP_REGISTER(0x211208e8, 32,  RW, DDR34_PHY_BYTE_LANE_2_0, BL_SPARE_REG)
BCHP_REGISTER(0x21120a00, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQS)
BCHP_REGISTER(0x21120a04, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ0)
BCHP_REGISTER(0x21120a08, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ1)
BCHP_REGISTER(0x21120a0c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ2)
BCHP_REGISTER(0x21120a10, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ3)
BCHP_REGISTER(0x21120a14, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ4)
BCHP_REGISTER(0x21120a18, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ5)
BCHP_REGISTER(0x21120a1c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ6)
BCHP_REGISTER(0x21120a20, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DQ7)
BCHP_REGISTER(0x21120a24, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_WR_DM)
BCHP_REGISTER(0x21120a28, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQSP)
BCHP_REGISTER(0x21120a2c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQSN)
BCHP_REGISTER(0x21120a30, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ0P)
BCHP_REGISTER(0x21120a34, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ0N)
BCHP_REGISTER(0x21120a38, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ1P)
BCHP_REGISTER(0x21120a3c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ1N)
BCHP_REGISTER(0x21120a40, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ2P)
BCHP_REGISTER(0x21120a44, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ2N)
BCHP_REGISTER(0x21120a48, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ3P)
BCHP_REGISTER(0x21120a4c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ3N)
BCHP_REGISTER(0x21120a50, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ4P)
BCHP_REGISTER(0x21120a54, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ4N)
BCHP_REGISTER(0x21120a58, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ5P)
BCHP_REGISTER(0x21120a5c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ5N)
BCHP_REGISTER(0x21120a60, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ6P)
BCHP_REGISTER(0x21120a64, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ6N)
BCHP_REGISTER(0x21120a68, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ7P)
BCHP_REGISTER(0x21120a6c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DQ7N)
BCHP_REGISTER(0x21120a70, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DMP)
BCHP_REGISTER(0x21120a74, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_DMN)
BCHP_REGISTER(0x21120a78, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_EN_CS0)
BCHP_REGISTER(0x21120a7c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CONTROL_RD_EN_CS1)
BCHP_REGISTER(0x21120a80, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_CLK_CONTROL)
BCHP_REGISTER(0x21120a84, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, VDL_LDE_CONTROL)
BCHP_REGISTER(0x21120a88, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, RD_EN_DLY_CYC)
BCHP_REGISTER(0x21120a8c, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, WR_CHAN_DLY_CYC)
BCHP_REGISTER(0x21120a90, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, READ_CONTROL)
BCHP_REGISTER(0x21120a94, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, READ_FIFO_ADDR)
BCHP_REGISTER(0x21120a98, 32,  RO, DDR34_PHY_BYTE_LANE_3_0, READ_FIFO_DATA)
BCHP_REGISTER(0x21120a9c, 32,  RO, DDR34_PHY_BYTE_LANE_3_0, READ_FIFO_DM_DBI)
BCHP_REGISTER(0x21120aa0, 32,  RO, DDR34_PHY_BYTE_LANE_3_0, READ_FIFO_STATUS)
BCHP_REGISTER(0x21120aa4, 32,  WO, DDR34_PHY_BYTE_LANE_3_0, READ_FIFO_CLEAR)
BCHP_REGISTER(0x21120aa8, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DYNAMIC_CLOCK_CONTROL)
BCHP_REGISTER(0x21120aac, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, IDLE_PAD_CONTROL)
BCHP_REGISTER(0x21120ab0, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DRIVE_PAD_CTL)
BCHP_REGISTER(0x21120ab4, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DQSP_DRIVE_PAD_CTL)
BCHP_REGISTER(0x21120ab8, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DQSN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x21120abc, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, RD_EN_DRIVE_PAD_CTL)
BCHP_REGISTER(0x21120ac0, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, STATIC_PAD_CTL)
BCHP_REGISTER(0x21120ac4, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DQ_RX_TRIM)
BCHP_REGISTER(0x21120ac8, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, MISC_RX_TRIM)
BCHP_REGISTER(0x21120acc, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, DQS_RX_TRIM)
BCHP_REGISTER(0x21120ad0, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, WR_PREAMBLE_MODE)
BCHP_REGISTER(0x21120ad4, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, ODT_CONTROL)
BCHP_REGISTER(0x21120ad8, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, LDO_CONFIG)
BCHP_REGISTER(0x21120adc, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, CLOCK_ENABLE)
BCHP_REGISTER(0x21120ae0, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, CLOCK_IDLE)
BCHP_REGISTER(0x21120ae4, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, READ_CHAN_FIFO_CLEAR)
BCHP_REGISTER(0x21120ae8, 32,  RW, DDR34_PHY_BYTE_LANE_3_0, BL_SPARE_REG)
BCHP_REGISTER(0x21122000, 32,  RW, DDR34_PHY_PHYBIST_0, CONTROL)
BCHP_REGISTER(0x21122004, 32,  RW, DDR34_PHY_PHYBIST_0, SEED)
BCHP_REGISTER(0x21122008, 32,  RW, DDR34_PHY_PHYBIST_0, CA_MASK)
BCHP_REGISTER(0x2112200c, 32,  RW, DDR34_PHY_PHYBIST_0, DQ_MASK0)
BCHP_REGISTER(0x21122010, 32,  RW, DDR34_PHY_PHYBIST_0, DQ_MASK1)
BCHP_REGISTER(0x21122014, 32,  RW, DDR34_PHY_PHYBIST_0, DQ_MASK2)
BCHP_REGISTER(0x21122018, 32,  RW, DDR34_PHY_PHYBIST_0, DQ_MASK3)
BCHP_REGISTER(0x21122030, 32,  RO, DDR34_PHY_PHYBIST_0, STATUS)
BCHP_REGISTER(0x21122034, 32,  RO, DDR34_PHY_PHYBIST_0, CTL_STATUS)
BCHP_REGISTER(0x21122038, 32,  RO, DDR34_PHY_PHYBIST_0, BL0_STATUS)
BCHP_REGISTER(0x2112203c, 32,  RO, DDR34_PHY_PHYBIST_0, BL1_STATUS)
BCHP_REGISTER(0x21122040, 32,  RO, DDR34_PHY_PHYBIST_0, BL2_STATUS)
BCHP_REGISTER(0x21122044, 32,  RO, DDR34_PHY_PHYBIST_0, BL3_STATUS)
BCHP_REGISTER(0x21130000, 32,  RO, DPFE_CONTROLLER_0, CORE_REV_ID)
BCHP_REGISTER(0x21130004, 32, CFG, DPFE_CONTROLLER_0, CONFIG)
BCHP_REGISTER(0x21130008, 32,  RO, DPFE_CONTROLLER_0, CORE_OPTIONS)
BCHP_REGISTER(0x2113000c, 32,  RW, DPFE_CONTROLLER_0, SPARE_1)
BCHP_REGISTER(0x21130010, 32,  RO, DPFE_CONTROLLER_0, SPARE_2)
BCHP_REGISTER(0x21130014, 32, CFG, DPFE_CONTROLLER_0, ARB_REQ_MASK)
BCHP_REGISTER(0x21130018, 32, CFG, DPFE_CONTROLLER_0, REFRESH_CONTROL)
BCHP_REGISTER(0x2113001c, 32, CFG, DPFE_CONTROLLER_0, REFRESH_ADDR)
BCHP_REGISTER(0x21130020, 32, CFG, DPFE_CONTROLLER_0, REFRESH_PERIOD)
BCHP_REGISTER(0x21130024, 32,  RW, DPFE_CONTROLLER_0, REFRESH_STATUS)
BCHP_REGISTER(0x21130028, 32, CFG, DPFE_CONTROLLER_0, ZQCS_CONTROL)
BCHP_REGISTER(0x2113002c, 32, CFG, DPFE_CONTROLLER_0, ZQCS_ADDR)
BCHP_REGISTER(0x21130030, 32, CFG, DPFE_CONTROLLER_0, ZQCS_PERIOD)
BCHP_REGISTER(0x21130034, 32,  RW, DPFE_CONTROLLER_0, ZQCS_STATUS)
BCHP_REGISTER(0x21130038, 32, CFG, DPFE_CONTROLLER_0, SEQ_TIMING_0)
BCHP_REGISTER(0x2113003c, 32, CFG, DPFE_CONTROLLER_0, SEQ_TIMING_1)
BCHP_REGISTER(0x21130040, 32, CFG, DPFE_CONTROLLER_0, SEQ_TIMING_2)
BCHP_REGISTER(0x21130044, 32, CFG, DPFE_CONTROLLER_0, SEQ_TIMING_3)
BCHP_REGISTER(0x21130048, 32, CFG, DPFE_CONTROLLER_0, DFI_PHASE_ENABLE)
BCHP_REGISTER(0x2113004c, 32, CFG, DPFE_CONTROLLER_0, DFI_IDLE_CMD)
BCHP_REGISTER(0x21130050, 32, CFG, DPFE_CONTROLLER_0, DFI_CONTROL)
BCHP_REGISTER(0x21130054, 32,  RW, DPFE_CONTROLLER_0, DFI_STATUS)
BCHP_REGISTER(0x21130058, 32, CFG, DPFE_CONTROLLER_0, CMD_INVERT_CONTROL)
BCHP_REGISTER(0x21130400, 32,  RO, DPFE_EDIS_0_0, REV_ID)
BCHP_REGISTER(0x21130404, 32,  WO, DPFE_EDIS_0_0, CTRL_TRIG)
BCHP_REGISTER(0x21130408, 32,  RW, DPFE_EDIS_0_0, CTRL_MODE)
BCHP_REGISTER(0x2113040c, 32,  RW, DPFE_EDIS_0_0, CTRL_SIZE)
BCHP_REGISTER(0x21130410, 32,  RW, DPFE_EDIS_0_0, CTRL_ADDR_START)
BCHP_REGISTER(0x21130414, 32,  RW, DPFE_EDIS_0_0, CTRL_ADDR_START_EXT)
BCHP_REGISTER(0x21130418, 32,  RW, DPFE_EDIS_0_0, CTRL_ADDR_END)
BCHP_REGISTER(0x2113041c, 32,  RW, DPFE_EDIS_0_0, CTRL_ADDR_END_EXT)
BCHP_REGISTER(0x21130420, 32,  RW, DPFE_EDIS_0_0, CTRL_WRITE_MASKS)
BCHP_REGISTER(0x21130424, 32,  RW, DPFE_EDIS_0_0, CTRL_WRITE_MASKS_HI)
BCHP_REGISTER(0x21130428, 32,  RW, DPFE_EDIS_0_0, CTRL_WRITE_MASKS_EX)
BCHP_REGISTER(0x2113042c, 32,  RW, DPFE_EDIS_0_0, CTRL_THROTTLE)
BCHP_REGISTER(0x21130440, 32,  RO, DPFE_EDIS_0_0, STAT_MAIN)
BCHP_REGISTER(0x21130444, 32,  RO, DPFE_EDIS_0_0, STAT_WORDS_WRITTEN)
BCHP_REGISTER(0x21130448, 32,  RO, DPFE_EDIS_0_0, STAT_WORDS_READ)
BCHP_REGISTER(0x2113044c, 32,  RO, DPFE_EDIS_0_0, STAT_ERROR_COUNT)
BCHP_REGISTER(0x21130450, 32,  RO, DPFE_EDIS_0_0, STAT_ERROR_BITS)
BCHP_REGISTER(0x21130454, 32,  RO, DPFE_EDIS_0_0, STAT_ERROR_BITS_HI)
BCHP_REGISTER(0x21130458, 32,  RO, DPFE_EDIS_0_0, STAT_ERROR_BITS_EX)
BCHP_REGISTER(0x2113045c, 32,  RO, DPFE_EDIS_0_0, STAT_ADDR_LAST)
BCHP_REGISTER(0x21130460, 32,  RO, DPFE_EDIS_0_0, STAT_ADDR_LAST_EXT)
BCHP_REGISTER(0x21130464, 32,  RO, DPFE_EDIS_0_0, STAT_CLOCK_CYCLES)
BCHP_REGISTER(0x21130468, 32,  RW, DPFE_EDIS_0_0, STAT_DATA_PORT)
BCHP_REGISTER(0x2113046c, 32,  RO, DPFE_EDIS_0_0, STAT_DEBUG)
BCHP_REGISTER(0x211304c0, 32,  RW, DPFE_EDIS_0_0, GEN_LFSR_STATE_0)
BCHP_REGISTER(0x211304c4, 32,  RW, DPFE_EDIS_0_0, GEN_LFSR_STATE_1)
BCHP_REGISTER(0x211304c8, 32,  RW, DPFE_EDIS_0_0, GEN_LFSR_STATE_2)
BCHP_REGISTER(0x211304cc, 32,  RW, DPFE_EDIS_0_0, GEN_LFSR_STATE_3)
BCHP_REGISTER(0x211304d0, 32,  RW, DPFE_EDIS_0_0, GEN_CLOCK)
BCHP_REGISTER(0x211304d4, 32,  RW, DPFE_EDIS_0_0, GEN_PATTERN)
BCHP_REGISTER(0x21130500, 32,  RW, DPFE_EDIS_0_0, BYTELANE_0_CTRL_LO)
BCHP_REGISTER(0x21130504, 32,  RW, DPFE_EDIS_0_0, BYTELANE_0_CTRL_HI)
BCHP_REGISTER(0x21130508, 32,  RW, DPFE_EDIS_0_0, BYTELANE_1_CTRL_LO)
BCHP_REGISTER(0x2113050c, 32,  RW, DPFE_EDIS_0_0, BYTELANE_1_CTRL_HI)
BCHP_REGISTER(0x21130510, 32,  RW, DPFE_EDIS_0_0, BYTELANE_2_CTRL_LO)
BCHP_REGISTER(0x21130514, 32,  RW, DPFE_EDIS_0_0, BYTELANE_2_CTRL_HI)
BCHP_REGISTER(0x21130518, 32,  RW, DPFE_EDIS_0_0, BYTELANE_3_CTRL_LO)
BCHP_REGISTER(0x2113051c, 32,  RW, DPFE_EDIS_0_0, BYTELANE_3_CTRL_HI)
BCHP_REGISTER(0x21130520, 32,  RW, DPFE_EDIS_0_0, BYTELANE_4_CTRL_LO)
BCHP_REGISTER(0x21130524, 32,  RW, DPFE_EDIS_0_0, BYTELANE_4_CTRL_HI)
BCHP_REGISTER(0x21130528, 32,  RW, DPFE_EDIS_0_0, BYTELANE_5_CTRL_LO)
BCHP_REGISTER(0x2113052c, 32,  RW, DPFE_EDIS_0_0, BYTELANE_5_CTRL_HI)
BCHP_REGISTER(0x21130530, 32,  RW, DPFE_EDIS_0_0, BYTELANE_6_CTRL_LO)
BCHP_REGISTER(0x21130534, 32,  RW, DPFE_EDIS_0_0, BYTELANE_6_CTRL_HI)
BCHP_REGISTER(0x21130538, 32,  RW, DPFE_EDIS_0_0, BYTELANE_7_CTRL_LO)
BCHP_REGISTER(0x2113053c, 32,  RW, DPFE_EDIS_0_0, BYTELANE_7_CTRL_HI)
BCHP_REGISTER(0x21130540, 32,  RW, DPFE_EDIS_0_0, BYTELANE_8_CTRL_LO)
BCHP_REGISTER(0x21130544, 32,  RW, DPFE_EDIS_0_0, BYTELANE_8_CTRL_HI)
BCHP_REGISTER(0x21130580, 32,  RO, DPFE_EDIS_0_0, BYTELANE_0_STAT_LO)
BCHP_REGISTER(0x21130584, 32,  RO, DPFE_EDIS_0_0, BYTELANE_0_STAT_HI)
BCHP_REGISTER(0x21130588, 32,  RO, DPFE_EDIS_0_0, BYTELANE_1_STAT_LO)
BCHP_REGISTER(0x2113058c, 32,  RO, DPFE_EDIS_0_0, BYTELANE_1_STAT_HI)
BCHP_REGISTER(0x21130590, 32,  RO, DPFE_EDIS_0_0, BYTELANE_2_STAT_LO)
BCHP_REGISTER(0x21130594, 32,  RO, DPFE_EDIS_0_0, BYTELANE_2_STAT_HI)
BCHP_REGISTER(0x21130598, 32,  RO, DPFE_EDIS_0_0, BYTELANE_3_STAT_LO)
BCHP_REGISTER(0x2113059c, 32,  RO, DPFE_EDIS_0_0, BYTELANE_3_STAT_HI)
BCHP_REGISTER(0x211305a0, 32,  RO, DPFE_EDIS_0_0, BYTELANE_4_STAT_LO)
BCHP_REGISTER(0x211305a4, 32,  RO, DPFE_EDIS_0_0, BYTELANE_4_STAT_HI)
BCHP_REGISTER(0x211305a8, 32,  RO, DPFE_EDIS_0_0, BYTELANE_5_STAT_LO)
BCHP_REGISTER(0x211305ac, 32,  RO, DPFE_EDIS_0_0, BYTELANE_5_STAT_HI)
BCHP_REGISTER(0x211305b0, 32,  RO, DPFE_EDIS_0_0, BYTELANE_6_STAT_LO)
BCHP_REGISTER(0x211305b4, 32,  RO, DPFE_EDIS_0_0, BYTELANE_6_STAT_HI)
BCHP_REGISTER(0x211305b8, 32,  RO, DPFE_EDIS_0_0, BYTELANE_7_STAT_LO)
BCHP_REGISTER(0x211305bc, 32,  RO, DPFE_EDIS_0_0, BYTELANE_7_STAT_HI)
BCHP_REGISTER(0x211305c0, 32,  RO, DPFE_EDIS_0_0, BYTELANE_8_STAT_LO)
BCHP_REGISTER(0x211305c4, 32,  RO, DPFE_EDIS_0_0, BYTELANE_8_STAT_HI)
BCHP_REGISTER(0x21130800, 32,  RO, DPFE_EDIS_0_1, REV_ID)
BCHP_REGISTER(0x21130804, 32,  WO, DPFE_EDIS_0_1, CTRL_TRIG)
BCHP_REGISTER(0x21130808, 32,  RW, DPFE_EDIS_0_1, CTRL_MODE)
BCHP_REGISTER(0x2113080c, 32,  RW, DPFE_EDIS_0_1, CTRL_SIZE)
BCHP_REGISTER(0x21130810, 32,  RW, DPFE_EDIS_0_1, CTRL_ADDR_START)
BCHP_REGISTER(0x21130814, 32,  RW, DPFE_EDIS_0_1, CTRL_ADDR_START_EXT)
BCHP_REGISTER(0x21130818, 32,  RW, DPFE_EDIS_0_1, CTRL_ADDR_END)
BCHP_REGISTER(0x2113081c, 32,  RW, DPFE_EDIS_0_1, CTRL_ADDR_END_EXT)
BCHP_REGISTER(0x21130820, 32,  RW, DPFE_EDIS_0_1, CTRL_WRITE_MASKS)
BCHP_REGISTER(0x21130824, 32,  RW, DPFE_EDIS_0_1, CTRL_WRITE_MASKS_HI)
BCHP_REGISTER(0x21130828, 32,  RW, DPFE_EDIS_0_1, CTRL_WRITE_MASKS_EX)
BCHP_REGISTER(0x2113082c, 32,  RW, DPFE_EDIS_0_1, CTRL_THROTTLE)
BCHP_REGISTER(0x21130840, 32,  RO, DPFE_EDIS_0_1, STAT_MAIN)
BCHP_REGISTER(0x21130844, 32,  RO, DPFE_EDIS_0_1, STAT_WORDS_WRITTEN)
BCHP_REGISTER(0x21130848, 32,  RO, DPFE_EDIS_0_1, STAT_WORDS_READ)
BCHP_REGISTER(0x2113084c, 32,  RO, DPFE_EDIS_0_1, STAT_ERROR_COUNT)
BCHP_REGISTER(0x21130850, 32,  RO, DPFE_EDIS_0_1, STAT_ERROR_BITS)
BCHP_REGISTER(0x21130854, 32,  RO, DPFE_EDIS_0_1, STAT_ERROR_BITS_HI)
BCHP_REGISTER(0x21130858, 32,  RO, DPFE_EDIS_0_1, STAT_ERROR_BITS_EX)
BCHP_REGISTER(0x2113085c, 32,  RO, DPFE_EDIS_0_1, STAT_ADDR_LAST)
BCHP_REGISTER(0x21130860, 32,  RO, DPFE_EDIS_0_1, STAT_ADDR_LAST_EXT)
BCHP_REGISTER(0x21130864, 32,  RO, DPFE_EDIS_0_1, STAT_CLOCK_CYCLES)
BCHP_REGISTER(0x21130868, 32,  RW, DPFE_EDIS_0_1, STAT_DATA_PORT)
BCHP_REGISTER(0x2113086c, 32,  RO, DPFE_EDIS_0_1, STAT_DEBUG)
BCHP_REGISTER(0x211308c0, 32,  RW, DPFE_EDIS_0_1, GEN_LFSR_STATE_0)
BCHP_REGISTER(0x211308c4, 32,  RW, DPFE_EDIS_0_1, GEN_LFSR_STATE_1)
BCHP_REGISTER(0x211308c8, 32,  RW, DPFE_EDIS_0_1, GEN_LFSR_STATE_2)
BCHP_REGISTER(0x211308cc, 32,  RW, DPFE_EDIS_0_1, GEN_LFSR_STATE_3)
BCHP_REGISTER(0x211308d0, 32,  RW, DPFE_EDIS_0_1, GEN_CLOCK)
BCHP_REGISTER(0x211308d4, 32,  RW, DPFE_EDIS_0_1, GEN_PATTERN)
BCHP_REGISTER(0x21130900, 32,  RW, DPFE_EDIS_0_1, BYTELANE_0_CTRL_LO)
BCHP_REGISTER(0x21130904, 32,  RW, DPFE_EDIS_0_1, BYTELANE_0_CTRL_HI)
BCHP_REGISTER(0x21130908, 32,  RW, DPFE_EDIS_0_1, BYTELANE_1_CTRL_LO)
BCHP_REGISTER(0x2113090c, 32,  RW, DPFE_EDIS_0_1, BYTELANE_1_CTRL_HI)
BCHP_REGISTER(0x21130910, 32,  RW, DPFE_EDIS_0_1, BYTELANE_2_CTRL_LO)
BCHP_REGISTER(0x21130914, 32,  RW, DPFE_EDIS_0_1, BYTELANE_2_CTRL_HI)
BCHP_REGISTER(0x21130918, 32,  RW, DPFE_EDIS_0_1, BYTELANE_3_CTRL_LO)
BCHP_REGISTER(0x2113091c, 32,  RW, DPFE_EDIS_0_1, BYTELANE_3_CTRL_HI)
BCHP_REGISTER(0x21130920, 32,  RW, DPFE_EDIS_0_1, BYTELANE_4_CTRL_LO)
BCHP_REGISTER(0x21130924, 32,  RW, DPFE_EDIS_0_1, BYTELANE_4_CTRL_HI)
BCHP_REGISTER(0x21130928, 32,  RW, DPFE_EDIS_0_1, BYTELANE_5_CTRL_LO)
BCHP_REGISTER(0x2113092c, 32,  RW, DPFE_EDIS_0_1, BYTELANE_5_CTRL_HI)
BCHP_REGISTER(0x21130930, 32,  RW, DPFE_EDIS_0_1, BYTELANE_6_CTRL_LO)
BCHP_REGISTER(0x21130934, 32,  RW, DPFE_EDIS_0_1, BYTELANE_6_CTRL_HI)
BCHP_REGISTER(0x21130938, 32,  RW, DPFE_EDIS_0_1, BYTELANE_7_CTRL_LO)
BCHP_REGISTER(0x2113093c, 32,  RW, DPFE_EDIS_0_1, BYTELANE_7_CTRL_HI)
BCHP_REGISTER(0x21130940, 32,  RW, DPFE_EDIS_0_1, BYTELANE_8_CTRL_LO)
BCHP_REGISTER(0x21130944, 32,  RW, DPFE_EDIS_0_1, BYTELANE_8_CTRL_HI)
BCHP_REGISTER(0x21130980, 32,  RO, DPFE_EDIS_0_1, BYTELANE_0_STAT_LO)
BCHP_REGISTER(0x21130984, 32,  RO, DPFE_EDIS_0_1, BYTELANE_0_STAT_HI)
BCHP_REGISTER(0x21130988, 32,  RO, DPFE_EDIS_0_1, BYTELANE_1_STAT_LO)
BCHP_REGISTER(0x2113098c, 32,  RO, DPFE_EDIS_0_1, BYTELANE_1_STAT_HI)
BCHP_REGISTER(0x21130990, 32,  RO, DPFE_EDIS_0_1, BYTELANE_2_STAT_LO)
BCHP_REGISTER(0x21130994, 32,  RO, DPFE_EDIS_0_1, BYTELANE_2_STAT_HI)
BCHP_REGISTER(0x21130998, 32,  RO, DPFE_EDIS_0_1, BYTELANE_3_STAT_LO)
BCHP_REGISTER(0x2113099c, 32,  RO, DPFE_EDIS_0_1, BYTELANE_3_STAT_HI)
BCHP_REGISTER(0x211309a0, 32,  RO, DPFE_EDIS_0_1, BYTELANE_4_STAT_LO)
BCHP_REGISTER(0x211309a4, 32,  RO, DPFE_EDIS_0_1, BYTELANE_4_STAT_HI)
BCHP_REGISTER(0x211309a8, 32,  RO, DPFE_EDIS_0_1, BYTELANE_5_STAT_LO)
BCHP_REGISTER(0x211309ac, 32,  RO, DPFE_EDIS_0_1, BYTELANE_5_STAT_HI)
BCHP_REGISTER(0x211309b0, 32,  RO, DPFE_EDIS_0_1, BYTELANE_6_STAT_LO)
BCHP_REGISTER(0x211309b4, 32,  RO, DPFE_EDIS_0_1, BYTELANE_6_STAT_HI)
BCHP_REGISTER(0x211309b8, 32,  RO, DPFE_EDIS_0_1, BYTELANE_7_STAT_LO)
BCHP_REGISTER(0x211309bc, 32,  RO, DPFE_EDIS_0_1, BYTELANE_7_STAT_HI)
BCHP_REGISTER(0x211309c0, 32,  RO, DPFE_EDIS_0_1, BYTELANE_8_STAT_LO)
BCHP_REGISTER(0x211309c4, 32,  RO, DPFE_EDIS_0_1, BYTELANE_8_STAT_HI)
BCHP_REGISTER(0x21132000, 32,  RW, DPFE_CPU_0, RESET)
BCHP_REGISTER(0x21132010, 32, CFG, DPFE_CPU_0, HST2CPU_MBX)
BCHP_REGISTER(0x21132014, 32, CFG, DPFE_CPU_0, CPU2HST_MBX)
BCHP_REGISTER(0x21132018, 32,  RO, DPFE_CPU_0, MBX_STAT)
BCHP_REGISTER(0x21132020, 32,  RW, DPFE_CPU_0, WATCHDOG)
BCHP_REGISTER(0x21132024, 32,  RO, DPFE_CPU_0, CPU_PC)
BCHP_REGISTER(0x21133000, 32,  RW, DPFE_UART_0, DATA)
BCHP_REGISTER(0x21133004, 32,  RW, DPFE_UART_0, CTL)
BCHP_REGISTER(0x21133008, 32,  RW, DPFE_UART_0, STATUS)
BCHP_REGISTER(0x21140000, 32,  RW, MEMC_SENTINEL_0_0, SENTINEL_RANGE_START)
BCHP_REGISTER(0x2117fffc, 32,  RW, MEMC_SENTINEL_0_0, SENTINEL_RANGE_END)
BCHP_REGISTER(0x21180000, 32,  RO, MEMC_RGRB, REVISION)
BCHP_REGISTER(0x21180004, 32, CFG, MEMC_RGRB, CTRL)
BCHP_REGISTER(0x21180008, 32, CFG, MEMC_RGRB, RBUS_TIMER)
BCHP_REGISTER(0x2118000c, 32, CFG, MEMC_RGRB, PD)
BCHP_REGISTER(0x21180010, 32, CFG, MEMC_RGRB, SW_INIT_0)
BCHP_REGISTER(0x21300000, 32,  RO, V3D_CTL, IDENT0)
BCHP_REGISTER(0x21300004, 32,  RO, V3D_CTL, IDENT1)
BCHP_REGISTER(0x21300008, 32,  RO, V3D_CTL, IDENT2)
BCHP_REGISTER(0x2130000c, 32,  RO, V3D_CTL, IDENT3)
BCHP_REGISTER(0x21300010, 32,  RW, V3D_CTL, SCRATCH)
BCHP_REGISTER(0x21300020, 32,  RW, V3D_CTL, L2CACTL)
BCHP_REGISTER(0x21300024, 32,  RW, V3D_CTL, SLCACTL)
BCHP_REGISTER(0x21300030, 32,  RW, V3D_CTL, INTCTL)
BCHP_REGISTER(0x21300034, 32,  RW, V3D_CTL, INTENA)
BCHP_REGISTER(0x21300038, 32,  RW, V3D_CTL, INTDIS)
BCHP_REGISTER(0x21300040, 32,  RW, V3D_CTL, ENDSWP)
BCHP_REGISTER(0x21300100, 32,  RW, V3D_CLE, CT0CS)
BCHP_REGISTER(0x21300104, 32,  RW, V3D_CLE, CT1CS)
BCHP_REGISTER(0x21300108, 32,  RW, V3D_CLE, CT0EA)
BCHP_REGISTER(0x2130010c, 32,  RW, V3D_CLE, CT1EA)
BCHP_REGISTER(0x21300110, 32,  RW, V3D_CLE, CT0CA)
BCHP_REGISTER(0x21300114, 32,  RW, V3D_CLE, CT1CA)
BCHP_REGISTER(0x21300118, 32,  RO, V3D_CLE, CT00RA0)
BCHP_REGISTER(0x2130011c, 32,  RO, V3D_CLE, CT01RA0)
BCHP_REGISTER(0x21300120, 32,  RW, V3D_CLE, CT0LC)
BCHP_REGISTER(0x21300124, 32,  RW, V3D_CLE, CT1LC)
BCHP_REGISTER(0x21300128, 32,  RW, V3D_CLE, CT0PC)
BCHP_REGISTER(0x2130012c, 32,  RW, V3D_CLE, CT1PC)
BCHP_REGISTER(0x21300130, 32,  RW, V3D_CLE, PCS)
BCHP_REGISTER(0x21300134, 32,  RW, V3D_CLE, BFC)
BCHP_REGISTER(0x21300138, 32,  RW, V3D_CLE, RFC)
BCHP_REGISTER(0x21300300, 32,  RO, V3D_PTB, BPCA)
BCHP_REGISTER(0x21300304, 32,  RO, V3D_PTB, BPCS)
BCHP_REGISTER(0x21300308, 32,  RW, V3D_PTB, BPOA)
BCHP_REGISTER(0x2130030c, 32,  RW, V3D_PTB, BPOS)
BCHP_REGISTER(0x21300310, 32,  RW, V3D_PTB, BXCF)
BCHP_REGISTER(0x21300410, 32,  RW, V3D_QPS, SQRSV0)
BCHP_REGISTER(0x21300414, 32,  RW, V3D_QPS, SQRSV1)
BCHP_REGISTER(0x21300418, 32,  RW, V3D_QPS, SQCNTL)
BCHP_REGISTER(0x2130041c, 32,  RW, V3D_QPS, SQCSTAT)
BCHP_REGISTER(0x21300430, 32,  WO, V3D_QPS, SRQPC)
BCHP_REGISTER(0x21300434, 32,  RW, V3D_QPS, SRQUA)
BCHP_REGISTER(0x21300438, 32,  RW, V3D_QPS, SRQUL)
BCHP_REGISTER(0x2130043c, 32,  RW, V3D_QPS, SRQCS)
BCHP_REGISTER(0x21300500, 32,  RW, V3D_VPM, VPACNTL)
BCHP_REGISTER(0x21300504, 32,  RW, V3D_VPM, VPMBASE)
BCHP_REGISTER(0x21300670, 32,  WO, V3D_PCTR, PCTRC)
BCHP_REGISTER(0x21300674, 32,  RW, V3D_PCTR, PCTRE)
BCHP_REGISTER(0x21300680, 32,  RO, V3D_PCTR, PCTR0)
BCHP_REGISTER(0x21300684, 32,  RW, V3D_PCTR, PCTRS0)
BCHP_REGISTER(0x21300688, 32,  RO, V3D_PCTR, PCTR1)
BCHP_REGISTER(0x2130068c, 32,  RW, V3D_PCTR, PCTRS1)
BCHP_REGISTER(0x21300690, 32,  RO, V3D_PCTR, PCTR2)
BCHP_REGISTER(0x21300694, 32,  RW, V3D_PCTR, PCTRS2)
BCHP_REGISTER(0x21300698, 32,  RO, V3D_PCTR, PCTR3)
BCHP_REGISTER(0x2130069c, 32,  RW, V3D_PCTR, PCTRS3)
BCHP_REGISTER(0x213006a0, 32,  RO, V3D_PCTR, PCTR4)
BCHP_REGISTER(0x213006a4, 32,  RW, V3D_PCTR, PCTRS4)
BCHP_REGISTER(0x213006a8, 32,  RO, V3D_PCTR, PCTR5)
BCHP_REGISTER(0x213006ac, 32,  RW, V3D_PCTR, PCTRS5)
BCHP_REGISTER(0x213006b0, 32,  RO, V3D_PCTR, PCTR6)
BCHP_REGISTER(0x213006b4, 32,  RW, V3D_PCTR, PCTRS6)
BCHP_REGISTER(0x213006b8, 32,  RO, V3D_PCTR, PCTR7)
BCHP_REGISTER(0x213006bc, 32,  RW, V3D_PCTR, PCTRS7)
BCHP_REGISTER(0x213006c0, 32,  RO, V3D_PCTR, PCTR8)
BCHP_REGISTER(0x213006c4, 32,  RW, V3D_PCTR, PCTRS8)
BCHP_REGISTER(0x213006c8, 32,  RO, V3D_PCTR, PCTR9)
BCHP_REGISTER(0x213006cc, 32,  RW, V3D_PCTR, PCTRS9)
BCHP_REGISTER(0x213006d0, 32,  RO, V3D_PCTR, PCTR10)
BCHP_REGISTER(0x213006d4, 32,  RW, V3D_PCTR, PCTRS10)
BCHP_REGISTER(0x213006d8, 32,  RO, V3D_PCTR, PCTR11)
BCHP_REGISTER(0x213006dc, 32,  RW, V3D_PCTR, PCTRS11)
BCHP_REGISTER(0x213006e0, 32,  RO, V3D_PCTR, PCTR12)
BCHP_REGISTER(0x213006e4, 32,  RW, V3D_PCTR, PCTRS12)
BCHP_REGISTER(0x213006e8, 32,  RO, V3D_PCTR, PCTR13)
BCHP_REGISTER(0x213006ec, 32,  RW, V3D_PCTR, PCTRS13)
BCHP_REGISTER(0x213006f0, 32,  RO, V3D_PCTR, PCTR14)
BCHP_REGISTER(0x213006f4, 32,  RW, V3D_PCTR, PCTRS14)
BCHP_REGISTER(0x213006f8, 32,  RO, V3D_PCTR, PCTR15)
BCHP_REGISTER(0x213006fc, 32,  RW, V3D_PCTR, PCTRS15)
BCHP_REGISTER(0x21300800, 32,  RO, V3D_TOP_GR_BRIDGE, REVISION)
BCHP_REGISTER(0x21300804, 32,  RW, V3D_TOP_GR_BRIDGE, CTRL)
BCHP_REGISTER(0x21300808, 32,  RW, V3D_TOP_GR_BRIDGE, SW_INIT_0)
BCHP_REGISTER(0x2130080c, 32,  RW, V3D_TOP_GR_BRIDGE, SW_INIT_1)
BCHP_REGISTER(0x21300a00, 32,  RW, V3D_GCA, CACHE_ID)
BCHP_REGISTER(0x21300a04, 32,  RW, V3D_GCA, CACHE_SWAP_CTRL)
BCHP_REGISTER(0x21300a08, 32,  RW, V3D_GCA, CACHE_SWAP_CTRL_2)
BCHP_REGISTER(0x21300a0c, 32,  RW, V3D_GCA, CACHE_CTRL)
BCHP_REGISTER(0x21300a10, 32,  RO, V3D_GCA, CACHE_STATUS)
BCHP_REGISTER(0x21300a14, 32,  RW, V3D_GCA, PM_CTRL)
BCHP_REGISTER(0x21300a18, 32,  RO, V3D_GCA, V3D_BW_CNT)
BCHP_REGISTER(0x21300a1c, 32,  RO, V3D_GCA, MEM_BW_CNT)
BCHP_REGISTER(0x21300a20, 32,  RW, V3D_GCA, LOW_PRI_ID)
BCHP_REGISTER(0x21300a24, 32,  RW, V3D_GCA, MEM_PROTECT_0)
BCHP_REGISTER(0x21300a28, 32,  RW, V3D_GCA, MEM_PROTECT_1)
BCHP_REGISTER(0x21300a2c, 32,  RW, V3D_GCA, MEM_PROTECT_2)
BCHP_REGISTER(0x21300a30, 32,  RW, V3D_GCA, MEM_PROTECT_3)
BCHP_REGISTER(0x21300a34, 32,  RW, V3D_GCA, MEM_PROTECT_4)
BCHP_REGISTER(0x21300a38, 32,  RW, V3D_GCA, MEM_PROTECT_5)
BCHP_REGISTER(0x21300a3c, 32,  RW, V3D_GCA, MEM_PROTECT_6)
BCHP_REGISTER(0x21300a40, 32,  RW, V3D_GCA, MEM_PROTECT_7)
BCHP_REGISTER(0x21300a44, 32,  RO, V3D_GCA, MEM_PROTECT_STATUS)
BCHP_REGISTER(0x21300a48, 32,  RW, V3D_GCA, AXI_BRIDGE_CTRL)
BCHP_REGISTER(0x21300a4c, 32,  RO, V3D_GCA, AXI_BRIDGE_STATUS_HI)
BCHP_REGISTER(0x21300a50, 32,  RO, V3D_GCA, AXI_BRIDGE_STATUS_LO)
BCHP_REGISTER(0x21300a54, 32,  RO, V3D_GCA, AXI_BRIDGE_ERROR)
BCHP_REGISTER(0x21300a58, 32,  RW, V3D_GCA, SCRATCH_0)
BCHP_REGISTER(0x21300a5c, 32,  RW, V3D_GCA, SAFE_SHUTDOWN)
BCHP_REGISTER(0x21300a60, 32,  RO, V3D_GCA, SAFE_SHUTDOWN_ACK)
BCHP_REGISTER(0x21300a64, 32,  RO, V3D_GCA, WRAPPER_REVISION_ID)
BCHP_REGISTER(0x21300e00, 32,  RW, V3D_DBG, DBCFG)
BCHP_REGISTER(0x21300e04, 32,  RW, V3D_DBG, DBSCS)
BCHP_REGISTER(0x21300e08, 32,  RW, V3D_DBG, DBSCFG)
BCHP_REGISTER(0x21300e0c, 32,  RW, V3D_DBG, DBSSR)
BCHP_REGISTER(0x21300e10, 32,  RW, V3D_DBG, DBSDR0)
BCHP_REGISTER(0x21300e14, 32,  RW, V3D_DBG, DBSDR1)
BCHP_REGISTER(0x21300e18, 32,  RW, V3D_DBG, DBSDR2)
BCHP_REGISTER(0x21300e1c, 32,  RW, V3D_DBG, DBSDR3)
BCHP_REGISTER(0x21300e20, 32,  RW, V3D_DBG, DBQRUN)
BCHP_REGISTER(0x21300e24, 32,  RW, V3D_DBG, DBQHLT)
BCHP_REGISTER(0x21300e28, 32,  RW, V3D_DBG, DBQSTP)
BCHP_REGISTER(0x21300e2c, 32,  RW, V3D_DBG, DBQITE)
BCHP_REGISTER(0x21300e30, 32,  RW, V3D_DBG, DBQITC)
BCHP_REGISTER(0x21300e34, 32,  RW, V3D_DBG, DBQGHC)
BCHP_REGISTER(0x21300e38, 32,  RW, V3D_DBG, DBQGHG)
BCHP_REGISTER(0x21300e3c, 32,  RW, V3D_DBG, DBQGHH)
BCHP_REGISTER(0x21300f00, 32,  RW, V3D_DBG, DBGE)
BCHP_REGISTER(0x21300f04, 32,  RO, V3D_DBG, FDBG0)
BCHP_REGISTER(0x21300f08, 32,  RO, V3D_DBG, FDBGB)
BCHP_REGISTER(0x21300f0c, 32,  RO, V3D_DBG, FDBGR)
BCHP_REGISTER(0x21300f10, 32,  RO, V3D_DBG, FDBGS)
BCHP_REGISTER(0x21300f20, 32,  RO, V3D_DBG, ERRSTAT)
BCHP_REGISTER(0x21400000, 32,  RO, HVD_RGR_0, REVISION)
BCHP_REGISTER(0x21400004, 32, CFG, HVD_RGR_0, CTRL)
BCHP_REGISTER(0x21400008, 32, CFG, HVD_RGR_0, RBUS_TIMER)
BCHP_REGISTER(0x2140000c, 32, CFG, HVD_RGR_0, PD)
BCHP_REGISTER(0x21400010, 32, CFG, HVD_RGR_0, SW_INIT_0)
BCHP_REGISTER(0x21400800, 32,  RO, HVD_MSAT_0, REVISION)
BCHP_REGISTER(0x21400804, 32,  RO, HVD_MSAT_0, ACQUIRE)
BCHP_REGISTER(0x21400808, 32,  WO, HVD_MSAT_0, RELEASE)
BCHP_REGISTER(0x2140080c, 32,  RW, HVD_MSAT_0, CHANNEL_SIZE)
BCHP_REGISTER(0x21400810, 32,  WO, HVD_MSAT_0, RESET_ALL)
BCHP_REGISTER(0x21400814, 32,  RO, HVD_MSAT_0, CHANNEL_STATUS_LO)
BCHP_REGISTER(0x21400818, 32,  RO, HVD_MSAT_0, CHANNEL_STATUS_HI)
BCHP_REGISTER(0x2140081c, 32, CFG, HVD_MSAT_0, WARNING_REMAP)
BCHP_REGISTER(0x21400820, 32,  RW, HVD_MSAT_0, CHANNEL_0_LO_ADDR)
BCHP_REGISTER(0x21400824, 32,  RW, HVD_MSAT_0, CHANNEL_0_HI_ADDR)
BCHP_REGISTER(0x21400828, 32,  RW, HVD_MSAT_0, CHANNEL_0_LO_DATA)
BCHP_REGISTER(0x2140082c, 32,  RW, HVD_MSAT_0, CHANNEL_0_HI_DATA)
BCHP_REGISTER(0x21400830, 32,  WO, HVD_MSAT_0, CHANNEL_0_ACTION)
BCHP_REGISTER(0x21400840, 32,  RW, HVD_MSAT_0, CHANNEL_1_LO_ADDR)
BCHP_REGISTER(0x21400844, 32,  RW, HVD_MSAT_0, CHANNEL_1_HI_ADDR)
BCHP_REGISTER(0x21400848, 32,  RW, HVD_MSAT_0, CHANNEL_1_LO_DATA)
BCHP_REGISTER(0x2140084c, 32,  RW, HVD_MSAT_0, CHANNEL_1_HI_DATA)
BCHP_REGISTER(0x21400850, 32,  WO, HVD_MSAT_0, CHANNEL_1_ACTION)
BCHP_REGISTER(0x21400860, 32,  RW, HVD_MSAT_0, CHANNEL_2_LO_ADDR)
BCHP_REGISTER(0x21400864, 32,  RW, HVD_MSAT_0, CHANNEL_2_HI_ADDR)
BCHP_REGISTER(0x21400868, 32,  RW, HVD_MSAT_0, CHANNEL_2_LO_DATA)
BCHP_REGISTER(0x2140086c, 32,  RW, HVD_MSAT_0, CHANNEL_2_HI_DATA)
BCHP_REGISTER(0x21400870, 32,  WO, HVD_MSAT_0, CHANNEL_2_ACTION)
BCHP_REGISTER(0x21400880, 32,  RW, HVD_MSAT_0, CHANNEL_3_LO_ADDR)
BCHP_REGISTER(0x21400884, 32,  RW, HVD_MSAT_0, CHANNEL_3_HI_ADDR)
BCHP_REGISTER(0x21400888, 32,  RW, HVD_MSAT_0, CHANNEL_3_LO_DATA)
BCHP_REGISTER(0x2140088c, 32,  RW, HVD_MSAT_0, CHANNEL_3_HI_DATA)
BCHP_REGISTER(0x21400890, 32,  WO, HVD_MSAT_0, CHANNEL_3_ACTION)
BCHP_REGISTER(0x21400c1c, 32, CFG, HVD_MSAT_0, SCRATCH)
BCHP_REGISTER(0x21402000, 32,  RO, BVN_PMU_RGR, REVISION)
BCHP_REGISTER(0x21402004, 32, CFG, BVN_PMU_RGR, CTRL)
BCHP_REGISTER(0x21402008, 32, CFG, BVN_PMU_RGR, RBUS_TIMER)
BCHP_REGISTER(0x2140200c, 32, CFG, BVN_PMU_RGR, PD)
BCHP_REGISTER(0x21402010, 32, CFG, BVN_PMU_RGR, SW_INIT_0)
BCHP_REGISTER(0x21403000, 32,  RO, BVN_SEC_PMU_GR, REVISION)
BCHP_REGISTER(0x21403004, 32, CFG, BVN_SEC_PMU_GR, CTRL)
BCHP_REGISTER(0x21403008, 32, CFG, BVN_SEC_PMU_GR, PD)
BCHP_REGISTER(0x2140300c, 32, CFG, BVN_SEC_PMU_GR, SW_INIT_0)
BCHP_REGISTER(0x220a0000, 32,  RO, LEAP_CPU_CORE_REGS, R0)
BCHP_REGISTER(0x220a0004, 32,  RO, LEAP_CPU_CORE_REGS, R1)
BCHP_REGISTER(0x220a0008, 32,  RO, LEAP_CPU_CORE_REGS, R2)
BCHP_REGISTER(0x220a000c, 32,  RO, LEAP_CPU_CORE_REGS, R3)
BCHP_REGISTER(0x220a0010, 32,  RO, LEAP_CPU_CORE_REGS, R4)
BCHP_REGISTER(0x220a0014, 32,  RO, LEAP_CPU_CORE_REGS, R5)
BCHP_REGISTER(0x220a0018, 32,  RO, LEAP_CPU_CORE_REGS, R6)
BCHP_REGISTER(0x220a001c, 32,  RO, LEAP_CPU_CORE_REGS, R7)
BCHP_REGISTER(0x220a0020, 32,  RO, LEAP_CPU_CORE_REGS, R8)
BCHP_REGISTER(0x220a0024, 32,  RO, LEAP_CPU_CORE_REGS, R9)
BCHP_REGISTER(0x220a0028, 32,  RO, LEAP_CPU_CORE_REGS, R10)
BCHP_REGISTER(0x220a002c, 32,  RO, LEAP_CPU_CORE_REGS, R11)
BCHP_REGISTER(0x220a0030, 32,  RO, LEAP_CPU_CORE_REGS, R12)
BCHP_REGISTER(0x220a0034, 32,  RO, LEAP_CPU_CORE_REGS, R13)
BCHP_REGISTER(0x220a0038, 32,  RO, LEAP_CPU_CORE_REGS, R14)
BCHP_REGISTER(0x220a003c, 32,  RO, LEAP_CPU_CORE_REGS, R15)
BCHP_REGISTER(0x220a0040, 32,  RO, LEAP_CPU_CORE_REGS, R16)
BCHP_REGISTER(0x220a0044, 32,  RO, LEAP_CPU_CORE_REGS, R17)
BCHP_REGISTER(0x220a0048, 32,  RO, LEAP_CPU_CORE_REGS, R18)
BCHP_REGISTER(0x220a004c, 32,  RO, LEAP_CPU_CORE_REGS, R19)
BCHP_REGISTER(0x220a0050, 32,  RO, LEAP_CPU_CORE_REGS, R20)
BCHP_REGISTER(0x220a0054, 32,  RO, LEAP_CPU_CORE_REGS, R21)
BCHP_REGISTER(0x220a0058, 32,  RO, LEAP_CPU_CORE_REGS, R22)
BCHP_REGISTER(0x220a005c, 32,  RO, LEAP_CPU_CORE_REGS, R23)
BCHP_REGISTER(0x220a0060, 32,  RO, LEAP_CPU_CORE_REGS, R24)
BCHP_REGISTER(0x220a0064, 32,  RO, LEAP_CPU_CORE_REGS, R25)
BCHP_REGISTER(0x220a0068, 32,  RO, LEAP_CPU_CORE_REGS, R26)
BCHP_REGISTER(0x220a006c, 32,  RO, LEAP_CPU_CORE_REGS, R27)
BCHP_REGISTER(0x220a0070, 32,  RO, LEAP_CPU_CORE_REGS, R28)
BCHP_REGISTER(0x220a0074, 32,  RO, LEAP_CPU_CORE_REGS, R29)
BCHP_REGISTER(0x220a0078, 32,  RO, LEAP_CPU_CORE_REGS, R30)
BCHP_REGISTER(0x220a007c, 32,  RO, LEAP_CPU_CORE_REGS, R31)
BCHP_REGISTER(0x220a00f0, 32,  RO, LEAP_CPU_CORE_REGS, R60)
BCHP_REGISTER(0x220a00f4, 32,  RO, LEAP_CPU_CORE_REGS, R61)
BCHP_REGISTER(0x220a00fc, 32,  RO, LEAP_CPU_CORE_REGS, R63)
BCHP_REGISTER(0x220c0000, 32,  RO, LEAP_CPU_AUX_REGS, STATUS)
BCHP_REGISTER(0x220c0004, 32,  RW, LEAP_CPU_AUX_REGS, SEMAPHORE)
BCHP_REGISTER(0x220c0008, 32,  RW, LEAP_CPU_AUX_REGS, LP_START)
BCHP_REGISTER(0x220c000c, 32,  RW, LEAP_CPU_AUX_REGS, LP_END)
BCHP_REGISTER(0x220c0010, 32,  RO, LEAP_CPU_AUX_REGS, IDENTITY)
BCHP_REGISTER(0x220c0014, 32,  RW, LEAP_CPU_AUX_REGS, DEBUG)
BCHP_REGISTER(0x220c0018, 32,  RO, LEAP_CPU_AUX_REGS, PC)
BCHP_REGISTER(0x220c0028, 32,  RO, LEAP_CPU_AUX_REGS, STATUS32)
BCHP_REGISTER(0x220c002c, 32,  RW, LEAP_CPU_AUX_REGS, STATUS32_L1)
BCHP_REGISTER(0x220c0030, 32,  RW, LEAP_CPU_AUX_REGS, STATUS32_L2)
BCHP_REGISTER(0x220c0040, 32,  WO, LEAP_CPU_AUX_REGS, IC_IVIC)
BCHP_REGISTER(0x220c0044, 32,  RW, LEAP_CPU_AUX_REGS, IC_CTRL)
BCHP_REGISTER(0x220c004c, 32,  WO, LEAP_CPU_AUX_REGS, IC_LIL)
BCHP_REGISTER(0x220c0064, 32,  WO, LEAP_CPU_AUX_REGS, IC_IVIL)
BCHP_REGISTER(0x220c0084, 32,  RW, LEAP_CPU_AUX_REGS, TIMER0_CONTROL)
BCHP_REGISTER(0x220c0088, 32,  RW, LEAP_CPU_AUX_REGS, TIMER0_COUNT)
BCHP_REGISTER(0x220c008c, 32,  RW, LEAP_CPU_AUX_REGS, TIMER0_LIMIT)
BCHP_REGISTER(0x220c0094, 32,  RW, LEAP_CPU_AUX_REGS, INT_VEC_BASE)
BCHP_REGISTER(0x220c010c, 32,  RW, LEAP_CPU_AUX_REGS, AUX_IRQ_LV12)
BCHP_REGISTER(0x220c011c, 32,  WO, LEAP_CPU_AUX_REGS, DC_IVDC)
BCHP_REGISTER(0x220c0120, 32,  RW, LEAP_CPU_AUX_REGS, DC_CTRL)
BCHP_REGISTER(0x220c0124, 32,  RW, LEAP_CPU_AUX_REGS, DC_LDL)
BCHP_REGISTER(0x220c0128, 32,  RW, LEAP_CPU_AUX_REGS, DC_IVDL)
BCHP_REGISTER(0x220c012c, 32,  RW, LEAP_CPU_AUX_REGS, DC_FLSH)
BCHP_REGISTER(0x220c0130, 32,  RW, LEAP_CPU_AUX_REGS, DC_FLDL)
BCHP_REGISTER(0x220c0160, 32,  RW, LEAP_CPU_AUX_REGS, DC_RAM_ADDR)
BCHP_REGISTER(0x220c0164, 32,  RW, LEAP_CPU_AUX_REGS, DC_TAG)
BCHP_REGISTER(0x220c0168, 32,  RW, LEAP_CPU_AUX_REGS, DC_WP)
BCHP_REGISTER(0x220c016c, 32,  RW, LEAP_CPU_AUX_REGS, DC_DATA)
BCHP_REGISTER(0x220c0188, 32,  RO, LEAP_CPU_AUX_REGS, CRC_BUILD_BCR)
BCHP_REGISTER(0x220c0190, 32,  RO, LEAP_CPU_AUX_REGS, DVBF_BUILD)
BCHP_REGISTER(0x220c0194, 32,  RO, LEAP_CPU_AUX_REGS, EXT_ARITH_BUILD)
BCHP_REGISTER(0x220c0198, 32,  RO, LEAP_CPU_AUX_REGS, DATASPACE)
BCHP_REGISTER(0x220c019c, 32,  RO, LEAP_CPU_AUX_REGS, MEMSUBSYS)
BCHP_REGISTER(0x220c01a0, 32,  RO, LEAP_CPU_AUX_REGS, VECBASE_AC_BUILD)
BCHP_REGISTER(0x220c01a4, 32,  RO, LEAP_CPU_AUX_REGS, P_BASE_ADDR)
BCHP_REGISTER(0x220c01b4, 32,  RO, LEAP_CPU_AUX_REGS, MPU_BUILD)
BCHP_REGISTER(0x220c01b8, 32,  RO, LEAP_CPU_AUX_REGS, RF_BUILD)
BCHP_REGISTER(0x220c01c8, 32,  RO, LEAP_CPU_AUX_REGS, D_CACHE_BUILD)
BCHP_REGISTER(0x220c01cc, 32,  RO, LEAP_CPU_AUX_REGS, MADI_BUILD)
BCHP_REGISTER(0x220c01d0, 32,  RO, LEAP_CPU_AUX_REGS, DCCM_BUILD)
BCHP_REGISTER(0x220c01d4, 32,  RO, LEAP_CPU_AUX_REGS, TIMER_BUILD)
BCHP_REGISTER(0x220c01d8, 32,  RO, LEAP_CPU_AUX_REGS, AP_BUILD)
BCHP_REGISTER(0x220c01dc, 32,  RO, LEAP_CPU_AUX_REGS, I_CACHE_BUILD)
BCHP_REGISTER(0x220c01e0, 32,  RO, LEAP_CPU_AUX_REGS, ICCM_BUILD)
BCHP_REGISTER(0x220c01e4, 32,  RO, LEAP_CPU_AUX_REGS, DSPRAM_BUILD)
BCHP_REGISTER(0x220c01e8, 32,  RO, LEAP_CPU_AUX_REGS, MAC_BUILD)
BCHP_REGISTER(0x220c01ec, 32,  RO, LEAP_CPU_AUX_REGS, MULTIPLY_BUILD)
BCHP_REGISTER(0x220c01f0, 32,  RO, LEAP_CPU_AUX_REGS, SWAP_BUILD)
BCHP_REGISTER(0x220c01f4, 32,  RO, LEAP_CPU_AUX_REGS, NORM_BUILD)
BCHP_REGISTER(0x220c01f8, 32,  RO, LEAP_CPU_AUX_REGS, MINMAX_BUILD)
BCHP_REGISTER(0x220c01fc, 32,  RO, LEAP_CPU_AUX_REGS, BARREL_BUILD)
BCHP_REGISTER(0x220c0304, 32,  RO, LEAP_CPU_AUX_REGS, ARC600_BUILD)
BCHP_REGISTER(0x220c0308, 32,  RW, LEAP_CPU_AUX_REGS, AUX_SYSTEM_BUILD)
BCHP_REGISTER(0x220c0310, 32,  RO, LEAP_CPU_AUX_REGS, MCD_BCR)
BCHP_REGISTER(0x220c03f8, 32,  RO, LEAP_CPU_AUX_REGS, IFETCHQUEUE_BUILD)
BCHP_REGISTER(0x220c0400, 32,  RW, LEAP_CPU_AUX_REGS, TIMER1_CONTROL)
BCHP_REGISTER(0x220c0404, 32,  RW, LEAP_CPU_AUX_REGS, TIMER1_COUNT)
BCHP_REGISTER(0x220c0408, 32,  RW, LEAP_CPU_AUX_REGS, TIMER1_LIMIT)
BCHP_REGISTER(0x220c0800, 32,  RW, LEAP_CPU_AUX_REGS, AUX_IRQ_LEV)
BCHP_REGISTER(0x220c0804, 32,  RW, LEAP_CPU_AUX_REGS, AUX_IRQ_HINT)
BCHP_REGISTER(0x220c0808, 32,  RW, LEAP_CPU_AUX_REGS, AUX_ALIGN_CTRL)
BCHP_REGISTER(0x220c080c, 32,  RO, LEAP_CPU_AUX_REGS, AUX_ALIGN_ADDR)
BCHP_REGISTER(0x220c0810, 32,  RO, LEAP_CPU_AUX_REGS, AUX_ALIGN_SIZE)
BCHP_REGISTER(0x220c0a00, 32,  RO, LEAP_CPU_AUX_REGS, AUX_INTER_CORE_INTERRUPT)
BCHP_REGISTER(0x220c0a04, 32,  RO, LEAP_CPU_AUX_REGS, AX_IPC_SEM_N)
BCHP_REGISTER(0x220c0a08, 32,  RO, LEAP_CPU_AUX_REGS, AUX_INTER_CORE_ACK)
BCHP_REGISTER(0x220c1000, 32,  RO, LEAP_CPU_AUX_REGS, ERET)
BCHP_REGISTER(0x220c1004, 32,  RO, LEAP_CPU_AUX_REGS, ERBTA)
BCHP_REGISTER(0x220c1008, 32,  RO, LEAP_CPU_AUX_REGS, ERSTATUS)
BCHP_REGISTER(0x220c100c, 32,  RO, LEAP_CPU_AUX_REGS, ECR)
BCHP_REGISTER(0x220c1010, 32,  RO, LEAP_CPU_AUX_REGS, EFA)
BCHP_REGISTER(0x220c1028, 32,  RO, LEAP_CPU_AUX_REGS, ICAUSE1)
BCHP_REGISTER(0x220c102c, 32,  RO, LEAP_CPU_AUX_REGS, ICAUSE2)
BCHP_REGISTER(0x220c1030, 32,  RO, LEAP_CPU_AUX_REGS, AUX_IENABLE)
BCHP_REGISTER(0x220c1034, 32,  RO, LEAP_CPU_AUX_REGS, AUX_ITRIGGER)
BCHP_REGISTER(0x220c1048, 32,  RO, LEAP_CPU_AUX_REGS, BTA)
BCHP_REGISTER(0x220c104c, 32,  RO, LEAP_CPU_AUX_REGS, BTA_L1)
BCHP_REGISTER(0x220c1050, 32,  RO, LEAP_CPU_AUX_REGS, BTA_L2)
BCHP_REGISTER(0x220c1054, 32,  RO, LEAP_CPU_AUX_REGS, AUX_IRQ_PULSE_CANCEL)
BCHP_REGISTER(0x220c1058, 32,  RO, LEAP_CPU_AUX_REGS, AUX_IRQ_PENDING)
BCHP_REGISTER(0x220c9000, 32,  RW, LEAP_UART, UARTDR)
BCHP_REGISTER(0x220c9004, 32,  RW, LEAP_UART, UARTRSR)
BCHP_REGISTER(0x220c9018, 32,  RO, LEAP_UART, UARTFR)
BCHP_REGISTER(0x220c9020, 32,  RW, LEAP_UART, UARTILPR)
BCHP_REGISTER(0x220c9024, 32,  RW, LEAP_UART, UARTIBRD)
BCHP_REGISTER(0x220c9028, 32,  RW, LEAP_UART, UARTFBRD)
BCHP_REGISTER(0x220c902c, 32,  RW, LEAP_UART, UARTLCR_H)
BCHP_REGISTER(0x220c9030, 32,  RW, LEAP_UART, UARTCR)
BCHP_REGISTER(0x220c9034, 32,  RW, LEAP_UART, UARTIFLS)
BCHP_REGISTER(0x220c9038, 32,  RW, LEAP_UART, UARTIMSC)
BCHP_REGISTER(0x220c903c, 32,  RO, LEAP_UART, UARTRIS)
BCHP_REGISTER(0x220c9040, 32,  RO, LEAP_UART, UARTMIS)
BCHP_REGISTER(0x220c9044, 32,  WO, LEAP_UART, UARTICR)
BCHP_REGISTER(0x220c9048, 32,  RW, LEAP_UART, UARTDMACR)
BCHP_REGISTER(0x220c9fe0, 32,  RO, LEAP_UART, UARTPERIPHID0)
BCHP_REGISTER(0x220c9fe4, 32,  RO, LEAP_UART, UARTPERIPHID1)
BCHP_REGISTER(0x220c9fe8, 32,  RO, LEAP_UART, UARTPERIPHID2)
BCHP_REGISTER(0x220c9fec, 32,  RO, LEAP_UART, UARTPERIPHID3)
BCHP_REGISTER(0x220c9ff0, 32,  RO, LEAP_UART, UARTPCELLID0)
BCHP_REGISTER(0x220c9ff4, 32,  RO, LEAP_UART, UARTPCELLID1)
BCHP_REGISTER(0x220c9ff8, 32,  RO, LEAP_UART, UARTPCELLID2)
BCHP_REGISTER(0x220c9ffc, 32,  RO, LEAP_UART, UARTPCELLID3)
BCHP_REGISTER(0x220ca000, 32,  RW, LEAP_WDG, WDOGLOAD)
BCHP_REGISTER(0x220ca004, 32,  RO, LEAP_WDG, WDOGVALUE)
BCHP_REGISTER(0x220ca008, 32,  RW, LEAP_WDG, WDOGCONTROL)
BCHP_REGISTER(0x220ca00c, 32,  WO, LEAP_WDG, WDOGINTCLR)
BCHP_REGISTER(0x220ca010, 32,  RO, LEAP_WDG, WDOGRIS)
BCHP_REGISTER(0x220ca014, 32,  RO, LEAP_WDG, WDOGMIS)
BCHP_REGISTER(0x220cac00, 32,  RW, LEAP_WDG, WDOGLOCK)
BCHP_REGISTER(0x220caf00, 32,  RW, LEAP_WDG, WDOGITCR)
BCHP_REGISTER(0x220caf04, 32,  WO, LEAP_WDG, WDOGITOP)
BCHP_REGISTER(0x220cafe0, 32,  RO, LEAP_WDG, WDOGPERIPHID0)
BCHP_REGISTER(0x220cafe4, 32,  RO, LEAP_WDG, WDOGPERIPHID1)
BCHP_REGISTER(0x220cafe8, 32,  RO, LEAP_WDG, WDOGPERIPHID2)
BCHP_REGISTER(0x220cafec, 32,  RO, LEAP_WDG, WDOGPERIPHID3)
BCHP_REGISTER(0x220caff0, 32,  RO, LEAP_WDG, WDOGPCELLID0)
BCHP_REGISTER(0x220caff4, 32,  RO, LEAP_WDG, WDOGPCELLID1)
BCHP_REGISTER(0x220caff8, 32,  RO, LEAP_WDG, WDOGPCELLID2)
BCHP_REGISTER(0x220caffc, 32,  RO, LEAP_WDG, WDOGPCELLID3)
BCHP_REGISTER(0x22100000, 32,  RO, LEAP_CTRL, REVID)
BCHP_REGISTER(0x22100004, 32,  RW, LEAP_CTRL, CTRL)
BCHP_REGISTER(0x22100008, 32,  RO, LEAP_CTRL, CPU_STRAPS)
BCHP_REGISTER(0x22100070, 32,  RW, LEAP_CTRL, SW_SPARE0)
BCHP_REGISTER(0x22100074, 32,  RW, LEAP_CTRL, SW_SPARE1)
BCHP_REGISTER(0x22100078, 32,  RW, LEAP_CTRL, SW_SPARE2)
BCHP_REGISTER(0x2210007c, 32,  RW, LEAP_CTRL, SW_SPARE3)
BCHP_REGISTER(0x22100080, 32,  RO, LEAP_CTRL, RBUS_ERR_ADDR)
BCHP_REGISTER(0x22100084, 32,  RO, LEAP_CTRL, RBUS_ERR_DATA)
BCHP_REGISTER(0x22100088, 32,  RO, LEAP_CTRL, RBUS_ERR_XAC)
BCHP_REGISTER(0x2210008c, 32,  RW, LEAP_CTRL, RBUS_ERR_CTRL)
BCHP_REGISTER(0x221000a8, 32,  RW, LEAP_CTRL, BYTE_SWAP_EN)
BCHP_REGISTER(0x221000ac, 32,  RW, LEAP_CTRL, ADDR_TRANS)
BCHP_REGISTER(0x22100100, 32,  RW, LEAP_CTRL, GP0)
BCHP_REGISTER(0x22100104, 32,  RW, LEAP_CTRL, GP1)
BCHP_REGISTER(0x22100108, 32,  RW, LEAP_CTRL, GP2)
BCHP_REGISTER(0x2210010c, 32,  RW, LEAP_CTRL, GP3)
BCHP_REGISTER(0x22100110, 32,  RW, LEAP_CTRL, GP4)
BCHP_REGISTER(0x22100114, 32,  RW, LEAP_CTRL, GP5)
BCHP_REGISTER(0x22100118, 32,  RW, LEAP_CTRL, GP6)
BCHP_REGISTER(0x2210011c, 32,  RW, LEAP_CTRL, GP7)
BCHP_REGISTER(0x22100120, 32,  RW, LEAP_CTRL, GP8)
BCHP_REGISTER(0x22100124, 32,  RW, LEAP_CTRL, GP9)
BCHP_REGISTER(0x22100128, 32,  RW, LEAP_CTRL, GP10)
BCHP_REGISTER(0x2210012c, 32,  RW, LEAP_CTRL, GP11)
BCHP_REGISTER(0x22100130, 32,  RW, LEAP_CTRL, GP12)
BCHP_REGISTER(0x22100134, 32,  RW, LEAP_CTRL, GP13)
BCHP_REGISTER(0x22100138, 32,  RW, LEAP_CTRL, GP14)
BCHP_REGISTER(0x2210013c, 32,  RW, LEAP_CTRL, GP15)
BCHP_REGISTER(0x22100140, 32,  RW, LEAP_CTRL, GP16)
BCHP_REGISTER(0x22100144, 32,  RW, LEAP_CTRL, GP17)
BCHP_REGISTER(0x22100148, 32,  RW, LEAP_CTRL, GP18)
BCHP_REGISTER(0x2210014c, 32,  RW, LEAP_CTRL, GP19)
BCHP_REGISTER(0x22100150, 32,  RW, LEAP_CTRL, GP20)
BCHP_REGISTER(0x22100154, 32,  RW, LEAP_CTRL, GP21)
BCHP_REGISTER(0x22100158, 32,  RW, LEAP_CTRL, GP22)
BCHP_REGISTER(0x2210015c, 32,  RW, LEAP_CTRL, GP23)
BCHP_REGISTER(0x22100160, 32,  RW, LEAP_CTRL, GP24)
BCHP_REGISTER(0x22100164, 32,  RW, LEAP_CTRL, GP25)
BCHP_REGISTER(0x22100168, 32,  RW, LEAP_CTRL, GP26)
BCHP_REGISTER(0x2210016c, 32,  RW, LEAP_CTRL, GP27)
BCHP_REGISTER(0x22100170, 32,  RW, LEAP_CTRL, GP28)
BCHP_REGISTER(0x22100174, 32,  RW, LEAP_CTRL, GP29)
BCHP_REGISTER(0x22100178, 32,  RW, LEAP_CTRL, GP30)
BCHP_REGISTER(0x2210017c, 32,  RW, LEAP_CTRL, GP31)
BCHP_REGISTER(0x22100180, 32,  RW, LEAP_CTRL, GP32)
BCHP_REGISTER(0x22100184, 32,  RW, LEAP_CTRL, GP33)
BCHP_REGISTER(0x22100188, 32,  RW, LEAP_CTRL, GP34)
BCHP_REGISTER(0x2210018c, 32,  RW, LEAP_CTRL, GP35)
BCHP_REGISTER(0x22100190, 32,  RW, LEAP_CTRL, GP36)
BCHP_REGISTER(0x22100194, 32,  RW, LEAP_CTRL, GP37)
BCHP_REGISTER(0x22100198, 32,  RW, LEAP_CTRL, GP38)
BCHP_REGISTER(0x2210019c, 32,  RW, LEAP_CTRL, GP39)
BCHP_REGISTER(0x221001a0, 32,  RW, LEAP_CTRL, GP40)
BCHP_REGISTER(0x221001a4, 32,  RW, LEAP_CTRL, GP41)
BCHP_REGISTER(0x221001a8, 32,  RW, LEAP_CTRL, GP42)
BCHP_REGISTER(0x221001ac, 32,  RW, LEAP_CTRL, GP43)
BCHP_REGISTER(0x221001b0, 32,  RW, LEAP_CTRL, GP44)
BCHP_REGISTER(0x221001b4, 32,  RW, LEAP_CTRL, GP45)
BCHP_REGISTER(0x221001b8, 32,  RW, LEAP_CTRL, GP46)
BCHP_REGISTER(0x221001bc, 32,  RW, LEAP_CTRL, GP47)
BCHP_REGISTER(0x221001c0, 32,  RW, LEAP_CTRL, GP48)
BCHP_REGISTER(0x221001c4, 32,  RW, LEAP_CTRL, GP49)
BCHP_REGISTER(0x221001c8, 32,  RW, LEAP_CTRL, GP50)
BCHP_REGISTER(0x221001cc, 32,  RW, LEAP_CTRL, GP51)
BCHP_REGISTER(0x221001d0, 32,  RW, LEAP_CTRL, GP52)
BCHP_REGISTER(0x221001d4, 32,  RW, LEAP_CTRL, GP53)
BCHP_REGISTER(0x221001d8, 32,  RW, LEAP_CTRL, GP54)
BCHP_REGISTER(0x221001dc, 32,  RW, LEAP_CTRL, GP55)
BCHP_REGISTER(0x221001e0, 32,  RW, LEAP_CTRL, GP56)
BCHP_REGISTER(0x221001e4, 32,  RW, LEAP_CTRL, GP57)
BCHP_REGISTER(0x221001e8, 32,  RW, LEAP_CTRL, GP58)
BCHP_REGISTER(0x221001ec, 32,  RW, LEAP_CTRL, GP59)
BCHP_REGISTER(0x221001f0, 32,  RW, LEAP_CTRL, GP60)
BCHP_REGISTER(0x221001f4, 32,  RW, LEAP_CTRL, GP61)
BCHP_REGISTER(0x221001f8, 32,  RW, LEAP_CTRL, GP62)
BCHP_REGISTER(0x221001fc, 32,  RW, LEAP_CTRL, GP63)
BCHP_REGISTER(0x22100200, 32,  RW, LEAP_CTRL, GP64)
BCHP_REGISTER(0x22100204, 32,  RW, LEAP_CTRL, GP65)
BCHP_REGISTER(0x22100208, 32,  RW, LEAP_CTRL, GP66)
BCHP_REGISTER(0x2210020c, 32,  RW, LEAP_CTRL, GP67)
BCHP_REGISTER(0x22100210, 32,  RW, LEAP_CTRL, GP68)
BCHP_REGISTER(0x22100214, 32,  RW, LEAP_CTRL, GP69)
BCHP_REGISTER(0x22100218, 32,  RW, LEAP_CTRL, GP70)
BCHP_REGISTER(0x2210021c, 32,  RW, LEAP_CTRL, GP71)
BCHP_REGISTER(0x22100220, 32,  RW, LEAP_CTRL, GP72)
BCHP_REGISTER(0x22100224, 32,  RW, LEAP_CTRL, GP73)
BCHP_REGISTER(0x22100228, 32,  RW, LEAP_CTRL, GP74)
BCHP_REGISTER(0x2210022c, 32,  RW, LEAP_CTRL, GP75)
BCHP_REGISTER(0x22100230, 32,  RW, LEAP_CTRL, GP76)
BCHP_REGISTER(0x22100234, 32,  RW, LEAP_CTRL, GP77)
BCHP_REGISTER(0x22100238, 32,  RW, LEAP_CTRL, GP78)
BCHP_REGISTER(0x2210023c, 32,  RW, LEAP_CTRL, GP79)
BCHP_REGISTER(0x22100240, 32,  RW, LEAP_CTRL, GP80)
BCHP_REGISTER(0x22100244, 32,  RW, LEAP_CTRL, GP81)
BCHP_REGISTER(0x22100248, 32,  RW, LEAP_CTRL, GP82)
BCHP_REGISTER(0x2210024c, 32,  RW, LEAP_CTRL, GP83)
BCHP_REGISTER(0x22100250, 32,  RW, LEAP_CTRL, GP84)
BCHP_REGISTER(0x22100254, 32,  RW, LEAP_CTRL, GP85)
BCHP_REGISTER(0x22100258, 32,  RW, LEAP_CTRL, GP86)
BCHP_REGISTER(0x2210025c, 32,  RW, LEAP_CTRL, GP87)
BCHP_REGISTER(0x22100260, 32,  RW, LEAP_CTRL, GP88)
BCHP_REGISTER(0x22100264, 32,  RW, LEAP_CTRL, GP89)
BCHP_REGISTER(0x22100268, 32,  RW, LEAP_CTRL, GP90)
BCHP_REGISTER(0x2210026c, 32,  RW, LEAP_CTRL, GP91)
BCHP_REGISTER(0x22100270, 32,  RW, LEAP_CTRL, GP92)
BCHP_REGISTER(0x22100274, 32,  RW, LEAP_CTRL, GP93)
BCHP_REGISTER(0x22100278, 32,  RW, LEAP_CTRL, GP94)
BCHP_REGISTER(0x2210027c, 32,  RW, LEAP_CTRL, GP95)
BCHP_REGISTER(0x22100280, 32,  RW, LEAP_CTRL, GP96)
BCHP_REGISTER(0x22100284, 32,  RW, LEAP_CTRL, GP97)
BCHP_REGISTER(0x22100288, 32,  RW, LEAP_CTRL, GP98)
BCHP_REGISTER(0x2210028c, 32,  RW, LEAP_CTRL, GP99)
BCHP_REGISTER(0x22100290, 32,  RW, LEAP_CTRL, GP100)
BCHP_REGISTER(0x22100294, 32,  RW, LEAP_CTRL, GP101)
BCHP_REGISTER(0x22100298, 32,  RW, LEAP_CTRL, GP102)
BCHP_REGISTER(0x2210029c, 32,  RW, LEAP_CTRL, GP103)
BCHP_REGISTER(0x221002a0, 32,  RW, LEAP_CTRL, GP104)
BCHP_REGISTER(0x221002a4, 32,  RW, LEAP_CTRL, GP105)
BCHP_REGISTER(0x221002a8, 32,  RW, LEAP_CTRL, GP106)
BCHP_REGISTER(0x221002ac, 32,  RW, LEAP_CTRL, GP107)
BCHP_REGISTER(0x221002b0, 32,  RW, LEAP_CTRL, GP108)
BCHP_REGISTER(0x221002b4, 32,  RW, LEAP_CTRL, GP109)
BCHP_REGISTER(0x221002b8, 32,  RW, LEAP_CTRL, GP110)
BCHP_REGISTER(0x221002bc, 32,  RW, LEAP_CTRL, GP111)
BCHP_REGISTER(0x221002c0, 32,  RW, LEAP_CTRL, GP112)
BCHP_REGISTER(0x221002c4, 32,  RW, LEAP_CTRL, GP113)
BCHP_REGISTER(0x221002c8, 32,  RW, LEAP_CTRL, GP114)
BCHP_REGISTER(0x221002cc, 32,  RW, LEAP_CTRL, GP115)
BCHP_REGISTER(0x221002d0, 32,  RW, LEAP_CTRL, GP116)
BCHP_REGISTER(0x221002d4, 32,  RW, LEAP_CTRL, GP117)
BCHP_REGISTER(0x221002d8, 32,  RW, LEAP_CTRL, GP118)
BCHP_REGISTER(0x221002dc, 32,  RW, LEAP_CTRL, GP119)
BCHP_REGISTER(0x221002e0, 32,  RW, LEAP_CTRL, GP120)
BCHP_REGISTER(0x221002e4, 32,  RW, LEAP_CTRL, GP121)
BCHP_REGISTER(0x221002e8, 32,  RW, LEAP_CTRL, GP122)
BCHP_REGISTER(0x221002ec, 32,  RW, LEAP_CTRL, GP123)
BCHP_REGISTER(0x221002f0, 32,  RW, LEAP_CTRL, GP124)
BCHP_REGISTER(0x221002f4, 32,  RW, LEAP_CTRL, GP125)
BCHP_REGISTER(0x221002f8, 32,  RW, LEAP_CTRL, GP126)
BCHP_REGISTER(0x221002fc, 32,  RW, LEAP_CTRL, GP127)
BCHP_REGISTER(0x22100300, 32,  RW, LEAP_CTRL, BLOCK_START_ADDR0)
BCHP_REGISTER(0x22100304, 32,  RW, LEAP_CTRL, BLOCK_START_ADDR1)
BCHP_REGISTER(0x22100308, 32,  RW, LEAP_CTRL, BLOCK_END_ADDR0)
BCHP_REGISTER(0x2210030c, 32,  RW, LEAP_CTRL, BLOCK_END_ADDR1)
BCHP_REGISTER(0x22100310, 32,  RW, LEAP_CTRL, BLOCK_RANGE_CTRL)
BCHP_REGISTER(0x22100320, 32,  RW, LEAP_CTRL, DIAG_DMA_CTRL)
BCHP_REGISTER(0x22100324, 32,  RW, LEAP_CTRL, DIAG_DEST_ADDR)
BCHP_REGISTER(0x22100328, 32,  RW, LEAP_CTRL, DIAG_XFER_SIZE)
BCHP_REGISTER(0x2210032c, 32,  RW, LEAP_CTRL, DIAG_POST_TRIG_NUM)
BCHP_REGISTER(0x22100330, 32,  RO, LEAP_CTRL, DIAG_STATUS)
BCHP_REGISTER(0x22100334, 32,  RO, LEAP_CTRL, DIAG_STAT_MEM_ADDR_START)
BCHP_REGISTER(0x22100338, 32,  RO, LEAP_CTRL, DIAG_STAT_MEM_ADDR_END)
BCHP_REGISTER(0x2210033c, 32,  RO, LEAP_CTRL, DIAG_STAT_MEM_ADDR_TRIGGER)
BCHP_REGISTER(0x22100340, 32,  RO, LEAP_CTRL, DIAG_STAT_DDR_ADDR_START)
BCHP_REGISTER(0x22100344, 32,  RO, LEAP_CTRL, DIAG_STAT_DDR_ADDR_END)
BCHP_REGISTER(0x22100348, 32,  RO, LEAP_CTRL, DIAG_STAT_DDR_ADDR_TRIGGER)
BCHP_REGISTER(0x2210034c, 32,  RW, LEAP_CTRL, DIAG_SCB_TIMEOUT)
BCHP_REGISTER(0x22100400, 32,  RO, LEAP_L1, INTR_W0_STATUS)
BCHP_REGISTER(0x22100404, 32,  RO, LEAP_L1, INTR_W1_STATUS)
BCHP_REGISTER(0x22100408, 32,  RO, LEAP_L1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x2210040c, 32,  RO, LEAP_L1, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x22100410, 32,  WO, LEAP_L1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x22100414, 32,  WO, LEAP_L1, INTR_W1_MASK_SET)
BCHP_REGISTER(0x22100418, 32,  WO, LEAP_L1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x2210041c, 32,  WO, LEAP_L1, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x22100500, 32,  RO, LEAP_L2, CPU_STATUS)
BCHP_REGISTER(0x22100504, 32,  WO, LEAP_L2, CPU_SET)
BCHP_REGISTER(0x22100508, 32,  WO, LEAP_L2, CPU_CLEAR)
BCHP_REGISTER(0x2210050c, 32,  RO, LEAP_L2, CPU_MASK_STATUS)
BCHP_REGISTER(0x22100510, 32,  WO, LEAP_L2, CPU_MASK_SET)
BCHP_REGISTER(0x22100514, 32,  WO, LEAP_L2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x22100600, 32,  RO, LEAP_HOST_L1, INTR_W0_STATUS)
BCHP_REGISTER(0x22100604, 32,  RO, LEAP_HOST_L1, INTR_W1_STATUS)
BCHP_REGISTER(0x22100608, 32,  RO, LEAP_HOST_L1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x2210060c, 32,  RO, LEAP_HOST_L1, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x22100610, 32,  WO, LEAP_HOST_L1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x22100614, 32,  WO, LEAP_HOST_L1, INTR_W1_MASK_SET)
BCHP_REGISTER(0x22100618, 32,  WO, LEAP_HOST_L1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x2210061c, 32,  WO, LEAP_HOST_L1, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x22100700, 32,  RO, LEAP_HOST_L2, CPU_STATUS0)
BCHP_REGISTER(0x22100704, 32,  WO, LEAP_HOST_L2, CPU_SET0)
BCHP_REGISTER(0x22100708, 32,  WO, LEAP_HOST_L2, CPU_CLEAR0)
BCHP_REGISTER(0x2210070c, 32,  RO, LEAP_HOST_L2, CPU_MASK_STATUS0)
BCHP_REGISTER(0x22100710, 32,  WO, LEAP_HOST_L2, CPU_MASK_SET0)
BCHP_REGISTER(0x22100714, 32,  WO, LEAP_HOST_L2, CPU_MASK_CLEAR0)
BCHP_REGISTER(0x22100718, 32,  RO, LEAP_HOST_L2, STATUS1)
BCHP_REGISTER(0x2210071c, 32,  WO, LEAP_HOST_L2, SET1)
BCHP_REGISTER(0x22100720, 32,  WO, LEAP_HOST_L2, CLEAR1)
BCHP_REGISTER(0x22100724, 32,  RO, LEAP_HOST_L2, MASK_STATUS1)
BCHP_REGISTER(0x22100728, 32,  WO, LEAP_HOST_L2, MASK_SET1)
BCHP_REGISTER(0x2210072c, 32,  WO, LEAP_HOST_L2, MASK_CLEAR1)
BCHP_REGISTER(0x22100800, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_STAT)
BCHP_REGISTER(0x22100804, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_SET)
BCHP_REGISTER(0x22100808, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_CLR)
BCHP_REGISTER(0x2210080c, 32,  RW, LEAP_CTRL_MISC, HAB_DONE_STAT)
BCHP_REGISTER(0x22100810, 32,  RW, LEAP_CTRL_MISC, HAB_DONE_SET)
BCHP_REGISTER(0x22100814, 32,  RW, LEAP_CTRL_MISC, HAB_DONE_CLR)
BCHP_REGISTER(0x22100818, 32,  RO, LEAP_CTRL_MISC, HAB_CNTR)
BCHP_REGISTER(0x2210081c, 32,  RW, LEAP_CTRL_MISC, HAB_CNTR_CLR)
BCHP_REGISTER(0x22100820, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_STAT0)
BCHP_REGISTER(0x22100824, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_STAT1)
BCHP_REGISTER(0x22100828, 32,  RW, LEAP_CTRL_MISC, HAB_REQ_STAT2)
BCHP_REGISTER(0x22100830, 32,  RW, LEAP_CTRL_MISC, MBOX_FIFO_PUSH_DATA)
BCHP_REGISTER(0x22100834, 32,  RW, LEAP_CTRL_MISC, MBOX_FIFO_POP_DATA)
BCHP_REGISTER(0x22100838, 32,  RO, LEAP_CTRL_MISC, MBOX_FIFO_DEPTH)
BCHP_REGISTER(0x2210083c, 32,  RW, LEAP_CTRL_MISC, MBOX_FIFO_RST_PTRS)
BCHP_REGISTER(0x22100840, 32,  RW, LEAP_CTRL_MISC, MBOX_FIFO_CTRL)
BCHP_REGISTER(0x22100844, 32,  RW, LEAP_CTRL_MISC, TRACE_Q_DATA)
BCHP_REGISTER(0x22100848, 32,  RW, LEAP_CTRL_MISC, TRACE_Q_RST_PTRS)
BCHP_REGISTER(0x2210084c, 32,  RW, LEAP_CTRL_MISC, HW_SEM)
BCHP_REGISTER(0x22100900, 32,  RO, LEAP_HOST2_L1, INTR_W0_STATUS)
BCHP_REGISTER(0x22100904, 32,  RO, LEAP_HOST2_L1, INTR_W1_STATUS)
BCHP_REGISTER(0x22100908, 32,  RO, LEAP_HOST2_L1, INTR_W0_MASK_STATUS)
BCHP_REGISTER(0x2210090c, 32,  RO, LEAP_HOST2_L1, INTR_W1_MASK_STATUS)
BCHP_REGISTER(0x22100910, 32,  WO, LEAP_HOST2_L1, INTR_W0_MASK_SET)
BCHP_REGISTER(0x22100914, 32,  WO, LEAP_HOST2_L1, INTR_W1_MASK_SET)
BCHP_REGISTER(0x22100918, 32,  WO, LEAP_HOST2_L1, INTR_W0_MASK_CLEAR)
BCHP_REGISTER(0x2210091c, 32,  WO, LEAP_HOST2_L1, INTR_W1_MASK_CLEAR)
BCHP_REGISTER(0x22100a00, 32,  RW, LEAP_ROM_PATCH, CONFIG0)
BCHP_REGISTER(0x22100a04, 32,  RW, LEAP_ROM_PATCH, VALUE0)
BCHP_REGISTER(0x22100a08, 32,  RW, LEAP_ROM_PATCH, CONFIG1)
BCHP_REGISTER(0x22100a0c, 32,  RW, LEAP_ROM_PATCH, VALUE1)
BCHP_REGISTER(0x22100a10, 32,  RW, LEAP_ROM_PATCH, CONFIG2)
BCHP_REGISTER(0x22100a14, 32,  RW, LEAP_ROM_PATCH, VALUE2)
BCHP_REGISTER(0x22100a18, 32,  RW, LEAP_ROM_PATCH, CONFIG3)
BCHP_REGISTER(0x22100a1c, 32,  RW, LEAP_ROM_PATCH, VALUE3)
BCHP_REGISTER(0x22100a20, 32,  RW, LEAP_ROM_PATCH, CONFIG4)
BCHP_REGISTER(0x22100a24, 32,  RW, LEAP_ROM_PATCH, VALUE4)
BCHP_REGISTER(0x22100a28, 32,  RW, LEAP_ROM_PATCH, CONFIG5)
BCHP_REGISTER(0x22100a2c, 32,  RW, LEAP_ROM_PATCH, VALUE5)
BCHP_REGISTER(0x22100a30, 32,  RW, LEAP_ROM_PATCH, CONFIG6)
BCHP_REGISTER(0x22100a34, 32,  RW, LEAP_ROM_PATCH, VALUE6)
BCHP_REGISTER(0x22100a38, 32,  RW, LEAP_ROM_PATCH, CONFIG7)
BCHP_REGISTER(0x22100a3c, 32,  RW, LEAP_ROM_PATCH, VALUE7)
BCHP_REGISTER(0x22100c00, 32,  RW, LEAP_CTRL_TIMERS, TIMER0)
BCHP_REGISTER(0x22100c04, 32,  RO, LEAP_CTRL_TIMERS, TIMER0_COUNT)
BCHP_REGISTER(0x22100c08, 32,  RW, LEAP_CTRL_TIMERS, TIMER1)
BCHP_REGISTER(0x22100c0c, 32,  RO, LEAP_CTRL_TIMERS, TIMER1_COUNT)
BCHP_REGISTER(0x22100c10, 32,  RW, LEAP_CTRL_TIMERS, TIMER2)
BCHP_REGISTER(0x22100c14, 32,  RO, LEAP_CTRL_TIMERS, TIMER2_COUNT)
BCHP_REGISTER(0x22100c18, 32,  RW, LEAP_CTRL_TIMERS, TIMER3)
BCHP_REGISTER(0x22100c1c, 32,  RO, LEAP_CTRL_TIMERS, TIMER3_COUNT)
BCHP_REGISTER(0x22100c20, 32,  RW, LEAP_CTRL_TIMERS, TIMER4)
BCHP_REGISTER(0x22100c24, 32,  RO, LEAP_CTRL_TIMERS, TIMER4_COUNT)
BCHP_REGISTER(0x22100c28, 32,  RW, LEAP_CTRL_TIMERS, TIMER5)
BCHP_REGISTER(0x22100c2c, 32,  RO, LEAP_CTRL_TIMERS, TIMER5_COUNT)
BCHP_REGISTER(0x22100c30, 32,  RW, LEAP_CTRL_TIMERS, TIMER6)
BCHP_REGISTER(0x22100c34, 32,  RO, LEAP_CTRL_TIMERS, TIMER6_COUNT)
BCHP_REGISTER(0x22100c38, 32,  RW, LEAP_CTRL_TIMERS, TIMER7)
BCHP_REGISTER(0x22100c3c, 32,  RO, LEAP_CTRL_TIMERS, TIMER7_COUNT)
BCHP_REGISTER(0x22100c40, 32,  RW, LEAP_CTRL_TIMERS, TIMER8)
BCHP_REGISTER(0x22100c44, 32,  RO, LEAP_CTRL_TIMERS, TIMER8_COUNT)
BCHP_REGISTER(0x22100c48, 32,  RW, LEAP_CTRL_TIMERS, TIMER9)
BCHP_REGISTER(0x22100c4c, 32,  RO, LEAP_CTRL_TIMERS, TIMER9_COUNT)
BCHP_REGISTER(0x22100c50, 32,  RW, LEAP_CTRL_TIMERS, TIMER10)
BCHP_REGISTER(0x22100c54, 32,  RO, LEAP_CTRL_TIMERS, TIMER10_COUNT)
BCHP_REGISTER(0x22100c58, 32,  RW, LEAP_CTRL_TIMERS, TIMER11)
BCHP_REGISTER(0x22100c5c, 32,  RO, LEAP_CTRL_TIMERS, TIMER11_COUNT)
BCHP_REGISTER(0x22100c60, 32,  RW, LEAP_CTRL_TIMERS, TIMER12)
BCHP_REGISTER(0x22100c64, 32,  RO, LEAP_CTRL_TIMERS, TIMER12_COUNT)
BCHP_REGISTER(0x22100c68, 32,  RW, LEAP_CTRL_TIMERS, TIMER13)
BCHP_REGISTER(0x22100c6c, 32,  RO, LEAP_CTRL_TIMERS, TIMER13_COUNT)
BCHP_REGISTER(0x22100c70, 32,  RW, LEAP_CTRL_TIMERS, TIMER14)
BCHP_REGISTER(0x22100c74, 32,  RO, LEAP_CTRL_TIMERS, TIMER14_COUNT)
BCHP_REGISTER(0x22100c78, 32,  RW, LEAP_CTRL_TIMERS, TIMER15)
BCHP_REGISTER(0x22100c7c, 32,  RO, LEAP_CTRL_TIMERS, TIMER15_COUNT)
BCHP_REGISTER(0x22202000, 32,  RW, DS_TOPM, README)
BCHP_REGISTER(0x22202004, 32,  RO, DS_TOPM, REVID)
BCHP_REGISTER(0x22202008, 32,  RW, DS_TOPM, RST_MASK)
BCHP_REGISTER(0x22202010, 32,  RW, DS_TOPM, GBL)
BCHP_REGISTER(0x22202014, 32,  RO, DS_TOPM, L2_IRQSTS)
BCHP_REGISTER(0x22202018, 32,  WO, DS_TOPM, L2_IRQSET)
BCHP_REGISTER(0x2220201c, 32,  WO, DS_TOPM, L2_IRQCLR)
BCHP_REGISTER(0x22202020, 32,  RW, DS_TOPM, L2_IRQMSK)
BCHP_REGISTER(0x22202024, 32,  WO, DS_TOPM, L2_IRQMSET)
BCHP_REGISTER(0x22202028, 32,  WO, DS_TOPM, L2_IRQMCLR)
BCHP_REGISTER(0x2220202c, 32,  RW, DS_TOPM, TP_CTL)
BCHP_REGISTER(0x22202030, 32,  RW, DS_TOPM, TPOUT_CTL)
BCHP_REGISTER(0x22202034, 32,  RO, DS_TOPM, TPOUT)
BCHP_REGISTER(0x22202038, 32,  RW, DS_TOPM, TP_TEST_MISC0)
BCHP_REGISTER(0x2220203c, 32,  RW, DS_TOPM, TP_TEST_MISC1)
BCHP_REGISTER(0x22202040, 32,  RW, DS_TOPM, TP_TEST_MISC2)
BCHP_REGISTER(0x22202044, 32,  RW, DS_TOPM, TP_TEST_MODE)
BCHP_REGISTER(0x22202048, 32,  RO, DS_TOPM, STATUS)
BCHP_REGISTER(0x22202050, 32,  RW, DS_TOPM, SW_SPARE1)
BCHP_REGISTER(0x22202054, 32,  RW, DS_TOPM, SW_SPARE2)
BCHP_REGISTER(0x22202058, 32,  RW, DS_TOPM, SW_SPARE3)
BCHP_REGISTER(0x2220205c, 32,  RW, DS_TOPM, SW_SPARE4)
BCHP_REGISTER(0x22202060, 32,  RW, DS_TOPM, SPARE1)
BCHP_REGISTER(0x22202064, 32,  RW, DS_TOPM, FE_CTL)
BCHP_REGISTER(0x22202068, 32,  RW, DS_TOPM, PD)
BCHP_REGISTER(0x22203000, 32,  RW, DS_TOPS, FSCNT1)
BCHP_REGISTER(0x22203004, 32,  RW, DS_TOPS, FSCNT2)
BCHP_REGISTER(0x22203090, 32,  RW, DS_TOPS, SW_SPARE1)
BCHP_REGISTER(0x22203094, 32,  RW, DS_TOPS, SW_SPARE2)
BCHP_REGISTER(0x22203098, 32,  RW, DS_TOPS, SPARE1)
BCHP_REGISTER(0x2220309c, 32,  RW, DS_TOPS, CNTL)
BCHP_REGISTER(0x22204000, 32,  RW, DS, GBL)
BCHP_REGISTER(0x22204010, 32,  RW, DS, PD)
BCHP_REGISTER(0x22204040, 32,  RO, DS, IRQSTS1)
BCHP_REGISTER(0x22204044, 32,  WO, DS, IRQSET1)
BCHP_REGISTER(0x22204048, 32,  WO, DS, IRQCLR1)
BCHP_REGISTER(0x2220404c, 32,  RW, DS, IRQMSK1)
BCHP_REGISTER(0x22204050, 32,  WO, DS, IRQMSET1)
BCHP_REGISTER(0x22204054, 32,  WO, DS, IRQMCLR1)
BCHP_REGISTER(0x22204058, 32,  RO, DS, IRQSTS2)
BCHP_REGISTER(0x2220405c, 32,  WO, DS, IRQSET2)
BCHP_REGISTER(0x22204060, 32,  WO, DS, IRQCLR2)
BCHP_REGISTER(0x22204064, 32,  RW, DS, IRQMSK2)
BCHP_REGISTER(0x22204068, 32,  WO, DS, IRQMSET2)
BCHP_REGISTER(0x2220406c, 32,  WO, DS, IRQMCLR2)
BCHP_REGISTER(0x222040fc, 32,  RO, DS, STAT)
BCHP_REGISTER(0x22204100, 32,  RW, DS, RST)
BCHP_REGISTER(0x22204104, 32,  RW, DS, FRZ)
BCHP_REGISTER(0x22204184, 32,  RW, DS, CLK)
BCHP_REGISTER(0x22204190, 32,  RO, DS, NCOU)
BCHP_REGISTER(0x22204194, 32,  RO, DS, NCOL)
BCHP_REGISTER(0x22204198, 32,  RO, DS, FECIN_NCON)
BCHP_REGISTER(0x2220419c, 32,  RO, DS, FECIN_NCODL)
BCHP_REGISTER(0x222041a0, 32,  RW, DS, FECOUT_NCON)
BCHP_REGISTER(0x222041a4, 32,  RW, DS, FECOUT_NCODL)
BCHP_REGISTER(0x222041a8, 32,  RW, DS, US_FCW_DWELL)
BCHP_REGISTER(0x22204200, 32,  RW, DS, ICB_CTL)
BCHP_REGISTER(0x2220434c, 32,  RW, DS, AGCB)
BCHP_REGISTER(0x22204350, 32,  RW, DS, AGCBI)
BCHP_REGISTER(0x22204354, 32,  RO, DS, AGCBLI)
BCHP_REGISTER(0x22204368, 32,  RW, DS, AGCB_IR)
BCHP_REGISTER(0x2220436c, 32,  RW, DS, AGCBI_IR)
BCHP_REGISTER(0x22204370, 32,  RO, DS, AGCBLI_IR)
BCHP_REGISTER(0x22204410, 32,  RW, DS, CFL)
BCHP_REGISTER(0x22204414, 32,  RW, DS, CFLC)
BCHP_REGISTER(0x22204418, 32,  RW, DS, CFLI)
BCHP_REGISTER(0x22204480, 32,  RW, DS, CFLFOS)
BCHP_REGISTER(0x22204494, 32,  RW, DS, TL)
BCHP_REGISTER(0x22204498, 32,  RW, DS, TLC)
BCHP_REGISTER(0x2220449c, 32,  RW, DS, TLI)
BCHP_REGISTER(0x222044a8, 32,  RW, DS, TLFOS)
BCHP_REGISTER(0x22204510, 32,  RW, DS, PERF)
BCHP_REGISTER(0x22204530, 32,  RW, DS, US_IFC)
BCHP_REGISTER(0x22204534, 32,  RW, DS, US_FCW_HI)
BCHP_REGISTER(0x22204538, 32,  RW, DS, US_FCW_LO)
BCHP_REGISTER(0x2220453c, 32,  RW, DS, US_TL_OFFSET)
BCHP_REGISTER(0x22204540, 32,  RW, DS, US_DSBCLK)
BCHP_REGISTER(0x22204600, 32,  RW, DS, FEC)
BCHP_REGISTER(0x22204610, 32,  RW, DS, FECU)
BCHP_REGISTER(0x22204614, 32,  RW, DS, FECM)
BCHP_REGISTER(0x22204618, 32,  RW, DS, FECL)
BCHP_REGISTER(0x22204620, 32,  RO, DS, SGFEC)
BCHP_REGISTER(0x22204640, 32,  RW, DS, OI_VCO)
BCHP_REGISTER(0x22204680, 32,  RW, DS, OI_CTL)
BCHP_REGISTER(0x22204684, 32,  RW, DS, OI_OUT)
BCHP_REGISTER(0x2220469c, 32,  RW, DS, OI_ERR)
BCHP_REGISTER(0x222046a4, 32,  RW, DS, OI_BER_CTL)
BCHP_REGISTER(0x222046a8, 32,  RW, DS, OI_BER)
BCHP_REGISTER(0x22204700, 32,  RW, DS, BER)
BCHP_REGISTER(0x22204704, 32,  RW, DS, BERI)
BCHP_REGISTER(0x22204710, 32,  RW, DS, CERC1)
BCHP_REGISTER(0x22204714, 32,  RW, DS, UERC1)
BCHP_REGISTER(0x22204718, 32,  RW, DS, NBERC1)
BCHP_REGISTER(0x2220471c, 32,  RW, DS, CBERC1)
BCHP_REGISTER(0x22204720, 32,  RW, DS, BMPG1)
BCHP_REGISTER(0x22204724, 32,  RW, DS, CERC2)
BCHP_REGISTER(0x22204728, 32,  RW, DS, UERC2)
BCHP_REGISTER(0x2220472c, 32,  RW, DS, NBERC2)
BCHP_REGISTER(0x22204730, 32,  RW, DS, CBERC2)
BCHP_REGISTER(0x22204734, 32,  RW, DS, BMPG2)
BCHP_REGISTER(0x22204738, 32,  RW, DS, TPFEC)
BCHP_REGISTER(0x2220473c, 32,  RW, DS, EUSEDC1)
BCHP_REGISTER(0x22204740, 32,  RW, DS, EDISCARDC1)
BCHP_REGISTER(0x22204744, 32,  RW, DS, EUSEDC2)
BCHP_REGISTER(0x22204748, 32,  RW, DS, EDISCARDC2)
BCHP_REGISTER(0x2220474c, 32,  RW, DS, FECMON_CTL)
BCHP_REGISTER(0x22204750, 32,  RW, DS, FECMON_LOCK_LIMITS)
BCHP_REGISTER(0x22204754, 32,  RW, DS, FECMON_UNLOCK_LIMITS)
BCHP_REGISTER(0x22204758, 32,  RW, DS, FECMON_FALSE_MPEG_DETECT_CTL1)
BCHP_REGISTER(0x2220475c, 32,  RW, DS, FECMON_FALSE_MPEG_DETECT_CTL2)
BCHP_REGISTER(0x22204760, 32,  RW, DS, FECMON_FALSE_MPEG_DETECT_STATUS)
BCHP_REGISTER(0x22204764, 32,  RW, DS, FECMON_INTERVAL_ALERT_THRESHOLD)
BCHP_REGISTER(0x22204768, 32,  RO, DS, FECMON_INTERVAL_ERROR_VALUES)
BCHP_REGISTER(0x22204790, 32,  RW, DS, FSCNT1)
BCHP_REGISTER(0x22204794, 32,  RW, DS, FSCNT2)
BCHP_REGISTER(0x222047c0, 32,  RW, DS, FBCNT1)
BCHP_REGISTER(0x222047c4, 32,  RW, DS, FBCNT2)
BCHP_REGISTER(0x222047fc, 32,  RW, DS, SPARE)
BCHP_REGISTER(0x22204b00, 32,  RW, DS, BND)
BCHP_REGISTER(0x22204b04, 32,  RW, DS, BND_THR)
BCHP_REGISTER(0x22204c00, 32,  RW, DS, EQ_CTL)
BCHP_REGISTER(0x22204c04, 32,  RW, DS, EQ_CWC)
BCHP_REGISTER(0x22204c10, 32,  RW, DS, EQ_FFE)
BCHP_REGISTER(0x22204c14, 32,  RW, DS, EQ_DFE)
BCHP_REGISTER(0x22204c18, 32,  RW, DS, EQ_CMA)
BCHP_REGISTER(0x22204c1c, 32,  RW, DS, EQ_RCA)
BCHP_REGISTER(0x22204c24, 32,  RW, DS, EQ_LEAK)
BCHP_REGISTER(0x22204c28, 32,  RO, DS, EQ_SOFT)
BCHP_REGISTER(0x22204c2c, 32,  RO, DS, EQ_SGEQ)
BCHP_REGISTER(0x22204c30, 32,  RW, DS, EQ_CPL)
BCHP_REGISTER(0x22204c34, 32,  RW, DS, EQ_CPLC)
BCHP_REGISTER(0x22204c38, 32,  RW, DS, EQ_CPLSWP)
BCHP_REGISTER(0x22204c3c, 32,  RW, DS, EQ_CPLI)
BCHP_REGISTER(0x22204c48, 32,  RW, DS, EQ_SNR)
BCHP_REGISTER(0x22204c4c, 32,  RW, DS, EQ_SNRHT)
BCHP_REGISTER(0x22204c50, 32,  RW, DS, EQ_SNRLT)
BCHP_REGISTER(0x22204c6c, 32,  RW, DS, EQ_CWC_LEAK)
BCHP_REGISTER(0x22204c80, 32,  RW, DS, EQ_CWC_FOFS1)
BCHP_REGISTER(0x22204c84, 32,  RW, DS, EQ_CWC_FOFS2)
BCHP_REGISTER(0x22204c88, 32,  RW, DS, EQ_CWC_FOFS3)
BCHP_REGISTER(0x22204c8c, 32,  RW, DS, EQ_CWC_FOFS4)
BCHP_REGISTER(0x22204c90, 32,  RW, DS, EQ_CWC_LFC1)
BCHP_REGISTER(0x22204c94, 32,  RW, DS, EQ_CWC_LFC2)
BCHP_REGISTER(0x22204c98, 32,  RW, DS, EQ_CWC_LFC3)
BCHP_REGISTER(0x22204c9c, 32,  RW, DS, EQ_CWC_LFC4)
BCHP_REGISTER(0x22204ca0, 32,  RW, DS, EQ_IMC)
BCHP_REGISTER(0x22204ca4, 32,  RW, DS, EQ_AGC)
BCHP_REGISTER(0x22204ca8, 32,  RW, DS, EQ_AGCC)
BCHP_REGISTER(0x22204cb0, 32,  RW, DS, EQ_AGCPA)
BCHP_REGISTER(0x22204cb8, 32,  RW, DS, EQ_FN)
BCHP_REGISTER(0x22204d00, 32,  RW, DS, EQ_FFEU0)
BCHP_REGISTER(0x22204d08, 32,  RW, DS, EQ_FFEU1)
BCHP_REGISTER(0x22204d10, 32,  RW, DS, EQ_FFEU2)
BCHP_REGISTER(0x22204d18, 32,  RW, DS, EQ_FFEU3)
BCHP_REGISTER(0x22204d20, 32,  RW, DS, EQ_FFEU4)
BCHP_REGISTER(0x22204d28, 32,  RW, DS, EQ_FFEU5)
BCHP_REGISTER(0x22204d30, 32,  RW, DS, EQ_FFEU6)
BCHP_REGISTER(0x22204d38, 32,  RW, DS, EQ_FFEU7)
BCHP_REGISTER(0x22204d40, 32,  RW, DS, EQ_FFEU8)
BCHP_REGISTER(0x22204d48, 32,  RW, DS, EQ_FFEU9)
BCHP_REGISTER(0x22204d50, 32,  RW, DS, EQ_FFEU10)
BCHP_REGISTER(0x22204d58, 32,  RW, DS, EQ_FFEU11)
BCHP_REGISTER(0x22204d60, 32,  RW, DS, EQ_FFEU12)
BCHP_REGISTER(0x22204d68, 32,  RW, DS, EQ_FFEU13)
BCHP_REGISTER(0x22204d70, 32,  RW, DS, EQ_FFEU14)
BCHP_REGISTER(0x22204d78, 32,  RW, DS, EQ_FFEU15)
BCHP_REGISTER(0x22204d80, 32,  RW, DS, EQ_FFEU16)
BCHP_REGISTER(0x22204d88, 32,  RW, DS, EQ_FFEU17)
BCHP_REGISTER(0x22204d90, 32,  RW, DS, EQ_FFEU18)
BCHP_REGISTER(0x22204d98, 32,  RW, DS, EQ_FFEU19)
BCHP_REGISTER(0x22204da0, 32,  RW, DS, EQ_FFEU20)
BCHP_REGISTER(0x22204da8, 32,  RW, DS, EQ_FFEU21)
BCHP_REGISTER(0x22204db0, 32,  RW, DS, EQ_FFEU22)
BCHP_REGISTER(0x22204db8, 32,  RW, DS, EQ_FFEU23)
BCHP_REGISTER(0x22204dc0, 32,  RW, DS, EQ_FFEU24)
BCHP_REGISTER(0x22204dc8, 32,  RW, DS, EQ_FFEU25)
BCHP_REGISTER(0x22204dd0, 32,  RW, DS, EQ_FFEU26)
BCHP_REGISTER(0x22204dd8, 32,  RW, DS, EQ_FFEU27)
BCHP_REGISTER(0x22204de0, 32,  RW, DS, EQ_FFEU28)
BCHP_REGISTER(0x22204de8, 32,  RW, DS, EQ_FFEU29)
BCHP_REGISTER(0x22204df0, 32,  RW, DS, EQ_FFEU30)
BCHP_REGISTER(0x22204df8, 32,  RW, DS, EQ_FFEU31)
BCHP_REGISTER(0x22204e00, 32,  RW, DS, EQ_FFEU32)
BCHP_REGISTER(0x22204e08, 32,  RW, DS, EQ_FFEU33)
BCHP_REGISTER(0x22204e10, 32,  RW, DS, EQ_FFEU34)
BCHP_REGISTER(0x22204e18, 32,  RW, DS, EQ_FFEU35)
BCHP_REGISTER(0x22204e20, 32,  RW, DS, EQ_DFEU0)
BCHP_REGISTER(0x22204e28, 32,  RW, DS, EQ_DFEU1)
BCHP_REGISTER(0x22204e30, 32,  RW, DS, EQ_DFEU2)
BCHP_REGISTER(0x22204e38, 32,  RW, DS, EQ_DFEU3)
BCHP_REGISTER(0x22204e40, 32,  RW, DS, EQ_DFEU4)
BCHP_REGISTER(0x22204e48, 32,  RW, DS, EQ_DFEU5)
BCHP_REGISTER(0x22204e50, 32,  RW, DS, EQ_DFEU6)
BCHP_REGISTER(0x22204e58, 32,  RW, DS, EQ_DFEU7)
BCHP_REGISTER(0x22204e60, 32,  RW, DS, EQ_DFEU8)
BCHP_REGISTER(0x22204e68, 32,  RW, DS, EQ_DFEU9)
BCHP_REGISTER(0x22204e70, 32,  RW, DS, EQ_DFEU10)
BCHP_REGISTER(0x22204e78, 32,  RW, DS, EQ_DFEU11)
BCHP_REGISTER(0x22204e80, 32,  RW, DS, EQ_DFEU12)
BCHP_REGISTER(0x22204e88, 32,  RW, DS, EQ_DFEU13)
BCHP_REGISTER(0x22204e90, 32,  RW, DS, EQ_DFEU14)
BCHP_REGISTER(0x22204e98, 32,  RW, DS, EQ_DFEU15)
BCHP_REGISTER(0x22204ea0, 32,  RW, DS, EQ_DFEU16)
BCHP_REGISTER(0x22204ea8, 32,  RW, DS, EQ_DFEU17)
BCHP_REGISTER(0x22204eb0, 32,  RW, DS, EQ_DFEU18)
BCHP_REGISTER(0x22204eb8, 32,  RW, DS, EQ_DFEU19)
BCHP_REGISTER(0x22204ec0, 32,  RW, DS, EQ_DFEU20)
BCHP_REGISTER(0x22204ec8, 32,  RW, DS, EQ_DFEU21)
BCHP_REGISTER(0x22204ed0, 32,  RW, DS, EQ_DFEU22)
BCHP_REGISTER(0x22204ed8, 32,  RW, DS, EQ_DFEU23)
BCHP_REGISTER(0x22204ee0, 32,  RW, DS, EQ_DFEU24)
BCHP_REGISTER(0x22204ee8, 32,  RW, DS, EQ_DFEU25)
BCHP_REGISTER(0x22204ef0, 32,  RW, DS, EQ_DFEU26)
BCHP_REGISTER(0x22204ef8, 32,  RW, DS, EQ_DFEU27)
BCHP_REGISTER(0x22204f00, 32,  RW, DS, EQ_DFEU28)
BCHP_REGISTER(0x22204f08, 32,  RW, DS, EQ_DFEU29)
BCHP_REGISTER(0x22204f10, 32,  RW, DS, EQ_DFEU30)
BCHP_REGISTER(0x22204f18, 32,  RW, DS, EQ_DFEU31)
BCHP_REGISTER(0x22204f20, 32,  RW, DS, EQ_DFEU32)
BCHP_REGISTER(0x22204f28, 32,  RW, DS, EQ_DFEU33)
BCHP_REGISTER(0x22204f30, 32,  RW, DS, EQ_DFEU34)
BCHP_REGISTER(0x22204f38, 32,  RW, DS, EQ_DFEU35)
BCHP_REGISTER(0x22204f40, 32,  RW, DS, EQ_IMCU0)
BCHP_REGISTER(0x22204f48, 32,  RW, DS, EQ_IMCU1)
BCHP_REGISTER(0x22204f50, 32,  RW, DS, EQ_IMCU2)
BCHP_REGISTER(0x22204f58, 32,  RW, DS, EQ_IMCU3)
BCHP_REGISTER(0x22204f60, 32,  RW, DS, EQ_IMCU4)
BCHP_REGISTER(0x22204f68, 32,  RW, DS, EQ_IMCU5)
BCHP_REGISTER(0x22204f70, 32,  RW, DS, EQ_IMCU6)
BCHP_REGISTER(0x22204f78, 32,  RW, DS, EQ_IMCU7)
BCHP_REGISTER(0x22204f80, 32,  RW, DS, EQ_IMCU8)
BCHP_REGISTER(0x22204f88, 32,  RW, DS, EQ_IMCU9)
BCHP_REGISTER(0x22204f90, 32,  RW, DS, EQ_IMCU10)
BCHP_REGISTER(0x22204f98, 32,  RW, DS, EQ_IMCU11)
BCHP_REGISTER(0x22204fa0, 32,  RW, DS, EQ_IMCU12)
BCHP_REGISTER(0x22204fa8, 32,  RW, DS, EQ_IMCU13)
BCHP_REGISTER(0x22204fb0, 32,  RW, DS, EQ_IMCU14)
BCHP_REGISTER(0x22204fb8, 32,  RW, DS, EQ_IMCU15)
BCHP_REGISTER(0x22204fc0, 32,  RW, DS, EQ_IMCU16)
BCHP_REGISTER(0x22204fc8, 32,  RW, DS, EQ_IMCU17)
BCHP_REGISTER(0x22204fd0, 32,  RW, DS, EQ_IMCU18)
BCHP_REGISTER(0x22204fd8, 32,  RW, DS, EQ_IMCU19)
BCHP_REGISTER(0x22204fe0, 32,  RW, DS, EQ_IMCU20)
BCHP_REGISTER(0x22204fe8, 32,  RW, DS, EQ_IMCU21)
BCHP_REGISTER(0x22204ff0, 32,  RW, DS, EQ_IMCU22)
BCHP_REGISTER(0x22204ff8, 32,  RW, DS, EQ_IMCU23)
BCHP_REGISTER(0x22205000, 32,  RW, DS, EQ_IMCU24)
BCHP_REGISTER(0x22205008, 32,  RW, DS, EQ_IMCU25)
BCHP_REGISTER(0x22205010, 32,  RW, DS, EQ_IMCU26)
BCHP_REGISTER(0x22205018, 32,  RW, DS, EQ_IMCU27)
BCHP_REGISTER(0x22205020, 32,  RW, DS, EQ_IMCU28)
BCHP_REGISTER(0x22205028, 32,  RW, DS, EQ_IMCU29)
BCHP_REGISTER(0x22205030, 32,  RW, DS, EQ_IMCU30)
BCHP_REGISTER(0x22205038, 32,  RW, DS, EQ_IMCU31)
BCHP_REGISTER(0x22205040, 32,  RW, DS, EQ_IMCU32)
BCHP_REGISTER(0x22205048, 32,  RW, DS, EQ_IMCU33)
BCHP_REGISTER(0x22205050, 32,  RW, DS, EQ_IMCU34)
BCHP_REGISTER(0x22205058, 32,  RW, DS, EQ_IMCU35)
BCHP_REGISTER(0x22205060, 32,  RW, DS, EQ_CWC_INT1)
BCHP_REGISTER(0x22205064, 32,  RW, DS, EQ_CWC_INT2)
BCHP_REGISTER(0x22205068, 32,  RW, DS, EQ_CWC_INT3)
BCHP_REGISTER(0x2220506c, 32,  RW, DS, EQ_CWC_INT4)
BCHP_REGISTER(0x22205070, 32,  RW, DS, FFT_CTL)
BCHP_REGISTER(0x22205074, 32,  RW, DS, FFT_PDETW)
BCHP_REGISTER(0x22205078, 32,  RO, DS, FFT_VAL)
BCHP_REGISTER(0x2220507c, 32,  RO, DS, FFT_BIN)
BCHP_REGISTER(0x22205080, 32,  RO, DS, FFT_GAIN_STS)
BCHP_REGISTER(0x22205084, 32,  RW, DS, FM_START_ADD)
BCHP_REGISTER(0x22205088, 32,  RO, DS, FM_CURR_ADD)
BCHP_REGISTER(0x2220508c, 32,  RW, DS, FM_RW_DATA)
BCHP_REGISTER(0x22205090, 32,  RW, DS, EQ_MAIN)
BCHP_REGISTER(0x22205094, 32,  RW, DS, EQ_CRTHR)
BCHP_REGISTER(0x22205098, 32,  RW, DS, EQ_EQTHR)
BCHP_REGISTER(0x2220509c, 32,  RW, DS, EQ_LOCKTHR)
BCHP_REGISTER(0x22300000, 32,  RW, UFE_CORE, UFE_CTRL)
BCHP_REGISTER(0x22300004, 32,  RW, UFE_CORE, HDOFFCTL0)
BCHP_REGISTER(0x22300008, 32,  RO, UFE_CORE, HDOFFSTS)
BCHP_REGISTER(0x2230000c, 32,  RW, UFE_CORE, DDFS_FCW)
BCHP_REGISTER(0x22300010, 32,  RW, UFE_CORE, CLIP_EN)
BCHP_REGISTER(0x22300014, 32,  RO, UFE_CORE, CLIP_STATUS)
BCHP_REGISTER(0x22300018, 32,  RW, UFE_CORE, CLIP_CLEAR)
BCHP_REGISTER(0x2230001c, 32,  RW, UFE_CORE, CLIP_THR_ADCIN_PI)
BCHP_REGISTER(0x22300020, 32,  RW, UFE_CORE, CLIP_THR_ADCIN_PO)
BCHP_REGISTER(0x22300024, 32,  RW, UFE_CORE, ADCIN_CLIP_CNT_PI_0)
BCHP_REGISTER(0x22300028, 32,  RW, UFE_CORE, ADCIN_CLIP_CNT_PI_1)
BCHP_REGISTER(0x2230002c, 32,  RW, UFE_CORE, ADCIN_CLIP_CNT_PO_0)
BCHP_REGISTER(0x22300030, 32,  RW, UFE_CORE, ADCIN_CLIP_CNT_PO_1)
BCHP_REGISTER(0x22300034, 32,  RW, UFE_CORE, CORE_CLIP_CNT)
BCHP_REGISTER(0x22300050, 32,  RW, UFE_CORE, ACI)
BCHP_REGISTER(0x22300054, 32, CFG, UFE_CORE, ACI_COEFFS_0)
BCHP_REGISTER(0x22300058, 32, CFG, UFE_CORE, ACI_COEFFS_1)
BCHP_REGISTER(0x2230005c, 32, CFG, UFE_CORE, ACI_COEFFS_2)
BCHP_REGISTER(0x22300060, 32, CFG, UFE_CORE, ACI_COEFFS_3)
BCHP_REGISTER(0x22300064, 32, CFG, UFE_CORE, ACI_COEFFS_4)
BCHP_REGISTER(0x22300068, 32, CFG, UFE_CORE, ACI_COEFFS_5)
BCHP_REGISTER(0x2230006c, 32, CFG, UFE_CORE, ACI_COEFFS_6)
BCHP_REGISTER(0x22300070, 32, CFG, UFE_CORE, ACI_COEFFS_7)
BCHP_REGISTER(0x22300074, 32, CFG, UFE_CORE, ACI_COEFFS_8)
BCHP_REGISTER(0x22300078, 32, CFG, UFE_CORE, ACI_COEFFS_9)
BCHP_REGISTER(0x2230007c, 32, CFG, UFE_CORE, ACI_COEFFS_10)
BCHP_REGISTER(0x22300080, 32, CFG, UFE_CORE, ACI_COEFFS_11)
BCHP_REGISTER(0x22300084, 32, CFG, UFE_CORE, ACI_COEFFS_12)
BCHP_REGISTER(0x22300088, 32, CFG, UFE_CORE, ACI_COEFFS_13)
BCHP_REGISTER(0x2230008c, 32, CFG, UFE_CORE, ACI_COEFFS_14)
BCHP_REGISTER(0x22300090, 32, CFG, UFE_CORE, ACI_COEFFS_15)
BCHP_REGISTER(0x22300094, 32, CFG, UFE_CORE, ACI_COEFFS_16)
BCHP_REGISTER(0x22300098, 32, CFG, UFE_CORE, ACI_COEFFS_17)
BCHP_REGISTER(0x223000b0, 32,  RW, UFE_CORE, AGF)
BCHP_REGISTER(0x223000b4, 32,  RW, UFE_CORE, AGFI)
BCHP_REGISTER(0x223000b8, 32,  RW, UFE_CORE, AGFLI)
BCHP_REGISTER(0x223000bc, 32,  RW, UFE_CORE, AGF_AVG)
BCHP_REGISTER(0x223000c0, 32,  RW, UFE_CORE, AGFI_AVG)
BCHP_REGISTER(0x223000d0, 32,  RW, UFE_CORE, AGC_DCOC)
BCHP_REGISTER(0x223000d4, 32,  RW, UFE_CORE, AGC_DCOPD)
BCHP_REGISTER(0x223000d8, 32,  RW, UFE_CORE, AGC_IFDCI)
BCHP_REGISTER(0x223000dc, 32,  RW, UFE_CORE, AGC1)
BCHP_REGISTER(0x223000e0, 32,  RW, UFE_CORE, AGC2)
BCHP_REGISTER(0x223000e4, 32,  RW, UFE_CORE, AGC3)
BCHP_REGISTER(0x223000e8, 32,  RW, UFE_CORE, AGCII)
BCHP_REGISTER(0x223000ec, 32,  RW, UFE_CORE, PGA)
BCHP_REGISTER(0x223000f0, 32,  RW, UFE_CORE, PGADI)
BCHP_REGISTER(0x223000f4, 32,  RW, UFE_CORE, PGAHI)
BCHP_REGISTER(0x223000f8, 32,  RO, UFE_CORE, AGCILI)
BCHP_REGISTER(0x223000fc, 32,  RO, UFE_CORE, AGCIDI)
BCHP_REGISTER(0x22300100, 32,  RW, UFE_CORE, AGCTI)
BCHP_REGISTER(0x22300104, 32,  RO, UFE_CORE, AGCTDI)
BCHP_REGISTER(0x22300108, 32,  RO, UFE_CORE, GDI)
BCHP_REGISTER(0x2230010c, 32,  RW, UFE_CORE, AGC_MISC)
BCHP_REGISTER(0x22300110, 32,  RW, UFE_CORE, AIFUT)
BCHP_REGISTER(0x22300114, 32,  RW, UFE_CORE, ARFUT)
BCHP_REGISTER(0x22300118, 32,  RW, UFE_CORE, AIFLT)
BCHP_REGISTER(0x2230011c, 32,  RW, UFE_CORE, ARFLT)
BCHP_REGISTER(0x22300120, 32,  RW, UFE_CORE, ADSFCNT)
BCHP_REGISTER(0x22300124, 32,  RW, UFE_CORE, MISCTL)
BCHP_REGISTER(0x22300128, 32,  RO, UFE_CORE, ALBK)
BCHP_REGISTER(0x2230012c, 32,  RW, UFE_CORE, ADSG)
BCHP_REGISTER(0x22300130, 32,  RO, UFE_CORE, AGC_CRC_VALUE)
BCHP_REGISTER(0x22300140, 32,  RW, UFE_CORE, ADC_TP_DCM)
BCHP_REGISTER(0x22300144, 32,  RW, UFE_CORE, TP_CTRL)
BCHP_REGISTER(0x22300148, 32,  RO, UFE_CORE, CRC_VALUE)
BCHP_REGISTER(0x22300160, 32,  RW, UFE_CORE, TRIG_TERM_CTRL_0)
BCHP_REGISTER(0x22300164, 32,  RW, UFE_CORE, TRIG_TERM_CTRL_1)
BCHP_REGISTER(0x22300168, 32,  WO, UFE_CORE, TRIG_SFT_EN)
BCHP_REGISTER(0x2230016c, 32,  RW, UFE_CORE, DIAG_CTRL)
BCHP_REGISTER(0x22300170, 32,  RW, UFE_CORE, LEAP_FIFO)
BCHP_REGISTER(0x22300174, 32,  RO, UFE_CORE, TRIG_CNT)
BCHP_REGISTER(0x22300180, 32,  RW, UFE_CORE, SFT_REG0)
BCHP_REGISTER(0x22300184, 32,  RW, UFE_CORE, SFT_REG1)
BCHP_REGISTER(0x22301000, 32,  RW, UFE_ANA, ADC_CNTL0)
BCHP_REGISTER(0x22301004, 32,  RW, UFE_ANA, ADC_CNTL1)
BCHP_REGISTER(0x22301008, 32,  RW, UFE_ANA, ADC_CNTL2)
BCHP_REGISTER(0x2230100c, 32,  RW, UFE_ANA, ADC_CNTL3)
BCHP_REGISTER(0x22301010, 32,  RW, UFE_ANA, ADC_CNTL4)
BCHP_REGISTER(0x22301014, 32,  RW, UFE_ANA, ADC_CNTL5)
BCHP_REGISTER(0x22301018, 32,  RW, UFE_ANA, ADC_CNTL6)
BCHP_REGISTER(0x2230101c, 32,  RW, UFE_ANA, ADC_CNTL7)
BCHP_REGISTER(0x22301020, 32,  RW, UFE_ANA, ADC_CNTL11)
BCHP_REGISTER(0x22301024, 32,  RW, UFE_ANA, PGA_CNTL)
BCHP_REGISTER(0x22301028, 32,  RW, UFE_ANA, SYS_CNTL)
BCHP_REGISTER(0x2230102c, 32,  RW, UFE_ANA, CLK_CTRL)
BCHP_REGISTER(0x22301030, 32,  RW, UFE_ANA, SW_SPARE0)
BCHP_REGISTER(0x22301034, 32,  RW, UFE_ANA, SW_SPARE1)
BCHP_REGISTER(0x22301800, 32,  RO, UFE_INTR2, CPU_STATUS)
BCHP_REGISTER(0x22301804, 32,  WO, UFE_INTR2, CPU_SET)
BCHP_REGISTER(0x22301808, 32,  WO, UFE_INTR2, CPU_CLEAR)
BCHP_REGISTER(0x2230180c, 32,  RO, UFE_INTR2, CPU_MASK_STATUS)
BCHP_REGISTER(0x22301810, 32,  WO, UFE_INTR2, CPU_MASK_SET)
BCHP_REGISTER(0x22301814, 32,  WO, UFE_INTR2, CPU_MASK_CLEAR)
BCHP_REGISTER(0x22301818, 32,  RO, UFE_INTR2, PCI_STATUS)
BCHP_REGISTER(0x2230181c, 32,  WO, UFE_INTR2, PCI_SET)
BCHP_REGISTER(0x22301820, 32,  WO, UFE_INTR2, PCI_CLEAR)
BCHP_REGISTER(0x22301824, 32,  RO, UFE_INTR2, PCI_MASK_STATUS)
BCHP_REGISTER(0x22301828, 32,  WO, UFE_INTR2, PCI_MASK_SET)
BCHP_REGISTER(0x2230182c, 32,  WO, UFE_INTR2, PCI_MASK_CLEAR)

/* End of File */
