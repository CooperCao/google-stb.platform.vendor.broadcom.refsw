/*=============================================================================
Broadcom Proprietary and Confidential. (c)2016 Broadcom.
All rights reserved.
=============================================================================*/
/* Auto-generated by running gen_hook_tables.py
 * DO NOT EDIT!
 */

// EGL_VERSION_1_0
CASE(eglChooseConfig, 0xf4627e41);
CASE(eglCopyBuffers, 0x519c8008);
CASE(eglCreateContext, 0xd952dbfb);
CASE(eglCreatePbufferSurface, 0x18dc713f);
CASE(eglCreatePixmapSurface, 0xce4e1b24);
CASE(eglCreateWindowSurface, 0x28e72d90);
CASE(eglDestroyContext, 0x8427b998);
CASE(eglDestroySurface, 0xee25d5b8);
CASE(eglGetConfigAttrib, 0xc4576f6f);
CASE(eglGetConfigs, 0x345cad39);
CASE(eglGetCurrentDisplay, 0x17628977);
CASE(eglGetCurrentSurface, 0x93616561);
CASE(eglGetDisplay, 0xabd3c425);
CASE(eglGetError, 0xe7528bce);
CASE(eglGetProcAddress, 0xd3347906);
CASE(eglInitialize, 0x1e97836d);
CASE(eglMakeCurrent, 0xf7803d41);
CASE(eglQueryContext, 0x70b52124);
CASE(eglQueryString, 0x86f1a7de);
CASE(eglQuerySurface, 0xdab395dc);
CASE(eglSwapBuffers, 0x2bbe7268);
CASE(eglTerminate, 0xb87ffb68);
CASE(eglWaitGL, 0xd3b908bd);
CASE(eglWaitNative, 0x368bec3d);

// GL_VERSION_ES_CM_1_0
CASE(glAlphaFunc, 0xe15c1a01);
CASE(glClearColor, 0x8c1103aa);
CASE(glClearDepthf, 0x3385ab2e);
CASE(glClipPlanef, 0x0965467a);
CASE(glColor4f, 0x71d0e120);
CASE(glDepthRangef, 0x52c1d886);
CASE(glFogf, 0x8380982d);
CASE(glFogfv, 0x7833a83a);
CASE(glFrustumf, 0x53515538);
CASE(glGetClipPlanef, 0xac194b72);
CASE(glGetFloatv, 0x1a2eabc5);
CASE(glGetLightfv, 0x0c21f9f4);
CASE(glGetMaterialfv, 0x7a711c59);
CASE(glGetTexEnvfv, 0xd25b09dc);
CASE(glGetTexParameterfv, 0xc2c5c906);
CASE(glLightModelf, 0xbc008d6e);
CASE(glLightModelfv, 0x757a5ff2);
CASE(glLightf, 0x53430dd6);
CASE(glLightfv, 0xdc299b08);
CASE(glLineWidth, 0xc841152c);
CASE(glLoadMatrixf, 0x61162c8c);
CASE(glMaterialf, 0xb03bc921);
CASE(glMaterialfv, 0xd7bc1a60);
CASE(glMultMatrixf, 0x32eddc7d);
CASE(glMultiTexCoord4f, 0x81471873);
CASE(glNormal3f, 0x96a4c5bb);
CASE(glOrthof, 0x55eb2438);
CASE(glPointParameterf, 0x3801dfa9);
CASE(glPointParameterfv, 0xb020b2ee);
CASE(glPointSize, 0x3478d034);
CASE(glPolygonOffset, 0xd77245da);
CASE(glRotatef, 0x9385d0a3);
CASE(glScalef, 0x41b06291);
CASE(glTexEnvf, 0x582ef9d5);
CASE(glTexEnvfv, 0x5574884f);
CASE(glTexParameterf, 0xdefe2e41);
CASE(glTexParameterfv, 0xd17cee0b);
CASE(glTranslatef, 0x08e4ee19);
CASE(glActiveTexture, 0xd7d40384);
CASE(glAlphaFuncx, 0x713ead65);
CASE(glBindBuffer, 0x15aa2f48);
CASE(glBindTexture, 0x95e4aa5d);
CASE(glBlendFunc, 0xd16d0f3d);
CASE(glBufferData, 0x9aa407eb);
CASE(glBufferSubData, 0x164adfcf);
CASE(glClear, 0x1fd93f51);
CASE(glClearColorx, 0x080d5770);
CASE(glClearDepthx, 0x3385ab38);
CASE(glClearStencil, 0x1ae4e290);
CASE(glClientActiveTexture, 0xd3cd8428);
CASE(glClipPlanex, 0x09654654);
CASE(glColor4ub, 0x93523c71);
CASE(glColor4x, 0x71d0e0d2);
CASE(glColorMask, 0x71de3b14);
CASE(glColorPointer, 0xda243fbb);
CASE(glCompressedTexImage2D, 0xa33fb073);
CASE(glCompressedTexSubImage2D, 0x95e50f6b);
CASE(glCopyTexImage2D, 0x060916a9);
CASE(glCopyTexSubImage2D, 0x1a65c65f);
CASE(glCullFace, 0xe3791eed);
CASE(glDeleteBuffers, 0xb1312f12);
CASE(glDeleteTextures, 0x7c53ef3b);
CASE(glDepthFunc, 0xcab94b9b);
CASE(glDepthMask, 0x0695071f);
CASE(glDepthRangex, 0x52c1d898);
CASE(glDisable, 0x0b5f771c);
CASE(glDisableClientState, 0x66cec40d);
CASE(glDrawArrays, 0xcb87d7e4);
CASE(glDrawElements, 0x64072b47);
CASE(glEnable, 0xf185bced);
CASE(glEnableClientState, 0x9e33596d);
CASE(glFinish, 0x1465cffd);
CASE(glFlush, 0xf391ca6e);
CASE(glFogx, 0x8380983f);
CASE(glFogxv, 0x7845ac32);
CASE(glFrontFace, 0x82ce8bef);
CASE(glFrustumx, 0x5351552a);
CASE(glGetBooleanv, 0x9d31bd8e);
CASE(glGetBufferParameteriv, 0x27818384);
CASE(glGetClipPlanex, 0xac194b64);
CASE(glGenBuffers, 0x3dce1ee6);
CASE(glGenTextures, 0x9bddd47e);
CASE(glGetError, 0x6d0935be);
CASE(glGetFixedv, 0xf30fd6bc);
CASE(glGetIntegerv, 0x2ef312da);
CASE(glGetLightxv, 0x0c33f670);
CASE(glGetMaterialxv, 0x7a831015);
CASE(glGetPointerv, 0x46d98f33);
CASE(glGetString, 0xe9516fb3);
CASE(glGetTexEnviv, 0xd25e0e1a);
CASE(glGetTexEnvxv, 0xd26d0d98);
CASE(glGetTexParameteriv, 0xc2c8ce48);
CASE(glGetTexParameterxv, 0xc2d7d2e6);
CASE(glHint, 0xdda0bc4c);
CASE(glIsBuffer, 0x9ce88f47);
CASE(glIsEnabled, 0x8dc2cb50);
CASE(glIsTexture, 0xb6e92cc5);
CASE(glLightModelx, 0xbc008d80);
CASE(glLightModelxv, 0x758c5b7a);
CASE(glLightx, 0x53430de4);
CASE(glLightxv, 0xdc3b97b4);
CASE(glLineWidthx, 0x25a25be9);
CASE(glLoadIdentity, 0xc47cc635);
CASE(glLoadMatrixx, 0x61162cba);
CASE(glLogicOp, 0x8744d55e);
CASE(glMaterialx, 0xb03bc917);
CASE(glMaterialxv, 0xd7ce0584);
CASE(glMatrixMode, 0x4a24a56d);
CASE(glMultMatrixx, 0x32eddc4f);
CASE(glMultiTexCoord4x, 0x81471801);
CASE(glNormal3x, 0x96a4c595);
CASE(glNormalPointer, 0x67140ba5);
CASE(glOrthox, 0x55eb240e);
CASE(glPixelStorei, 0x9f5fc196);
CASE(glPointParameterx, 0x3801dfbb);
CASE(glPointParameterxv, 0xb032b70e);
CASE(glPointSizex, 0xce0ce120);
CASE(glPolygonOffsetx, 0x97da800a);
CASE(glPopMatrix, 0x2d206e8d);
CASE(glPushMatrix, 0x6c5eb01e);
CASE(glReadPixels, 0xe3253e0d);
CASE(glRotatex, 0x9385d0bd);
CASE(glSampleCoverage, 0xb90882df);
CASE(glSampleCoveragex, 0xc4dd7ebc);
CASE(glScalex, 0x41b06283);
CASE(glScissor, 0xb97a976d);
CASE(glShadeModel, 0xce51c9d0);
CASE(glStencilFunc, 0x517159ea);
CASE(glStencilMask, 0x8d4c044f);
CASE(glStencilOp, 0x02a5a0fd);
CASE(glTexCoordPointer, 0x501846d2);
CASE(glTexEnvi, 0x582ef9d0);
CASE(glTexEnvx, 0x582efa23);
CASE(glTexEnviv, 0x5577888f);
CASE(glTexEnvxv, 0x5586b42f);
CASE(glTexImage2D, 0xa259f172);
CASE(glTexParameteri, 0xdefe2e3c);
CASE(glTexParameterx, 0xdefe2e2f);
CASE(glTexParameteriv, 0xd17f914b);
CASE(glTexParameterxv, 0xd18e926b);
CASE(glTexSubImage2D, 0xbf1acef5);
CASE(glTranslatex, 0x08e4efeb);
CASE(glVertexPointer, 0x12dc2728);
CASE(glViewport, 0xecca65e1);

// EGL_VERSION_1_1
CASE(eglBindTexImage, 0x1c6427ff);
CASE(eglReleaseTexImage, 0x9d8ca73d);
CASE(eglSurfaceAttrib, 0x982ae3e7);
CASE(eglSwapInterval, 0x093d31bf);

// EGL_VERSION_1_2
CASE(eglBindAPI, 0x7ddeaf6d);
CASE(eglQueryAPI, 0x7a148648);
CASE(eglCreatePbufferFromClientBuffer, 0x84c97db6);
CASE(eglReleaseThread, 0x24d336f4);
CASE(eglWaitClient, 0x2c00a5ea);

// EGL_VERSION_1_3

// EGL_VERSION_1_4
CASE(eglGetCurrentContext, 0x2963d141);

// EGL_VERSION_1_5
CASE(eglCreateSync, 0x51c39be2);
CASE(eglDestroySync, 0x5827a6ac);
CASE(eglClientWaitSync, 0x0b1a6adf);
CASE(eglGetSyncAttrib, 0xf3a749d6);
CASE(eglCreateImage, 0x0d5f7baa);
CASE(eglDestroyImage, 0xd4728979);
CASE(eglGetPlatformDisplay, 0x40fdb0be);
CASE(eglCreatePlatformWindowSurface, 0xd26ea42a);
CASE(eglCreatePlatformPixmapSurface, 0x77d631e1);
CASE(eglWaitSync, 0xa55d9247);

// GL_ES_VERSION_2_0
CASE(glAttachShader, 0x30b3ff7c);
CASE(glBindAttribLocation, 0x2da47205);
CASE(glBindFramebuffer, 0xa0fd5f96);
CASE(glBindRenderbuffer, 0x53a399bb);
CASE(glBlendColor, 0x847b1cec);
CASE(glBlendEquation, 0xd988c2f0);
CASE(glBlendEquationSeparate, 0x2a8b4890);
CASE(glBlendFuncSeparate, 0xb825ccd6);
CASE(glCheckFramebufferStatus, 0x97735d0f);
CASE(glCompileShader, 0xc51698c5);
CASE(glCreateProgram, 0x07872644);
CASE(glCreateShader, 0x6b4f9189);
CASE(glDeleteFramebuffers, 0x7d88efbe);
CASE(glDeleteProgram, 0xbd31cfa5);
CASE(glDeleteRenderbuffers, 0x1d26bc4b);
CASE(glDeleteShader, 0x686f0dda);
CASE(glDetachShader, 0x5512286f);
CASE(glDisableVertexAttribArray, 0x647c6f74);
CASE(glEnableVertexAttribArray, 0xe9e97eca);
CASE(glFramebufferRenderbuffer, 0xea8c9772);
CASE(glFramebufferTexture2D, 0x1878071d);
CASE(glGenerateMipmap, 0x11740056);
CASE(glGenFramebuffers, 0xb1508221);
CASE(glGenRenderbuffers, 0x7c823270);
CASE(glGetActiveAttrib, 0x33609b61);
CASE(glGetActiveUniform, 0x6ca55a98);
CASE(glGetAttachedShaders, 0x198efc97);
CASE(glGetAttribLocation, 0xceb2b362);
CASE(glGetFramebufferAttachmentParameteriv, 0xd513d224);
CASE(glGetProgramiv, 0x480b2aeb);
CASE(glGetProgramInfoLog, 0x35815bc2);
CASE(glGetRenderbufferParameteriv, 0xa88c3743);
CASE(glGetShaderiv, 0x48bb6d78);
CASE(glGetShaderInfoLog, 0xfa9e9dbe);
CASE(glGetShaderPrecisionFormat, 0xca9efde1);
CASE(glGetShaderSource, 0x4d5eb88f);
CASE(glGetUniformfv, 0x0b4313d0);
CASE(glGetUniformiv, 0x0b461216);
CASE(glGetUniformLocation, 0x25c107d9);
CASE(glGetVertexAttribfv, 0x6e83bcac);
CASE(glGetVertexAttribiv, 0x6e86bc6a);
CASE(glGetVertexAttribPointerv, 0xb3e2e61a);
CASE(glIsFramebuffer, 0x39983f46);
CASE(glIsProgram, 0xbccb103e);
CASE(glIsRenderbuffer, 0xe8fe779b);
CASE(glIsShader, 0xb93b3a2f);
CASE(glLinkProgram, 0x133a26ff);
CASE(glReleaseShaderCompiler, 0x4b29fd8f);
CASE(glRenderbufferStorage, 0xcbd9c599);
CASE(glShaderBinary, 0x678d3cc6);
CASE(glShaderSource, 0xc609058c);
CASE(glStencilFuncSeparate, 0x83dfcae1);
CASE(glStencilMaskSeparate, 0xeb2f1289);
CASE(glStencilOpSeparate, 0x09a32158);
CASE(glUniform1f, 0x4fe9392d);
CASE(glUniform1fv, 0x21381b8a);
CASE(glUniform1i, 0x4fe9392e);
CASE(glUniform1iv, 0x213b1a54);
CASE(glUniform2f, 0x4fea38e9);
CASE(glUniform2fv, 0x21b66b85);
CASE(glUniform2i, 0x4fea38ec);
CASE(glUniform2iv, 0x21b96b49);
CASE(glUniform3f, 0x4feb38a9);
CASE(glUniform3fv, 0x22347b80);
CASE(glUniform3i, 0x4feb38ae);
CASE(glUniform3iv, 0x22377846);
CASE(glUniform4f, 0x4fec386d);
CASE(glUniform4fv, 0x22b24b87);
CASE(glUniform4i, 0x4fec3868);
CASE(glUniform4iv, 0x22b54b47);
CASE(glUniformMatrix2fv, 0x502a91f8);
CASE(glUniformMatrix3fv, 0x50a881fb);
CASE(glUniformMatrix4fv, 0x5126b1f2);
CASE(glUseProgram, 0xcc557737);
CASE(glValidateProgram, 0x44b2d5db);
CASE(glVertexAttrib1f, 0x7d0585cd);
CASE(glVertexAttrib1fv, 0xbd4084ee);
CASE(glVertexAttrib2f, 0x7d068401);
CASE(glVertexAttrib2fv, 0xbdbef491);
CASE(glVertexAttrib3f, 0x7d078441);
CASE(glVertexAttrib3fv, 0xbe3ce68c);
CASE(glVertexAttrib4f, 0x7d08848d);
CASE(glVertexAttrib4fv, 0xbebad68b);
CASE(glVertexAttribPointer, 0xc443d309);

// GL_ES_VERSION_3_0
CASE(glReadBuffer, 0x96c9f6d2);
CASE(glDrawRangeElements, 0x3fbdd076);
CASE(glTexImage3D, 0xa25af130);
CASE(glTexSubImage3D, 0xbf1bcd35);
CASE(glCopyTexSubImage3D, 0x1a66c61f);
CASE(glCompressedTexImage3D, 0xa340b0cb);
CASE(glCompressedTexSubImage3D, 0x95e60f2b);
CASE(glGenQueries, 0xb6a277d9);
CASE(glDeleteQueries, 0x2a061670);
CASE(glIsQuery, 0xb695648c);
CASE(glBeginQuery, 0x7e76e6b2);
CASE(glEndQuery, 0xffe79eb5);
CASE(glGetQueryiv, 0x90f175f5);
CASE(glGetQueryObjectuiv, 0xf7e5e189);
CASE(glUnmapBuffer, 0xf3aa3c34);
CASE(glGetBufferPointerv, 0x75ace546);
CASE(glDrawBuffers, 0xfb06836c);
CASE(glUniformMatrix2x3fv, 0x7125c028);
CASE(glUniformMatrix3x2fv, 0xb494b419);
CASE(glUniformMatrix2x4fv, 0x71a3b12d);
CASE(glUniformMatrix4x2fv, 0xf880a70e);
CASE(glUniformMatrix3x4fv, 0xb590aa1f);
CASE(glUniformMatrix4x3fv, 0xf8fe97f1);
CASE(glBlitFramebuffer, 0xcb8fcf9c);
CASE(glRenderbufferStorageMultisample, 0x0e64bfc7);
CASE(glFramebufferTextureLayer, 0xd741e21f);
CASE(glMapBufferRange, 0x4b005786);
CASE(glFlushMappedBufferRange, 0x344bbe80);
CASE(glBindVertexArray, 0xd358d68b);
CASE(glDeleteVertexArrays, 0xe818cdd6);
CASE(glGenVertexArrays, 0x1bdfdcd6);
CASE(glIsVertexArray, 0x6bf266b4);
CASE(glGetIntegeri_v, 0x7f3e7acd);
CASE(glBeginTransformFeedback, 0x9f859ea8);
CASE(glEndTransformFeedback, 0x9b1d44a6);
CASE(glBindBufferRange, 0xf9699012);
CASE(glBindBufferBase, 0xded43867);
CASE(glTransformFeedbackVaryings, 0xa54f2840);
CASE(glGetTransformFeedbackVarying, 0x9b5fc1ef);
CASE(glVertexAttribIPointer, 0x20b74b90);
CASE(glGetVertexAttribIiv, 0xf64a037d);
CASE(glGetVertexAttribIuiv, 0x9785985d);
CASE(glVertexAttribI4i, 0xc8df69b4);
CASE(glVertexAttribI4ui, 0x107faccd);
CASE(glVertexAttribI4iv, 0x1073a9b8);
CASE(glVertexAttribI4uiv, 0xcc21bc65);
CASE(glGetUniformuiv, 0xe56b1494);
CASE(glGetFragDataLocation, 0x9f9482b6);
CASE(glUniform1ui, 0x21471f11);
CASE(glUniform2ui, 0x21c56c12);
CASE(glUniform3ui, 0x22437f1b);
CASE(glUniform4ui, 0x22c14e18);
CASE(glUniform1uiv, 0x6ede397e);
CASE(glUniform2uiv, 0x9d65b53a);
CASE(glUniform3uiv, 0xcbeb32f5);
CASE(glUniform4uiv, 0xfa7233af);
CASE(glClearBufferiv, 0xf10d2a58);
CASE(glClearBufferuiv, 0x339982a3);
CASE(glClearBufferfv, 0xf10a2b92);
CASE(glClearBufferfi, 0xf10a2b81);
CASE(glGetStringi, 0xf1f2c3f5);
CASE(glCopyBufferSubData, 0x71964246);
CASE(glGetUniformIndices, 0xe79c6418);
CASE(glGetActiveUniformsiv, 0xde4dc68e);
CASE(glGetUniformBlockIndex, 0x9171c8b9);
CASE(glGetActiveUniformBlockiv, 0xf3545b89);
CASE(glGetActiveUniformBlockName, 0xbe3165ea);
CASE(glUniformBlockBinding, 0xab2324a4);
CASE(glDrawArraysInstanced, 0xe6fe6832);
CASE(glDrawElementsInstanced, 0x7854f57b);
CASE(glFenceSync, 0xdeb0bb17);
CASE(glIsSync, 0x1dcab5c0);
CASE(glDeleteSync, 0x67406c6b);
CASE(glClientWaitSync, 0xca36bf56);
CASE(glWaitSync, 0x2b140821);
CASE(glGetInteger64v, 0x65f5815e);
CASE(glGetSynciv, 0x7fdabf63);
CASE(glGetInteger64i_v, 0x4f70c205);
CASE(glGetBufferParameteri64v, 0x1c160291);
CASE(glGenSamplers, 0xf36fee79);
CASE(glDeleteSamplers, 0xd3e5b33e);
CASE(glIsSampler, 0xde4ee1b7);
CASE(glBindSampler, 0xbd4858ce);
CASE(glSamplerParameteri, 0x3b19501a);
CASE(glSamplerParameteriv, 0xf644a077);
CASE(glSamplerParameterf, 0x3b195019);
CASE(glSamplerParameterfv, 0xf641a337);
CASE(glGetSamplerParameteriv, 0x256d7312);
CASE(glGetSamplerParameterfv, 0x256a70a8);
CASE(glVertexAttribDivisor, 0xbf20eb2b);
CASE(glBindTransformFeedback, 0x1ee22e6d);
CASE(glDeleteTransformFeedbacks, 0x1d563844);
CASE(glGenTransformFeedbacks, 0x9281af4c);
CASE(glIsTransformFeedback, 0x924a49c8);
CASE(glPauseTransformFeedback, 0x92ef1f0f);
CASE(glResumeTransformFeedback, 0xc6c9c9d6);
CASE(glGetProgramBinary, 0xa29c2f28);
CASE(glProgramBinary, 0x22590f59);
CASE(glProgramParameteri, 0xe633c7cc);
CASE(glInvalidateFramebuffer, 0x548ba3c6);
CASE(glInvalidateSubFramebuffer, 0xe190e2dd);
CASE(glTexStorage2D, 0xfb744d1f);
CASE(glTexStorage3D, 0xfb754ddf);
CASE(glGetInternalformativ, 0x02141446);

// GL_ES_VERSION_3_1
#if KHRN_GLES31_DRIVER
CASE(glDispatchCompute, 0xf207af7f);
CASE(glDispatchComputeIndirect, 0x680dd02b);
CASE(glDrawArraysIndirect, 0x67328623);
CASE(glDrawElementsIndirect, 0x44085de6);
CASE(glFramebufferParameteri, 0x0a66510e);
CASE(glGetFramebufferParameteriv, 0x7aedc9b7);
CASE(glGetProgramInterfaceiv, 0x347545a6);
CASE(glGetProgramResourceIndex, 0x016f3c9e);
CASE(glGetProgramResourceName, 0x385118fd);
CASE(glGetProgramResourceiv, 0xbf2f3901);
CASE(glGetProgramResourceLocation, 0x420323f5);
CASE(glUseProgramStages, 0x212dabfa);
CASE(glActiveShaderProgram, 0xe3468b32);
CASE(glCreateShaderProgramv, 0xa4fda725);
CASE(glBindProgramPipeline, 0x23869f82);
CASE(glDeleteProgramPipelines, 0x19e2d43f);
CASE(glGenProgramPipelines, 0x75e321fb);
CASE(glIsProgramPipeline, 0xdbe8ab9f);
CASE(glGetProgramPipelineiv, 0x36f2ff90);
CASE(glProgramUniform1i, 0xe1cad667);
CASE(glProgramUniform2i, 0xe1cbd627);
CASE(glProgramUniform3i, 0xe1ccd9e7);
CASE(glProgramUniform4i, 0xe1cdd9a7);
CASE(glProgramUniform1ui, 0xc87c7e8c);
CASE(glProgramUniform2ui, 0xc8fa0e8b);
CASE(glProgramUniform3ui, 0xc9781c8a);
CASE(glProgramUniform4ui, 0xc9f62c85);
CASE(glProgramUniform1f, 0xe1cad660);
CASE(glProgramUniform2f, 0xe1cbd622);
CASE(glProgramUniform3f, 0xe1ccd9e4);
CASE(glProgramUniform4f, 0xe1cdd9aa);
CASE(glProgramUniform1iv, 0xc8707c79);
CASE(glProgramUniform2iv, 0xc8ee0b64);
CASE(glProgramUniform3iv, 0xc96c1a67);
CASE(glProgramUniform4iv, 0xc9ea2b66);
CASE(glProgramUniform1uiv, 0x0da10827);
CASE(glProgramUniform2uiv, 0x3c27ea62);
CASE(glProgramUniform3uiv, 0x6aaecdaa);
CASE(glProgramUniform4uiv, 0x9935eef6);
CASE(glProgramUniform1fv, 0xc86d7b21);
CASE(glProgramUniform2fv, 0xc8eb0a26);
CASE(glProgramUniform3fv, 0xc9691b27);
CASE(glProgramUniform4fv, 0xc9e72828);
CASE(glProgramUniformMatrix2fv, 0xcd7f7e13);
CASE(glProgramUniformMatrix3fv, 0xcdfd0f10);
CASE(glProgramUniformMatrix4fv, 0xce7b1c15);
CASE(glProgramUniformMatrix2x3fv, 0x7ce70940);
CASE(glProgramUniformMatrix3x2fv, 0xc0550572);
CASE(glProgramUniformMatrix2x4fv, 0x7d65f84d);
CASE(glProgramUniformMatrix4x2fv, 0x0442206a);
CASE(glProgramUniformMatrix3x4fv, 0xc1512578);
CASE(glProgramUniformMatrix4x3fv, 0x04c03769);
CASE(glValidateProgramPipeline, 0xacb1c05a);
CASE(glGetProgramPipelineInfoLog, 0x78a292e3);
CASE(glBindImageTexture, 0x12691c6b);
CASE(glGetBooleani_v, 0x2ea6d12f);
CASE(glMemoryBarrier, 0xf0ffbc0e);
CASE(glMemoryBarrierByRegion, 0xaa57656b);
CASE(glTexStorage2DMultisample, 0x44f8eb40);
CASE(glGetMultisamplefv, 0x6d11e233);
CASE(glSampleMaski, 0xe35cd112);
CASE(glGetTexLevelParameteriv, 0x68434d0b);
CASE(glGetTexLevelParameterfv, 0x68404ccb);
CASE(glBindVertexBuffer, 0xbe7ed338);
CASE(glVertexAttribFormat, 0x87c2ae88);
CASE(glVertexAttribIFormat, 0xaa2aa407);
CASE(glVertexAttribBinding, 0x05d7ca25);
CASE(glVertexBindingDivisor, 0xda824180);
#endif /* KHRN_GLES31_DRIVER*/

// GL_ES_VERSION_3_2
#if KHRN_GLES32_DRIVER
CASE(glBlendBarrier, 0x2d079a2c);
CASE(glCopyImageSubData, 0x2412f25b);
CASE(glDebugMessageControl, 0x76e62042);
CASE(glDebugMessageInsert, 0x0965a617);
CASE(glDebugMessageCallback, 0xa7e3021d);
CASE(glGetDebugMessageLog, 0x53254b3a);
CASE(glPushDebugGroup, 0x4946aced);
CASE(glPopDebugGroup, 0xaee56efd);
CASE(glObjectLabel, 0xf8053175);
CASE(glGetObjectLabel, 0x9ac3dee7);
CASE(glObjectPtrLabel, 0xb39f11f5);
CASE(glGetObjectPtrLabel, 0xa4e8ca5e);
CASE(glEnablei, 0xbd36b037);
CASE(glDisablei, 0x48c2dc24);
CASE(glBlendEquationi, 0xa3f66107);
CASE(glBlendEquationSeparatei, 0xda68ff66);
CASE(glBlendFunci, 0x6859de40);
CASE(glBlendFuncSeparatei, 0xc62a0e1c);
CASE(glColorMaski, 0x507e3861);
CASE(glIsEnabledi, 0x29617736);
CASE(glDrawElementsBaseVertex, 0x75de1b2b);
CASE(glDrawRangeElementsBaseVertex, 0x1ffcbbfc);
CASE(glDrawElementsInstancedBaseVertex, 0x8b4b8c2f);
CASE(glFramebufferTexture, 0xcd2dc17e);
CASE(glPrimitiveBoundingBox, 0x23fd26b8);
CASE(glGetGraphicsResetStatus, 0xb9111c54);
CASE(glReadnPixels, 0x27da47fa);
CASE(glGetnUniformfv, 0x9c943393);
CASE(glGetnUniformiv, 0x9c973353);
CASE(glGetnUniformuiv, 0x3ef3c678);
CASE(glMinSampleShading, 0xb55f6dac);
CASE(glPatchParameteri, 0x5f801683);
CASE(glTexParameterIiv, 0xbeb5675a);
CASE(glTexParameterIuiv, 0xce8b97ab);
CASE(glGetTexParameterIiv, 0xebeccb4f);
CASE(glGetTexParameterIuiv, 0x359a8af6);
CASE(glSamplerParameterIiv, 0xe135a285);
CASE(glSamplerParameterIuiv, 0xb5a7ea38);
CASE(glGetSamplerParameterIiv, 0x7c982afc);
CASE(glGetSamplerParameterIuiv, 0x05bcfc57);
CASE(glTexBuffer, 0x95704252);
CASE(glTexBufferRange, 0x077e1a45);
CASE(glTexStorage3DMultisample, 0x1180dd39);
#endif /* KHRN_GLES32_DRIVER*/

// EGL_KHR_cl_event2
CASE(eglCreateSync64KHR, 0xcee68210);

// EGL_KHR_client_get_all_proc_addresses

// EGL_KHR_create_context

// EGL_KHR_fence_sync
CASE(eglCreateSyncKHR, 0xf5cbcebf);
CASE(eglDestroySyncKHR, 0xa0a0d62a);
CASE(eglClientWaitSyncKHR, 0x7073eea3);
CASE(eglGetSyncAttribKHR, 0x1bfc9cd8);

// EGL_KHR_get_all_proc_addresses

// EGL_KHR_gl_colorspace

// EGL_KHR_gl_renderbuffer_image

// EGL_KHR_gl_texture_2D_image

// EGL_KHR_gl_texture_cubemap_image

// EGL_KHR_image
CASE(eglCreateImageKHR, 0xfa5597f5);
CASE(eglDestroyImageKHR, 0x3fe4c7ee);

// EGL_KHR_image_base

// EGL_KHR_image_pixmap

// EGL_KHR_surfaceless_context

// EGL_KHR_wait_sync
CASE(eglWaitSyncKHR, 0xc6231f18);

// GL_KHR_blend_equation_advanced
CASE(glBlendBarrierKHR, 0x9d4da8a7);

// GL_KHR_blend_equation_advanced_coherent

// GL_KHR_debug
CASE(glDebugMessageControlKHR, 0xd34e527f);
CASE(glDebugMessageInsertKHR, 0x184d3aae);
CASE(glDebugMessageCallbackKHR, 0xe5e130b6);
CASE(glGetDebugMessageLogKHR, 0x83b64840);
CASE(glPushDebugGroupKHR, 0x5d38ba52);
CASE(glPopDebugGroupKHR, 0x2b4445f9);
CASE(glObjectLabelKHR, 0x75d292b7);
CASE(glGetObjectLabelKHR, 0x671bd4aa);
CASE(glObjectPtrLabelKHR, 0xecc20529);
CASE(glGetObjectPtrLabelKHR, 0xafd9b946);
CASE(glGetPointervKHR, 0xb23ed055);

// GL_KHR_texture_compression_astc_ldr

// GL_OES_EGL_image
CASE(glEGLImageTargetTexture2DOES, 0xd92d7e5a);
CASE(glEGLImageTargetRenderbufferStorageOES, 0xfbcb7394);

// GL_OES_EGL_image_external

// GL_OES_EGL_sync

// GL_OES_compressed_ETC1_RGB8_texture

// GL_OES_compressed_paletted_texture

// GL_OES_depth24

// GL_OES_draw_buffers_indexed
#if V3D_HAS_PER_RT_BLEND
CASE(glEnableiOES, 0x3996644a);
CASE(glDisableiOES, 0xcdb71c00);
CASE(glBlendEquationiOES, 0x52d1493d);
CASE(glBlendEquationSeparateiOES, 0xa24e7dc1);
CASE(glBlendFunciOES, 0xb525b3e1);
CASE(glBlendFuncSeparateiOES, 0x44075e60);
CASE(glColorMaskiOES, 0xfc4e4570);
CASE(glIsEnablediOES, 0x2701ca07);
#endif /* V3D_HAS_PER_RT_BLEND*/

// GL_OES_draw_elements_base_vertex
CASE(glDrawElementsBaseVertexOES, 0xec855e6d);
CASE(glDrawRangeElementsBaseVertexOES, 0x21ea17f7);
CASE(glDrawElementsInstancedBaseVertexOES, 0xe07f7dc6);
CASE(glMultiDrawElementsBaseVertexOES, 0x2d281ed1);

// GL_OES_draw_texture
CASE(glDrawTexsOES, 0xbfbaaeb2);
CASE(glDrawTexiOES, 0xee7507e7);
CASE(glDrawTexxOES, 0xa85c8c9f);
CASE(glDrawTexsvOES, 0x5b3acec6);
CASE(glDrawTexivOES, 0xb3fe6c0c);
CASE(glDrawTexxvOES, 0xaed8dfd9);
CASE(glDrawTexfOES, 0x62e115b4);
CASE(glDrawTexfvOES, 0xe8392ad6);

// GL_OES_framebuffer_object
CASE(glIsRenderbufferOES, 0x7384a5fc);
CASE(glBindRenderbufferOES, 0xbb239926);
CASE(glDeleteRenderbuffersOES, 0x5f348544);
CASE(glGenRenderbuffersOES, 0xbb35db9e);
CASE(glRenderbufferStorageOES, 0x8f31f4ec);
CASE(glGetRenderbufferParameterivOES, 0x024947c7);
CASE(glIsFramebufferOES, 0x216178de);
CASE(glBindFramebufferOES, 0x9036cac4);
CASE(glDeleteFramebuffersOES, 0x0320d347);
CASE(glGenFramebuffersOES, 0xd6f4dd98);
CASE(glCheckFramebufferStatusOES, 0x7ffcd35d);
CASE(glFramebufferRenderbufferOES, 0xe350d9cf);
CASE(glFramebufferTexture2DOES, 0x972bc153);
CASE(glGetFramebufferAttachmentParameterivOES, 0x3f04d322);
CASE(glGenerateMipmapOES, 0x8e7ccc07);

// GL_OES_geometry_point_size
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_OES_geometry_shader
#if GLXX_HAS_TNG
CASE(glFramebufferTextureOES, 0x333d4f37);
#endif /* GLXX_HAS_TNG*/

// GL_OES_gpu_shader5
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_OES_mapbuffer
CASE(glMapBufferOES, 0x8c193d5f);
CASE(glUnmapBufferOES, 0xcd01edfe);
CASE(glGetBufferPointervOES, 0x0f261795);

// GL_OES_packed_depth_stencil

// GL_OES_point_size_array
CASE(glPointSizePointerOES, 0xa8681224);

// GL_OES_primitive_bounding_box
#if KHRN_GLES31_DRIVER
CASE(glPrimitiveBoundingBoxOES, 0xbd5865c0);
#endif /* KHRN_GLES31_DRIVER*/

// GL_OES_query_matrix
CASE(glQueryMatrixxOES, 0x06ffa6b6);

// GL_OES_rgb8_rgba8

// GL_OES_sample_shading
#if V3D_HAS_SRS
CASE(glMinSampleShadingOES, 0x9326b44c);
#endif /* V3D_HAS_SRS*/

// GL_OES_sample_variables
#if KHRN_GLES31_DRIVER && V3D_HAS_SRS
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_SRS*/

// GL_OES_shader_image_atomic

// GL_OES_shader_io_blocks
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_OES_shader_multisample_interpolation
#if KHRN_GLES31_DRIVER && V3D_HAS_SRS
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_SRS*/

// GL_OES_standard_derivatives

// GL_OES_stencil8

// GL_OES_stencil_wrap

// GL_OES_surfaceless_context

// GL_OES_tessellation_point_size
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_OES_tessellation_shader
#if GLXX_HAS_TNG
CASE(glPatchParameteriOES, 0x64c6a79c);
#endif /* GLXX_HAS_TNG*/

// GL_OES_texture_border_clamp
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
CASE(glTexParameterIivOES, 0x3705946b);
CASE(glTexParameterIuivOES, 0xe04db8b0);
CASE(glGetTexParameterIivOES, 0x662ec594);
CASE(glGetTexParameterIuivOES, 0x7bb01001);
CASE(glSamplerParameterIivOES, 0x8308d965);
CASE(glSamplerParameterIuivOES, 0x4bf72a49);
CASE(glGetSamplerParameterIivOES, 0x135d9de4);
CASE(glGetSamplerParameterIuivOES, 0x053b4549);
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_OES_texture_cube_map_array
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_OES_texture_mirrored_repeat

// GL_OES_texture_npot

// GL_OES_texture_stencil8

// GL_OES_texture_storage_multisample_2d_array
#if KHRN_GLES31_DRIVER
CASE(glTexStorage3DMultisampleOES, 0x4370ab54);
#endif /* KHRN_GLES31_DRIVER*/

// GL_OES_vertex_array_object
CASE(glBindVertexArrayOES, 0x5105f38f);
CASE(glDeleteVertexArraysOES, 0xbdbbd374);
CASE(glGenVertexArraysOES, 0x918e385a);
CASE(glIsVertexArrayOES, 0xe2304367);

// GL_OES_vertex_half_float

// EGL_BRCM_event_monitor
#if EGL_BRCM_event_monitor
CASE(eglGetEventConstantBRCM, 0xf5aadd26);
CASE(eglGetEventTrackInfoBRCM, 0x3214c291);
CASE(eglGetEventInfoBRCM, 0x2dc29354);
CASE(eglGetEventDataFieldInfoBRCM, 0xe4be8c54);
CASE(eglSetEventCollectionBRCM, 0xd9ea7590);
CASE(eglGetEventDataBRCM, 0x9dbcd50e);
#endif /* EGL_BRCM_event_monitor*/

// EGL_BRCM_gl_framebuffer_image
#if EGL_BRCM_gl_framebuffer_image
#endif /* EGL_BRCM_gl_framebuffer_image*/

// EGL_BRCM_performance_counters
#if EGL_BRCM_performance_counters
CASE(eglGetPerfCounterConstantBRCM, 0xb719d8fc);
CASE(eglGetPerfCounterGroupInfoBRCM, 0xe4dc453c);
CASE(eglGetPerfCounterInfoBRCM, 0xfc4402ab);
CASE(eglSetPerfCountingBRCM, 0xc4bc4ed2);
CASE(eglChoosePerfCountersBRCM, 0xca4c1037);
CASE(eglGetPerfCounterDataBRCM, 0x6c3ee535);
#endif /* EGL_BRCM_performance_counters*/

// EGL_EXT_client_extensions

// EGL_EXT_create_context_robustness
#if EGL_EXT_create_context_robustness
#endif /* EGL_EXT_create_context_robustness*/

// EGL_EXT_platform_base
CASE(eglGetPlatformDisplayEXT, 0xc01035ae);
CASE(eglCreatePlatformWindowSurfaceEXT, 0x026bc216);
CASE(eglCreatePlatformPixmapSurfaceEXT, 0x470711cd);

// EGL_EXT_protected_content
#if EGL_EXT_protected_content
#endif /* EGL_EXT_protected_content*/

// EGL_EXT_protected_surface
#if EGL_EXT_protected_surface
#endif /* EGL_EXT_protected_surface*/

// GL_BRCM_mirror_once_border

// GL_BRCM_polygon_mode
CASE(glPolygonModeBRCM, 0x67332781);

// GL_BRCM_provoking_vertex
#if V3D_VER_AT_LEAST(3,3,0,0)
CASE(glProvokingVertexBRCM, 0xe8a03b96);
#endif /* V3D_VER_AT_LEAST(3,3,0,0)*/

// GL_BRCM_texture_1D
CASE(glTexImage1DBRCM, 0xc6130655);

// GL_BRCM_texture_norm16

// GL_EXT_base_instance
#if V3D_HAS_BASEINSTANCE
CASE(glDrawArraysInstancedBaseInstanceEXT, 0x688001ef);
CASE(glDrawElementsInstancedBaseInstanceEXT, 0xf75b5917);
CASE(glDrawElementsInstancedBaseVertexBaseInstanceEXT, 0x511afbcd);
#endif /* V3D_HAS_BASEINSTANCE*/

// GL_EXT_color_buffer_float
#if GL_EXT_color_buffer_float
#endif /* GL_EXT_color_buffer_float*/

// GL_EXT_debug_marker
CASE(glInsertEventMarkerEXT, 0xf49e1fd5);
CASE(glPushGroupMarkerEXT, 0x666828ef);
CASE(glPopGroupMarkerEXT, 0xa2913965);

// GL_EXT_discard_framebuffer
CASE(glDiscardFramebufferEXT, 0x3b96cdfb);

// GL_EXT_draw_buffers_indexed
#if V3D_HAS_PER_RT_BLEND
CASE(glEnableiEXT, 0x34bcf33c);
CASE(glDisableiEXT, 0xc8def385);
CASE(glBlendEquationiEXT, 0x4df7c867);
CASE(glBlendEquationSeparateiEXT, 0x9d75d446);
CASE(glBlendFunciEXT, 0xb04bc023);
CASE(glBlendFuncSeparateiEXT, 0x3f2dbb26);
CASE(glColorMaskiEXT, 0xf775d597);
CASE(glIsEnablediEXT, 0x22287482);
#endif /* V3D_HAS_PER_RT_BLEND*/

// GL_EXT_draw_elements_base_vertex
CASE(glDrawElementsBaseVertexEXT, 0xe7acfb20);
CASE(glDrawRangeElementsBaseVertexEXT, 0x1d1082d1);
CASE(glDrawElementsInstancedBaseVertexEXT, 0xdba6dcfb);
CASE(glMultiDrawElementsBaseVertexEXT, 0x284eb5d3);

// GL_EXT_geometry_point_size
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_EXT_geometry_shader
#if GLXX_HAS_TNG
CASE(glFramebufferTextureEXT, 0x2e63cbcd);
#endif /* GLXX_HAS_TNG*/

// GL_EXT_gpu_shader5
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_EXT_multi_draw_indirect
CASE(glMultiDrawArraysIndirectEXT, 0x8a6ebbef);
CASE(glMultiDrawElementsIndirectEXT, 0x1bcb2e2f);

// GL_EXT_multisampled_render_to_texture
CASE(glRenderbufferStorageMultisampleEXT, 0xf519c947);
CASE(glFramebufferTexture2DMultisampleEXT, 0x5488e88b);

// GL_EXT_primitive_bounding_box
#if KHRN_GLES31_DRIVER
CASE(glPrimitiveBoundingBoxEXT, 0xb87ffa43);
#endif /* KHRN_GLES31_DRIVER*/

// GL_EXT_protected_textures

// GL_EXT_robustness
CASE(glGetGraphicsResetStatusEXT, 0x74e2d6de);
CASE(glReadnPixelsEXT, 0x5d19a6b8);
CASE(glGetnUniformfvEXT, 0xa3202ada);
CASE(glGetnUniformivEXT, 0x6ee5c818);

// GL_EXT_shader_integer_mix

// GL_EXT_shader_io_blocks
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_EXT_shader_texture_lod

// GL_EXT_tessellation_point_size
#if GLXX_HAS_TNG
#endif /* GLXX_HAS_TNG*/

// GL_EXT_tessellation_shader
#if GLXX_HAS_TNG
CASE(glPatchParameteriEXT, 0x5fed7313);
#endif /* GLXX_HAS_TNG*/

// GL_EXT_texture_border_clamp
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
CASE(glTexParameterIivEXT, 0x322c3f3e);
CASE(glTexParameterIuivEXT, 0xdb7319d2);
CASE(glGetTexParameterIivEXT, 0x61556c0b);
CASE(glGetTexParameterIuivEXT, 0x76d6a383);
CASE(glSamplerParameterIivEXT, 0x7e2eba3f);
CASE(glSamplerParameterIuivEXT, 0x471d8c7f);
CASE(glGetSamplerParameterIivEXT, 0x0e83f6de);
CASE(glGetSamplerParameterIuivEXT, 0x0061aa77);
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_EXT_texture_cube_map_array
#if KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG
#endif /* KHRN_GLES31_DRIVER && V3D_HAS_NEW_TMU_CFG*/

// GL_EXT_texture_filter_anisotropic
#if GL_EXT_texture_filter_anisotropic
#endif /* GL_EXT_texture_filter_anisotropic*/

// GL_EXT_texture_format_BGRA8888

// GL_EXT_texture_sRGB_R8
#if V3D_VER_AT_LEAST(3,3,0,0)
#endif /* V3D_VER_AT_LEAST(3,3,0,0)*/

// GL_EXT_texture_sRGB_RG8
#if V3D_VER_AT_LEAST(3,3,0,0)
#endif /* V3D_VER_AT_LEAST(3,3,0,0)*/
