/*=============================================================================
Copyright (c) 2015 Broadcom Europe Limited.
All rights reserved.
=============================================================================*/
/* Auto-generated by running gen_hook_tables.py
 * DO NOT EDIT!
 */
/* EGL ENUMS WITH DUPLICATE VALUES */

//EnumValCase(EGL_FALSE, 0);                                // =  0
//EnumValCase(EGL_NO_CONTEXT, 0);                           // =  0
//EnumValCase(EGL_NO_DISPLAY, 0);                           // =  0
//EnumValCase(EGL_NO_SURFACE, 0);                           // =  0
//EnumValCase(EGL_DEFAULT_DISPLAY, 0);                      // =  0
//EnumValCase(EGL_NO_SYNC, 0);                              // =  0
//EnumValCase(EGL_NO_IMAGE, 0);                             // =  0
//EnumValCase(EGL_NO_IMAGE_KHR, 0);                         // =  0
//EnumValCase(EGL_WINDOW_BIT, 4);                           // =  4
//EnumValCase(EGL_OPENGL_ES2_BIT, 4);                       // =  4
//EnumValCase(EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR, 4); // =  4
//EnumValCase(EGL_PBUFFER_BIT, 1);                          // =  1
//EnumValCase(EGL_TRUE, 1);                                 // =  1
//EnumValCase(EGL_OPENGL_ES_BIT, 1);                        // =  1
//EnumValCase(EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT, 1);      // =  1
//EnumValCase(EGL_SYNC_FLUSH_COMMANDS_BIT, 1);              // =  1
//EnumValCase(EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR, 1);         // =  1
//EnumValCase(EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR, 1);  // =  1
//EnumValCase(EGL_PIXMAP_BIT, 2);                           // =  2
//EnumValCase(EGL_OPENVG_BIT, 2);                           // =  2
//EnumValCase(EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT, 2);// =  2
//EnumValCase(EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR, 2);// =  2
//EnumValCase(EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR, 2);// =  2
//EnumValCase(EGL_COLORSPACE, 12423);                       // =  12423
//EnumValCase(EGL_VG_COLORSPACE, 12423);                    // =  12423
//EnumValCase(EGL_ALPHA_FORMAT, 12424);                     // =  12424
//EnumValCase(EGL_VG_ALPHA_FORMAT, 12424);                  // =  12424
//EnumValCase(EGL_COLORSPACE_sRGB, 12425);                  // =  12425
//EnumValCase(EGL_VG_COLORSPACE_sRGB, 12425);               // =  12425
//EnumValCase(EGL_GL_COLORSPACE_SRGB, 12425);               // =  12425
//EnumValCase(EGL_GL_COLORSPACE_SRGB_KHR, 12425);           // =  12425
//EnumValCase(EGL_COLORSPACE_LINEAR, 12426);                // =  12426
//EnumValCase(EGL_VG_COLORSPACE_LINEAR, 12426);             // =  12426
//EnumValCase(EGL_GL_COLORSPACE_LINEAR, 12426);             // =  12426
//EnumValCase(EGL_GL_COLORSPACE_LINEAR_KHR, 12426);         // =  12426
//EnumValCase(EGL_ALPHA_FORMAT_NONPRE, 12427);              // =  12427
//EnumValCase(EGL_VG_ALPHA_FORMAT_NONPRE, 12427);           // =  12427
//EnumValCase(EGL_ALPHA_FORMAT_PRE, 12428);                 // =  12428
//EnumValCase(EGL_VG_ALPHA_FORMAT_PRE, 12428);              // =  12428
//EnumValCase(EGL_CONTEXT_CLIENT_VERSION, 12440);           // =  12440
//EnumValCase(EGL_CONTEXT_MAJOR_VERSION, 12440);            // =  12440
//EnumValCase(EGL_CONTEXT_MAJOR_VERSION_KHR, 12440);        // =  12440
//EnumValCase(EGL_VG_ALPHA_FORMAT_PRE_BIT, 64);             // =  64
//EnumValCase(EGL_OPENGL_ES3_BIT, 64);                      // =  64
//EnumValCase(EGL_OPENGL_ES3_BIT_KHR, 64);                  // =  64
//EnumValCase(EGL_PLATFORM_X11_KHR, 12757);                 // =  12757
//EnumValCase(EGL_PLATFORM_X11_EXT, 12757);                 // =  12757
//EnumValCase(EGL_PLATFORM_X11_SCREEN_KHR, 12758);          // =  12758
//EnumValCase(EGL_PLATFORM_X11_SCREEN_EXT, 12758);          // =  12758
//EnumValCase(EGL_DONT_CARE, -1);                           // =  -1
//EnumValCase(EGL_UNKNOWN, -1);                             // =  -1
//EnumValCase(EGL_NO_NATIVE_FENCE_FD_ANDROID, -1);          // =  -1
/* END EGL ENUMS WITH DUPLICATE VALUES */

  EnumValCase(EGL_ALPHA_SIZE, 12321);
  EnumValCase(EGL_BAD_ACCESS, 12290);
  EnumValCase(EGL_BAD_ALLOC, 12291);
  EnumValCase(EGL_BAD_ATTRIBUTE, 12292);
  EnumValCase(EGL_BAD_CONFIG, 12293);
  EnumValCase(EGL_BAD_CONTEXT, 12294);
  EnumValCase(EGL_BAD_CURRENT_SURFACE, 12295);
  EnumValCase(EGL_BAD_DISPLAY, 12296);
  EnumValCase(EGL_BAD_MATCH, 12297);
  EnumValCase(EGL_BAD_NATIVE_PIXMAP, 12298);
  EnumValCase(EGL_BAD_NATIVE_WINDOW, 12299);
  EnumValCase(EGL_BAD_PARAMETER, 12300);
  EnumValCase(EGL_BAD_SURFACE, 12301);
  EnumValCase(EGL_BLUE_SIZE, 12322);
  EnumValCase(EGL_BUFFER_SIZE, 12320);
  EnumValCase(EGL_CONFIG_CAVEAT, 12327);
  EnumValCase(EGL_CONFIG_ID, 12328);
  EnumValCase(EGL_CORE_NATIVE_ENGINE, 12379);
  EnumValCase(EGL_DEPTH_SIZE, 12325);
//EnumValCase(EGL_DONT_CARE, -1);                           // Duplicate value
  EnumValCase(EGL_DRAW, 12377);
  EnumValCase(EGL_EXTENSIONS, 12373);
//EnumValCase(EGL_FALSE, 0);                                // Duplicate value
  EnumValCase(EGL_GREEN_SIZE, 12323);
  EnumValCase(EGL_HEIGHT, 12374);
  EnumValCase(EGL_LARGEST_PBUFFER, 12376);
  EnumValCase(EGL_LEVEL, 12329);
  EnumValCase(EGL_MAX_PBUFFER_HEIGHT, 12330);
  EnumValCase(EGL_MAX_PBUFFER_PIXELS, 12331);
  EnumValCase(EGL_MAX_PBUFFER_WIDTH, 12332);
  EnumValCase(EGL_NATIVE_RENDERABLE, 12333);
  EnumValCase(EGL_NATIVE_VISUAL_ID, 12334);
  EnumValCase(EGL_NATIVE_VISUAL_TYPE, 12335);
  EnumValCase(EGL_NONE, 12344);
  EnumValCase(EGL_NON_CONFORMANT_CONFIG, 12369);
  EnumValCase(EGL_NOT_INITIALIZED, 12289);
//EnumValCase(EGL_NO_CONTEXT, 0);                           // Duplicate value
//EnumValCase(EGL_NO_DISPLAY, 0);                           // Duplicate value
//EnumValCase(EGL_NO_SURFACE, 0);                           // Duplicate value
//EnumValCase(EGL_PBUFFER_BIT, 1);                          // Duplicate value
//EnumValCase(EGL_PIXMAP_BIT, 2);                           // Duplicate value
  EnumValCase(EGL_READ, 12378);
  EnumValCase(EGL_RED_SIZE, 12324);
  EnumValCase(EGL_SAMPLES, 12337);
  EnumValCase(EGL_SAMPLE_BUFFERS, 12338);
  EnumValCase(EGL_SLOW_CONFIG, 12368);
  EnumValCase(EGL_STENCIL_SIZE, 12326);
  EnumValCase(EGL_SUCCESS, 12288);
  EnumValCase(EGL_SURFACE_TYPE, 12339);
  EnumValCase(EGL_TRANSPARENT_BLUE_VALUE, 12341);
  EnumValCase(EGL_TRANSPARENT_GREEN_VALUE, 12342);
  EnumValCase(EGL_TRANSPARENT_RED_VALUE, 12343);
  EnumValCase(EGL_TRANSPARENT_RGB, 12370);
  EnumValCase(EGL_TRANSPARENT_TYPE, 12340);
//EnumValCase(EGL_TRUE, 1);                                 // Duplicate value
  EnumValCase(EGL_VENDOR, 12371);
  EnumValCase(EGL_VERSION, 12372);
  EnumValCase(EGL_WIDTH, 12375);
//EnumValCase(EGL_WINDOW_BIT, 4);                           // Duplicate value
  EnumValCase(EGL_BACK_BUFFER, 12420);
  EnumValCase(EGL_BIND_TO_TEXTURE_RGB, 12345);
  EnumValCase(EGL_BIND_TO_TEXTURE_RGBA, 12346);
  EnumValCase(EGL_CONTEXT_LOST, 12302);
  EnumValCase(EGL_MIN_SWAP_INTERVAL, 12347);
  EnumValCase(EGL_MAX_SWAP_INTERVAL, 12348);
  EnumValCase(EGL_MIPMAP_TEXTURE, 12418);
  EnumValCase(EGL_MIPMAP_LEVEL, 12419);
  EnumValCase(EGL_NO_TEXTURE, 12380);
  EnumValCase(EGL_TEXTURE_2D, 12383);
  EnumValCase(EGL_TEXTURE_FORMAT, 12416);
  EnumValCase(EGL_TEXTURE_RGB, 12381);
  EnumValCase(EGL_TEXTURE_RGBA, 12382);
  EnumValCase(EGL_TEXTURE_TARGET, 12417);
//EnumValCase(EGL_ALPHA_FORMAT, 12424);                     // Duplicate value
//EnumValCase(EGL_ALPHA_FORMAT_NONPRE, 12427);              // Duplicate value
//EnumValCase(EGL_ALPHA_FORMAT_PRE, 12428);                 // Duplicate value
  EnumValCase(EGL_ALPHA_MASK_SIZE, 12350);
  EnumValCase(EGL_BUFFER_PRESERVED, 12436);
  EnumValCase(EGL_BUFFER_DESTROYED, 12437);
  EnumValCase(EGL_CLIENT_APIS, 12429);
//EnumValCase(EGL_COLORSPACE, 12423);                       // Duplicate value
//EnumValCase(EGL_COLORSPACE_sRGB, 12425);                  // Duplicate value
//EnumValCase(EGL_COLORSPACE_LINEAR, 12426);                // Duplicate value
  EnumValCase(EGL_COLOR_BUFFER_TYPE, 12351);
  EnumValCase(EGL_CONTEXT_CLIENT_TYPE, 12439);
  EnumValCase(EGL_DISPLAY_SCALING, 10000);
  EnumValCase(EGL_HORIZONTAL_RESOLUTION, 12432);
  EnumValCase(EGL_LUMINANCE_BUFFER, 12431);
  EnumValCase(EGL_LUMINANCE_SIZE, 12349);
//EnumValCase(EGL_OPENGL_ES_BIT, 1);                        // Duplicate value
//EnumValCase(EGL_OPENVG_BIT, 2);                           // Duplicate value
  EnumValCase(EGL_OPENGL_ES_API, 12448);
  EnumValCase(EGL_OPENVG_API, 12449);
  EnumValCase(EGL_OPENVG_IMAGE, 12438);
  EnumValCase(EGL_PIXEL_ASPECT_RATIO, 12434);
  EnumValCase(EGL_RENDERABLE_TYPE, 12352);
  EnumValCase(EGL_RENDER_BUFFER, 12422);
  EnumValCase(EGL_RGB_BUFFER, 12430);
  EnumValCase(EGL_SINGLE_BUFFER, 12421);
  EnumValCase(EGL_SWAP_BEHAVIOR, 12435);
//EnumValCase(EGL_UNKNOWN, -1);                             // Duplicate value
  EnumValCase(EGL_VERTICAL_RESOLUTION, 12433);
  EnumValCase(EGL_CONFORMANT, 12354);
//EnumValCase(EGL_CONTEXT_CLIENT_VERSION, 12440);           // Duplicate value
  EnumValCase(EGL_MATCH_NATIVE_PIXMAP, 12353);
//EnumValCase(EGL_OPENGL_ES2_BIT, 4);                       // Duplicate value
//EnumValCase(EGL_VG_ALPHA_FORMAT, 12424);                  // Duplicate value
//EnumValCase(EGL_VG_ALPHA_FORMAT_NONPRE, 12427);           // Duplicate value
//EnumValCase(EGL_VG_ALPHA_FORMAT_PRE, 12428);              // Duplicate value
//EnumValCase(EGL_VG_ALPHA_FORMAT_PRE_BIT, 64);             // Duplicate value
//EnumValCase(EGL_VG_COLORSPACE, 12423);                    // Duplicate value
//EnumValCase(EGL_VG_COLORSPACE_sRGB, 12425);               // Duplicate value
//EnumValCase(EGL_VG_COLORSPACE_LINEAR, 12426);             // Duplicate value
  EnumValCase(EGL_VG_COLORSPACE_LINEAR_BIT, 32);
//EnumValCase(EGL_DEFAULT_DISPLAY, 0);                      // Duplicate value
  EnumValCase(EGL_MULTISAMPLE_RESOLVE_BOX_BIT, 512);
  EnumValCase(EGL_MULTISAMPLE_RESOLVE, 12441);
  EnumValCase(EGL_MULTISAMPLE_RESOLVE_DEFAULT, 12442);
  EnumValCase(EGL_MULTISAMPLE_RESOLVE_BOX, 12443);
  EnumValCase(EGL_OPENGL_API, 12450);
  EnumValCase(EGL_OPENGL_BIT, 8);
  EnumValCase(EGL_SWAP_BEHAVIOR_PRESERVED_BIT, 1024);
//EnumValCase(EGL_CONTEXT_MAJOR_VERSION, 12440);            // Duplicate value
  EnumValCase(EGL_CONTEXT_MINOR_VERSION, 12539);
  EnumValCase(EGL_CONTEXT_OPENGL_PROFILE_MASK, 12541);
  EnumValCase(EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY, 12733);
  EnumValCase(EGL_NO_RESET_NOTIFICATION, 12734);
  EnumValCase(EGL_LOSE_CONTEXT_ON_RESET, 12735);
//EnumValCase(EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT, 1);      // Duplicate value
//EnumValCase(EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT, 2);// Duplicate value
  EnumValCase(EGL_CONTEXT_OPENGL_DEBUG, 12720);
  EnumValCase(EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE, 12721);
  EnumValCase(EGL_CONTEXT_OPENGL_ROBUST_ACCESS, 12722);
//EnumValCase(EGL_OPENGL_ES3_BIT, 64);                      // Duplicate value
  EnumValCase(EGL_CL_EVENT_HANDLE, 12444);
  EnumValCase(EGL_SYNC_CL_EVENT, 12542);
  EnumValCase(EGL_SYNC_CL_EVENT_COMPLETE, 12543);
  EnumValCase(EGL_SYNC_PRIOR_COMMANDS_COMPLETE, 12528);
  EnumValCase(EGL_SYNC_TYPE, 12535);
  EnumValCase(EGL_SYNC_STATUS, 12529);
  EnumValCase(EGL_SYNC_CONDITION, 12536);
  EnumValCase(EGL_SIGNALED, 12530);
  EnumValCase(EGL_UNSIGNALED, 12531);
//EnumValCase(EGL_SYNC_FLUSH_COMMANDS_BIT, 1);              // Duplicate value
  EnumValCase(EGL_TIMEOUT_EXPIRED, 12533);
  EnumValCase(EGL_CONDITION_SATISFIED, 12534);
//EnumValCase(EGL_NO_SYNC, 0);                              // Duplicate value
  EnumValCase(EGL_SYNC_FENCE, 12537);
  EnumValCase(EGL_GL_COLORSPACE, 12445);
//EnumValCase(EGL_GL_COLORSPACE_SRGB, 12425);               // Duplicate value
//EnumValCase(EGL_GL_COLORSPACE_LINEAR, 12426);             // Duplicate value
  EnumValCase(EGL_GL_RENDERBUFFER, 12473);
  EnumValCase(EGL_GL_TEXTURE_2D, 12465);
  EnumValCase(EGL_GL_TEXTURE_LEVEL, 12476);
  EnumValCase(EGL_GL_TEXTURE_3D, 12466);
  EnumValCase(EGL_GL_TEXTURE_ZOFFSET, 12477);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X, 12467);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X, 12468);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y, 12469);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, 12470);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z, 12471);
  EnumValCase(EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, 12472);
  EnumValCase(EGL_IMAGE_PRESERVED, 12498);
//EnumValCase(EGL_NO_IMAGE, 0);                             // Duplicate value
//EnumValCase(EGL_CONTEXT_MAJOR_VERSION_KHR, 12440);        // Duplicate value
  EnumValCase(EGL_CONTEXT_FLAGS_KHR, 12540);
//EnumValCase(EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR, 1);         // Duplicate value
//EnumValCase(EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR, 2);// Duplicate value
//EnumValCase(EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR, 4); // Duplicate value
//EnumValCase(EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR, 1);  // Duplicate value
//EnumValCase(EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR, 2);// Duplicate value
//EnumValCase(EGL_OPENGL_ES3_BIT_KHR, 64);                  // Duplicate value
  EnumValCase(EGL_CONTEXT_OPENGL_NO_ERROR_KHR, 12723);
//EnumValCase(EGL_GL_COLORSPACE_SRGB_KHR, 12425);           // Duplicate value
//EnumValCase(EGL_GL_COLORSPACE_LINEAR_KHR, 12426);         // Duplicate value
  EnumValCase(EGL_NATIVE_PIXMAP_KHR, 12464);
//EnumValCase(EGL_NO_IMAGE_KHR, 0);                         // Duplicate value
  EnumValCase(EGL_PLATFORM_ANDROID_KHR, 12609);
//EnumValCase(EGL_PLATFORM_X11_KHR, 12757);                 // Duplicate value
//EnumValCase(EGL_PLATFORM_X11_SCREEN_KHR, 12758);          // Duplicate value
  EnumValCase(EGL_FRAMEBUFFER_TARGET_ANDROID, 12615);
  EnumValCase(EGL_NATIVE_BUFFER_ANDROID, 12608);
  EnumValCase(EGL_SYNC_NATIVE_FENCE_ANDROID, 12612);
  EnumValCase(EGL_SYNC_NATIVE_FENCE_FD_ANDROID, 12613);
  EnumValCase(EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID, 12614);
//EnumValCase(EGL_NO_NATIVE_FENCE_FD_ANDROID, -1);          // Duplicate value
  EnumValCase(EGL_RECORDABLE_ANDROID, 12610);
  EnumValCase(EGL_ACQUIRE_EVENTS_BRCM, 13264);
  EnumValCase(EGL_RELEASE_EVENTS_BRCM, 13265);
  EnumValCase(EGL_START_EVENTS_BRCM, 13266);
  EnumValCase(EGL_STOP_EVENTS_BRCM, 13267);
  EnumValCase(EGL_NUM_EVENT_TRACKS_BRCM, 13268);
  EnumValCase(EGL_NUM_EVENTS_BRCM, 13269);
  EnumValCase(EGL_MAX_EVENT_STRING_LEN_BRCM, 13270);
  EnumValCase(EGL_GL_FRAMEBUFFER_BRCM, 28857);
  EnumValCase(EGL_GL_FRAMEBUFFER_TARGET_BRCM, 28858);
  EnumValCase(EGL_GL_FRAMEBUFFER_ATTACHMENT_BRCM, 28859);
  EnumValCase(EGL_GL_FRAMEBUFFER_CONVERT_TO_COLOR_BRCM, 28860);
  EnumValCase(EGL_GL_FRAMEBUFFER_CONVERT_TO_UIF, 28861);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_SET_MODE_BRCM, 12896);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_CHANGED_REGION_BRCM, 12897);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_SET_LOCK_STATE_BRCM, 12898);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_ALWAYS_BRCM, 12899);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_EXPLICIT_BRCM, 12900);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_LOCK_BRCM, 12901);
  EnumValCase(EGL_IMAGE_UPDATE_CONTROL_UNLOCK_BRCM, 12902);
  EnumValCase(EGL_ACQUIRE_COUNTERS_BRCM, 13248);
  EnumValCase(EGL_RELEASE_COUNTERS_BRCM, 13249);
  EnumValCase(EGL_START_COUNTERS_BRCM, 13250);
  EnumValCase(EGL_STOP_COUNTERS_BRCM, 13251);
  EnumValCase(EGL_NUM_COUNTER_GROUPS_BRCM, 13252);
  EnumValCase(EGL_MAX_COUNTER_STRING_LEN_BRCM, 13253);
  EnumValCase(EGL_PLATFORM_NEXUS_BRCM, 13040);
  EnumValCase(EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT, 12479);
  EnumValCase(EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT, 12600);
//EnumValCase(EGL_PLATFORM_X11_EXT, 12757);                 // Duplicate value
//EnumValCase(EGL_PLATFORM_X11_SCREEN_EXT, 12758);          // Duplicate value
