###############################################################################
# Broadcom Proprietary and Confidential. (c)2016 Broadcom. All rights reserved.
#
# This program is the proprietary software of Broadcom and/or its
# licensors, and may only be used, duplicated, modified or distributed pursuant
# to the terms and conditions of a separate, written license agreement executed
# between you and Broadcom (an "Authorized License").  Except as set forth in
# an Authorized License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and Broadcom
# expressly reserves all rights in and to the Software and all intellectual
# property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
# HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
# NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1. This program, including its structure, sequence and organization,
#    constitutes the valuable trade secrets of Broadcom, and you shall use all
#    reasonable efforts to protect the confidentiality thereof, and to use
#    this information only in connection with your use of Broadcom integrated
#    circuit products.
#
# 2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
#    AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
#    WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT
#    TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED
#    WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A
#    PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
#    ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
#    THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
#    LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT,
#    OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO
#    YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN
#    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS
#    OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER
#    IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF
#    ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
###############################################################################
#
# Test Suite Configuration: videodecode Test Definitions
#
###############################################################################
#
# Details on the config file syntax for test definition can be found here:
# http://twiki-01.broadcom.com/bin/view/Bsema/ConfigBasedAutomatedTesting
#
#########################################################################


#########################################
#   Global Definitions
#########################################

suite_name  : videodecode

# include common definitions for all tests (global definitions) ...
include     : videodecode_common.cfg

script_dir  : {source_path}/rockford/unittests/nexus/steve/scripts
golden_files_dir  : {source_path}/rockford/unittests/nexus/steve/golden_files

mapping : nav_file_dir platform_endian
	be : nav_be
	default : .

##########################################
test_definition : decode
##########################################

app_name	: playback
app_path        : nexus/utils

#iterate : stream_file  ['geishaAvcHD.mpg', 'italyriviera-spiderman2_cc_short.mpg', 'colr720p.es', 'asf/Discoverers_1080ap.wmv', 'avi/F01_HD_1080p11_640x480_Xsub_01.divx', 'Elephants_Dream.webm', 'pineapple_express.flv', 'hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts']

iterate		: group input_files

group_start	: input_files
stream_file     	: geishaAvcHD.mpg
nav_file          	: geishaAvcHD.nav
protocol			: H264
strm_width		: 1440
strm_height		: 1088
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: italyriviera-spiderman2_cc_short.mpg
nav_file          	: xxx.nav
protocol			: MPEG2
strm_width		: 1920
strm_height		: 1080
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: colr720p.es
nav_file          	: xxx.nav
protocol			: MPEG2
strm_width		: 1280
strm_height		: 720
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Discoverers_1080ap.wmv
nav_file          	: xxx.nav
protocol			: VC1
strm_width		: 1440
strm_height		: 1080
subdir			: asf/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: F01_HD_1080p11_640x480_Xsub_01.divx
nav_file          	: xxx.nav
protocol			: MPEG4_PART2
strm_width		: 640
strm_height		: 480
subdir			: avi/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Elephants_Dream.webm
nav_file          	: xxx.nav
protocol			: VP8
strm_width		: 544
strm_height		: 368
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: pineapple_express.flv
nav_file          	: xxx.nav
protocol			: SPARK
strm_width		: 480
strm_height		: 368
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 1920
strm_height		: 1080
subdir			: hevc/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: big_buck_bunny_4kp60_8bit.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 3840
strm_height		: 2160
subdir			: hevc/
nxserver_settings	: -memconfig videoDecoder,0,4096,2160
group_end	: input_files

group_start	: input_files
stream_file     	: big_buck_bunny_4kp60_10bit.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 3840
strm_height		: 2160
subdir			: hevc/
nxserver_settings	: -memconfig videoDecoder,0,4096,2160
group_end	: input_files

group_start	: input_files
stream_file     	: case_14211_VP9_HD.webm
nav_file          	: xxx.nav
protocol			: VP9
strm_width		: 1920
strm_height		: 1080
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Time_lapse_Video_4k_clouds_in_the_sky_over_the_rocks_VP9.webm
nav_file          	: xxx.nav
protocol			: VP9
strm_width		: 3840
strm_height		: 2160
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: hevc_interlaced_60i_fields_w_hints.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 720
strm_height		: 240
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

verify_command   : python {script_dir}/verify_decode.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_').replace('/','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{subdir}{stream_file}

target_input1     : multiline
sleep(10000)
quit

pre_test_command  : echo "Is disk removable = $(cat /sys/block/sda/removable)"
pre_test_command  : echo "Disk vendor = $(cat /sys/block/sda/device/vendor)"

target_command	: multiline
export msg_modules=BXDM_PPQM,BXDM_PPDBG
./nexus {app_name} /data/videos/{subdir}{stream_file} < {target_input1}

# Note: I tried using "-eof pause" in the preceding command to prevent the stream from wrapping.
# However on some platforms this resulted in a bus error when the application exited.
# The final solution was to change the validation script to handle stream wraps.

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} < 'N' and '{protocol}' == 'H265'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} < 'R' and '{protocol}' == 'VP9'

condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VC1'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'MPEG4_PART2'

# Not all chips with rev Q cores support 4K, to keep things simple disable the 4K tests on all rev Q's.
condition : exclude {@avd_revision} <= 'Q' and '{protocol}' == 'H265' and '{strm_height}' >= '2160'

##########################################
test_definition : crc_avd
##########################################

app_name        : crc
app_path          : nexus/nxclient/apps

#iterate : stream_file  ['geishaAvcHD.mpg', 'italyriviera-spiderman2_cc_short.mpg', 'colr720p.es', 'asf/Discoverers_1080ap.wmv', 'avi/F01_HD_1080p11_640x480_Xsub_01.divx', 'Elephants_Dream.webm', 'pineapple_express.flv', 'hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts']

iterate		: group input_files

group_start	: input_files
stream_file     	: geishaAvcHD.mpg
nav_file          	: geishaAvcHD.nav
protocol			: H264
strm_width		: 1440
strm_height		: 1088
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: italyriviera-spiderman2_cc_short.mpg
nav_file          	: xxx.nav
protocol			: MPEG2
strm_width		: 1920
strm_height		: 1080
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: colr720p.es
nav_file          	: xxx.nav
protocol			: MPEG2
strm_width		: 1280
strm_height		: 720
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Discoverers_1080ap.wmv
nav_file          	: xxx.nav
protocol			: VC1
strm_width		: 1440
strm_height		: 1080
subdir			: asf/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: F01_HD_1080p11_640x480_Xsub_01.divx
nav_file          	: xxx.nav
protocol			: MPEG4_PART2
strm_width		: 640
strm_height		: 480
subdir			: avi/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Elephants_Dream.webm
nav_file          	: xxx.nav
protocol			: VP8
strm_width		: 544
strm_height		: 368
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: pineapple_express.flv
nav_file          	: xxx.nav
protocol			: SPARK
strm_width		: 480
strm_height		: 368
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 1920
strm_height		: 1080
subdir			: hevc/
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: big_buck_bunny_4kp60_8bit.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 3840
strm_height		: 2160
subdir			: hevc/
nxserver_settings	: -memconfig videoDecoder,0,4096,2160
group_end	: input_files

group_start	: input_files
stream_file     	: big_buck_bunny_4kp60_10bit.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 3840
strm_height		: 2160
subdir			: hevc/
nxserver_settings	: -memconfig videoDecoder,0,4096,2160
group_end	: input_files

group_start	: input_files
stream_file     	: case_14211_VP9_HD.webm
nav_file          	: xxx.nav
protocol			: VP9
strm_width		: 1920
strm_height		: 1080
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: Time_lapse_Video_4k_clouds_in_the_sky_over_the_rocks_VP9.webm
nav_file          	: xxx.nav
protocol			: VP9
strm_width		: 3840
strm_height		: 2160
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

group_start	: input_files
stream_file     	: hevc_interlaced_60i_fields_w_hints.ts
nav_file          	: xxx.nav
protocol			: H265
strm_width		: 720
strm_height		: 240
subdir			: __empty__
nxserver_settings	: __empty__
group_end	: input_files

verify_command   : python {script_dir}/verify_avd_crc.py -g  {golden_files_dir}/avd_crc_{stream_file_clean}.txt  -r {test_out_path}/runner.log -c {@avd_revision} -p '{protocol}'

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_').replace('/','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{subdir}{stream_file}

pre_test_command  : echo "Is disk removable = $(cat /sys/block/sda/removable)"
pre_test_command  : echo "Disk vendor = $(cat /sys/block/sda/device/vendor)"
pre_test_command  : export -n msg_modules
pre_test_command  : killall -q -9 nxserver

target_command : multiline
./nexus nxserver -ignore_edid {nxserver_settings} &
./nexus.client wait_for_server
./nexus.client crc -avd /data/videos/{subdir}{stream_file}  &
sleep 10

 # Kill the CRC application, the test was flakey when nxserver was killed instead of the CRC application.
 # If the stream is short, the CRC application will exit before the test finishes.  In that scenario, the
 # killall will return a non-zero value.  The "echo" is being used to override this return value.
post_test_command : killall -q -9 crc ; echo

post_test_command : killall -q -9 nxserver
post_test_command : export -n msg_modules

condition : exclude {@avd_revision} < 'N' and '{protocol}' == 'H265'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} < 'R' and '{protocol}' == 'VP9'

condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VC1'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'MPEG4_PART2'

# Not all chips with rev Q cores support 4K, to keep things simple disable the 4K tests on all rev Q's.
condition : exclude {@avd_revision} <= 'Q' and '{protocol}' == 'H265' and '{strm_height}' >= '2160'

 # The deblocker CRC's were added after rev K core
 condition : exclude {@avd_revision} <= 'K'


##########################################
test_definition : multipass_dqt
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/verify_mpdqt.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{stream_file}

target_input1     : multiline
sleep(500)
host(mdqt,-1)
sleep(15000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} <= 'N'

##########################################
test_definition : multipass_dqtip
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/verify_mpdqt.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{stream_file}

target_input1     : multiline
sleep(500)
host(mdqtip,-1)
sleep(10000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} <= 'N'

##########################################
test_definition : dqt
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/verify_mpdqt.py -i {test_out_path}/runner.log --dqt

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{stream_file}

target_input1     : multiline
sleep(500)
host(dqt,-99)
sleep(10000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

##########################################
test_definition : dqtip
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/verify_mpdqt.py -i {test_out_path}/runner.log --dqt

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires 	: {app_name}
target_verify     	: /data/videos/{stream_file}

target_input1     : multiline
sleep(500)
host(dqtip,-99)
sleep(10000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

##########################################
test_definition : channel_change
##########################################

app_name        : play
app_path          : nexus/nxclient/apps

stream_1 : cnnticker.mpg

stream_2 : riddick_avc_720p.mpg  if {@avd_revision} < 'N'
stream_2 : hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts  if {@avd_revision} >= 'N'


stream_3 : cnnticker.mpg  if {@avd_revision} < 'N'
stream_3 : riddick_avc_720p.mpg  if {@avd_revision} >= 'N'

stream_4 : riddick_avc_720p.mpg  if {@avd_revision} < 'N'
stream_4 : hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts  if {@avd_revision} < 'R'
stream_4 : case_14211_VP9_HD.webm   if {@avd_revision} >= 'R'

verify_command   : python {script_dir}/verify_decode.py -i {test_out_path}/runner.log --channel_change

#stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_').replace('/','_')
test_name	: channel_change

target_requires 	: {app_name}
target_verify     	: /data/videos/{stream_1}
target_verify     	: /data/videos/{stream_2}
target_verify     	: /data/videos/{stream_3}
target_verify     	: /data/videos/{stream_4}

pre_test_command  : echo "Is disk removable = $(cat /sys/block/sda/removable)"
pre_test_command  : echo "Disk vendor = $(cat /sys/block/sda/device/vendor)"
pre_test_command  : export msg_modules=BXDM_PPQM,BXDM_PPDBG,BXVD
pre_test_command  : killall -q -9 nxserver

target_command : multiline
./nexus nxserver -ignore_edid &
./nexus.client wait_for_server
./nexus.client play -timeout 10 -once -max 1920,1080 -video_cache_timeout 5000 /data/videos/{stream_1}
./nexus.client play -timeout 10 -once -max 1920,1080 -video_cache_timeout 5000 /data/videos/{stream_2}
./nexus.client play -timeout 10 -once -max 1920,1080 -video_cache_timeout 5000 /data/videos/{stream_3}
./nexus.client play -timeout 10 -once -max 1920,1080 -video_cache_timeout 5000 /data/videos/{stream_4}

post_test_command : killall -q -9 nxserver
post_test_command : export -n msg_modules


##########################################
#   END   videodecode
#########################################
