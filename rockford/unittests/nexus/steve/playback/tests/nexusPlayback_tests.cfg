###############################################################################
# Broadcom Proprietary and Confidential. (c)2016 Broadcom. All rights reserved.
#
# This program is the proprietary software of Broadcom and/or its
# licensors, and may only be used, duplicated, modified or distributed pursuant
# to the terms and conditions of a separate, written license agreement executed
# between you and Broadcom (an "Authorized License").  Except as set forth in
# an Authorized License, Broadcom grants no license (express or implied), right
# to use, or waiver of any kind with respect to the Software, and Broadcom
# expressly reserves all rights in and to the Software and all intellectual
# property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
# HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
# NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1. This program, including its structure, sequence and organization,
#    constitutes the valuable trade secrets of Broadcom, and you shall use all
#    reasonable efforts to protect the confidentiality thereof, and to use
#    this information only in connection with your use of Broadcom integrated
#    circuit products.
#
# 2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
#    AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
#    WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT
#    TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED
#    WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A
#    PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
#    ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
#    THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
#    LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT,
#    OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO
#    YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN
#    ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS
#    OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER
#    IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF
#    ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
###############################################################################
#
# Test Suite Configuration: nexusplayback Test Definitions
#
###############################################################################
#
# Details on the config file syntax for test definition can be found here:
# http://twiki-01.broadcom.com/bin/view/Bsema/ConfigBasedAutomatedTesting
#
#########################################################################


#########################################
#   Global Definitions
#########################################

suite_name  : xvd

# include common definitions for all tests (global definitions) ...
include     : nexusPlayback_common.cfg

script_dir    : {source_path}/rockford/CIT/automation/scripts   # need to consolidate scripts
script_dir2  : {source_path}/rockford/unittests/nexus/steve/scripts
golden_files_dir  : {source_path}/rockford/unittests/nexus/steve/golden_files

mapping : nav_file_dir platform_endian
	be : nav_be
	default : .

##########################################
test_definition : playback
##########################################

app_name	: playback
app_path        : nexus/utils

#iterate : stream_file  ['geishaAvcHD.mpg', 'italyriviera-spiderman2_cc_short.mpg', 'colr720p.es', 'asf/Discoverers_1080ap.wmv', 'avi/F01_HD_1080p11_640x480_Xsub_01.divx', 'Elephants_Dream.webm', 'pineapple_express.flv', 'hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts']

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
protocol		: H264
subdir		: ./
group_end	: input_files

group_start	: input_files
stream_file     : italyriviera-spiderman2_cc_short.mpg
nav_file          : xxx.nav
protocol		: MPEG2
subdir		: ./
group_end	: input_files

group_start	: input_files
stream_file     : colr720p.es
nav_file          : xxx.nav
protocol		: MPEG2
subdir		: ./
group_end	: input_files

group_start	: input_files
stream_file     : Discoverers_1080ap.wmv
nav_file          : xxx.nav
protocol		: VC1
subdir		: asf/
group_end	: input_files

group_start	: input_files
stream_file     : F01_HD_1080p11_640x480_Xsub_01.divx
nav_file          : xxx.nav
protocol		: MPEG4_PART2
subdir		: avi/
group_end	: input_files

group_start	: input_files
stream_file     : Elephants_Dream.webm
nav_file          : xxx.nav
protocol		: VP8
subdir		: ./
group_end	: input_files

group_start	: input_files
stream_file     : pineapple_express.flv
nav_file          : xxx.nav
protocol		: SPARK
subdir		: ./
group_end	: input_files

group_start	: input_files
stream_file     : BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts
nav_file          : xxx.nav
protocol		: H265
subdir		: hevc/
group_end	: input_files

verify_command   : python {script_dir}/parse_playback_output.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_').replace('/','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires   : {app_name}

target_input1     : multiline
sleep(10000)
quit

pre_test_command  : echo "Is disk removable = $(cat /sys/block/sda/removable)"
pre_test_command  : echo "Disk vendor = $(cat /sys/block/sda/device/vendor)"

target_command	: multiline
export msg_modules=BXDM_PPQM,BXDM_PPDBG
./nexus {app_name} /data/videos/{subdir}{stream_file} < {target_input1}

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} < 'N' and '{protocol}' == 'H265'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'VP8'

condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VC1'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'MPEG4_PART2'

##########################################
test_definition : playback_avd_crc
##########################################

#app_name	: playback
#app_path        : nexus/utils

app_name        : play
app_path          : nexus/nxclient

#iterate : stream_file  ['geishaAvcHD.mpg', 'italyriviera-spiderman2_cc_short.mpg', 'colr720p.es', 'asf/Discoverers_1080ap.wmv', 'avi/F01_HD_1080p11_640x480_Xsub_01.divx', 'Elephants_Dream.webm', 'pineapple_express.flv', 'hevc/BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts']

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
protocol		: H264
subdir		: ./
disp_format	: 720p
group_end	: input_files

group_start	: input_files
stream_file     : italyriviera-spiderman2_cc_short.mpg
nav_file          : xxx.nav
protocol		: MPEG2
subdir		: ./
disp_format	: 720p
group_end	: input_files

group_start	: input_files
stream_file     : colr720p.es
nav_file          : xxx.nav
protocol		: MPEG2
subdir		: ./
disp_format	: 720p
group_end	: input_files

group_start	: input_files
stream_file     : Discoverers_1080ap.wmv
nav_file          : xxx.nav
protocol		: VC1
subdir		: asf/
disp_format	: 720p24
group_end	: input_files

group_start	: input_files
stream_file     : F01_HD_1080p11_640x480_Xsub_01.divx
nav_file          : xxx.nav
protocol		: MPEG4_PART2
subdir		: avi/
disp_format	: 720p24
group_end	: input_files

group_start	: input_files
stream_file     : Elephants_Dream.webm
nav_file          : xxx.nav
protocol		: VP8
subdir		: ./
disp_format	: 720p24
group_end	: input_files

group_start	: input_files
stream_file     : pineapple_express.flv
nav_file          : xxx.nav
protocol		: SPARK
subdir		: ./
disp_format	: 720p
group_end	: input_files

group_start	: input_files
stream_file     : BRCM_Logo_7445C_HEVC_1920x1080p60.v1.ts
nav_file          : xxx.nav
protocol		: H265
subdir		: hevc/
disp_format	: 720p
group_end	: input_files

verify_command   : python {script_dir2}/crc_verify.py -g  {golden_files_dir}/avd_crc_{stream_file_clean}.txt  -r {test_out_path}/runner.log -c {@avd_revision} -p '{protocol}'

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_').replace('/','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires   : {app_name}

#target_input1     : multiline
#sleep(10000)
#quit

pre_test_command  : echo "Is disk removable = $(cat /sys/block/sda/removable)"
pre_test_command  : echo "Disk vendor = $(cat /sys/block/sda/device/vendor)"
pre_test_command  : export -n msg_modules
pre_test_command  : killall -q -9 nxserver

target_command : multiline
./nexus nxserver -ignore_edid -display_format {disp_format} &
./nexus.client wait_for_server
./nexus.client crc -avd /data/videos/{subdir}{stream_file}  &
sleep 10
killall -9 crc

post_test_command : killall -9 nxserver
post_test_command : export -n msg_modules

condition : exclude {@avd_revision} < 'N' and '{protocol}' == 'H265'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} < 'L' and '{protocol}' == 'VP8'

condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VC1'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'VP8'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'SPARK'
condition : exclude {@avd_revision} >= 'S' and '{protocol}' == 'MPEG4_PART2'

##########################################
test_definition : multipass_dqt
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/parse_playback_mpdqt.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

#target_verify     : {source_image}
target_requires   : {app_name}

target_input1     : multiline
sleep(500)
host(mdqt,-1)
sleep(10000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} <= 'N'

##########################################
test_definition : multipass_dqtip
##########################################

app_name	: playback
app_path        : nexus/utils

iterate		: group input_files

group_start	: input_files
stream_file     : geishaAvcHD.mpg
nav_file          : geishaAvcHD.nav
group_end	: input_files

group_start	: input_files
stream_file     : riddick_avc_720p.mpg
nav_file          : riddick_avc_720p.nav
group_end	: input_files

group_start	: input_files
stream_file     : cnnticker.mpg
nav_file          : cnnticker.nav
group_end	: input_files

verify_command   : python {script_dir}/parse_playback_mpdqt.py -i {test_out_path}/runner.log

stream_file_clean  : evaluate '{stream_file}'.lower().replace('.','_').replace('-','_')
test_name	: {test_definition}_{stream_file_clean}

target_requires   : {app_name}

target_input1     : multiline
sleep(500)
host(mdqtip,-1)
sleep(10000)
quit

target_command	: multiline
export msg_modules=BXDM_PPQM,BXVD_DQT
./nexus {app_name} /data/videos/{stream_file} /data/videos/{@nav_file_dir}/{nav_file} < {target_input1}

post_test_command : export -n msg_modules

condition : exclude {@avd_revision} <= 'N'

##########################################
#   END   nexusplayback video decode
#########################################
