#############################################################################
# Copyright (C) 2018 Broadcom.
# The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
#
# This program is the proprietary software of Broadcom and/or its licensors,
# and may only be used, duplicated, modified or distributed pursuant to
# the terms and conditions of a separate, written license agreement executed
# between you and Broadcom (an "Authorized License").  Except as set forth in
# an Authorized License, Broadcom grants no license (express or implied),
# right to use, or waiver of any kind with respect to the Software, and
# Broadcom expressly reserves all rights in and to the Software and all
# intellectual property rights therein. IF YOU HAVE NO AUTHORIZED LICENSE,
# THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD
# IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1.     This program, including its structure, sequence and organization,
# constitutes the valuable trade secrets of Broadcom, and you shall use all
# reasonable efforts to protect the confidentiality thereof, and to use this
# information only in connection with your use of Broadcom integrated circuit
# products.
#
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
# "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
# OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
# RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
# IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
# A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
# ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
# THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
# OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
# INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
# RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
# HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
# EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
# WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
# FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
#
# Module Description:
#
#############################################################################
use strict;
use warnings FATAL => 'all';

my $file = shift @ARGV;
open(OUTFILE, ">$file") or die "Unable to open output file $file";

my $moduleUpper;
print OUTFILE "#####################################################\n";
print OUTFILE "# This file is automatically generated.  Do not edit.\n";
print OUTFILE "#####################################################\n";


my $cnt = 0;
foreach $moduleUpper (@ARGV) {
    my $moduleLower = lc $moduleUpper;
    my $thunked = 1;
    my $proxy = 1;

    print OUTFILE "#\n# $moduleUpper\n#\n";
    # Skip thunks for BASE -- it is an exception
    if ( ($moduleUpper eq 'BASE') ) {
       $thunked = 0;
       $proxy = 0;
    }

    if ($thunked == 1) {
        # Thunk Info
        print OUTFILE "NEXUS_$moduleUpper\_SYNCTHUNKS := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h\n";
        print OUTFILE "\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.c : \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h: \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(NEXUS_SYNCTHUNK_DIR)/exists\n";
        print OUTFILE "\t\@echo \"[Thunk..... $moduleLower]\"\n";
        print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) | \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/syncthunk \$(NEXUS_TOP)/build/tools/syncthunk/bapi_build.pl -stdin $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n";
        print OUTFILE "\n";
    }
    else {
        print OUTFILE "# $moduleUpper does not have syncthunks\n\n";
    }

    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_api.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_client.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_client.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_driver.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ioctl_compat.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ipc.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_process_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_proxy.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_server.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
    print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c : \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(CLASS_LIST) \$(NEXUS_SYNCTHUNK_DIR)/exists\n";
    print OUTFILE "\t\@echo \"[ABI....... $moduleLower]\"\n";
    print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) | \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/abiverify \$(NEXUS_TOP)/build/tools/abiverify/bapi_build.pl --stdin --class_list \$(CLASS_LIST) $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n";
    print OUTFILE "\t\$(Q_)\${MV} \$@.tmp.c \$@\n";

    if ($proxy == 1) {
        print OUTFILE "NEXUS_$moduleUpper\_PROXY := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_proxy.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ioctl.h\n";
        print OUTFILE "ifeq (\${NEXUS_MODE},driver)\n";
        print OUTFILE "NEXUS_$moduleUpper\_DRIVER := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_driver.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_kernel_export.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ioctl.h\n";
        print OUTFILE "NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_driver.\$(NEXUS_OBJ_SUFFIX) \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_ipc.\$(NEXUS_OBJ_SUFFIX)\n";
        print OUTFILE "ifeq (\$(NEXUS_COMPAT_32ABI),y)\n";
        print OUTFILE "NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_api_compat.\$(NEXUS_OBJ_SUFFIX)\n";
        print OUTFILE "NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify.\$(NEXUS_OBJ_SUFFIX)\n";
        print OUTFILE "endif\n";
        print OUTFILE "NEXUS_$moduleUpper\_OS_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_kernel_export.\$(NEXUS_OBJ_SUFFIX)\n";
        print OUTFILE "endif\n";
        print OUTFILE "\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_kernel_export.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ioctl.h\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_driver.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_kernel_export.c\n";
        print OUTFILE "\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/exists \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(CLASS_LIST)\n";
        print OUTFILE "\t\@echo \"[Proxy..... $moduleLower]\"\n";
        print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) | \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/kernelproxy \$(NEXUS_TOP)/build/tools/kernelproxy/bapi_build.pl --class_list \$(CLASS_LIST) --stdin --module_number $cnt $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n";
        print OUTFILE "\n";
        if ( $moduleUpper eq 'PLATFORM') {
            print OUTFILE "\${NEXUS_$moduleUpper\_OBJECTS} : \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.h\n";
            print OUTFILE "\n";
        }
    }
    else {
        print OUTFILE "# $moduleUpper does not have proxy layer\n\n";
    }

    # Module Rules
    print OUTFILE "ifdef NEXUS_$moduleUpper\_PRECOMPILED_HEADER\n";
    print OUTFILE "\$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_precompiled.h.gch: \$(NEXUS_$moduleUpper\_PRECOMPILED_HEADER) \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(NEXUS_$moduleUpper\_SYNCTHUNKS)\n";
    print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)]\"\n";
    print OUTFILE "\t\$(Q_)\$(CC) \$(CDEP_FLAG) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
    print OUTFILE "\n";
    print OUTFILE "\$(NEXUS_$moduleUpper\_OBJECTS): \$(NEXUS_OBJ_DIR)/$moduleUpper/%.\$(NEXUS_OBJ_SUFFIX): %.c \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},\${NEXUS_OBJ_DIR}/$moduleUpper/nexus_$moduleLower\_precompiled.h.gch) \$(NEXUS_$moduleUpper\_SYNCTHUNKS)\n";
    print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)]\"\n";
    print OUTFILE "\t\$(Q_)\$(CC) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},\$(if \$(filter \$(notdir \$<), nexus_$moduleLower\_thunks.c nexus_$moduleLower\_abiverify_ipc.c nexus_$moduleLower\_abiverify_driver.c nexus_$moduleLower\_proxy.c nexus_$moduleLower\_kernel_export.c \$(notdir \${NEXUS_$moduleUpper\_LOCAL_SOURCES})),, -include \${NEXUS_OBJ_DIR}/$moduleUpper/nexus_$moduleLower\_precompiled.h)) \$(CDEP_FLAG) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
    print OUTFILE "\n";
    print OUTFILE "else\n";
    print OUTFILE "\$(NEXUS_$moduleUpper\_OBJECTS): \$(NEXUS_OBJ_DIR)/$moduleUpper/%.\$(NEXUS_OBJ_SUFFIX): %.c \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(NEXUS_$moduleUpper\_SYNCTHUNKS) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},\${NEXUS_PRECOMPILED_HEADER_H}.gch)\n";
    print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)]\"\n";
    print OUTFILE "\t\$(Q_)\$(CC) \$(CDEP_FLAG) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},-include \${NEXUS_PRECOMPILED_HEADER_H}) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
    print OUTFILE "\n";
    print OUTFILE "endif\n";
    print OUTFILE "\$(NEXUS_$moduleUpper\_OS_OBJECTS): \$(NEXUS_OBJ_DIR)/$moduleUpper/%.\$(NEXUS_OBJ_SUFFIX): %.c \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(NEXUS_$moduleUpper\_SYNCTHUNKS)\n";
    print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower os)]\"\n";
    print OUTFILE "\t\$(Q_)\$(CC) \$(CDEP_FLAG) \$(NEXUS_CFLAGS) \$(NEXUS_KERNEL_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
    print OUTFILE "\n";

    $cnt++;
}
close OUTFILE;

