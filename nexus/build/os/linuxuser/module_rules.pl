#############################################################################
#  Copyright (C) 2008-2016 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
#
# This program is the proprietary software of Broadcom and/or its licensors,
# and may only be used, duplicated, modified or distributed pursuant to the terms and
# conditions of a separate, written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
# no license (express or implied), right to use, or waiver of any kind with respect to the
# Software, and Broadcom expressly reserves all rights in and to the Software and all
# intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
# HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
# NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1.     This program, including its structure, sequence and organization, constitutes the valuable trade
# secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of Broadcom integrated circuit products.
#
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
# AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
# WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
# THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
# OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
# LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
# OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
# USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
# LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
# EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
# USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
# ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
# LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
# ANY LIMITED REMEDY.
#
#############################################################################
use strict;
use warnings FATAL => 'all';

my $i;
my $moduleUpper;

my $file = shift @ARGV;
open(OUTFILE, ">$file") or die "Unable to open output file $file";

my $no_proxy='';
if ($ARGV[0] eq "-no_proxy") {
    shift @ARGV;
    # -no_proxy MODULE[,MODULE,...]
    $no_proxy = shift @ARGV;
}

print OUTFILE "#####################################################\n";
print OUTFILE "# This file is automatically generated.  Do not edit.\n";
print OUTFILE "#####################################################\n";


foreach $moduleUpper (@ARGV) {
    my $moduleLower = lc $moduleUpper;
    my $thunked = 1;
    my $proxy = 1;
    my $ipc = 1;

        print OUTFILE "#\n# $moduleUpper\n#\n";

        # Skip thunks for BASE -- it is an exception
        if ( ($moduleUpper eq 'BASE') ) {
           $thunked = 0;
           $proxy = 0;
           $ipc = 0;
        }
        if ( $no_proxy =~ /$moduleUpper/ ) {
           $proxy = 0;
        }

        # kernelmode proxy (usermode portion)
        if( $proxy == 1) {
            print OUTFILE "ifeq (\$(NEXUS_MODE),proxy)\n";
            print OUTFILE "ifeq (,\$(filter $moduleUpper,\$(NEXUS_CLIENT_MODULES)))\n";
            # for proxy, only compile the proxy object
            print OUTFILE "ifeq (\$(NEXUS_ABICOMPAT_MODE),y)\n";
            print OUTFILE "NEXUS_$moduleUpper\_OBJECTS := \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_proxy.\$(NEXUS_OBJ_SUFFIX) \n";
            print OUTFILE "else\n";
            print OUTFILE "NEXUS_$moduleUpper\_OBJECTS := \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_proxy.\$(NEXUS_OBJ_SUFFIX) \n";
            print OUTFILE "endif\n"; #NEXUS_ABICOMPAT_MODE
            print OUTFILE "NEXUS_$moduleUpper\_OBJECTS += \$(addprefix \$(NEXUS_OBJ_DIR)/$moduleUpper/,\$(patsubst %.c,%.\$(NEXUS_OBJ_SUFFIX),\$(notdir \$(NEXUS_$moduleUpper\_LOCAL_SOURCES))))\n";
            print OUTFILE "NEXUS_$moduleUpper\_CFLAGS += -DNEXUS_THUNK_LAYER \n";
            if ( $moduleUpper eq 'PLATFORM') {
                print OUTFILE 'NEXUS_PLATFORM_OBJECTS += $(addprefix $(NEXUS_OBJ_DIR)/PLATFORM/,$(patsubst %.c,%.$(NEXUS_OBJ_SUFFIX),$(notdir $(NEXUS_PLATFORM_PROXY_SOURCES))))';
                print OUTFILE "\n";
            }
            print OUTFILE "endif\n"; #NEXUS_CLIENT_MODULES
            print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_proxy.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ioctl.h\n";
            print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/exists \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(CLASS_LIST)\n";
            print OUTFILE "endif\n"; #proxy
        }

        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_api.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_client.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_client.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_driver.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ioctl_compat.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_ipc.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_process_ioctl.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_proxy.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_server.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api.h: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c : CC_AARCH32?=arm-linux-gcc\n";
        print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify.c : \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(CLASS_LIST) \$(NEXUS_SYNCTHUNK_DIR)/exists\n";
        print OUTFILE "\t\@echo \"[ABI....... $moduleLower]\"\n";
        print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) | \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/abiverify \$(NEXUS_TOP)/build/tools/abiverify/bapi_build.pl --stdin --class_list \$(CLASS_LIST) $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n";
        print OUTFILE "ifeq (\$(B_REFSW_ARCH), aarch64-linux)\n";
        print OUTFILE "ifeq (\${NEXUS_P_QEMU_ABIVERIFY},y)\n";
        print OUTFILE "\t\@echo \"[ABI-QEMU.. $moduleLower]\"\n";
        print OUTFILE "\t\$(Q_)\${CC_AARCH32} -DNEXUS_P_ABI_VERIFY_MODE_PRINT=1 \$(NEXUS_CFLAGS) \$(NEXUS_$moduleUpper\_CFLAGS) \$@.tmp.c -o \$(basename \$@)_aarch32.bin\n";
        print OUTFILE "\t\${Q_}qemu-arm -L \$(shell dirname \$(dir \$(shell which \${CC})))/arm-linux-gnueabihf/sys-root/ \$(basename \$@)_aarch32.bin >\$(basename \$@)_aarch32.h\n";
        print OUTFILE "\t\$(Q_)\${CC} -DNEXUS_P_ABI_VERIFY_MODE_VERIFY=1  \$(NEXUS_CFLAGS) \$(NEXUS_$moduleUpper\_CFLAGS) \$@.tmp.c -o \$(basename \$@)_aarch64.bin\n";
        print OUTFILE "\t\${Q_}# qemu-aarch64 -L \$(shell dirname \$(dir \$(shell which \${CC})))/aarch64-linux-gnu/sys-root/ \$(basename \$@)_aarch64.bin 2>\$(basename \$@)_aarch64.txt\n";
        print OUTFILE "endif\n";
        print OUTFILE "endif\n";
        print OUTFILE "\t\$(Q_)\${MV} \$@.tmp.c \$@\n";

        # usermode IPC
        if ( $ipc == 1) {
            print OUTFILE "ifeq (\${NEXUS_SERVER_SUPPORT},y)\n";
            print OUTFILE "ifneq (\${NEXUS_MODE},proxy)\n";
            print OUTFILE "ifeq (,\$(filter $moduleUpper,\$(NEXUS_CLIENT_MODULES)))\n";
            # for user mode IPC, client modules live in the server and the client
            print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_client.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_api.h\n";
            print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_server.c: \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_api.h\n\n";
            print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_api.h: \$(NEXUS_SYNCTHUNK_DIR)/exists \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(CLASS_LIST) \$(NEXUS_IPC_MODULES)\n";
            print OUTFILE "\t\@echo \"[Ipc....... $moduleLower]\"\n";
            print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) |  \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/ipcthunk \$(NEXUS_TOP)/build/tools/ipcthunk/bapi_build.pl --stdin --class_list \$(CLASS_LIST) $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n\n";


            # for client, only compile the client object + local sources
            print OUTFILE "ifeq (\${NEXUS_MODE},client)\n";
            print OUTFILE "ifeq (\$(NEXUS_ABICOMPAT_MODE),y)\n";
            print OUTFILE "  NEXUS_$moduleUpper\_CLIENT := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_client.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_abiverify_api.h\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS := \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_client.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "else\n";
            print OUTFILE "  NEXUS_$moduleUpper\_CLIENT := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_client.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_ipc_api.h\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS := \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_ipc_client.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "endif\n"; #NEXUS_ABICOMPAT_MODE
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS += \$(addprefix \$(NEXUS_OBJ_DIR)/$moduleUpper/,\$(patsubst %.c,%.\$(NEXUS_OBJ_SUFFIX),\$(notdir \$(NEXUS_$moduleUpper\_LOCAL_SOURCES))))\n";
            print OUTFILE "  NEXUS_$moduleUpper\_CFLAGS += -DNEXUS_THUNK_LAYER \n";
            if ( $moduleUpper eq 'PLATFORM') {
                print OUTFILE '  NEXUS_PLATFORM_OBJECTS += $(addprefix $(NEXUS_OBJ_DIR)/PLATFORM/,$(patsubst %.c,%.$(NEXUS_OBJ_SUFFIX),$(notdir $(NEXUS_PLATFORM_CLIENT_SOURCES))))' . "\n";
            }
            print OUTFILE "else\n";
            # for server, add the server object
            print OUTFILE "ifeq (\$(NEXUS_ABICOMPAT_MODE),y)\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_server.\$(NEXUS_OBJ_SUFFIX) \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify_ipc.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "ifeq (\$(NEXUS_COMPAT_32ABI),y)\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_abiverify.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_api_compat.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "endif\n"; #NEXUS_COMPAT_32ABI
            print OUTFILE "else\n";
            print OUTFILE "  NEXUS_$moduleUpper\_OBJECTS += \$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_ipc_server.\$(NEXUS_OBJ_SUFFIX)\n";
            print OUTFILE "endif\n"; #NEXUS_ABICOMPAT_MODE
            print OUTFILE "endif\n"; #client
            print OUTFILE "endif\n"; #NEXUS_CLIENT_MODULES
            print OUTFILE "endif\n"; #proxy
            print OUTFILE "endif\n"; #NEXUS_SERVER_SUPPORT

        }

        # syncthunk
        if ( $thunked == 1 ) {
           # Thunk Info
           print OUTFILE "NEXUS_$moduleUpper\_SYNCTHUNKS := \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.c \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h\n";
           print OUTFILE "\n";
           print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.c : \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h\n";
           print OUTFILE "\$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_thunks.h : \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES))) \$(NEXUS_SYNCTHUNK_DIR)/exists\n";
           print OUTFILE "\t\@echo \"[Thunk..... $moduleLower]\"\n";
           print OUTFILE "\t\$(Q_)\$(CC) -MM \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) \$(filter-out %_init.h,\$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))) | \$(PERL) -I \$(NEXUS_TOP)/build/tools/common -I \$(NEXUS_TOP)/build/tools/syncthunk \$(NEXUS_TOP)/build/tools/syncthunk/bapi_build.pl -stdin $moduleUpper \$(NEXUS_SYNCTHUNK_DIR) \$(wildcard \$(addsuffix /*.h,\$(NEXUS_$moduleUpper\_PUBLIC_INCLUDES)))\n";
           print OUTFILE "\n";
        }

        if ( $moduleUpper eq 'PLATFORM') {
            print OUTFILE "ifeq (\$(NEXUS_ABICOMPAT_MODE),y)\n";
            print OUTFILE "\${NEXUS_$moduleUpper\_OBJECTS} : \$(NEXUS_SYNCTHUNK_DIR)/nexus_$moduleLower\_api_compat.h\n";
            print OUTFILE "endif\n";
            print OUTFILE "\n";
        }
        # Module Rules
        my $static_analyzer = <<"EOF";
ifdef B_REFSW_STATIC_ANALYZER
	\@echo \"[Analyze... \$(notdir \$<) ($moduleLower)]\"
	\${Q_}\$(CC) -E -DB_REFSW_STATIC_ANALYZER=1 \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@.i
	\${Q_}\${B_REFSW_STATIC_ANALYZER} \${B_REFSW_STATIC_ANALYZER_OPTS} \${CC} \$< \$@.i
	\${Q_}\${RM} \$@.i
endif
EOF

        print OUTFILE "ifdef NEXUS_$moduleUpper\_PRECOMPILED_HEADER\n";
        print OUTFILE "\$(NEXUS_OBJ_DIR)/$moduleUpper/nexus_$moduleLower\_precompiled.h.gch: \$(NEXUS_$moduleUpper\_PRECOMPILED_HEADER) \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(NEXUS_$moduleUpper\_SYNCTHUNKS)\n";
        print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)] \"\n";
        print OUTFILE "\t\$(Q_)\$(CC) \$(CDEP_FLAG) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
        print OUTFILE "\n";
        print OUTFILE "\$(NEXUS_$moduleUpper\_OBJECTS): \$(NEXUS_OBJ_DIR)/$moduleUpper/%.\$(NEXUS_OBJ_SUFFIX): %.c \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},\${NEXUS_OBJ_DIR}/$moduleUpper/nexus_$moduleLower\_precompiled.h.gch \${NEXUS_PRECOMPILED_HEADER_H}.gch) \$(NEXUS_$moduleUpper\_SYNCTHUNKS)\n";
        print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)]\"\n";
        print OUTFILE "\t\$(Q_)\$(CC) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},-include \$(if \$(filter \$(notdir \$<), nexus_$moduleLower\_thunks.c nexus_$moduleLower\_abiverify_proxy.c nexus_$moduleLower\_proxy.c nexus_$moduleLower\_abiverify_client.c nexus_$moduleLower\_ipc.c nexus_$moduleLower\_ipc_client.c \$(notdir \${NEXUS_$moduleUpper\_LOCAL_SOURCES})),\${NEXUS_PRECOMPILED_HEADER_H},\${NEXUS_OBJ_DIR}/$moduleUpper/nexus_$moduleLower\_precompiled.h)) \$(CDEP_FLAG) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
        print OUTFILE $static_analyzer;
        print OUTFILE "\n";
        print OUTFILE "else\n";
        print OUTFILE "\$(NEXUS_$moduleUpper\_OBJECTS): \$(NEXUS_OBJ_DIR)/$moduleUpper/%.\$(NEXUS_OBJ_SUFFIX): %.c \${NEXUS_OBJ_DIR}/$moduleUpper/exists \$(NEXUS_$moduleUpper\_SYNCTHUNKS) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},\${NEXUS_PRECOMPILED_HEADER_H}.gch)\n";
        print OUTFILE "\t\@echo \"[Compile... \$(notdir \$<) ($moduleLower)]\"\n";
        print OUTFILE "\t\$(Q_)\$(CC) \$(CDEP_FLAG) \$(if \${NEXUS_P_WITH_PRECOMPILED_HEADERS},-include \${NEXUS_PRECOMPILED_HEADER_H}) \$(NEXUS_CFLAGS) \$(NEXUS_CFLAGS_BPROFILE) \$(NEXUS_$moduleUpper\_CFLAGS) -c \$< -o \$@\n";
        print OUTFILE $static_analyzer;
        print OUTFILE "\n";
        print OUTFILE "endif\n";
}
close OUTFILE;

