#!/usr/bin/perl
#  Copyright (C) 2008-2017 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
#
#  This program is the proprietary software of Broadcom and/or its licensors,
#  and may only be used, duplicated, modified or distributed pursuant to the terms and
#  conditions of a separate, written license agreement executed between you and Broadcom
#  (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
#  no license (express or implied), right to use, or waiver of any kind with respect to the
#  Software, and Broadcom expressly reserves all rights in and to the Software and all
#  intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
#  HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
#  NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
#  Except as expressly set forth in the Authorized License,
#
#  1.     This program, including its structure, sequence and organization, constitutes the valuable trade
#  secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
#  and to use this information only in connection with your use of Broadcom integrated circuit products.
#
#  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
#  AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
#  WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
#  THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
#  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
#  LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
#  OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
#  USE OR PERFORMANCE OF THE SOFTWARE.
#
#  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
#  LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
#  EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
#  USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
#  THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
#  ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
#  LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
#  ANY LIMITED REMEDY.
#
#############################################################################
use strict;
use warnings FATAL => 'all';

use lib "../common";
use bapi_main;
use bapi_verify;

# This uses and consumes ARGV
my $main = bapi_main::main ('abiverify');
my $destdir = $main->{DESTDIR};
my $module = lc $main->{MODULE};

my $h_file = "nexus_${module}_abiverify";
my $file = "$destdir/$h_file.h";
if(defined $main->{OUTPUT}) {
    $file = $main->{OUTPUT};
}
open (my $fout_h, '>', $file) or die "Can't open $file";


print $fout_h "/* This file is autogenerated */\n";
if(defined $main->{OUTPUT}) {
    bapi_verify::print_includes($fout_h, $main->{INCLUDES});
}
bapi_verify::print_struct($fout_h, $main->{STRUCTS},$main->{CLASS_HANDLES}, 1);
bapi_verify::verify_struct($fout_h, $main->{STRUCTS},$main->{CLASS_HANDLES}, 'struct');

if(not defined $main->{OUTPUT}) {
    my $api_info =bapi_verify::process_functions($fout_h, $module, $main->{FUNCREFS} ,$main->{CLASS_HANDLES}, $main->{STRUCTS}, $main->{ORIGINAL_STRUCTS});
    my $shared_types = pop @$api_info;
    my $varargs_info = pop @$api_info;
    my $compat_info = pop @$api_info;
    my $api_ids = pop @$api_info;
    my $referenced_api = pop @$api_info;
    my $referenced_api_copy =  bapi_parse_c::copy_structs($referenced_api);
    my $args = pop @$api_info;
    my $ioctls = pop @$api_info;
    my $api_structs = $api_info;
    undef $api_info;
    my $h_api_file = "nexus_${module}_api.h";
    $file = "$destdir/$h_api_file";
    open (my $fout_h_api, '>', $file) or die "Can't open $file";

    print $fout_h_api "#define NEXUS_${module}_MODULE_VERSION " . (sprintf " 0x%08Xul", ( $main->{VERSION} & 0xFFFFFFFF)) . "\n";
    bapi_verify::print_struct($fout_h_api, $args, $main->{CLASS_HANDLES}, 0);
    print $fout_h_api "\n\n";
    print $fout_h_api "enum NEXUS_P_API_${module}_id {\n";
    for (@$api_ids) {
        print $fout_h_api "    $_->[1],\n";
    }
    print $fout_h_api "    NEXUS_P_API_ID_${module}_Last\n";
    print $fout_h_api "};\n\n";


    close ($fout_h_api);

    my $expanded_api_struct = bapi_parse_c::copy_structs($args);
    bapi_parse_c::expand_structs($expanded_api_struct, $args);
    bapi_parse_c::expand_structs($expanded_api_struct, $main->{STRUCTS}, {COMBINE => 0});
    bapi_verify::print_struct($fout_h, $expanded_api_struct, $main->{CLASS_HANDLES}, 1);
    bapi_verify::verify_struct($fout_h, $expanded_api_struct, $main->{CLASS_HANDLES},'func');

    bapi_verify::generate($destdir, $module, $main->{FUNCREFS} ,$main->{CLASS_HANDLES}, $main->{STRUCTS}, $main->{VERSION}, $ioctls, $referenced_api_copy, $api_ids, $compat_info, $varargs_info, $main->{STRUCTS_ATTR}, $shared_types);

    $file = "$destdir/nexus_${module}_abiverify.c.tmp.c";
    open (my $fout_c, '>', $file) or die "Can't open $file";
    print $fout_c "/* This file is autogenerated by the Nexus Platform makefile. */\n";
    print $fout_c "#define NEXUS_P_ABIVERIFY_MODULE    b_abi_verify_$main->{MODULE}\n";
    print $fout_c "#include \"nexus_${module}_module.h\"\n";
    print $fout_c "#include \"abiverify/nexus_abiverify_prologue.h\"\n";
    print $fout_c "#include \"$h_api_file\"\n";
    print $fout_c "#include \"$h_file.h\"\n";
    print $fout_c "#if NEXUS_P_ABI_VERIFY_MODE_VERIFY\n";
    print $fout_c "#include \"${h_file}_aarch32.h\"\n";
    print $fout_c "#endif\n";
    print $fout_c "#include \"abiverify/nexus_abiverify_epilogue.h\"\n";
    close ($fout_c);
}
close($fout_h);
