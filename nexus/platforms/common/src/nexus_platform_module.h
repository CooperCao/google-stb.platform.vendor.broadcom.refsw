/***************************************************************************
*  Copyright (C) 2016 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
*
*  This program is the proprietary software of Broadcom and/or its licensors,
*  and may only be used, duplicated, modified or distributed pursuant to the terms and
*  conditions of a separate, written license agreement executed between you and Broadcom
*  (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
*  no license (express or implied), right to use, or waiver of any kind with respect to the
*  Software, and Broadcom expressly reserves all rights in and to the Software and all
*  intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
*  HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
*  NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
*
*  Except as expressly set forth in the Authorized License,
*
*  1.     This program, including its structure, sequence and organization, constitutes the valuable trade
*  secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
*  and to use this information only in connection with your use of Broadcom integrated circuit products.
*
*  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
*  AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
*  WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
*  THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
*  OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
*  LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
*  OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
*  USE OR PERFORMANCE OF THE SOFTWARE.
*
*  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
*  LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
*  EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
*  USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
*  THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
*  ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
*  LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
*  ANY LIMITED REMEDY.
*
* API Description:
*   API name: Platform (private)
*    Dummy module for the code generated by a proxy layer
*
***************************************************************************/
#ifndef NEXUS_PLATFORM_MODULE_H__
#define NEXUS_PLATFORM_MODULE_H__

#include "nexus_base.h"
#include "nexus_platform_thunks.h"
#include "nexus_platform.h"
#include "nexus_platform_version.h"
#include "nexus_platform_server.h"
#if NEXUS_PLATFORM_CABLE_FRONTEND_EXTENSION
#include "nexus_platform_cable_frontend.h"
#endif

extern NEXUS_ModuleHandle g_NEXUS_platformModule;
#define NEXUS_MODULE_SELF g_NEXUS_platformModule

/* for the following functions, the public functions (unthunked) occur in the platform's
$(B_REFSW_OS)/$(NEXUS_MODE) subdir, not in the syncthunk directory. the manually tagged version
occurs in the syncthunk dir. the platform code is free to call the syncthunk code if helpful. */
#if defined(NEXUS_PROXY_THUNK_LAYER)
#if defined(NEXUS_MODE_proxy) || defined(NEXUS_MODE_client)
/* rename following functions they need special handling in the proxy/client.
The following functions are implemented in nexus_platform_os.c. The user's call first goes there to set up local state.
From there, it may call into the thunk which proxies to the driver/server. This rename makes it possible. */
#define NEXUS_GetDefaultMemoryConfigurationSettings_tagged NEXUS_GetDefaultMemoryConfigurationSettings_tagged_proxy
#define NEXUS_GetPlatformCapabilities_tagged NEXUS_GetPlatformCapabilities_tagged_proxy
#define NEXUS_GetPlatformConfigCapabilities_tagged NEXUS_GetPlatformConfigCapabilities_tagged_proxy
#define NEXUS_Platform_AuthenticatedJoin NEXUS_Platform_AuthenticatedJoin_proxy
#define NEXUS_Platform_CreateHeap NEXUS_Platform_CreateHeap_proxy
#define NEXUS_Platform_DestroyHeap NEXUS_Platform_DestroyHeap_proxy
#define NEXUS_Platform_GetDefaultClientAuthenticationSettings NEXUS_Platform_GetDefaultClientAuthenticationSettings_proxy
#define NEXUS_Platform_GetDefaultSettings_tagged NEXUS_Platform_GetDefaultSettings_tagged_proxy
#define NEXUS_Platform_GetDefaultStandbySettings NEXUS_Platform_GetDefaultStandbySettings_proxy
#define NEXUS_Platform_GetMemory_tagged NEXUS_Platform_GetMemory_tagged_proxy
#define NEXUS_Platform_InitStandby NEXUS_Platform_InitStandby_proxy
#define NEXUS_Platform_Init_tagged  NEXUS_Platform_Init_tagged_proxy
#define NEXUS_Platform_Uninit  NEXUS_Platform_Uninit_proxy
#define NEXUS_Platform_UninitStandby NEXUS_Platform_UninitStandby_proxy
#endif
#endif

NEXUS_OBJECT_CLASS_DECLARE(NEXUS_Client);

#endif /* NEXUS_PLATFORM_MODULE_H__ */
