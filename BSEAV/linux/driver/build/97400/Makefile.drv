############################################################
#     Copyright (c) 2003-2009, Broadcom Corporation
#     All Rights Reserved
#     Confidential Property of Broadcom Corporation
#
#  THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
#  AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
#  EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
#
# $brcm_Workfile: $
# $brcm_Revision: $ 
# $brcm_Date: $
#
# Module Description:
#
# Revision History:
#
# $brcm_Log: $
# 
############################################################

BUILDDIR=$(shell pwd)

.PHONY: checkdirs settop-api driver
all: checkdirs settop-api driver

ifeq ($(STATICLIB),no)
$(error You must unset STATICLIB)
endif

SYSTEM := linuxkernel
include Common.make
include ${BSEAV}/api/include/api.mak

# CHIP comes from api.mak, derived from PLATFORM
TARGET = bcm${CHIP}
DRIVERS=$(BCM_OBJ_DIR)/$(TARGET).ko $(BCM_OBJ_DIR)/bcmkni.ko
OTHER_CLEANS += clean-api clean-drv

ifeq ($(B_GLES_SUPPORT),y)
DRIVERS+=$(BCM_OBJ_DIR)/p3ddrv.ko
OBJS += bsettop_p3d_export.o
CFLAGS += -I$(MAGNUM)/basemodules/mem
CFLAGS += -I$(MAGNUM)/basemodules/int
CFLAGS += -I$(MAGNUM)/commonutils/pxl
CFLAGS += -I$(MAGNUM)/commonutils/sur/$(CHIP)
CFLAGS += -I$(MAGNUM)/portinginterface/grc/$(CHIP)
endif

.PHONY: $(DRIVERS)
driver: checkdirs settop-api ${DRIVERS}

CFLAGS += ${B_REFSW_LINUXKERNEL_CFLAGS}
CFLAGS += ${BSETTOP_CFLAGS} ${B_REFSW_MAGNUM_INCLUDE_DIRS}
CFLAGS += -I$(BSETTOP)/src/magnum -I$(BSETTOP)/src -DKBUILD_MODNAME=${TARGET}


OBJS += \
	bcmdriver.o \
	bcmdriver.mod.o \
	bhandle_mgr.o \
	bsettop_callback_mgr.o \
	bconfig_copy.o \
	b_procfs.o \
	bsettop_export.o \
	bsettop_udivdi3.o


# Needs a special version of a kernel, don't enable by default 
#B_HAS_PLAYPUMP_IP ?= y
ifeq (${B_HAS_PLAYPUMP_IP},y)
OBJS += netif_dma_stub.o 
BNETIF_DMA_CFLAGS += -I$(BSEAV)/linux/driver/usermode/ 
CFLAGS += -I$(BSEAV)/api/include/ 
vpath %.c $(BSEAV)/linux/driver/usermode/ $(BNE_OBJS_PATH)
endif

# soft-float support
OBJS += $(FLOATLIB_OBJS)
CFLAGS += -I$(FLOATLIB_DIR)
vpath %.c $(FLOATLIB_DIR)

ifeq ($(BPROFILE_SUPPORT),y)
#for now compile symbol table only for BPROFILE 
vpath %.c  ${BSEAV}/lib/bprofile
SYM_SRC = bsymbols.c
OBJS += $(SYM_SRC:%.c=%.o)
endif

ifeq ($(findstring $(PLATFORM),97400 97401 97403 97405 97325 97335 97342 97340 97455 97456 97458 97018 97018RNG 97118 97118RNG 97125 97025 97119 97019 97116 97468 97408), $(PLATFORM))
OBJS += \
    bimg_kernel.o

CFLAGS_IMG = -DB_CONFIG_IMAGE=1 -DBXVD_USE_CUSTOM_IMAGE=1 -I$(BSEAV)/linux/driver/97038
CFLAGS +=  ${CFLAGS_IMG} -I${MAGNUM}/commonutils/img

endif

ifeq ($(VERBOSE),)
MAKEFLAGS += -s
endif

vpath %.c $(BSEAV)/linux/driver/97038

${OBJS}: ${LINUX_INC} checkdirs 

.PHONY: ${BSETTOP_BIN}/libsettop.a 

${BSETTOP_BIN}/libsettop.a : settop-api

settop-api: ${LINUX_INC}
	${Q_}${MAKE} SHAREDLIB=no LINUX_INC=${LINUX_INC} GCC_INC=${GCC_INC} STD_INC=${STD_INC} BNETIF_DMA_CFLAGS=${BNETIF_DMA_CFLAGS} B_HAS_PLAYPUMP_IP=${B_HAS_PLAYPUMP_IP} SYSTEM=${SYSTEM} CFLAGS_IMG="${CFLAGS_IMG}" -C ${BSEAV}/api/build 

clean-api:
	${Q_}${MAKE} SHAREDLIB=no SYSTEM=${SYSTEM} -C ${BSEAV}/api/build clean

ifneq ($(SYM_SRC),)
SYM_OBJ = $(SYM_SRC:%.c=$(BCM_OBJ_DIR)/%.o)
SYM_INC = $(SYM_SRC:%.c=$(BCM_OBJ_DIR)/%.inc) 

${SYM_OBJ} : ${SYM_SRC} $(filter-out ${SYM_OBJ},$(addprefix ${BCM_OBJ_DIR}/, ${OBJS})) ${BSETTOP_BIN}/libsettop.a 
	@echo [Symbols... $(notdir $<)]
	${Q_}# compile  empty sym-table and link with it 
	${Q_}${RM) ${SYM_INC}
	${Q_}echo '/* */' >${SYM_INC}
	${Q_}$(CC) -c $(CFLAGS) -I${BCM_OBJ_DIR} $< -o $@
	${Q_}$(LD) -r $(addprefix ${BCM_OBJ_DIR}/, ${OBJS}) ${BSETTOP_BIN}/libsettop.a -o${TARGET}.ko.sym $(LDFLAGS)
	${Q_}# compile with real sym-table but possibly wrong offsets
	${Q_}${RM) ${SYM_INC}
	${Q_}${NM} -f bsd -n --defined-only ${TARGET}.ko.sym|${AWK} '/.* [Tt] .*/ {printf "B_SYM(0x%su,%s)\n",$$1,$$3}' >${SYM_INC}
	${Q_}$(CC) -c $(CFLAGS) -I${BCM_OBJ_DIR} $< -o $@
	${Q_}$(LD) -r $(addprefix ${BCM_OBJ_DIR}/, ${OBJS}) ${BSETTOP_BIN}/libsettop.a -o${TARGET}.ko.sym $(LDFLAGS)
	${Q_}# build real symtable and compile with it
	${Q_}${RM) ${SYM_INC}
	${Q_}${NM} -f bsd -n --defined-only ${TARGET}.ko.sym|${AWK} '/.* [Tt] .*/ {printf "B_SYM(0x%su,%s)\n",$$1,$$3}' >${SYM_INC}
	${Q_}$(CC) -c $(CFLAGS) -I${BCM_OBJ_DIR} $< -o $@
	${Q_}${MV} ${SYM_INC} $(SYM_INC:%.inc=%.sym)
endif

$(BCM_OBJ_DIR)/%.o: %.c
	echo ${SYM_OBJ}
	@echo [Compile... $(notdir $<)]
	${Q_}$(CC) -MMD -c $(CFLAGS) $< -o $@

${BCM_OBJ_DIR}/$(TARGET).ko: $(addprefix ${BCM_OBJ_DIR}/, ${OBJS}) ${BSETTOP_BIN}/libsettop.a 
	@echo [Linking... $(notdir $@)]
	${Q_}$(LD) -Map $(BCM_OBJ_DIR)/$(TARGET).map -r $^ -o $@ $(LDFLAGS)

clean-drv:
	${Q_}rm -rf $(BCM_OBJ_DIR)

$(BCM_OBJ_DIR)/bcmkni.ko:
	$(MAKE) -f Makefile.kni
	
$(BCM_OBJ_DIR)/p3ddrv.ko:
	$(MAKE) -f Makefile.p3d
	
clean: clean-api clean-drv

-include $(BCM_OBJ_DIR)/*.d
