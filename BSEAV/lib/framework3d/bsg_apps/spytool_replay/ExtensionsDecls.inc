/******************************************************************************
 *  Copyright (C) 2017 Broadcom. The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
 ******************************************************************************/
/* Auto-generated by running gen_hook_tables.py
 * DO NOT EDIT!
 */
bool m_has_EGL_ANDROID_framebuffer_target;
bool m_has_EGL_ANDROID_image_native_buffer;
bool m_has_EGL_ANDROID_native_fence_sync;
bool m_has_EGL_ANDROID_recordable;
bool m_has_EGL_BRCM_event_monitor;
bool m_has_EGL_BRCM_gl_framebuffer_image;
bool m_has_EGL_BRCM_image_update_control;
bool m_has_EGL_BRCM_performance_counters;
bool m_has_EGL_BRCM_platform_nexus;
bool m_has_EGL_EXT_buffer_age;
bool m_has_EGL_EXT_client_extensions;
bool m_has_EGL_EXT_create_context_robustness;
bool m_has_EGL_EXT_platform_base;
bool m_has_EGL_EXT_platform_wayland;
bool m_has_EGL_EXT_platform_x11;
bool m_has_EGL_EXT_protected_content;
bool m_has_EGL_EXT_protected_surface;
bool m_has_EGL_KHR_cl_event2;
bool m_has_EGL_KHR_client_get_all_proc_addresses;
bool m_has_EGL_KHR_create_context;
bool m_has_EGL_KHR_fence_sync;
bool m_has_EGL_KHR_get_all_proc_addresses;
bool m_has_EGL_KHR_gl_colorspace;
bool m_has_EGL_KHR_gl_renderbuffer_image;
bool m_has_EGL_KHR_gl_texture_2D_image;
bool m_has_EGL_KHR_gl_texture_3D_image;
bool m_has_EGL_KHR_gl_texture_cubemap_image;
bool m_has_EGL_KHR_image;
bool m_has_EGL_KHR_image_base;
bool m_has_EGL_KHR_image_pixmap;
bool m_has_EGL_KHR_partial_update;
bool m_has_EGL_KHR_platform_android;
bool m_has_EGL_KHR_platform_wayland;
bool m_has_EGL_KHR_platform_x11;
bool m_has_EGL_KHR_surfaceless_context;
bool m_has_EGL_KHR_wait_sync;
bool m_has_EGL_VERSION_1_0;
bool m_has_EGL_VERSION_1_1;
bool m_has_EGL_VERSION_1_2;
bool m_has_EGL_VERSION_1_3;
bool m_has_EGL_VERSION_1_4;
bool m_has_EGL_VERSION_1_5;
bool m_has_EGL_WL_bind_wayland_display;
bool m_has_GL_BRCM_image_formats;
bool m_has_GL_BRCM_no_perspective;
bool m_has_GL_BRCM_polygon_mode;
bool m_has_GL_BRCM_provoking_vertex;
bool m_has_GL_BRCM_sampler_fetch;
bool m_has_GL_BRCM_shader_framebuffer_fetch_depth_stencil;
bool m_has_GL_BRCM_texture_1D;
bool m_has_GL_BRCM_texture_gather_lod;
bool m_has_GL_BRCM_texture_norm16;
bool m_has_GL_BRCM_texture_unnormalised_coords;
bool m_has_GL_ES_VERSION_2_0;
bool m_has_GL_ES_VERSION_3_0;
bool m_has_GL_ES_VERSION_3_1;
bool m_has_GL_ES_VERSION_3_2;
bool m_has_GL_EXT_base_instance;
bool m_has_GL_EXT_color_buffer_float;
bool m_has_GL_EXT_copy_image;
bool m_has_GL_EXT_debug_marker;
bool m_has_GL_EXT_discard_framebuffer;
bool m_has_GL_EXT_draw_buffers_indexed;
bool m_has_GL_EXT_draw_elements_base_vertex;
bool m_has_GL_EXT_geometry_point_size;
bool m_has_GL_EXT_geometry_shader;
bool m_has_GL_EXT_gpu_shader5;
bool m_has_GL_EXT_multi_draw_indirect;
bool m_has_GL_EXT_multisampled_render_to_texture;
bool m_has_GL_EXT_polygon_offset_clamp;
bool m_has_GL_EXT_primitive_bounding_box;
bool m_has_GL_EXT_protected_textures;
bool m_has_GL_EXT_robustness;
bool m_has_GL_EXT_shader_integer_mix;
bool m_has_GL_EXT_shader_io_blocks;
bool m_has_GL_EXT_shader_texture_lod;
bool m_has_GL_EXT_tessellation_point_size;
bool m_has_GL_EXT_tessellation_shader;
bool m_has_GL_EXT_texture_border_clamp;
bool m_has_GL_EXT_texture_buffer;
bool m_has_GL_EXT_texture_cube_map_array;
bool m_has_GL_EXT_texture_filter_anisotropic;
bool m_has_GL_EXT_texture_format_BGRA8888;
bool m_has_GL_EXT_texture_mirror_clamp_to_edge;
bool m_has_GL_EXT_texture_sRGB_R8;
bool m_has_GL_EXT_texture_sRGB_RG8;
bool m_has_GL_EXT_texture_sRGB_decode;
bool m_has_GL_KHR_blend_equation_advanced;
bool m_has_GL_KHR_blend_equation_advanced_coherent;
bool m_has_GL_KHR_debug;
bool m_has_GL_KHR_robustness;
bool m_has_GL_KHR_texture_compression_astc_ldr;
bool m_has_GL_OES_EGL_image;
bool m_has_GL_OES_EGL_image_external;
bool m_has_GL_OES_EGL_sync;
bool m_has_GL_OES_compressed_ETC1_RGB8_texture;
bool m_has_GL_OES_compressed_paletted_texture;
bool m_has_GL_OES_copy_image;
bool m_has_GL_OES_depth24;
bool m_has_GL_OES_draw_buffers_indexed;
bool m_has_GL_OES_draw_elements_base_vertex;
bool m_has_GL_OES_draw_texture;
bool m_has_GL_OES_framebuffer_object;
bool m_has_GL_OES_geometry_point_size;
bool m_has_GL_OES_geometry_shader;
bool m_has_GL_OES_gpu_shader5;
bool m_has_GL_OES_mapbuffer;
bool m_has_GL_OES_matrix_palette;
bool m_has_GL_OES_packed_depth_stencil;
bool m_has_GL_OES_point_size_array;
bool m_has_GL_OES_primitive_bounding_box;
bool m_has_GL_OES_query_matrix;
bool m_has_GL_OES_rgb8_rgba8;
bool m_has_GL_OES_sample_shading;
bool m_has_GL_OES_sample_variables;
bool m_has_GL_OES_shader_image_atomic;
bool m_has_GL_OES_shader_io_blocks;
bool m_has_GL_OES_shader_multisample_interpolation;
bool m_has_GL_OES_standard_derivatives;
bool m_has_GL_OES_stencil8;
bool m_has_GL_OES_stencil_wrap;
bool m_has_GL_OES_surfaceless_context;
bool m_has_GL_OES_tessellation_point_size;
bool m_has_GL_OES_tessellation_shader;
bool m_has_GL_OES_texture_border_clamp;
bool m_has_GL_OES_texture_buffer;
bool m_has_GL_OES_texture_cube_map_array;
bool m_has_GL_OES_texture_mirrored_repeat;
bool m_has_GL_OES_texture_npot;
bool m_has_GL_OES_texture_stencil8;
bool m_has_GL_OES_texture_storage_multisample_2d_array;
bool m_has_GL_OES_vertex_array_object;
bool m_has_GL_OES_vertex_half_float;
bool m_has_GL_VERSION_ES_CM_1_0;
