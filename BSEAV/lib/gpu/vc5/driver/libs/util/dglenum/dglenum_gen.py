#!/usr/bin/env python2

import re
import sys

re_glenum = re.compile(r'^#define\s+(GL_\w+)\s+([x0-9a-fA-F]+)\b')

glenums = dict()

libs_path = './'
if len(sys.argv) > 1:
   libs_path = sys.argv[1] + '/'

for filename in [
      libs_path + 'libs/khrn/include/GLES2/gl2.h',
      libs_path + 'libs/khrn/include/GLES2/gl2ext.h',
      libs_path + 'libs/khrn/include/GLES3/gl3.h',
      libs_path + 'libs/khrn/include/GLES3/gl31.h',
      libs_path + 'libs/khrn/include/GLES3/gl32.h',
      libs_path + 'libs/khrn/include/GLES3/gl3ext.h',
      libs_path + 'libs/khrn/include/GLES3/gl3ext_brcm.h']:
   for line in open(filename):
      m = re_glenum.search(line)
      if m:
         name = m.group(1)
         value = m.group(2)
         #sys.stderr.write("{}\n".format(name))
         if name in glenums:
            assert glenums[name] == value
         glenums[name] = value

fout = sys.stdout

fout.write('''\
/* This file is autogenerated. Intended to be #included. */

static DGLENUM_NAME_VALUE_T glenums[] = {
''')

for (name,value) in glenums.iteritems():
   fout.write('   {{ "{}", {} }},\n'.format(name,value))

fout.write('};\n')
