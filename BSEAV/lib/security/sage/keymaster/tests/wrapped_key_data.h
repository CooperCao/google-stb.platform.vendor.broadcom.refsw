/******************************************************************************
 *  Copyright (C) 2019 Broadcom.
 *  The term "Broadcom" refers to Broadcom Inc. and/or its subsidiaries.
 *
 *  This program is the proprietary software of Broadcom and/or its licensors,
 *  and may only be used, duplicated, modified or distributed pursuant to
 *  the terms and conditions of a separate, written license agreement executed
 *  between you and Broadcom (an "Authorized License").  Except as set forth in
 *  an Authorized License, Broadcom grants no license (express or implied),
 *  right to use, or waiver of any kind with respect to the Software, and
 *  Broadcom expressly reserves all rights in and to the Software and all
 *  intellectual property rights therein. IF YOU HAVE NO AUTHORIZED LICENSE,
 *  THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD
 *  IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
 *
 *  Except as expressly set forth in the Authorized License,
 *
 *  1.     This program, including its structure, sequence and organization,
 *  constitutes the valuable trade secrets of Broadcom, and you shall use all
 *  reasonable efforts to protect the confidentiality thereof, and to use this
 *  information only in connection with your use of Broadcom integrated circuit
 *  products.
 *
 *  2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
 *  "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
 *  OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
 *  RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
 *  IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
 *  A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
 *  ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
 *  THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
 *
 *  3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
 *  OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
 *  INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
 *  RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
 *  HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
 *  EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
 *  WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
 *  FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
 ******************************************************************************/

#ifndef WRAPPED_KEY_DATA_H__
#define WRAPPED_KEY_DATA_H__

/* Size of key below */
const uint32_t RSA_KEY_SIZE = 2048;

/* PKCS8 of private RSA key to be imported into KM to decrypt transit key */
const uint8_t RSA_PKCS8_STRING[] = {
        0x30, 0x82, 0x04, 0xbf, 0x02, 0x01, 0x00, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7,
        0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x82, 0x04, 0xa9, 0x30, 0x82, 0x04, 0xa5, 0x02, 0x01,
        0x00, 0x02, 0x82, 0x01, 0x01, 0x00, 0xf5, 0xb0, 0xdb, 0x9f, 0xd8, 0xde, 0x85, 0xc4, 0x68, 0x63,
        0x32, 0x87, 0xe6, 0xe6, 0xe7, 0xd9, 0x2e, 0x53, 0x5a, 0x5b, 0x7e, 0x60, 0x64, 0xaf, 0x9a, 0x4c,
        0x71, 0xe9, 0xf6, 0x21, 0x89, 0x4a, 0x63, 0x65, 0xc0, 0xe4, 0x2c, 0x57, 0x63, 0x70, 0x9c, 0x2f,
        0xf2, 0x5c, 0xa3, 0x32, 0x55, 0x97, 0x91, 0xed, 0x5f, 0x45, 0x5a, 0xac, 0x23, 0xd2, 0xab, 0x47,
        0x12, 0x65, 0x08, 0x8f, 0x67, 0x59, 0x74, 0x2e, 0xdc, 0xdc, 0xc2, 0xd1, 0x8e, 0x45, 0x9a, 0x7b,
        0x31, 0xd7, 0xa5, 0xbc, 0x10, 0x71, 0x85, 0x9d, 0x0a, 0x61, 0xb3, 0x1b, 0x39, 0xa2, 0xf6, 0xf0,
        0x00, 0x4f, 0xb6, 0x5e, 0xc0, 0xaa, 0x73, 0x31, 0x26, 0x3d, 0xc6, 0xc2, 0x68, 0xf3, 0x23, 0x5b,
        0x44, 0xb6, 0x1e, 0xb4, 0xb5, 0xb5, 0x91, 0x22, 0x22, 0x86, 0xb8, 0xe0, 0x33, 0x35, 0x2c, 0xb0,
        0xa2, 0x8f, 0x94, 0x5d, 0xf4, 0x3a, 0xe9, 0x5a, 0x9e, 0xfa, 0xe5, 0x32, 0xd5, 0x8a, 0x95, 0xf7,
        0xd1, 0xa9, 0x04, 0x43, 0x78, 0xb9, 0xef, 0x76, 0xf5, 0x3d, 0x6a, 0x1d, 0x07, 0xae, 0x57, 0x50,
        0xe0, 0x86, 0x63, 0x24, 0xc5, 0x51, 0xc9, 0x27, 0x66, 0xbf, 0xce, 0x8d, 0x6c, 0x48, 0xcc, 0xe8,
        0x75, 0x95, 0x3d, 0x10, 0x51, 0x78, 0x59, 0xeb, 0x5f, 0x65, 0x57, 0x01, 0x09, 0xa3, 0x50, 0x99,
        0x62, 0xd9, 0x65, 0x62, 0xb4, 0xfc, 0xc6, 0x8f, 0xec, 0xd0, 0x63, 0x07, 0xde, 0x94, 0x1d, 0x00,
        0xf1, 0x28, 0x15, 0x12, 0xff, 0xa4, 0xa2, 0x32, 0x25, 0x60, 0xfd, 0x12, 0x22, 0x80, 0xff, 0xf8,
        0xe6, 0xc6, 0xc9, 0xe4, 0x80, 0xd0, 0xbd, 0x74, 0x27, 0xde, 0xc9, 0x33, 0x4f, 0x27, 0x8d, 0xf1,
        0x4a, 0xea, 0x13, 0x30, 0xf5, 0x25, 0x83, 0x7d, 0x30, 0xcc, 0xac, 0x9f, 0x60, 0x44, 0x94, 0x07,
        0x98, 0x4d, 0x99, 0xc6, 0xe5, 0xb5, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x82, 0x01, 0x00, 0x53,
        0x1d, 0xd8, 0xbe, 0xd3, 0xe4, 0x3b, 0xc6, 0xbd, 0x35, 0xc9, 0xd3, 0x76, 0x06, 0xe9, 0xaa, 0x6c,
        0x64, 0xa0, 0x6d, 0xd1, 0x6c, 0x14, 0xc3, 0xdf, 0x64, 0x3b, 0x29, 0x56, 0x2d, 0xf4, 0x3f, 0x29,
        0x2f, 0x34, 0x39, 0x3c, 0xd2, 0xf7, 0x7e, 0x12, 0x28, 0x9a, 0x4a, 0x42, 0x9f, 0x75, 0x9b, 0x48,
        0x2f, 0xd0, 0x8a, 0x2a, 0xe9, 0x8f, 0x58, 0xe6, 0xbe, 0xad, 0x77, 0x66, 0x94, 0xf4, 0xf6, 0xab,
        0x3a, 0x6b, 0x57, 0x77, 0xc4, 0xe2, 0xe7, 0xa3, 0x22, 0x48, 0x33, 0x57, 0x0b, 0x2f, 0x58, 0xe8,
        0x45, 0xbf, 0x4c, 0x5c, 0x06, 0x3a, 0xd2, 0x69, 0xcd, 0xb9, 0x9d, 0x3d, 0xea, 0x02, 0x2d, 0xe7,
        0xb8, 0x59, 0xe2, 0x8e, 0x4a, 0x18, 0xad, 0x20, 0x69, 0xf0, 0xed, 0xd7, 0xa7, 0x74, 0xcd, 0x8e,
        0xe2, 0xc8, 0x61, 0x61, 0x4b, 0xdf, 0xa6, 0xfe, 0x8e, 0x67, 0x00, 0x41, 0xc6, 0x23, 0x27, 0xdd,
        0x36, 0x49, 0xa0, 0x8f, 0x77, 0x3c, 0xa2, 0x65, 0x14, 0x06, 0x6b, 0x6a, 0xda, 0x49, 0x83, 0xe0,
        0x9e, 0x7a, 0x51, 0x86, 0x37, 0x9e, 0x96, 0x87, 0x42, 0x32, 0xee, 0x43, 0xf7, 0x6e, 0xa9, 0x40,
        0xce, 0xd7, 0x01, 0xfe, 0x81, 0xd4, 0xa5, 0xb9, 0x31, 0x95, 0x7a, 0x13, 0x70, 0xaf, 0xe9, 0xb4,
        0xae, 0xfc, 0x46, 0xce, 0xf7, 0x92, 0x9b, 0x16, 0x8f, 0x4b, 0x9f, 0xe7, 0xfb, 0x35, 0xc6, 0x0f,
        0x98, 0x77, 0xad, 0xcd, 0x1f, 0x20, 0x32, 0x37, 0x13, 0xe1, 0xaf, 0x28, 0x50, 0xd4, 0x47, 0xb3,
        0x4b, 0xaf, 0xf3, 0xf2, 0x34, 0x0b, 0x49, 0x6a, 0xc4, 0xb6, 0x6a, 0x79, 0xda, 0x14, 0x06, 0xff,
        0xf5, 0xf5, 0x91, 0xb3, 0x3f, 0x44, 0x4e, 0x33, 0xfa, 0x38, 0xa3, 0xe2, 0x91, 0xe6, 0x01, 0xc9,
        0xb0, 0xc1, 0xbd, 0xf4, 0x00, 0xd8, 0x80, 0x8b, 0xa0, 0xba, 0xd4, 0xdc, 0x95, 0xce, 0xe5, 0x02,
        0x81, 0x81, 0x00, 0xfc, 0xf1, 0x46, 0xb6, 0x5d, 0x85, 0x41, 0x79, 0xc8, 0x4a, 0xfe, 0x7c, 0x34,
        0x66, 0xff, 0xd8, 0xc4, 0x94, 0xa4, 0xf6, 0xb5, 0xa3, 0x0a, 0xab, 0xaa, 0xad, 0x65, 0x84, 0x65,
        0xe4, 0x20, 0xc3, 0x5f, 0x74, 0x63, 0x1b, 0x7a, 0xa6, 0x0e, 0x18, 0x52, 0x48, 0xd5, 0xa2, 0xb4,
        0xbd, 0x87, 0x7a, 0x42, 0x59, 0xd6, 0x58, 0xe6, 0xb0, 0x9d, 0x53, 0xbb, 0x95, 0x58, 0x97, 0xc1,
        0x93, 0x2c, 0x7c, 0x72, 0x7c, 0x0f, 0xa6, 0x94, 0x35, 0x50, 0x2e, 0xd5, 0x97, 0x22, 0xb6, 0x3a,
        0xac, 0xbb, 0x3e, 0x7f, 0x85, 0x09, 0xc5, 0x01, 0xd0, 0x7f, 0xb4, 0xe1, 0x70, 0x95, 0xd6, 0xbd,
        0xfd, 0x64, 0x41, 0x77, 0x7d, 0xa2, 0x01, 0xec, 0xd4, 0x3a, 0x0e, 0xff, 0xca, 0x67, 0x07, 0xa1,
        0x90, 0x54, 0x6c, 0xf6, 0xf3, 0xa0, 0x51, 0xc4, 0xb6, 0x06, 0x60, 0x7e, 0x82, 0xd8, 0xf1, 0x28,
        0x88, 0xbf, 0xdf, 0x02, 0x81, 0x81, 0x00, 0xf8, 0xa9, 0x24, 0x46, 0x69, 0x38, 0x6c, 0xde, 0x7f,
        0x85, 0xd3, 0x84, 0x2e, 0x9a, 0xc7, 0x7c, 0xac, 0xff, 0xad, 0x66, 0x4d, 0x48, 0x62, 0xe5, 0x64,
        0xd8, 0x4a, 0xe3, 0x3d, 0xe7, 0xce, 0xb4, 0x7f, 0xef, 0xdd, 0xf4, 0xa6, 0xcf, 0x7c, 0xdc, 0xc1,
        0x9e, 0xc0, 0x45, 0x32, 0x18, 0x94, 0x16, 0xa2, 0x1e, 0xb1, 0x73, 0xdb, 0xe3, 0xba, 0x6a, 0x84,
        0xb8, 0x15, 0x94, 0xd0, 0x90, 0x63, 0x39, 0xc6, 0x3b, 0x9d, 0xa1, 0x77, 0xc0, 0x13, 0xf6, 0x82,
        0x55, 0xa6, 0x16, 0xc0, 0x15, 0xbb, 0xf5, 0x42, 0xb9, 0xa2, 0x0f, 0xf4, 0x30, 0xa2, 0x36, 0xf5,
        0x9f, 0x0f, 0x94, 0xe7, 0xed, 0xbd, 0x9f, 0x5b, 0x9d, 0x04, 0xdb, 0x39, 0x2c, 0x04, 0x53, 0x26,
        0xad, 0x84, 0x3e, 0x22, 0x12, 0xe2, 0xee, 0xcc, 0x68, 0x2d, 0x99, 0x26, 0x41, 0x07, 0xc1, 0x5f,
        0x99, 0x33, 0xea, 0xd7, 0x89, 0xbc, 0xeb, 0x02, 0x81, 0x81, 0x00, 0xd2, 0xa2, 0x5d, 0x7f, 0x59,
        0xcb, 0xb1, 0x25, 0xa7, 0xdc, 0x83, 0xa5, 0x8c, 0xc1, 0xc5, 0x06, 0x8f, 0x55, 0x35, 0x36, 0x59,
        0x35, 0xa7, 0x9a, 0x22, 0xec, 0x78, 0x60, 0x53, 0xb5, 0x30, 0x6f, 0x61, 0xda, 0xfa, 0xf9, 0x14,
        0x1e, 0x9a, 0x18, 0x38, 0xd5, 0x7c, 0x4a, 0x1c, 0xf6, 0xc3, 0x8d, 0xd5, 0x19, 0x18, 0xbd, 0x39,
        0x86, 0x13, 0xcd, 0x79, 0xa5, 0x39, 0x7c, 0x4e, 0x6f, 0xaf, 0x99, 0x06, 0x81, 0x37, 0x4b, 0x41,
        0x9a, 0x4f, 0xe6, 0x60, 0x69, 0x96, 0x37, 0x68, 0x0f, 0x15, 0x72, 0x4b, 0x20, 0xcf, 0x6c, 0xe6,
        0x40, 0xe9, 0x48, 0x08, 0x80, 0x07, 0xd7, 0x26, 0xa9, 0x8f, 0x46, 0x51, 0x2a, 0x26, 0xb2, 0x31,
        0xb4, 0xdd, 0x90, 0x46, 0x04, 0x17, 0xde, 0x2b, 0xf5, 0x93, 0xc8, 0x95, 0xb1, 0x75, 0x6d, 0x02,
        0x41, 0x8e, 0x77, 0xe6, 0x82, 0x32, 0x04, 0x48, 0xfb, 0xef, 0xc3, 0x02, 0x81, 0x81, 0x00, 0xd7,
        0xe3, 0xe2, 0x7e, 0xcf, 0x74, 0x11, 0xf1, 0xcb, 0xbe, 0x21, 0x3a, 0xae, 0x4b, 0xeb, 0xcf, 0x2f,
        0x54, 0x7c, 0xf4, 0x49, 0x3d, 0x03, 0xc0, 0x2e, 0xa2, 0x2b, 0xc2, 0xc8, 0x48, 0xae, 0x8a, 0xc0,
        0x59, 0x3d, 0xd7, 0xdf, 0xcc, 0x5d, 0x98, 0x3c, 0xf2, 0xdb, 0xf4, 0x37, 0xde, 0x67, 0x14, 0x8f,
        0x85, 0x1e, 0x84, 0x7c, 0xf1, 0x67, 0x34, 0x7c, 0x2e, 0x67, 0x6e, 0x60, 0xf6, 0x3b, 0x70, 0x39,
        0xd0, 0x20, 0xb7, 0xc4, 0x04, 0x9c, 0x50, 0x76, 0x30, 0x6e, 0x97, 0x6a, 0x06, 0x74, 0xbe, 0x28,
        0x44, 0x8b, 0x94, 0x56, 0x6a, 0xb3, 0x2c, 0x0c, 0x6d, 0x21, 0x56, 0x23, 0x57, 0xa2, 0x3e, 0xed,
        0x87, 0x92, 0x63, 0xd3, 0x6b, 0x88, 0x05, 0xb9, 0x9b, 0x05, 0x29, 0xfc, 0xe3, 0x70, 0xeb, 0xeb,
        0xc4, 0xb7, 0x72, 0x34, 0x68, 0x59, 0x97, 0x66, 0xac, 0xd9, 0x0a, 0x98, 0x40, 0x1a, 0x29, 0x02,
        0x81, 0x81, 0x00, 0xf7, 0x82, 0x6f, 0xac, 0xd2, 0xcb, 0xee, 0x8c, 0x15, 0x54, 0xe5, 0x23, 0x0f,
        0x8f, 0xf7, 0x52, 0x43, 0x8a, 0x88, 0x19, 0xae, 0x2c, 0xd3, 0xf0, 0xc6, 0xf4, 0xbb, 0xbb, 0x6b,
        0x96, 0x5a, 0xae, 0x8f, 0x82, 0x67, 0xb9, 0x10, 0x5f, 0x9f, 0x35, 0xc5, 0x2d, 0xc8, 0x68, 0x0f,
        0x16, 0xfc, 0xfc, 0xf5, 0x2b, 0xe3, 0x84, 0x40, 0x18, 0x34, 0x82, 0xb7, 0x02, 0x12, 0x20, 0x52,
        0xa2, 0x34, 0x7b, 0x34, 0xd0, 0xe4, 0x72, 0x47, 0x75, 0x6d, 0x0e, 0x87, 0xf4, 0x8a, 0xa8, 0x6c,
        0xfb, 0x74, 0x34, 0xf9, 0x3d, 0x6c, 0x8b, 0x25, 0xdf, 0xd0, 0x64, 0x51, 0x1b, 0x5d, 0xae, 0x4a,
        0x7b, 0x14, 0x91, 0x51, 0x3d, 0x9c, 0x22, 0x4c, 0x57, 0x23, 0x75, 0x10, 0x12, 0x37, 0xcf, 0x75,
        0x31, 0xca, 0xfc, 0xbc, 0xe3, 0x22, 0x89, 0x96, 0xf6, 0x80, 0x0a, 0x14, 0x09, 0x9a, 0xb7, 0x67,
        0xb7, 0xc5, 0x87
        };

/* Clear version of transit key - not used, but here for completeness */
const uint8_t TRANSIT_KEY_CLEAR[] = {
        0xbe, 0x11, 0x1c, 0x41, 0x0b, 0xb6, 0x7e, 0xd9, 0xda, 0x64, 0x55, 0xbc, 0x4e, 0x7a, 0x2b, 0x6e,
        0x36, 0x65, 0xa3, 0x73, 0x98, 0x9c, 0xfd, 0xa6, 0x86, 0x09, 0x5e, 0xb1, 0x5c, 0x9b, 0xf9, 0x84
        };

/* Mask which is XOR'ed with clear transit key, before encrypting it with RSA key */
const uint8_t MASK[] = {
        0x0e, 0xa4, 0x6b, 0x7d, 0xea, 0xee, 0xe3, 0x4d, 0x8a, 0x86, 0xaf, 0xf1, 0x1e, 0x2c, 0xeb, 0x26,
        0x2c, 0x75, 0x4d, 0x8b, 0xf1, 0x9c, 0x22, 0x58, 0x53, 0x52, 0x23, 0xea, 0x61, 0x47, 0x52, 0x86
        };

/* Mask applied to transit key */
const uint8_t MASKED_KEY[] = {
        0xb0, 0xb5, 0x77, 0x3c, 0xe1, 0x58, 0x9d, 0x94, 0x50, 0xe2, 0xfa, 0x4d, 0x50, 0x56, 0xc0, 0x48,
        0x1a, 0x10, 0xee, 0xf8, 0x69, 0x00, 0xdf, 0xfe, 0xd5, 0x5b, 0x7d, 0x5b, 0x3d, 0xdc, 0xab, 0x02
        };

/* Masked transit key, encrypted with public key of RSA key, above, using OAEP padding and SHA1 */
const uint8_t TRANSIT_KEY_ENC[] = {
        0xed, 0x90, 0x48, 0x72, 0x57, 0xf8, 0x9c, 0x11, 0xe5, 0x05, 0x17, 0x11, 0x7d, 0x34, 0x0d, 0x46,
        0xda, 0xb0, 0x87, 0xee, 0xfd, 0xbf, 0x37, 0x7f, 0x70, 0xf8, 0xd9, 0x07, 0xab, 0xee, 0x70, 0xaa,
        0xab, 0xd3, 0x88, 0xa5, 0xc5, 0x32, 0x58, 0x3c, 0xe5, 0x81, 0xa8, 0xc7, 0xdd, 0xbb, 0x82, 0x04,
        0x86, 0x65, 0xf2, 0xd7, 0x1d, 0x3a, 0xa8, 0x48, 0x40, 0x1a, 0x6b, 0x19, 0xea, 0xb2, 0x9b, 0x60,
        0xd7, 0x7e, 0xe4, 0x23, 0xb0, 0x49, 0xdf, 0xf8, 0x55, 0xe5, 0x96, 0x03, 0xb4, 0x24, 0xc7, 0x7b,
        0x29, 0xd5, 0xfd, 0x7d, 0x68, 0xb5, 0x98, 0xd9, 0xcc, 0xab, 0x22, 0xc2, 0x4c, 0x17, 0xb4, 0x49,
        0xb1, 0xa4, 0x3d, 0xab, 0x54, 0x00, 0x2d, 0x94, 0x44, 0xac, 0xf9, 0xe9, 0x38, 0x9e, 0x7c, 0x10,
        0xfc, 0xd7, 0x0e, 0xb5, 0x18, 0x16, 0x24, 0x85, 0x43, 0x7b, 0x05, 0x14, 0x08, 0x17, 0x57, 0xb8,
        0x7d, 0x47, 0x64, 0x40, 0xe3, 0x5d, 0x85, 0x13, 0xae, 0xd0, 0x87, 0x6c, 0x6e, 0x89, 0x95, 0x2f,
        0x92, 0x69, 0x12, 0x06, 0x46, 0x50, 0xa1, 0xa6, 0x84, 0xd3, 0x0e, 0x0e, 0x6a, 0xfc, 0x56, 0xdb,
        0x1b, 0xd5, 0x3b, 0xf0, 0xb7, 0x22, 0x9d, 0x34, 0x68, 0x63, 0x01, 0xfe, 0xe7, 0xab, 0x81, 0xd8,
        0x77, 0x90, 0x85, 0x69, 0xa7, 0x83, 0xdf, 0x39, 0x84, 0x4c, 0x18, 0x74, 0x2b, 0xff, 0xd5, 0x52,
        0xca, 0x60, 0xcd, 0x10, 0xc3, 0xfe, 0xc0, 0x99, 0xdc, 0x0b, 0x49, 0x19, 0xae, 0x8d, 0x07, 0x3d,
        0x3e, 0xff, 0x6b, 0x09, 0x99, 0xa4, 0xcf, 0x92, 0x2e, 0xbf, 0x27, 0x96, 0xfb, 0xf8, 0x92, 0xcb,
        0xc3, 0x64, 0xb2, 0xdd, 0x04, 0x56, 0xbd, 0xc5, 0x6a, 0xcd, 0x38, 0x4f, 0x30, 0x85, 0x45, 0xbe,
        0xf5, 0xc3, 0x7b, 0x6f, 0x48, 0x87, 0x86, 0x36, 0x3c, 0x3a, 0x13, 0xe5, 0x92, 0xc5, 0x61, 0x1b
        };

/* IV used with transit key to encrypt wrapped key */
const uint8_t IV[] = {
        0xd0, 0x22, 0x87, 0xd0, 0xaf, 0x21, 0x6b, 0xd4, 0x61, 0x95, 0x74, 0x5b
        };

/* Don't bother with an ASN.1 DESC, just use some random data */
const uint8_t DESC[] = {
        0x91, 0xde, 0x2b, 0x88, 0xa1, 0x5c, 0xfa, 0x8c, 0x94, 0x71, 0x4d, 0x8f, 0x21, 0x7d, 0xf5, 0x0c,
        0x74, 0x17, 0x5b, 0xcd, 0x7b, 0xa5, 0xa6, 0x13, 0x8a, 0x0c, 0x11, 0x07, 0xd7, 0x71, 0x01, 0xfc,
        0x7d, 0xc7, 0x56, 0x99, 0x93, 0x88, 0xa9, 0x41, 0x47, 0xb4, 0xe8, 0x37, 0x83, 0x31, 0x3e, 0xa2,
        0x91, 0x25, 0x02, 0x32, 0xec, 0xc1, 0x40, 0x43, 0x38, 0x8a, 0x82, 0x24
        };

/*---------------------------------------------------------------------------------------------------------*/
/* AES 256 key data for importing */

/* The size of the key below, in bits */
const uint32_t AES_CLEAR_KEY_SIZE = 256;

/* 128 bytes random data to make an AES key */
const uint8_t AES_CLEAR_WRAPPED_KEY[] = {
        0x16, 0x28, 0x70, 0x93, 0x93, 0x54, 0xf3, 0x76, 0x23, 0x15, 0xd5, 0x40, 0xaf, 0xa0, 0xa2, 0x26,
        0x7f, 0xd2, 0xd2, 0xcc, 0xe0, 0x33, 0xd5, 0x96, 0x45, 0xc1, 0xf5, 0x2c, 0x7a, 0xa2, 0x8a, 0x9a
        };

/* AES-GCM encrypted version of AES_CLEAR_WRAPPED_KEY */
const uint8_t AES_ENC_WRAPPED_KEY[] = {
        0xcd, 0xa0, 0xab, 0x2e, 0x9d, 0xdd, 0x4c, 0xab, 0xb6, 0x85, 0x90, 0xe7, 0xe9, 0xef, 0xea, 0x37,
        0x6c, 0x5f, 0x8d, 0x1b, 0x78, 0xb4, 0x84, 0xf9, 0xa7, 0x5c, 0x4d, 0x94, 0xc8, 0x84, 0x9a, 0x95
        };

/* Tag data to auth transaction */
const uint8_t AES_TAG_DATA[] = {
        0x59, 0x78, 0x51, 0xdc, 0x45, 0xb2, 0x6c, 0x23, 0x82, 0x7e, 0x26, 0xa3, 0x5f, 0x3a, 0x3f, 0x36
        };

/* The format of the key to be imported - in this case RAW AES */
const km_key_format_t AES_KEY_FORMAT = SKM_KEY_FORMAT_RAW;

/*---------------------------------------------------------------------------------------------------------*/
/* RSA 1K key data for importing */

/* The size of the key below, in bits */
const uint32_t RSA_CLEAR_KEY_SIZE = 1024;

/* The RSA key in PKCS8 format */
const uint8_t RSA_CLEAR_WRAPPED_KEY_PKCS8[] = {
        0x30, 0x82, 0x02, 0x77, 0x02, 0x01, 0x00, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7,
        0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x04, 0x82, 0x02, 0x61, 0x30, 0x82, 0x02, 0x5d, 0x02, 0x01,
        0x00, 0x02, 0x81, 0x81, 0x00, 0xbf, 0x62, 0x9e, 0x52, 0x75, 0x51, 0x99, 0xe5, 0xf5, 0xb4, 0x2f,
        0xc1, 0xbf, 0x4d, 0x0c, 0x36, 0x3c, 0x1c, 0x54, 0x20, 0xfc, 0x57, 0xbc, 0x23, 0x20, 0x4b, 0x47,
        0x12, 0x6f, 0xdb, 0x60, 0x37, 0x59, 0xc4, 0xad, 0xb0, 0x4e, 0x63, 0xad, 0x02, 0x54, 0x30, 0x46,
        0x38, 0xd0, 0x9d, 0x75, 0xed, 0x00, 0xbf, 0xf6, 0x8d, 0x53, 0x64, 0xad, 0xd4, 0xc3, 0x0c, 0x7a,
        0x95, 0xc1, 0xf1, 0xf5, 0xfa, 0xa5, 0x29, 0x1f, 0xa8, 0x47, 0x2c, 0xb5, 0xc4, 0x9d, 0x24, 0x2e,
        0x81, 0x23, 0x51, 0x4e, 0x3d, 0xf6, 0x4c, 0x90, 0x2d, 0xa3, 0x73, 0xff, 0x62, 0x20, 0xb5, 0xf5,
        0xe3, 0x20, 0x99, 0x83, 0xe8, 0xab, 0x48, 0x31, 0x4c, 0xc7, 0xe2, 0x29, 0x14, 0x33, 0x1c, 0xdd,
        0x3c, 0xc4, 0x64, 0x53, 0x6a, 0xb3, 0x2b, 0xc9, 0x64, 0x68, 0x58, 0xaf, 0xfc, 0xee, 0x94, 0x93,
        0xed, 0x85, 0x4c, 0xbb, 0xfd, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x81, 0x80, 0x04, 0x77, 0xce,
        0xee, 0x69, 0xe2, 0xbf, 0xcf, 0x08, 0x8f, 0x6e, 0x55, 0xfd, 0x9b, 0x54, 0xdf, 0xa7, 0x43, 0x9a,
        0x0b, 0x33, 0x18, 0xf1, 0x41, 0x78, 0xad, 0x89, 0x39, 0x3a, 0xf7, 0x4a, 0x25, 0xc0, 0xa8, 0xc0,
        0xcd, 0x4e, 0xe7, 0x30, 0xd0, 0xcf, 0x1a, 0x59, 0x69, 0x56, 0x25, 0x76, 0xed, 0x53, 0x89, 0x27,
        0xbe, 0x60, 0xe6, 0x06, 0xd0, 0xe2, 0xc4, 0xd5, 0xcf, 0xcd, 0x39, 0x52, 0xde, 0xbe, 0xc3, 0xb8,
        0xaf, 0xb8, 0x5e, 0x5e, 0x18, 0x4d, 0x91, 0x23, 0x66, 0x10, 0x5c, 0xac, 0xeb, 0x35, 0x9c, 0xb2,
        0x28, 0xf1, 0x68, 0x05, 0x87, 0xa5, 0x97, 0x74, 0x43, 0x8e, 0x6a, 0xf7, 0x55, 0x1a, 0xa4, 0x8a,
        0xa5, 0x8e, 0x8f, 0x23, 0x50, 0xf8, 0x94, 0xdd, 0x8b, 0x3b, 0x8e, 0x1b, 0xb1, 0xbd, 0x0a, 0xb6,
        0xbf, 0x35, 0x79, 0x28, 0xfc, 0x9b, 0x48, 0x30, 0xd7, 0x4a, 0x18, 0x89, 0xd9, 0x02, 0x41, 0x00,
        0xed, 0xd6, 0xd6, 0xba, 0x9d, 0x0b, 0x3d, 0xaf, 0x5f, 0x32, 0x21, 0xbc, 0xe5, 0x48, 0x72, 0x22,
        0x71, 0x20, 0x37, 0xd2, 0xf0, 0x3a, 0xe2, 0x37, 0xe3, 0x48, 0x55, 0x39, 0x81, 0xfd, 0x32, 0xd9,
        0x9e, 0xa4, 0x5a, 0xf6, 0x70, 0x98, 0x40, 0xac, 0x9e, 0x7c, 0xc5, 0x1a, 0x03, 0xd3, 0x3e, 0x0c,
        0x51, 0x00, 0xbe, 0x72, 0x62, 0x6f, 0x37, 0x7b, 0x36, 0xb6, 0xa9, 0xc4, 0xd1, 0x74, 0xff, 0xeb,
        0x02, 0x41, 0x00, 0xcd, 0xff, 0xb8, 0x75, 0x04, 0x78, 0x10, 0x3b, 0x72, 0x93, 0xda, 0xb4, 0x38,
        0x38, 0xd5, 0x6f, 0x17, 0x6d, 0x4d, 0xb4, 0xca, 0x7c, 0x8d, 0xfe, 0x8c, 0x8d, 0xc6, 0xfa, 0x27,
        0x64, 0x23, 0x89, 0x32, 0x83, 0x7e, 0xfa, 0xc8, 0x47, 0xeb, 0xbb, 0x97, 0xaa, 0x1c, 0xcd, 0xe7,
        0x7e, 0xcd, 0xc8, 0x01, 0xb7, 0x4a, 0xdf, 0xea, 0x68, 0xe4, 0x4c, 0xcc, 0xd0, 0xd7, 0xd7, 0x3a,
        0x65, 0xa1, 0xb7, 0x02, 0x40, 0x71, 0x0c, 0xb0, 0x4e, 0x4d, 0x7d, 0x5d, 0x59, 0xb1, 0x87, 0x13,
        0xb0, 0x44, 0xcf, 0xb5, 0xa8, 0x97, 0x5a, 0xf8, 0x0d, 0xe4, 0xb0, 0x28, 0x7c, 0xe6, 0x24, 0xa8,
        0x95, 0xc8, 0x2a, 0xc0, 0xf3, 0xdd, 0xcb, 0x43, 0x8d, 0x66, 0x21, 0x88, 0x84, 0x44, 0x65, 0x0c,
        0x0e, 0xfc, 0x88, 0x79, 0x32, 0xc3, 0x81, 0xf6, 0x04, 0x4a, 0xb3, 0x90, 0x8c, 0x99, 0x8a, 0x23,
        0x91, 0xf0, 0xf9, 0x8a, 0xf7, 0x02, 0x41, 0x00, 0xa8, 0x1d, 0x05, 0x80, 0x1a, 0x01, 0x91, 0xdd,
        0xb2, 0x08, 0x0f, 0xf7, 0xfb, 0xda, 0x05, 0xf4, 0xff, 0x7d, 0x68, 0x69, 0x1e, 0xc6, 0xbf, 0x6a,
        0xf9, 0x71, 0xca, 0xec, 0xe3, 0xb0, 0xc9, 0x7f, 0x72, 0x05, 0xf6, 0x5e, 0xdb, 0x8c, 0x36, 0x49,
        0x85, 0xe0, 0x82, 0x59, 0x57, 0x8f, 0x18, 0x89, 0x1d, 0x3d, 0x64, 0x91, 0x90, 0x4f, 0xc1, 0xe1,
        0x1b, 0x55, 0x64, 0x90, 0x75, 0x4b, 0xf3, 0xc9, 0x02, 0x41, 0x00, 0x9f, 0xc1, 0x28, 0xa9, 0xf9,
        0x7c, 0x45, 0x39, 0xe8, 0xd6, 0x7f, 0x14, 0x1f, 0x3d, 0x55, 0xb0, 0x9c, 0xd8, 0xcc, 0x63, 0x04,
        0x18, 0xaf, 0x9b, 0x41, 0x26, 0xdc, 0xac, 0x76, 0x9c, 0x76, 0xe1, 0xc5, 0x93, 0x89, 0x66, 0xe5,
        0x8c, 0xf7, 0x90, 0x72, 0xa1, 0x96, 0x63, 0xcc, 0xf8, 0xb7, 0xf6, 0xa9, 0xc8, 0x4c, 0x16, 0xf5,
        0xfa, 0xef, 0x5b, 0x4f, 0x4d, 0xb9, 0x92, 0xac, 0x2d, 0x45, 0xdb
        };

/* AES-GCM encrypted version of RSA_CLEAR_WRAPPED_KEY_PKCS8 */
const uint8_t RSA_ENC_WRAPPED_KEY[] = {
        0xeb, 0x0a, 0xd9, 0xca, 0x0c, 0x88, 0xbf, 0xed, 0x98, 0x96, 0x4c, 0x8d, 0xc0, 0x07, 0xce, 0xe6,
        0x1e, 0x8c, 0x5e, 0xd6, 0x9d, 0x87, 0x55, 0xed, 0xe0, 0xfc, 0x88, 0x3a, 0xb0, 0x7b, 0x12, 0x0e,
        0xed, 0xcf, 0xbd, 0x13, 0xac, 0x81, 0xa8, 0x4b, 0xda, 0x37, 0xcb, 0x80, 0x54, 0x78, 0x4a, 0x6d,
        0x51, 0xd8, 0x68, 0x91, 0x47, 0xa0, 0x43, 0xbc, 0x13, 0xef, 0x17, 0xc3, 0xf8, 0x60, 0xfe, 0x2a,
        0xd2, 0x68, 0x45, 0xd4, 0xbe, 0x1a, 0x51, 0xa9, 0x30, 0x7d, 0xb0, 0x71, 0xbe, 0x53, 0xaf, 0x20,
        0x15, 0x4e, 0x71, 0x73, 0x0c, 0x8c, 0x1a, 0x23, 0xee, 0xe6, 0xc0, 0x92, 0x14, 0xda, 0x2a, 0x3a,
        0xae, 0xb4, 0x9b, 0x23, 0x27, 0xba, 0xb6, 0xf6, 0x37, 0xa6, 0x9f, 0x05, 0x03, 0xca, 0xd0, 0x02,
        0x99, 0x75, 0x15, 0x04, 0xc3, 0xd9, 0x69, 0x0d, 0xd5, 0xed, 0xad, 0xf4, 0xa9, 0xbf, 0x9f, 0x5c,
        0x8e, 0xf9, 0x50, 0x39, 0xfd, 0xa6, 0x9c, 0x79, 0x08, 0xe8, 0x6d, 0xa1, 0x58, 0x9c, 0x6a, 0x63,
        0xbf, 0x24, 0xbf, 0xab, 0xb1, 0x66, 0xc4, 0xc1, 0xd5, 0x7a, 0x03, 0x24, 0x41, 0xca, 0x42, 0xc6,
        0xc7, 0x99, 0x2d, 0x98, 0x4a, 0x9f, 0x9b, 0x05, 0x52, 0xab, 0x23, 0xbd, 0xaf, 0x3d, 0x25, 0x0f,
        0x00, 0x6e, 0xb1, 0x44, 0x2c, 0xf2, 0xa3, 0xbc, 0xdb, 0x10, 0x43, 0x6d, 0x53, 0x28, 0x4a, 0xed,
        0xd3, 0xf3, 0x70, 0x28, 0x33, 0x64, 0x84, 0x0c, 0xed, 0x80, 0x61, 0x03, 0xa9, 0xc5, 0x91, 0x95,
        0xd7, 0x9e, 0x5d, 0x60, 0xbf, 0xff, 0x5e, 0xd7, 0x54, 0x89, 0x9a, 0x6a, 0xc2, 0xb2, 0x7c, 0xc9,
        0x05, 0xcd, 0x5f, 0x59, 0x92, 0x1d, 0xc2, 0x99, 0x4c, 0xd3, 0x93, 0xe7, 0x06, 0x6a, 0x1b, 0xa2,
        0xd0, 0x0e, 0x23, 0xa9, 0x6f, 0x5b, 0xab, 0xe0, 0x4e, 0x33, 0xb9, 0x49, 0x48, 0x11, 0x1b, 0x24,
        0x01, 0xc1, 0xe7, 0x9d, 0x76, 0x6f, 0xf3, 0xe4, 0x00, 0x25, 0xd0, 0xd5, 0x9d, 0xef, 0xca, 0x17,
        0x55, 0x27, 0xb6, 0x65, 0xe6, 0xd0, 0x7a, 0x73, 0xcb, 0x3c, 0xc0, 0x2b, 0x47, 0x0f, 0x9b, 0x20,
        0xa2, 0x08, 0x61, 0x8b, 0xec, 0x19, 0x77, 0xd5, 0xac, 0x51, 0xf1, 0x30, 0xc3, 0x12, 0x38, 0xfa,
        0x0c, 0x2b, 0xeb, 0xd7, 0x9b, 0xec, 0x32, 0x95, 0x11, 0xec, 0x56, 0xc9, 0x78, 0x2d, 0x97, 0x86,
        0x18, 0x7d, 0x6f, 0xc3, 0xd0, 0xca, 0xbd, 0x7b, 0x95, 0xa2, 0x62, 0x5a, 0x2a, 0x4f, 0x61, 0xcc,
        0x72, 0x78, 0x33, 0x7d, 0x06, 0xbb, 0x21, 0x56, 0xd3, 0xd5, 0x2b, 0x63, 0xc2, 0x9e, 0x5a, 0xa9,
        0x9f, 0x30, 0x89, 0x39, 0xa9, 0xd8, 0x80, 0x04, 0x8a, 0xce, 0x96, 0x50, 0x79, 0xa7, 0xd4, 0x3d,
        0x58, 0xbe, 0x6e, 0x3d, 0x62, 0x2e, 0xf3, 0x4c, 0xc9, 0xbc, 0x1a, 0xf7, 0x86, 0xa0, 0xc1, 0x76,
        0x55, 0x86, 0x37, 0x3f, 0x66, 0x4a, 0x05, 0x1d, 0x42, 0xf7, 0x43, 0xb3, 0x56, 0x34, 0xaa, 0x27,
        0xf2, 0xa6, 0xb3, 0x86, 0xf9, 0x0e, 0x1c, 0xdc, 0x3c, 0xa7, 0xa5, 0x78, 0xf7, 0x67, 0x1d, 0x43,
        0xbe, 0x5a, 0x99, 0xd8, 0x0d, 0xa3, 0x4f, 0xe2, 0x78, 0xba, 0xc9, 0x70, 0x89, 0x1e, 0xbf, 0x2b,
        0x97, 0xb3, 0xa5, 0x56, 0xb0, 0x51, 0x44, 0x20, 0x4f, 0xc6, 0xbc, 0x40, 0x24, 0x29, 0xfb, 0xd4,
        0xba, 0x90, 0x4d, 0xbd, 0x5a, 0xf7, 0x65, 0x0a, 0x7f, 0x10, 0xd3, 0x46, 0xcb, 0x91, 0x37, 0x42,
        0xc0, 0x66, 0x2e, 0x7d, 0xef, 0x66, 0xbe, 0x3a, 0xaf, 0x70, 0x26, 0xb2, 0xb5, 0x13, 0xe3, 0xd5,
        0x47, 0x91, 0x58, 0x0c, 0x1e, 0x9b, 0x1c, 0x42, 0xd0, 0x92, 0x1a, 0x0d, 0x0a, 0x15, 0x74, 0xff,
        0xdf, 0x10, 0x44, 0xa1, 0xe7, 0xe9, 0x6d, 0x5d, 0x70, 0xde, 0x57, 0x99, 0x45, 0xe9, 0x9f, 0xf4,
        0xab, 0x18, 0xd1, 0xb0, 0x20, 0xe9, 0x31, 0xf7, 0x31, 0x07, 0x61, 0xc2, 0x7d, 0x54, 0x51, 0x76,
        0x7d, 0xf3, 0x77, 0xba, 0xfa, 0x3b, 0x69, 0xe9, 0x82, 0x46, 0x79, 0x2e, 0x3d, 0xf1, 0xb6, 0x64,
        0x39, 0x28, 0x64, 0x83, 0xd9, 0xa2, 0x6e, 0xa4, 0x26, 0x19, 0x93, 0x33, 0x3b, 0x39, 0x30, 0xe4,
        0x9d, 0x35, 0xdc, 0x07, 0x05, 0x09, 0xa6, 0xaa, 0x4f, 0xe6, 0xb4, 0xb2, 0x13, 0xa4, 0x61, 0xea,
        0x55, 0x92, 0x62, 0x5c, 0x91, 0x34, 0xd7, 0x1e, 0xcc, 0xce, 0x68, 0xee, 0x36, 0x66, 0x1c, 0x06,
        0x4b, 0x76, 0xb4, 0x74, 0xa2, 0xe4, 0x70, 0xe6, 0xb0, 0x84, 0x0b, 0xd5, 0xce, 0x36, 0x1c, 0xd1,
        0x43, 0xe1, 0x3c, 0x94, 0x72, 0x58, 0x58, 0xb9, 0x22, 0xfd, 0x83, 0x7d, 0xf6, 0x21, 0x3c, 0x1a,
        0x07, 0x0a, 0x11, 0x80, 0x35, 0xd2, 0x4d, 0x01, 0xb1, 0x1e, 0x7c
        };

/* Tag data to auth transaction */
const uint8_t RSA_TAG_DATA[] = {
        0xdb, 0xa7, 0x97, 0xdc, 0xca, 0x5e, 0xdf, 0x84, 0xc3, 0xb0, 0x9f, 0x16, 0xe3, 0xe3, 0xf8, 0xad
        };

/* The format of the key to be imported - in this case RSA PKCS8 */
const km_key_format_t RSA_KEY_FORMAT = SKM_KEY_FORMAT_PKCS8;

#endif /* WRAPPED_KEY_DATA_H__ */
