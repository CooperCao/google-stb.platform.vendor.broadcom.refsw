#!/bin/bash
#############################################################################
# Copyright (C) 2017 Broadcom. The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
#
# This program is the proprietary software of Broadcom and/or its licensors,
# and may only be used, duplicated, modified or distributed pursuant to the terms and
# conditions of a separate, written license agreement executed between you and Broadcom
# (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
# no license (express or implied), right to use, or waiver of any kind with respect to the
# Software, and Broadcom expressly reserves all rights in and to the Software and all
# intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
# HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
# NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
#
# Except as expressly set forth in the Authorized License,
#
# 1.     This program, including its structure, sequence and organization, constitutes the valuable trade
# secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
# and to use this information only in connection with your use of Broadcom integrated circuit products.
#
# 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
# AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
# WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
# THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
# OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
# LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
# OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
# USE OR PERFORMANCE OF THE SOFTWARE.
#
# 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
# LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
# EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
# USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
# ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
# LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
# ANY LIMITED REMEDY.
#############################################################################


echo "Broadcom Reference Software Build Server Config Tool"
echo "----------------------------------------------------"
echo "This tool is written for bash"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#echo "DIR=${DIR}"
echo
# NOTE:
#  To override this "safety-clause" -- such as when sourcing plat from a
#  non-interactive script -- set env var BRCM_PLAT_DOT_OVERRIDE to a
#  non-null value.
#
if [[ $ZSH_NAME == "zsh" ]]; then
    echo -n "using zsh. "
    if [[ $ZSH_EVAL_CONTEXT =~ :file$ ]]; then
        echo "and sourcing. OK."
    else
        echo "but, you must _source_ the plat script, not run it."
        echo "Do the following:"
        echo "alias plat='. ${DIR}/plat'"
        exit
    fi
    DIR="$( cd "$( dirname "${(%):-%N}" )" && pwd )"
else
if [ "" = "${BRCM_PLAT_DOT_OVERRIDE}" ] ; then
    case $0 in
    *bash)
        # you're sourcing it. you're ok
        ;;
    *)
        echo "You must source the plat script, not run it."
        echo "Do the following:"
        echo "alias plat='. ${DIR}/plat'"
        # we can exit because we're in a shell, not sourcing
        exit
    esac
fi
fi

# Convert from older vars without namespace.
# DEBUG -> B_REFSW_DEBUG
# OS -> B_REFSW_OS
# ARCH -> B_REFSW_ARCH
# NOTE: we don't convert SYSTEM. it is deprecated.
if [ 'x' != 'x'$DEBUG -a 'x' = 'x'$B_REFSW_DEBUG ]; then
echo "Setting B_REFSW_DEBUG using DEBUG. Consider unsetting DEBUG because it is deprecated."
export B_REFSW_DEBUG=$DEBUG
fi
if [ 'x' != 'x'$OS -a 'x' = 'x'$B_REFSW_OS ]; then
echo "Setting B_REFSW_OS using OS. Consider unsetting OS because it is deprecated."
export B_REFSW_OS=$OS
fi
if [ 'x' != 'x'$ARCH -a 'x' = 'x'$B_REFSW_ARCH ]; then
echo "Setting B_REFSW_ARCH using ARCH. Consider unsetting ARCH because it is deprecated."
export B_REFSW_ARCH=$ARCH
fi

if [ $# -gt 0 ]; then

    unset NEXUS_PLATFORM
    unset BCHP_VER
    unset B_REFSW_ARCH
    unset B_REFSW_OS
    unset SYSTEM
    unset TOOLCHAIN
    unset TOOLCHAIN_SUFFIX
    unset LINUX
    unset LINUX_ROOT
    unset B_REFSW_BOOTLOADER
    unset B_REFSW_BOOTLOADER_VER

    B_REFSW_OBJ_SUFFIX=$(echo "$@")

    # Generate list of env vars which could have been previously set by plat and clean them up
    CLEAR_BOARDS=$(perl $DIR/plat.pl cleanup)
    $CLEAR_BOARDS

    # Call perl script which parses the xml table containing the board and kernel information
    ENV_SETTINGS=$(perl $DIR/plat.pl $@)
    #echo $ENV_SETTINGS

    PERL_ERROR=$?
    if [ $PERL_ERROR -eq 0 ]; then
        # ENV_SETTINGS contains a list of exports returned from the perl script
        $ENV_SETTINGS
    else
        # STDOUT from perl script contains some helpful debug
        echo $ENV_SETTINGS
        return $PERL_ERROR
    fi

    if [ -f ${LINUX_ROOT}/misc/toolchain_63 ] && echo $LINUX | grep -q "linux-4.9" ; then
        TOOLCHAIN_SUFFIX=_63
    else
        TOOLCHAIN_SUFFIX=
    fi

    if [ -z $TOOLCHAIN_SUFFIX ]; then
        TOOLCHAIN_SUFFIX=
    fi

    TOOLCHAIN_PATH=/opt/toolchains/`cat ${LINUX_ROOT}/misc/toolchain${TOOLCHAIN_SUFFIX}`/bin

    # Check if system is an emulation client
    if [[ "$SYSTEM" == "linuxemu" ]]; then
        if [[ "$B_REFSW_ARCH" != "aarch64-linux" ]]; then
            TOOLCHAIN_PATH=`which gcc`
            TOOLCHAIN_PATH=`dirname ${TOOLCHAIN_PATH}`
        fi
        export TOOLCHAIN=$NEW_TOOLCHAIN_PATH
        unset LINUX
    elif [[ "$SYSTEM" == "linuxclient" ]]; then
        TOOLCHAIN_PATH=`which gcc`
        TOOLCHAIN_PATH=`dirname ${TOOLCHAIN_PATH}`
        unset LINUX
    fi

    # See if the toolchain is on the head of the path.
    # If so, remove it to keep the path from growing huge.
    if [ ! -z $TOOLCHAIN_PATH ]; then
        TOOLCHAIN_TEST_PRIV=`echo $PATH|grep -e "^/opt/toolchains/uclibc"`
        if [ -z $TOOLCHAIN_TEST_PRIV ]; then
            TOOLCHAIN_TEST_PRIV=`echo $PATH|grep -e "^/opt/toolchains/crosstools"`
        fi
        if [ -z $TOOLCHAIN_TEST_PRIV ]; then
            TOOLCHAIN_TEST_PRIV=`echo $PATH|grep -e "^/opt/toolchains/stbgcc"`
        fi
        if [ ! -z $TOOLCHAIN_TEST_PRIV ]; then
            export PATH=`echo $PATH|cut -d : -f 2-`
        fi
        export PATH=$TOOLCHAIN_PATH:$PATH
    fi
fi
# Now show the current settings
echo "Current settings:"
echo "NEXUS_PLATFORM=$NEXUS_PLATFORM"
echo "BCHP_VER=$BCHP_VER"
echo "B_REFSW_DEBUG=$B_REFSW_DEBUG"
echo "B_REFSW_ARCH=$B_REFSW_ARCH"
echo "B_REFSW_OS=$B_REFSW_OS"
echo "LINUX=$LINUX"
if [[ "$B_REFSW_OS" == "linuxclient" ]]; then
    echo "Toolchain found at $TOOLCHAIN"
elif [[ "$B_REFSW_OS" == "linuxemu" ]]; then
    echo "Toolchain found at $TOOLCHAIN"
elif [[ "$B_REFSW_ARCH" == "aarch64-linux" ]]; then
    echo "Toolchain found at "`which aarch64-linux-gcc`
elif [[ "$B_REFSW_ARCH" == "arm-linux" ]]; then
    echo "Toolchain found at "`which arm-linux-gcc`
elif [[ "$B_REFSW_ARCH" == "mips-linux" ]]; then
    echo "Toolchain found at "`which mips-linux-gcc`
elif which mipsel-linux-gcc > /dev/null 2>&1; then
    echo "Toolchain found at "`which mipsel-linux-gcc`
elif which mipsel-linux-uclibc-gcc > /dev/null 2>&1; then
    echo "Toolchain found at "`which mipsel-linux-uclibc-gcc`
else
    echo "Toolchain found at "`which mipsel-uclibc-gcc`
fi
if [ ! -z ${BOARD_LIST} ]; then
    echo "Board selection:`echo ${BOARD_LIST} |sed -e 's/~/ /g'`"
    echo "$BOARD_NAME"
    unset BOARD_NAME
    unset BOARD_LIST
fi

if [ ! -z "${NEXUS_PLATFORM}"  -a ! -z "${B_REFSW_OBJ_SUFFIX}"  ]; then
    B_REFSW_OBJ_SUFFIX=$(
        echo ${B_REFSW_OBJ_SUFFIX}|tr /a-z/ /A-Z/|xargs -n1 | # upperase command line and convert words to lines
        grep -v -F "${NEXUS_PLATFORM}"|grep -v -F "${BCHP_VER}"| # filter out platform and chip revsion (so we can add them later)
        sort -u|xargs|sed -e 's/ /./g') # sort (to get consistent order) and convert lines to words separated by dots
    B_REFSW_OBJ_DIR="obj.${NEXUS_PLATFORM}"
    if [ ! -z "${BCHP_VER}" ]; then
        # add chip revision (if known)
        B_REFSW_OBJ_DIR="${B_REFSW_OBJ_DIR}.${BCHP_VER}"
    fi
    if [ ! -z "${B_REFSW_OBJ_SUFFIX}" ]; then
        # add everything else
        B_REFSW_OBJ_DIR="${B_REFSW_OBJ_DIR}.${B_REFSW_OBJ_SUFFIX}"
    fi
    export B_REFSW_OBJ_DIR
    echo "B_REFSW_OBJ_DIR=${B_REFSW_OBJ_DIR}"
fi

if [ ! -z "${NEXUS_PLATFORM}" -a  ! -z  "${B_REFSW_BOOTLOADER_VER}" ] ; then
     echo "Recommended bootloader $B_REFSW_BOOTLOADER $B_REFSW_BOOTLOADER_VER"
fi

# End of file
