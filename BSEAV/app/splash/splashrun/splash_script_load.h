/***************************************************************************
 * Copyright (C) 2016 Broadcom.  The term "Broadcom" refers to Broadcom Limited and/or its subsidiaries.
 *
 * This program is the proprietary software of Broadcom and/or its licensors,
 * and may only be used, duplicated, modified or distributed pursuant to the terms and
 * conditions of a separate, written license agreement executed between you and Broadcom
 * (an "Authorized License").  Except as set forth in an Authorized License, Broadcom grants
 * no license (express or implied), right to use, or waiver of any kind with respect to the
 * Software, and Broadcom expressly reserves all rights in and to the Software and all
 * intellectual property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU
 * HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY
 * NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
 *
 * Except as expressly set forth in the Authorized License,
 *
 * 1.     This program, including its structure, sequence and organization, constitutes the valuable trade
 * secrets of Broadcom, and you shall use all reasonable efforts to protect the confidentiality thereof,
 * and to use this information only in connection with your use of Broadcom integrated circuit products.
 *
 * 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
 * AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
 * WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH RESPECT TO
 * THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL IMPLIED WARRANTIES
 * OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE,
 * LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION
 * OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF
 * USE OR PERFORMANCE OF THE SOFTWARE.
 *
 * 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR ITS
 * LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL, INDIRECT, OR
 * EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY RELATING TO YOUR
 * USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM HAS BEEN ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT
 * ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE
 * LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF
 * ANY LIMITED REMEDY.
 *
 * Module Description:
 *
 ***************************************************************************/

#ifndef SPLASH_VDC_SETUP_H__
#define SPLASH_VDC_SETUP_H__

#include "splash_magnum.h"

/* for CFE to know the script loader version in compile time */
#define SPLASH_SCRIPT_LOADER_VER        2

/* basic info of a surface */
typedef struct
{
    int                    ihMemIdx;        /* this surface is allocated from *(phMem+ihMemIdx) */
    BPXL_Format            ePxlFmt;         /* pixel format */
    uint32_t               ulWidth;
    uint32_t               ulHeight;
    uint32_t               ulPitch;
    char                   bmpFile[256];    /* bmp file in splashgen */
} SplashSurfaceInfo;

/* basic info of a display */
typedef struct
{
    int                    iSurIdx;        /* uses surface buffer from *(phHeap+ihMemIdx) */
    BFMT_VideoFmt          eDspFmt;        /* display video format */
    uint32_t               ulRdcScratchReg0;
    uint32_t               ulRdcScratchReg1;
} SplashDisplayInfo;

typedef struct
{
    int TriggerHwNum;          /* The hardware position of the trigger */
    int SlotNum;               /* The RDMA slot correposponding to the trigger */
    int ListCountMaxIndex;     /* The Max Index of the ListCount Array */
    uint32_t *aListCountArray; /* The list count array pointer */
    uint32_t *aListArray;      /* The list array pointer */
}
SplashTriggerMap;

/* All data generated by splashgen */
typedef struct
{
    unsigned long ulNumMem;
    int iRulMemIdx;
    int iNumSurface;
    SplashSurfaceInfo* pSurfInfo;
    int iNumDisplay;
    SplashDisplayInfo* pDispInfo;
    int iNumTrigMap;
    SplashTriggerMap* pTrigMap;
    int nAulReg;
    uint32_t* pAulReg;
}
SplashData;

/* -----------------------------------------------------------------
 * note to CFE developer:
 * 1). each surface buffer must be located in the section controlled
 *     by the right memory controler. Otherwise you see black screen
 * 2). the order in the aulSurfaceBufOffset array must match
 *     g_SplashSurface in splash_vdc_rul_def.h
 */
/* PORT POINT: if we have more than 4 mem heaps or surfaces */
#define SPLASH_MAX_SURFACE     4
typedef struct
{
    BMMA_Heap_Handle  hRulMma; /* heap used by VDC for RULs, CFE can pass NULL */
    BMMA_DeviceOffset aulSurfaceBufOffset[SPLASH_MAX_SURFACE];
} SplashBufInfo;

#define BSPLASH_SURFACE_BUF_SIZE(pSur)   ((pSur)->ulHeight * (pSur)->ulPitch)
void splash_bvn_init  (
BREG_Handle hRegister, SplashBufInfo *pSplashBufInfo, SplashData* pSplashData);
void splash_bvn_uninit(BREG_Handle hRegister, SplashBufInfo *pSplashBufInfo);

#endif
