diff -Naur hostapd-2.8-orig/hostapd/Makefile hostapd-2.8/hostapd/Makefile
--- hostapd-2.8-orig/hostapd/Makefile	2019-07-31 10:19:07.336435602 -0700
+++ hostapd-2.8/hostapd/Makefile	2019-07-31 11:06:43.825085829 -0700
@@ -525,6 +525,9 @@
 endif
 
 ifdef CONFIG_WPS
+ifdef CONFIG_DRIVER_BRCM_MAP
+CFLAGS += -DCONFIG_DRIVER_BRCM_MAP
+endif
 CFLAGS += -DCONFIG_WPS -DEAP_SERVER_WSC
 OBJS += ../src/utils/uuid.o
 OBJS += ../src/ap/wps_hostapd.o
diff -Naur hostapd-2.8-orig/hostapd/config_file.c hostapd-2.8/hostapd/config_file.c
--- hostapd-2.8-orig/hostapd/config_file.c	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/hostapd/config_file.c	2019-07-31 11:06:01.922050558 -0700
@@ -4349,6 +4349,32 @@
 		conf->rssi_reject_assoc_timeout = atoi(pos);
 	} else if (os_strcmp(buf, "pbss") == 0) {
 		bss->pbss = atoi(pos);
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	} else if (os_strcmp(buf, "map") == 0) {
+		bss->map = atoi(pos);
+	} else if (os_strcmp(buf, "map_bh_ssid") == 0) {
+		size_t bh_ssid_len = os_strlen(pos);
+		if (bh_ssid_len < 1 || bh_ssid_len > SSID_MAX_LEN) {
+			wpa_printf(MSG_ERROR,
+				"Line %d: Invalid invalid map backhaul ssid '%s'", line, pos);
+			return 1;
+		}
+		bss->map_bh_ssid_len = bh_ssid_len;
+		os_memcpy(bss->map_bh_ssid, pos, bh_ssid_len);
+	} else if (os_strcmp(buf, "map_bh_auth") == 0) {
+		bss->map_bh_auth = atoi(pos);
+	} else if (os_strcmp(buf, "map_bh_encr") == 0) {
+		bss->map_bh_encr = atoi(pos);
+	} else if (os_strcmp(buf, "map_bh_psk") == 0) {
+		size_t bh_psk_len = os_strlen(pos);
+		if (bh_psk_len < 8 || bh_psk_len > PMK_LEN_MAX) {
+			wpa_printf(MSG_ERROR,
+				"Line %d: Invalid invalid map backhaul psk '%s'", line, pos);
+			return 1;
+		}
+		bss->map_bh_psk_len = bh_psk_len;
+		os_memcpy(bss->map_bh_psk, pos, bh_psk_len);
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 	} else {
 		wpa_printf(MSG_ERROR,
 			   "Line %d: unknown configuration item '%s'",
diff -Naur hostapd-2.8-orig/hostapd/ctrl_iface.c hostapd-2.8/hostapd/ctrl_iface.c
--- hostapd-2.8-orig/hostapd/ctrl_iface.c	2019-07-31 11:04:21.022001805 -0700
+++ hostapd-2.8/hostapd/ctrl_iface.c	2019-07-31 11:12:57.563949474 -0700
@@ -441,6 +441,37 @@
 
 #endif /* CONFIG_WPS_NFC */
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+static int hostapd_ctrl_iface_wps_map_bh_creds(struct hostapd_data *hapd, char *txt,
+					 char *buf, size_t buflen)
+{
+	char *pos;
+	char *ssid, *auth = NULL, *encr = NULL, *key = NULL;
+	ssid = txt;
+	pos = os_strchr(txt, ' ');
+	if (!pos)
+		return -1;
+	*pos++ = '\0';
+
+	auth = pos;
+	pos = os_strchr(pos, ' ');
+	if (pos) {
+		*pos++ = '\0';
+		encr = pos;
+		pos = os_strchr(pos, ' ');
+		if (pos) {
+			*pos++ = '\0';
+			key = pos;
+		}
+	}
+
+	if (hostapd_wps_config_map_bh(hapd, ssid, auth, encr, key) < 0) {
+		return os_snprintf(buf, buflen, "FAILED\n");
+	}
+
+	return os_snprintf(buf, buflen, "OK\n");
+}
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 
 static int hostapd_ctrl_iface_wps_ap_pin(struct hostapd_data *hapd, char *txt,
 					 char *buf, size_t buflen)
@@ -3059,6 +3090,11 @@
 	} else if (os_strncmp(buf, "WPS_GET_STATUS", 13) == 0) {
 		reply_len = hostapd_ctrl_iface_wps_get_status(hapd, reply,
 							      reply_size);
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	} else if (os_strncmp(buf, "WPS_MAPBH_CONFIG ", 17) == 0) {
+		reply_len = hostapd_ctrl_iface_wps_map_bh_creds(hapd, buf + 17,
+				reply, reply_size);
+#endif /* CONFIG_DRIVER_BRCM_MAP */
 #ifdef CONFIG_WPS_NFC
 	} else if (os_strncmp(buf, "WPS_NFC_TAG_READ ", 17) == 0) {
 		if (hostapd_ctrl_iface_wps_nfc_tag_read(hapd, buf + 17))
diff -Naur hostapd-2.8-orig/hostapd/hostapd_cli.c hostapd-2.8/hostapd/hostapd_cli.c
--- hostapd-2.8-orig/hostapd/hostapd_cli.c	2019-07-31 11:04:21.031423863 -0700
+++ hostapd-2.8/hostapd/hostapd_cli.c	2019-07-31 11:06:29.333037320 -0700
@@ -643,6 +643,30 @@
 			 ssid_hex, argv[1]);
 	return wpa_ctrl_command(ctrl, buf);
 }
+#ifdef CONFIG_DRIVER_BRCM_MAP
+static int hostapd_cli_cmd_wps_mapbh_config(struct wpa_ctrl *ctrl, int argc,
+				      char *argv[])
+{
+	char buf[256];
+
+	if (argc < 1) {
+		printf("Invalid 'wps_mapbh_config' command - at least two arguments "
+		       "are required.\n");
+		return -1;
+	}
+
+	if (argc > 3)
+		snprintf(buf, sizeof(buf), "WPS_MAPBH_CONFIG %s %s %s %s",
+			 argv[0], argv[1], argv[2], argv[3]);
+	else if (argc > 2)
+		snprintf(buf, sizeof(buf), "WPS_MAPBH_CONFIG %s %s %s",
+			argv[0], argv[1], argv[2]);
+	else
+		snprintf(buf, sizeof(buf), "WPS_MAPBH_CONFIG %s %s",
+			 argv[0], argv[1]);
+	return wpa_ctrl_command(ctrl, buf);
+}
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 #endif /* CONFIG_WPS */
 
 
@@ -1568,6 +1592,10 @@
 	  "<SSID> <auth> <encr> <key> = configure AP" },
 	{ "wps_get_status", hostapd_cli_cmd_wps_get_status, NULL,
 	  "= show current WPS status" },
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	{ "wps_mapbh_config", hostapd_cli_cmd_wps_mapbh_config, NULL,
+	  "<SSID> <auth> <encr> <key> = update multiap backhaul config" },
+#endif /* CONFIG_DRIVER_BRCM_MAP */
 #endif /* CONFIG_WPS */
 	{ "disassoc_imminent", hostapd_cli_cmd_disassoc_imminent, NULL,
 	  "= send Disassociation Imminent notification" },
diff -Naur hostapd-2.8-orig/src/ap/ap_config.h hostapd-2.8/src/ap/ap_config.h
--- hostapd-2.8-orig/src/ap/ap_config.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/ap/ap_config.h	2019-07-31 11:06:55.788948407 -0700
@@ -709,6 +709,15 @@
 #define BACKHAUL_BSS 1
 #define FRONTHAUL_BSS 2
 	int multi_ap; /* bitmap of BACKHAUL_BSS, FRONTHAUL_BSS */
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	u8 map;
+	u8 map_bh_ssid[SSID_MAX_LEN];
+	size_t map_bh_ssid_len;
+	u16 map_bh_auth;
+	u16 map_bh_encr;
+	u8 map_bh_psk[PMK_LEN_MAX];
+	size_t map_bh_psk_len;
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 };
 
 /**
diff -Naur hostapd-2.8-orig/src/ap/wps_hostapd.c hostapd-2.8/src/ap/wps_hostapd.c
--- hostapd-2.8-orig/src/ap/wps_hostapd.c	2019-07-31 11:04:21.103286450 -0700
+++ hostapd-2.8/src/ap/wps_hostapd.c	2019-07-31 11:07:29.057594128 -0700
@@ -1358,7 +1358,16 @@
 
 	wps->ap_settings = conf->ap_settings;
 	wps->ap_settings_len = conf->ap_settings_len;
-
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	wps->map = conf->map;
+	os_memset(&wps->bh_creds, 0, sizeof(wps->bh_creds));
+	wps->bh_creds.ssid_len = conf->map_bh_ssid_len;
+	os_memcpy(wps->bh_creds.ssid, conf->map_bh_ssid, wps->bh_creds.ssid_len);
+	wps->bh_creds.auth_type = conf->map_bh_auth;
+	wps->bh_creds.encr_type = conf->map_bh_encr;
+	wps->bh_creds.key_len = conf->map_bh_psk_len;
+	os_memcpy(wps->bh_creds.key, conf->map_bh_psk, wps->bh_creds.key_len);
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 	cfg.new_psk_cb = hostapd_wps_new_psk_cb;
 	cfg.set_ie_cb = hostapd_wps_set_ie_cb;
 	cfg.pin_needed_cb = hostapd_wps_pin_needed_cb;
@@ -1937,6 +1946,55 @@
 	return wps_registrar_config_ap(hapd->wps->registrar, &cred);
 }
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+int hostapd_wps_config_map_bh(struct hostapd_data *hapd, const char *ssid,
+		const char *auth, const char *encr, const char *key)
+{
+	struct wps_credential cred;
+	size_t len;
+
+	os_memset(&cred, 0, sizeof(cred));
+
+	len = os_strlen(ssid);
+	if ((len <= 0) || len > sizeof(cred.ssid))
+		return -1;
+	cred.ssid_len = len;
+	os_memcpy(cred.ssid, ssid, len);
+
+	if (os_strncmp(auth, "OPEN", 4) == 0)
+		cred.auth_type = WPS_AUTH_OPEN;
+	else if (os_strncmp(auth, "WPAPSK", 6) == 0)
+		cred.auth_type = WPS_AUTH_WPAPSK;
+	else if (os_strncmp(auth, "WPA2PSK", 7) == 0)
+		cred.auth_type = WPS_AUTH_WPA2PSK;
+	else
+		return -1;
+
+	if (encr) {
+		if (os_strncmp(encr, "NONE", 4) == 0)
+			cred.encr_type = WPS_ENCR_NONE;
+		else if (os_strncmp(encr, "TKIP", 4) == 0)
+			cred.encr_type = WPS_ENCR_TKIP;
+		else if (os_strncmp(encr, "CCMP", 4) == 0)
+			cred.encr_type = WPS_ENCR_AES;
+		else
+			return -1;
+	} else
+		cred.encr_type = WPS_ENCR_NONE;
+
+	if (key) {
+		len = os_strlen(key);
+		if (len <= 8 && len > sizeof(cred.key)) {
+			return -1;
+		}
+		cred.key_len = len;
+		os_memcpy(cred.key, key, len);
+	}
+
+	os_memcpy(&hapd->wps->bh_creds, &cred, sizeof(hapd->wps->bh_creds));
+	return 0;
+}
+#endif /* CONFIG_DRIVER_BRCM_MAP */
 
 #ifdef CONFIG_WPS_NFC
 
diff -Naur hostapd-2.8-orig/src/ap/wps_hostapd.h hostapd-2.8/src/ap/wps_hostapd.h
--- hostapd-2.8-orig/src/ap/wps_hostapd.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/ap/wps_hostapd.h	2019-07-31 11:07:36.929219179 -0700
@@ -32,6 +32,10 @@
 void hostapd_wps_update_ie(struct hostapd_data *hapd);
 int hostapd_wps_config_ap(struct hostapd_data *hapd, const char *ssid,
 			  const char *auth, const char *encr, const char *key);
+#ifdef CONFIG_DRIVER_BRCM_MAP
+int hostapd_wps_config_map_bh(struct hostapd_data *hapd, const char *ssid,
+			  const char *auth, const char *encr, const char *key);
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 int hostapd_wps_nfc_tag_read(struct hostapd_data *hapd,
 			     const struct wpabuf *data);
 struct wpabuf * hostapd_wps_nfc_config_token(struct hostapd_data *hapd,
diff -Naur hostapd-2.8-orig/src/wps/wps.h hostapd-2.8/src/wps/wps.h
--- hostapd-2.8-orig/src/wps/wps.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps.h	2019-07-31 11:08:01.168093734 -0700
@@ -837,6 +837,10 @@
 	struct wpabuf *ap_nfc_dh_pubkey;
 	struct wpabuf *ap_nfc_dh_privkey;
 	struct wpabuf *ap_nfc_dev_pw;
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	u8 map;
+	struct wps_credential bh_creds;	/* Multiap backhaul credentials */
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 };
 
 struct wps_registrar *
diff -Naur hostapd-2.8-orig/src/wps/wps_attr_parse.c hostapd-2.8/src/wps/wps_attr_parse.c
--- hostapd-2.8-orig/src/wps/wps_attr_parse.c	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_attr_parse.c	2019-07-31 11:08:10.612367547 -0700
@@ -67,6 +67,15 @@
 		}
 		attr->registrar_configuration_methods = pos;
 		break;
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	case WFA_ELEM_MAP_EXTENSION_ATTR:
+		if (len < 1) {
+			wpa_printf(MSG_DEBUG, "WPS: Invalid multiap extension attr %u", len);
+			return -1;
+		}
+		attr->map_ext_attr = pos;
+		break;
+#else
 	case WFA_ELEM_MULTI_AP:
 		if (len != 1) {
 			wpa_printf(MSG_DEBUG,
@@ -78,6 +87,7 @@
 		wpa_printf(MSG_DEBUG, "WPS: Multi-AP Extension 0x%02x",
 			   attr->multi_ap_ext);
 		break;
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 	default:
 		wpa_printf(MSG_MSGDUMP, "WPS: Skipped unknown WFA Vendor "
 			   "Extension subelement %u", id);
diff -Naur hostapd-2.8-orig/src/wps/wps_attr_parse.h hostapd-2.8/src/wps/wps_attr_parse.h
--- hostapd-2.8-orig/src/wps/wps_attr_parse.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_attr_parse.h	2019-07-31 11:08:18.467606181 -0700
@@ -56,6 +56,9 @@
 	const u8 *request_to_enroll; /* 1 octet (Bool) */
 	const u8 *ap_channel; /* 2 octets */
 	const u8 *registrar_configuration_methods; /* 2 octets */
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	const u8 *map_ext_attr;	/* 1 octet */
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 
 	/* variable length fields */
 	const u8 *manufacturer;
diff -Naur hostapd-2.8-orig/src/wps/wps_defs.h hostapd-2.8/src/wps/wps_defs.h
--- hostapd-2.8-orig/src/wps/wps_defs.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_defs.h	2019-07-31 11:08:29.638107294 -0700
@@ -153,7 +153,10 @@
 	WFA_ELEM_REQUEST_TO_ENROLL = 0x03,
 	WFA_ELEM_SETTINGS_DELAY_TIME = 0x04,
 	WFA_ELEM_REGISTRAR_CONFIGURATION_METHODS = 0x05,
-	WFA_ELEM_MULTI_AP = 0x06
+	WFA_ELEM_MULTI_AP = 0x06,
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	WFA_ELEM_MAP_EXTENSION_ATTR = 0x06,
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 };
 
 /* Device Password ID */
@@ -381,4 +384,9 @@
 
 #define WPS_MAX_AUTHORIZED_MACS 5
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+#define WPS_MAP_BH_STA		0x80
+#define WPS_MAP_FH_BSS		0x20
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
+
 #endif /* WPS_DEFS_H */
diff -Naur hostapd-2.8-orig/src/wps/wps_i.h hostapd-2.8/src/wps/wps_i.h
--- hostapd-2.8-orig/src/wps/wps_i.h	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_i.h	2019-07-31 11:08:38.286607403 -0700
@@ -127,6 +127,9 @@
 	struct wps_nfc_pw_token *nfc_pw_token;
 
 	int multi_ap_backhaul_sta;
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	u8 map_ext_attr_e;		/* Enrolee multiap extension attribute */
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 };
 
 
diff -Naur hostapd-2.8-orig/src/wps/wps_registrar.c hostapd-2.8/src/wps/wps_registrar.c
--- hostapd-2.8-orig/src/wps/wps_registrar.c	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_registrar.c	2019-07-31 11:14:00.042158599 -0700
@@ -1641,8 +1641,9 @@
 int wps_build_cred(struct wps_data *wps, struct wpabuf *msg)
 {
 	struct wpabuf *cred;
+#ifndef CONFIG_DRIVER_BRCM_MAP
 	struct wps_registrar *reg = wps->wps->registrar;
-
+#endif
 	if (wps->wps->registrar->skip_cred_build)
 		goto skip_cred_build;
 
@@ -1653,6 +1654,20 @@
 	}
 	os_memset(&wps->cred, 0, sizeof(wps->cred));
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	/* For multiap backhaul sta use the backhaul ssid and password */
+	if ((wps->map_ext_attr_e == WPS_MAP_BH_STA) && (wps->wps->map & WPS_MAP_FH_BSS) &&
+			wps->wps->bh_creds.ssid_len > 0) {
+		os_memcpy(wps->cred.ssid, wps->wps->bh_creds.ssid, wps->wps->bh_creds.ssid_len);
+		wps->cred.ssid_len = wps->wps->bh_creds.ssid_len;
+		wps->cred.auth_type = wps->wps->bh_creds.auth_type;
+		wps->cred.encr_type = wps->wps->bh_creds.encr_type;
+		os_memcpy(wps->cred.mac_addr, wps->mac_addr_e, ETH_ALEN);
+		os_memcpy(wps->cred.key, wps->wps->bh_creds.key, wps->wps->bh_creds.key_len);
+		wps->cred.key_len = wps->wps->bh_creds.key_len;
+		goto use_provided;
+	}
+#else
 	if (wps->peer_dev.multi_ap_ext == MULTI_AP_BACKHAUL_STA &&
 	    reg->multi_ap_backhaul_ssid_len) {
 		wpa_printf(MSG_DEBUG, "WPS: Use backhaul STA credentials");
@@ -1675,6 +1690,7 @@
 		}
 		goto use_provided;
 	}
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 
 	os_memcpy(wps->cred.ssid, wps->wps->ssid, wps->wps->ssid_len);
 	wps->cred.ssid_len = wps->wps->ssid_len;
@@ -2611,6 +2627,21 @@
 	return 0;
 }
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+static int wps_process_map_ext_attr(struct wps_data *wps, const u8 *map)
+{
+	if (map == NULL) {
+		wpa_printf(MSG_DEBUG, "WPS: No multiap extension attribute received");
+		wps->map_ext_attr_e = 0;
+		return 0;
+	}
+
+	wps->map_ext_attr_e = *map;
+	wpa_printf(MSG_DEBUG, "WPS: Enrollee Multiap Extension Attr %d", wps->map_ext_attr_e);
+
+	return 0;
+}
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 
 static int wps_registrar_p2p_dev_addr_match(struct wps_data *wps)
 {
@@ -2676,7 +2707,11 @@
 	    wps_process_assoc_state(wps, attr->assoc_state) ||
 	    wps_process_dev_password_id(wps, attr->dev_password_id) ||
 	    wps_process_config_error(wps, attr->config_error) ||
-	    wps_process_os_version(&wps->peer_dev, attr->os_version))
+	    wps_process_os_version(&wps->peer_dev, attr->os_version) ||
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	    wps_process_map_ext_attr(wps, attr->map_ext_attr) ||
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
+	    0 )
 		return WPS_FAILURE;
 
 	if (wps->dev_pw_id < 0x10 &&
diff -Naur hostapd-2.8-orig/src/wps/wps_validate.c hostapd-2.8/src/wps/wps_validate.c
--- hostapd-2.8-orig/src/wps/wps_validate.c	2019-04-21 00:10:22.000000000 -0700
+++ hostapd-2.8/src/wps/wps_validate.c	2019-07-31 11:09:06.084064757 -0700
@@ -421,6 +421,24 @@
 	return 0;
 }
 
+#ifdef CONFIG_DRIVER_BRCM_MAP
+static int wps_validate_map_ext_attr(const u8 *map_ext_attr, int mandatory)
+{
+	if (map_ext_attr == NULL) {
+		if (mandatory) {
+			wpa_printf(MSG_INFO, "WPS-STRICT: multiap extension attribute missing");
+			return -1;
+		}
+		return 0;
+	}
+	if (*map_ext_attr != WPS_MAP_BH_STA) {
+		wpa_printf(MSG_INFO, "WPS-STRICT: Invalid multiap extension "
+			   "attribute value 0x%x", *map_ext_attr);
+		return -1;
+	}
+	return 0;
+}
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
 
 static int wps_validate_req_dev_type(const u8 *req_dev_type[], size_t num,
 				     int mandatory)
@@ -1324,7 +1342,11 @@
 	    wps_validate_config_error(attr.config_error, 1) ||
 	    wps_validate_os_version(attr.os_version, 1) ||
 	    wps_validate_version2(attr.version2, wps2) ||
-	    wps_validate_request_to_enroll(attr.request_to_enroll, 0)) {
+	    wps_validate_request_to_enroll(attr.request_to_enroll, 0) ||
+#ifdef CONFIG_DRIVER_BRCM_MAP
+	    wps_validate_map_ext_attr(attr.map_ext_attr, 0) ||
+#endif	/* CONFIG_DRIVER_BRCM_MAP */
+	    0) {
 		wpa_printf(MSG_INFO, "WPS-STRICT: Invalid M1");
 #ifdef WPS_STRICT_WPS2
 		if (wps2)
