Last login: Wed Jul 15 15:16:24 on ttys001
mc80tst3:~ user$ /Volumes/Macintosh\ HD/Users/Shared/applebt ; exit;
/Volumes/Macintosh HD/Users/Shared/applebt Version: 4.3.2b4, Copyright © 2002-2014 Apple Inc. All rights reserved.
--help : Get details for specific option
--version : Get the applebt version
--manufacturer : Get the host controller manufacturer name
--fw : Get the host controller firmware version
--sw : Get the OS X stack software version
--pair : Pair a device
--LEBonding : Bond with LE peripheral
--listPairedDevices : List all the paired devices on the host controller
--listCloudPairedDevices : List all the devices paired through iCloud
--listConnectedDevices : List all current active connections to the host controller
--listConfiguredAudioDevices : Lists all the paired audio devices with the class and the Bluetooth device address
--listSDPRecords : List local SDP records
--isPaired : Check if a device is paired to the system
--removeDevice : Remove pairing for a specified device from the controller
--removeAllDevices : Remove all devices from the system and controller
--bluetoothAvailable : Check if local device is available
--setPowerState : Power the host controller on or off
--getPowerState : Check the power state of the bluetooth host controller
--setInquiryThreshold : Set the Inquiry threshold for device discovery
--getBandwidth : Check current Bluetooth bandwidth
--connect : Create connection to a device
--disconnect : Disconnect a device
--disconnectAll : Disconnect all active connections
--remoteNameRequest : Get a name passing the Bluetooth device address of the device
--deviceStartDiscovery : Start a device discovery to discover devices nearby
--deviceType : Get device type
--devicePerformSDPQuery : Perform a service discovery of specified device
--deviceSetAFHMaskForWiFiChannel : Write AFH mask for a 2.4 Ghz WiFi channel
--deviceReadRawRSSI : RSSI of the device
--deviceRemoveAllLinkKeys : Remove all stored link keys
--factoryDisableLEScans : Disable all LE scans
--factoryEnableLEScans : Enable all LE scans
--testConnectionCycler : Cycle connection to paired devices with a delay
--testRemoteNameRequestAllDevicesInCache : Send over a remote name request to all devices in the cache
--testPER : Run PER tool
--connectPAN : Initiate aconnection to a remote device as a PANU/NAP or GN
--performRSSISweep : Perform a RSSI sweep across all channels
--testLEConnectCycler : Test LE connection cycler
--LEBondingCycler : Cycler for bonding with LE peripheral
--LEScanCycler : Cycler for scanning for LE peripherals
--setReadTransmitWindowSize : Change or read transmit window size
--HCIReadDeviceAddress : Get the Bluetooth device address
--HCIReadLocalName : Get the friendly name used by Bluetooth
--HCIWriteLocalName : Write a new friendly name to the host controller
--HCIReset : Send a HCI reset
--HCIReadAFHChannelMap : Read all masked channels for connection
--HCISetAFHHostChannelClassification : Write AFH map for all devices
--HCIReadStoredLinkKey : List all the stored link keys from the host controller
--HCIWriteStoredLinkKey : Write a link key associated with bluetooth device address to host controller and to the disk
--HCIDeleteStoredLinkKey : Delete a link key associated with bluetooth device address from host controller and from the disk
--HCIDeleteAllStoredLinkKeys : Delete all stored link keys from host controller and from disk
--HCIInquiry : Start inquiry
--HCIInquiryCancel : Cancel inquiry
--HCICreateConnection : Create only a baseband connection
--HCIReadScanEnable : Read inquiry/page scan mode
--HCIWriteScanEnable : Enable/disable inquiry/page scan mode
--HCIHostBufferSize : Write the ACL buffer size
--HCIWritePageTimeout : Write pagetimeout interval (Seconds and  to store the value for future HID connections)
--HCIReadSimplePairingMode : Read SSP support
--HCIWriteSimplePairingMode : Enable/disable SSP support on local device
--HCIWriteSimplePairingDebugMode : Enable/disable SSP debug mode
--HCIRoleDiscovery : Find the role of connected devices
--HCILinkQuality : Get link quality for connected devices
--HCIReadLocalFeatures : Read local supported and extended features
--HCIReadInquiryMode : Read inquiry mode
--HCIReadLinkPolicy : Read link policy
--HCIReadPageScanActivity : Read controller page scan activity (mode and interval)
--HCIReadPageTimeout : Read current page timeout value used by controller 
--HCIReadInquiryScanActivity : Read controller inquiry scan activity (mode and interval)
--HCISetConnectionEncryption : Enable/disable encryption on the connected device
--HCIReadTransmitPowerLevel : Read host transmit power of the connected Bluetooth device
--HCIReadAFHChannelAssessmentMode : Reads whether the controller’s channel assessment scheme is enabled or disabled
--HCIWriteAFHChannelAssessmentMode : Writes the value for the parameter that controls whether the controller’s channel assessment scheme is enabled or disabled
--HCIReadRemoteExtendedFeatures : Read Remote Extended feature of given device
--HCISetEventFilter : Specify different event filters
--HCIEnableDeviceUnderTestMode : Enter test mode
--HCILEReceiverTest : Receives test reference packets at a fixed interval
--HCILETransmitterTest : Generates test reference packets at a fixed interval
--HCILETestEnd : Stop LE test reference packets
--HCILESetScanEnable : Disable or enable LE Scan
--HCILESetAdvertiseEnable : Disable or enable LE Advertise
--HCILECreateConnectionCancel : Cancel outstanding LE connection
--HCILEConnectionUpdate : Update the connection parameters for an existing LE connection
--HCILESetAdvertisingParameters : Update the advertising interval
--HCIBroadcomResetAdvancedMatchingRules : Reset any advanced matching rules currently added
--HCIBroadcomAddAdvancedMatchingRule : Add a rule to the advanced matching filter
--HCIBroadcomRemoveAdvancedMatchingRule : Reset any advanced matching rules currently added
--HCIBroadcomAddAdvancedMatchingRuleWithAddress : Add a rule to the advanced matching filter
--HCIBroadcomLETrackSensor : Add device address to sensor tracking
--HCIBroadcomReadRetransmissionStatus : Returns restransmition counter and percentage per device
--HCIBroadcomReadLocalFirmwareInfo : Read local firmware information
--HCIBroadcomChangeLNAGainCoexsECI : DeSense setting
--HCIBroadcomSetUSBAutoResume : Set USB auto resume
--HCIBroadcomSetTransmitPower : Write host transmit power of the connected Bluetooth device
--HCIBroadcomSetTransmitPowerRange : Write Min and Max host transmit power of the connected bluetooth device
--HCIBroadcomTxTest : Turns on a connectionless transmit test mode
--HCIBroadcomRxTest : Turns on a connectionless receive test mode
--HCIBroadcomRxTestStatistics : Get connectionless receive test statistics
--HCIBroadcomRxTestRSSI : Get connectionless transmit and receive test RSSI
--HCIBroadcomFactoryCommitBDADDR : Writes a persistent BD_ADDR and optional BTW security key to nonvolatile memory
--HCIBroadcomSetTransmitCarrierFrequencyARM : Force the radio into manual mode for continuous transmit tests
--HCIBroadcomDownloadMiniDriver : Reboot into a state where device is prepared to receive download of a minidriver
--HCIBroadcomWriteRAM : Writes data to RAM or NVRAM
--HCIBroadcomReadRAM : Read a block of data from RAM or NVRAM
--HCIBroadcomLaunchRAM : Restart execution at supplied address
--HCIBroadcomFactoryCalSetTxPower : Set the transmit power during transmit power calibration
--HCIBroadcomFactoryCalTrimTxPower : Trims the output power by the specified dB value
--HCIBroadcomFactoryCalReadTemp : Read the temperature code at which the calibration was performed
--HCIBroadcomFactoryCalUpdateTxTable : Downloads a table of calibration trim constants determined during a factory calibration
--HCIBroadcomFactoryCalReadTable : Read the transmit and receive calibration tables
--HCIBroadcomFactoryCalRxRSSITest : Initiate all of the steps in the RSSI Calibration tests
--HCIBroadcomFactoryCalRxRSSITable : Parameters input for Calibration RSSI Table
--HCIBroadcomStoreFactoryCalibrationData : Writes factory calibration data to nonvolatile memory
--HCIBroadcomSectorErase : Erase a sector of flash in conjunction with a minidriver that supports the operation
--HCIBroadcomRSSIMeasurements : Connectionless RSSI measurements on the Bluetooth channels
--HCIBroadcomARMMemoryPeek : Allows the RF registers and baseband memory space to be read
--HCIBroadcomARMMemoryPoke : Allows the RF registers and baseband memory space to be written
--getACLDataStatistics : Get basic rate ACL connection statistics
--resetACLDataStatistics : Reset basic rate ACL connection statistics
--ToggleLMPLogging : Toggle LMP Logging
--LMPLoggingEnabled : LMP Logging Enabled
--setDeviceInactivityTimeout : Set Device Inactivity Timeout
--getRemoteWakeEnabledProperty : Returns the value for the 'RemoteWakeEnabled' property under 'IOBluetoothHCIController' node. Return: 0 is false, 1 is true
--getRemoteWakeEnabled : Returns enable/disable feature status to allow connected HID devices to wake system from sleep
--enableRemoteWake : Enable/disable feature to allow connected HID devices to wake system from sleep
--autoSeekKeyboardBehavior : Enable/disable feature to allow auto BTSA to launch searching for keyboard
--autoSeekPointingBehavior : Enable/disable feature to allow auto BTSA to launch searching for pointing devices
--enableFileSharing : Enable/disable Bluetooth file sharing
--actionForReceivingFiles : Action allowed when receiving Bluetooth files
--actionForBrowsingFiles : Action allowed when browsing Bluetooth files
--changeReceiveFolder : Change folder for received Bluetooth files
--changeBrowseFolder : Change folder for browsed Bluetooth files
--HIDCycle : Cycle all HID connection to paired HID devices with a delay
--HIDActive : List all the active HID connections to the host controller
--HIDChangeName : Send over a SET REPORT to the HID, this sends a change HID name to the HID
--HIDGetName : Get name of the HID
--HIDGetBatteryLevel : Get battery level of the HID
--HIDSendSCOActive : Send over a SCO active command to the HID to change sniff intervals
--HIDSendSCOInactive : Send over a SCO inactive command to the HID to change sniff intervals
--HIDVirtualCableUnplug : Send over a virtual cable Unplug
--HIDGetMaxNameLength : Get max name length the HID supports
--HIDSupportsVirtualCable : Check if HID supports Virtual Cable
--HIDGetProductID : Get the HID productID
--HIDGetVendorID : Get the HID vendorID
--HIDClassOfDevice : Get class of connected HID device
--HIDIsTBFCSuspended : Check if the device is in TBFC suppend or active
--HIDReadTBFCParams : Read the TBFC params to the HID that supports LLR
--HIDWriteTBFCParams : Write the TBFC params to the HID that supports LLR
--HIDTBFCScan : Enable TBFC scan
--HIDTurnOFFDynamicPowerControl : Turn off Dynamic Power Control
--HIDIncreaseDecreasePowerLevel : Remote device power level
--HIDIsMouseDevice : Check if the device is a mouse
--HIDIsKeyboardDevice : Check if the device is a keyboard
--HIDIsTrackpadDevice : Check if the device is a trackpad
--HIDClearAllLinkKeys : Clears all link keys from connected HID's
--HIDConnectAll : Try connecting to all paired HID's
--HIDPacketErrorRate : Calculate Packet Error Rate statistics for all connected Apple HID devices
--HIDEnableTrafficMode : Enable traffic generator for the HID
--HIDDisableTrafficMode : Disable traffic generator for the HID
--LEUUIDForBDADDR : Print the UUID for a LE device given the public BD_ADDR
--LEConnectToBDADDR : Connect to a LE device given the public BD_ADDR
--LEConnectToUUID : Connect to a LE device given a CoreBluetooth UUID
--lostPeerTimer : Change the lost Peer timer for A3 machines
--clearLogs : Clear all system crash and spin logs
--checkPID : Check to see if the process is running
--dumpPacketLog : Dump packetlog
--dumpStats : Dump diagnostic info to log
--enableLog : Enable Bluetooth logging
--disableLog : Disable Bluetooth logging
--dumpSanitizedPacketLog : Dump sysdianose version of packet log
--setUSBIdleTimer : Set USB Idle Timer
--isActiveAudioDevice : Lists the active audio device and some of its characteristics
--coreDump : Dump the Bluetooth module core.
--A2DPBitRate : Get the instentaneous A2DP bitrate
--playFileIniTunes : Launches iTunes and plays the provided music file
--updateFirmware : Update Bluetooth firmware via HCI commands
--enableSleepStandby : Enable settings for system to enter standby mode
--enableSleepStandbyTransition : Enable settings for system to enter regular sleep and after 30sec transition to standby mode
--enableSleepHibernate : Enable settings for system to enter hibernate mode
--enableSleepG3Standby : Enable settings for system to enter G3Standby mode
--enableSleepG3StandbyTransition : Enable settings for system to transition from regular sleep to standby mode and then to G3Standby
--enableSleepDefaults : Revert to default sleep settings. Reboot required
logout

[Process completed]

