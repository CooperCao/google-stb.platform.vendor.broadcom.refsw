#!/bin/env utf
# -*-tcl-*-

# UTF test script for testing the moving of interfaces between bridges
# on a router

# $Id$
#
# Usage: STAMoving APS STA LAN WAN
#
# APS is a list of AP objects
# STA is an available STA
# LAN is a reference host on the Lan
# WAN is a reference host on the Wan

# During the test each AP in the APS list will be assigned to a bridge
# and will be configured with various security settings.  STA will
# then be associated to each AP in turn and positive and negative
# connectivity for LAN and WAN will be verified.

package require UTF
package require UTF::Test::Mbss::APAddInterface
package require UTF::Test::Mbss::Connectivity
package require UTF::Test::ConnectAPSTA

package provide UTF::Test::Mbss::STAMoving 2.0

UTF::Test Mbss::STAMoving {APS STA} {

    set i 0

    set AP [lindex $APS 0]
    set WAN [$AP wan]
    set LAN [$AP lan]


    # Assign interfaces to Bridges
    foreach AP $APS {

	if {![$AP hostis Vx]} {
	    # Avoid LAN on Vx (PR#48529)
	    set LANS($AP) $LAN
	} else {
	    set LANS($AP) {}
	}
	set LAN1S($AP) {}

	# Alternate bridges, unless host is Vx which only has one
	# bridge.  BSD supports both bridges, but the firewall doesn't
	# work so all the connectivity tests will fail. PR#72421
	if {$i > 1 &&![$AP hostis Vx BSDAP]} {
	    set br($AP) "lan1"
	    lappend LAN1S($AP) $STA
	} else {
	    set br($AP) "lan"
	    lappend LANS($AP) $STA
	}
	APAddInterface -$br($AP) $AP

	incr i
    }

    UTF::Try "Disable firewall" {
	if {[string is false [$AP nvram get fw_disable]]} {
	    $AP restart fw_disable=1
	}
    }

    # Associate STA to each AP in turn and verify
    foreach AP $APS {
	UTF::Test::ConnectAPSTA $AP $STA
	Connectivity $LANS($AP) $LAN1S($AP) $WAN -firewall off
    }
}
