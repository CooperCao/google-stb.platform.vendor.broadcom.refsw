#!/bin/env utf
# -*-tcl-*-

# UTF test script for testing the firewall

# $Id$
#
# Usage: Firewall AP1 STA1 AP2 STA2 -security security
#
# AP1 and AP2 are real or virtual interfaces on the same router.
# STA1 is associated to AP1
# STA2 is associated to AP2

# During the test the AP1 will be assigned to the lan (LAN) and AP2
# will be assigned to lan1 (Guest).  STA1 will be associated with AP2
# and STA2 will be associated with AP2.  The firewall will be enabled
# and the connectivity matrix tested.  The firewall will then be
# disabled and connectivity matrix will be tested again.  AP2 and STA2
# are optional.

package require UTF
package require UTF::Test::ConnectAPSTA
package require UTF::Test::Mbss::APAddInterface
package require UTF::Test::Mbss::Connectivity

package provide UTF::Test::Mbss::Firewall 2.0

UTF::Test Mbss::Firewall {AP1 STA1 AP2 STA2 args} {
    UTF::Getopts {
	{security.arg "" "security"}
	{count.arg "30" "Retry count"}
    }

    if {$AP2 ne ""} {
	if {$STA2 eq ""} {
	    error "AP2 requires STA2"
	}
	if {[$AP1 cget -host] ne [$AP2 cget -host]} {
	    error "$AP1 and $AP2 are not on the same Router"
	}
    }

    UTF::Message INFO $AP1 "Verify Reference hosts"
    set LAN [$AP1 lan]
    set WAN [$AP1 wan]
    $LAN ping $WAN

    if {$AP2 eq ""} {
	UTF::Message INFO $AP1 "Assign AP to lan"
	APAddInterface -lan $AP1
    } else {
	UTF::Message INFO $AP1 "Assign first AP to lan, second to lan1"
	APAddInterface -lan $AP1 -lan1 $AP2
    }

    # Configure security
    if {$(security) ne ""} {
	UTF::Test::APConfigureSecurity $AP1 -security $(security)
	if {$AP2 ne ""} {
	    UTF::Test::APConfigureSecurity $AP2 -security $(security)
	}
    }

    # Associate
    UTF::Test::ConnectAPSTA $AP1 $STA1
    if {$AP2 ne ""} {
	UTF::Test::ConnectAPSTA $AP2 $STA2
    }

    UTF::Try "Enable firewall" {
	$AP1 restart fw_disable=0

	UTF::Message INFO $AP1 "Check WAN!->LAN"
	if {[catch {$WAN !ping $LAN}]} {
	    error "WAN still able to ping LAN"
	}

	UTF::Message INFO $AP1 "Check STAs reconnected to AP"
	if {[catch {$STA1 ping $AP1 -c $(count)}]} {
	    error "$STA1 failed to reconnect to AP1"
	}
	if {$AP2 ne ""} {
	    if {[catch {$STA2 ping $AP2 -c $(count)}]} {
		error "$STA2 failed to reconnect to AP2"
	    }
	}

	Connectivity [list $STA1 $LAN] $STA2 $WAN -firewall on
    }

    UTF::Try "Disable Firewall" {
	$AP1 restart fw_disable=1

	UTF::Message INFO $AP1 "Check WAN->LAN"
	if {[catch {$WAN ping $LAN}]} {
	    error "WAN unable to ping LAN"
	}

	UTF::Message INFO $AP1 "Check STAs reconnected to AP"
	if {[catch {$STA1 ping $AP1 -c $(count)}]} {
	    error "$STA1 failed to reconnect to AP1"
	}
	if {$AP2 ne ""} {
	    if {[catch {$STA2 ping $AP2 -c $(count)}]} {
		error "$STA2 failed to reconnect to AP2"
	    }
	}

	Connectivity [list $STA1 $LAN] $STA2 $WAN -firewall off
    }
}
