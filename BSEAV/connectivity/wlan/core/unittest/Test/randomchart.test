#!/bin/env utf
# -*-tcl-*-

#
# UTF test script for testing ControlChart tools using random numbers
# $Id: 6df4d626add93d7ac9c24bc970526a11e3d43f10 $
#
package require UTF
package require UTF::ControlChart

UTF::Test randomchart {args} {

    UTF::Getopts {
	{s.arg "5" "sample size"}
	{mean.arg "100" "Mean"}
	{amp.arg "2" "Amplitude"}
	{loop.arg "1" "loops"}
	{key.arg "random" "Calibration key"}
	{png.arg 0 "Use png file"}
	{perfcache.arg "perfcache" "Performance Cache"}
	{history.arg 30 "Performance History"}
	{nsigma.arg "3" "Control limit scale"}
	{allowzero.arg "0" "Allow Zero"}
	{failonhigh "Include HIGH in the failure criteria"}
	{stats "Test stats returning"}
	{nocache "Don't update performance cache"}
    }

    if {$(nocache)} {
	set ::UTF::ControlChart::readonly 1
    }

    # Default if loop is too small
    set ret "No data"

    # Fail criteria
    if {$(failonhigh)} {
	set FAILMATCH "HIGH|LOW|WIDE|ZERO"
    } else {
	set FAILMATCH "LOW|WIDE|ZERO"
    }

    UTF::ControlChart CC -s $(s) -key $(key) -allowzero $(allowzero) \
	-perfcache $(perfcache) -history $(history) -nsigma $(nsigma)

    for {set i 0} {$i < $(loop)} {incr i} {
	set ret [CC addsample \
		     [UTF::MeanMinMax \
			  [UTF::GaussRand $(mean) $(amp) $(s)]]]
	if {[regexp $FAILMATCH $ret]} {
	    set lastfail $ret
	}
    }

    if {![string is false $(png)]} {
	set ret [CC plotcontrolchart $ret]
    }

    # Stats
    CC stats A
    parray A

    UTF::Message LOG file [CC plotfile]
    UTF::Message LOG file_sm [CC plotfile_sm]

    if {![info exists lastfail]} {
	UTF::Message PASS "" $ret
	return $ret
    } else {
	UTF::Message FAIL "" $lastfail
	error $lastfail
    }
}
