#!/bin/env utf
# -*-tcl-*-

#
# TDLS (802.11z) wrapper test
# $Id: 8ae090597f92a0a8b92072053ad72fe2bab885d6 $
# $Copyright Broadcom Corporation$
#

package require UTF
package require UTF::Test::ConnectAPSTA
package require UTF::Test::controlchart

package provide UTF::Test::TDLS 2.0

UTF::Test TDLS {Router STA1 STA2 args} {

    UTF::Getopts {
	{security.arg "aespsk2" "Security"}
	{chanspec.arg "36" "Chanspec"}
	{perfcache.parg "" "Performance Cache"}
	{nocache "Don't update performance cache"}
	{symmetric.parg 0 \
	     "Only test in one direction because clients are identical"}
	{perfloop.parg 1 "Perf loop"}
	{history.parg 30 "History"}
	{warmup.arg 3 "Warmup time to trigger auto tdls"}
    }

    if {$(nocache)} {
	set ::UTF::ControlChart::readonly 1
    }

    set STAS [list $STA1 $STA2]
    set SATS [list $STA2 $STA1]

    set branch [$STA1 branchname]

    UTF::Try "$STA1: TDLS ->$STA2" {
	set setup 0

	foreach S [concat $Router $STAS] {
	    if {![$S cget -noframeburst]} {
		$S wl frameburst 1
	    }
	}

	foreach S  $STAS {
	    # TDLS msglevel is too chatty for normal use
	    # $S wl msglevel +tdls

	    # Configure auto-tdls, if not already the default
	    $S wl tdls_enable 1
	    $S wl tdls_auto_op 1
	    set mac($S) [$S macaddr]
	}
	ConnectAPSTA $Router $STAS \
	    -chanspec $(chanspec) -security $(security)
	set setup 1

	# Warm up - TDLS may take a few seconds to connect
	UTF::Multiperf $STAS -i 1 -t $(warmup) \
	    -w [$STA1 tcpautowindow] -b [$STA1 cget -udp]

	controlchart $STAS \
	    -key [concat $branch $Router $(security) TDLS] \
	    -loop $(perfloop) -history $(history) -perfcache $(perfcache) \
	    -i 2 -window [$STA1 tcpautowindow] \
	    -b [$STA1 cget -udp] -nopretest -pingmax 0
    } finally {
	try {
	    if {$setup} {
		$STA1 wl tdls_sta_info $mac($STA2)
	    }
	} finally {
	    if {!$setup || $(symmetric)} {
		catch {$STA1 wl disassoc}
		catch {$STA2 wl disassoc}
	    }
	}
    }
    if {$setup && !$(symmetric)} {
	UTF::Try "$STA1: TDLS <-$STA2" {
	    controlchart $SATS \
		-key [concat $branch $Router $(security) TDLS] \
		-loop $(perfloop) -history $(history) \
		-perfcache $(perfcache) \
		-i 2 -window [$STA2 tcpautowindow] \
		-b [$STA2 cget -udp]
	} finally {
	    catch {$STA1 wl disassoc}
	    catch {$STA2 wl disassoc}
	}
    }
    # Forget SSID, in case we get reused as an AP
    $STA1 configure -ssid {}
    $STA2 configure -ssid {}
}
