#!/bin/env utf
# -*-tcl-*-

# UTF test script for checking stability of Calibration coefficients
# on LPNPHY (eg 4313)
# $Id: 5823942220eea9b4889e509e875f1c750b5f6df6 $
# $Copyright Broadcom Corporation$
#

package require UTF
package require UTF::Test::stability

package provide UTF::Test::CalStability 2.0

namespace eval UTF::Test::CalStability {
    # 10bits signed int
    proc 10bits {d} {expr {$d > 512 ? $d - 1024 : $d}}
}


UTF::Test CalStability {SRC args} {

    UTF::Getopts {
	{chanspec.arg "3" "Chanspec"}
	{loop.arg "100" "Loop Count"}
    }

    # Check carefully, since we are outside of a Try
    if {[catch {$SRC phyname} phyname]} {
	UTF::Message WARN $SRC $phyname
	return
    }
    switch $phyname {
	NPHY {
	    if {[$SRC hostis WinDHD]} {
		UTF::Message INFO $SRC \
		    "Calibration test not supported on NPHY dongles"
		return
	    }
	}
	LCNPHY -
	LCN40PHY {
	    set band [$SRC band $(chanspec)]
	}
	HTPHY {}
	ACPHY {}
	default {
	    UTF::Message INFO $SRC "Calibration test not supported on $phyname"
	    return
	}
    }

    UTF::Try "$SRC: CH=$(chanspec): Calibration" {

	$SRC wl radio on
	if {[set oldmpc [$SRC wl mpc]] ne "0"} {
	    $SRC wl mpc 0; # Make sure "up" really means "up"
	} else {
	    unset oldmpc
	}
	$SRC wl down
#	if {[set oldband [$SRC wl band]] ne "auto"} {
#	    $SRC wl band auto
#	} else {
#	    unset oldband
#	}
	$SRC wl chanspec $(chanspec)
	$SRC wl up

	# Discard first calibration
	$SRC wl phy_forcecal 1

	$SRC wl scansuppress 1


	for {set i 0} {$i < $(loop)} {incr i} {
	    UTF::Message INFO "" "Loop $i/$(loop)"
	    $SRC wl phy_forcecal 1

	    switch $phyname {
		NPHY {
		    set ret [$SRC wl dump phycal]
		    if {[regexp {OFDM PHY:\nA0=([-\d]+), B0=([-\d]+), A1=([-\d]+), B1=([-\d]+)} \
			     $ret - A0 B0 A1 B1] &&
			[regexp {a0=([-\d]+), b0=([-\d]+), a1=([-\d]+), b1=([-\d]+)} \
			     $ret - a0 b0 a1 b1]} {
			lappend parm(A0) $A0
			lappend parm(B0) $B0
			lappend parm(A1) $A1
			lappend parm(B1) $B1
			lappend parm(a0) $a0
			lappend parm(b0) $b0
			lappend parm(a1) $a1
			lappend parm(b1) $b1
		    } else {
			error "Unable to parse dump phycal"
		    }
		}
		LCNPHY -
		LCN40PHY {
		    lappend parm(rxiqcc0) [10bits [$SRC wl phyreg 0x645 $band]]
		    lappend parm(rxiqcc1) [10bits [$SRC wl phyreg 0x646 $band]]

		    catch {
			set txiqcc [$SRC wl phy_txiqcc]
			lappend parm(txiqcc0) [lindex $txiqcc 0]
			lappend parm(txiqcc1) [lindex $txiqcc 1]

			set txlocc [$SRC wl phy_txlocc]
			lappend parm(txlocc0) [lindex $txlocc 0]
			lappend parm(txlocc1) [lindex $txlocc 1]
			lappend parm(txlocc2) [lindex $txlocc 2]
			lappend parm(txlocc3) [lindex $txlocc 3]
		    }
		}
		ACPHY -
		HTPHY {
		    set ret [$SRC wl dump phycal]
		    foreach {- c a b} \
			[regexp -inline -all -line \
			     {core-(\d):\sa/b:\s\(\s*([-\d]+),\s*([-\d]+)\),\s} \
			     $ret] {
				 lappend parm(ta$c) [UTF::clean_number $a]
				 lappend parm(tb$c) [UTF::clean_number $b]
			     }
		    if {![info exists c]} {
			$SRC warn "Unable to parse tx coefs from dump phycal"
		    } else {
			unset c
		    }
		    foreach {- c a b} \
			[regexp -inline -all -line \
			     {core-(\d):\sa/b\s=\s\(\s*([-\d]+),\s*([-\d]+)} \
			     $ret] {
				 lappend parm(ra$c) [UTF::clean_number $a]
				 lappend parm(rb$c) [UTF::clean_number $b]
			     }
		    if {![info exists c]} {
			error "Unable to parse rx coefs from dump phycal"
		    }
		}
	    }
	}
	if {$(loop) > 0} {
	    regsub {/} "cal_$(chanspec)" {.} file
	    stability -array parm -title "Calibration CH=$(chanspec)" \
		-file $file -k 4 -correlated
	}
    } finally {
	# restore original settings.
	$SRC wl scansuppress 0
	if {[info exists oldmpc]} {
	    $SRC wl mpc $oldmpc
	}
#	if {[info exists oldband]} {
#	    $SRC wl down
#	    $SRC wl band $oldband
#	    $SRC wl up
#	}
    }


}
