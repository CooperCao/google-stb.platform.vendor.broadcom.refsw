#!/bin/env utf
# -*-tcl-*-
#

# ACS basic test

package require UTF
package require UTF::Streams
package require UTF::Test::PSPretend
package require UTF::wlstats

package provide UTF::Test::ACSD 2.0

UTF::Test ACSD {args} {
    UTF::Getopts {
	{ap.arg "4708" "ap to use"}
	{sta.arg "4706" "sta(s) to use"}
	{configonly "Configure the feature only"}
	{disable "disable the feature"}
    }
    if {!$(configonly)} {
	UTF::Test::PSPretend -ap $(ap) -sta $(sta) -pspretend "0 5"
    }
    UTF::Try "ACS/FCS Setup" {
	UTF::Try "Enable ACS/FCS Chanspec Auto/80Mhz" {
	    if {$(disable)} {
		$(ap) nvram set [$(ap) wlname]_acs_fcs_mode=0
	    } else {
		$(ap) nvram set [$(ap) wlname]_acs_fcs_mode=1
	    }
	    $(ap) nvram set [$(ap) wlname]_acs_dfs=0
	    $(ap) nvram set [$(ap) wlname]_chanspec=0
	    $(ap) nvram set [$(ap) wlname]_cap=7
	    $(ap) nvram commit
	    $(ap) restart
	    UTF:::Sleep 70
	    UTF::Try "wl intfer_params/pspretend" {
		$(ap) wl intfer_params
		$(ap) wl intfer_params 1 1 3 5
		$(ap) wl intfer_params
		$(ap) wl pspretend_retry_limit 5
		$(ap) wl msglevel +0x2000000000000
	    }
	}
    }
    if {!$(configonly)} {
	UTF::Try "ACS/FCS Test w/mac suspend" {
	    UTF::Try "Traffic" {
		set traffic [UTF::stream %AUTO% -name UDP -tx $(ap) -rx $(sta) -rate 40M -pktsize 1470]
		$traffic id
		$traffic start
		UTF::Sleep 2
		$traffic linkcheck -now
	    }
	    UTF::Try "Mac suspend" {
		if {[$(sta) hostis Router]} {
		    set mac [[$(sta) lan] macaddr]
		} else {
		    set mac [$(sta) macaddr]
		}
		$(ap) wl msglevel
		$(ap) wl -u msglevel +time
		set statsscb [UTF::wlstats::pktqstat %AUTO% -key "$mac [$traffic id ]" -wlcmd "$(ap) wl pktq_stats a:+$mac" -name $(ap)]
		set statscommon [UTF::wlstats::pktqstat %AUTO% -key "common $mac [$traffic id ]" -wlcmd "$(ap) wl pktq_stats c:+" -name $(ap)]
		$statsscb sample; $statscommon sample
		$traffic stats -clear
		set starttime [UTF::stream clock]
		UTF::Sleep 2.0
		$(ap) wl status
		$(sta) wl status
		set events {}
		lappend events [list "s" [expr {[UTF::stream clock] - $starttime}]]
		$(sta) wl suspend_mac 150
		UTF::Sleep 2.0
		$statsscb sample; $statscommon sample
		UTF::Sleep 0.25
		lappend events [list "s" [expr {[UTF::stream clock] - $starttime}]]
		$(sta) wl suspend_mac 150
		$statsscb sample; $statscommon sample
		UTF::Sleep 30
		$statsscb sample; $statscommon sample
		$(ap) wl status
		$(sta) wl status
		$(sta) wl_escanresults
		set sg [UTF::streamgraph %AUTO% -streams $traffic -stat rate -title "UDP" -yticsynch 1 -graphsize "1024,768" -details 1 -xtics $events]
		set lg [UTF::streamgraph %AUTO% -stat lost -streams $traffic -title "Lost Pkts" -yticsynch 1 -graphsize "1024,768" -with "impulses" -details 1 -xtics $events]
		set latency [UTF::streamgraph %AUTO% -stat pktlatency -streams $traffic -title "Latency" -yticsynch 1 -graphsize "1024,768" -details 1 -xtics $events]
		set results "[$sg plot][$lg plot -append][$latency plot -append]"
		$sg destroy; $lg destroy; $latency destroy
		if {[catch {$traffic linkcheck -now}]} {
		    error $results
		} else {
		    return $results
		}
	    }
	    UTF::Try "Reboot" {
		$(ap) reboot
		$(sta) reboot
		UTF::Sleep 30
	    }
	}
    }
    catch {$traffic destroy}
}
