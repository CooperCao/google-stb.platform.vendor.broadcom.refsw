#!/bin/env utf
# -*-tcl-*-

package require UTF::Streams

UTF::Test PR109760 {args} {
    UTF::Getopts {
	{ap.arg "4360mch" "AP under test"}
	{sta.arg "4360lx2" "STA(s) under test"}
	{shaperrate.arg "10M" "TCP shaping rate"}
	{max.arg "801" ""}
	{min.arg "1" ""}
	{step.arg "25"}
	{hold.arg "4" ""}
	{dump "dump et0 and ampdu counters"}
	{noampdu ""}
    }
    UTF::Try "Shaper $(shaperrate)" {
	if {$(noampdu)} {
	    set ssid [$(ap) wl ssid]
	    foreach STA "$(ap) $(sta)" {
		$STA wl down
		$STA wl ampdu 0
		$STA wl up
	    }
	    $(sta) wl join $ssid
	    set ::timeout 0
	    after 30000 {set ::timeout 1}
	    while {[catch {$(sta) wl bssid} bssid] || $bssid eq "00:00:00:00:00:00"} {
		UTF::Sleep 1.0
		if {$::timeout} {
		    error "cannot reassoc"
		}
	    }
	}
	UTF::stream udp -tx $(sta) -rx $(ap) -rate 1M -pktsize 1460 -shaperrate 900M
	UTF::stream tcp -tx $(ap) -rx $(sta) -protocol tcp -shaperrate $(shaperrate)
	tcp start
	udp start
	tcp linkcheck
	udp linkcheck
	UTF::stream allstreams stats -clear
	UTF::streamgraph g -title "AP=$(ap) STA=$(sta) lan=[$(ap) lan]\\nshaper=$(shaperrate) i=$(step)M hold=$(hold)s"
	for {set ix $(min)} {$ix < $(max)} {incr ix +$(step)} {
	    udp configure -rate ${ix}M
	    if {$(dump)} {
		$(ap) wl -u ampdu_clear_dump
		$(ap) rexec -x et dump
	    }
	    UTF::Sleep $(hold)
	    if {$(dump)} {
		$(ap) wl -u dump ampdu
		$(ap) rexec -x et dump
	    }
	}
	return [g plot]
    }
    UTF::stream exitstreams
}