#!/bin/env utf
# -*-tcl-*-

#
# UTF test script testing Fragmentation threshold
#


package require UTF

package require UTF::Test::ConnectAPSTA

package provide UTF::Test::Fragmentation 2.0

# AP: Router or Access point wireless interface
# STA: Station wireless interfaces
UTF::Test Fragmentation  {AP STA args}  {
    UTF::Getopts [subst {
	{dut.arg "$AP" "dut"}
    }]

    # Use fixed size larger than all the thresholds, so small
    # thresholds will result in more fragments.
    set size 2446

    # Set the different fragmentation threshold list
    # Default should be last to reduce side effects
    set frag_val_list {256 500 750 1000 2346}

    try {
	# fragmentation is not meaningful if packets are being
	# aggregated, so turn aggregation off.  Don't use a
	# non-aggregating security since we still want HT/VHT rates.

	# Better approach would be to test using an access class which
	# doesn't use aggregation, but we don't have a cross-platform
	# way to do that yet.  This would work on Linux: ping -Q 0x80

	if {[catch {$STA wl amsdu} amsdu]} {
	    set amsdu 0
	}

	$STA wl down
	$STA wl ampdu 0
	if {$amsdu} {
	    $STA wl amsdu 0
	}
	$STA wl up

	# Associate the devices
	ConnectAPSTA $AP $STA -security open

	# Cache IP addresses
	set APIP [$AP ipaddr]

	foreach frag_val $frag_val_list {
	    UTF::Try "$(dut): Fragment threshold: $frag_val" {
		$(dut) wl fragthresh $frag_val
		# ping with length greater than frag threshold
		$STA ping $APIP -c 3 -s $size
	    }
	}
    } finally {
	$STA wl down
	$STA wl -u ampdu 1
	if {$amsdu} {
	    $STA wl amsdu 1
	}
	$STA wl up
    }
}
