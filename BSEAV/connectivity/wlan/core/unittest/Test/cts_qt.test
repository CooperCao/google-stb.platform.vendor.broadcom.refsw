#!/bin/env utf
# -*-tcl-*-

#
# Corona Test Scripts "quick test"

# $Id: 6be65e656751b0ac8353ee2522c2d66920b7d3be $
# $Copyright Broadcom Corporation$
#

package require UTF
package require UTF::Test::ConnectAPSTA

#package provide UTF::Test::cts_qt 2.0

namespace eval UTF::Test::cts_qt {

    proc L12_enable_Tpon_50us {DUT} {
	UTF::Message INFO $DUT "---disable EP ASPM---"
	$DUT setpci -s 3:0.0  0xbc.b=0x40
	$DUT setpci -s 3:0.0  0xbc.l
	UTF::Message INFO $DUT "---disable RC ASPM---"
	$DUT setpci -s 0:1c.3  0x50.b=0x40
	$DUT setpci -s 0:1c.3  0x50.l
	#UTF::Message INFO $DUT "---set RC offset 0x208 to 0x40a0281f---"
	#setpci -s 0:1c.3 0x208.l=0x40a0281f
	#setpci -s 0:1c.3 0x208.l
	UTF::Message INFO $DUT "---set RC offset 0x20c to 0x29(50us)---"
	$DUT setpci -s 0:1c.3 0x20c.l=0x29
	$DUT setpci -s 0:1c.3 0x20c.l
	#UTF::Message INFO $DUT "---set EP offset 0x248 to 0x40a0000f---"
	#setpci -s 3:0.0 0x248.l=0x40a0000f
	#setpci -s 3:0.0 0x248.l
	UTF::Message INFO $DUT "---set EP offset 0x24c to 0x29(50us)---"
	$DUT setpci -s 3:0.0 0x24c.l=0x29
	$DUT setpci -s 3:0.0 0x24c.l
	UTF::Message INFO $DUT "---set RC ASPM----"
	$DUT setpci -s 0:1c.3 0x50.b=0x43
	$DUT setpci -s 0:1c.3 0x50.l
	UTF::Message INFO $DUT "---set EP ASPM----"
	$DUT setpci -s 3:0.0 0xbc.w=0x0143
	$DUT setpci -s 3:0.0 0xbc.l
	return
    }

    proc cfg_read {DUT} {
	UTF::Message INFO $DUT "---read EP status---"
	$DUT setpci -s 3:0.0  0xbc.l
	$DUT setpci -s 3:0.0 0x248.l
	$DUT setpci -s 3:0.0 0x24c.l
	$DUT setpci -s 3:0.0 0x4c.l
	UTF::Message INFO $DUT "---read RC status---"
	$DUT setpci -s 0:1c.3  0x50.l
	$DUT setpci -s 0:1c.3 0x208.l
	$DUT setpci -s 0:1c.3 0x20c.l
	return
    }

    proc L1ss_clkreq_check_10cyc {DUT} {

	set dev [$DUT cget -device]

	for {set i 0} {$i <= 14} {incr i} {

	    UTF::Message INFO $DUT "---$i-th loop checking clkreq_hist dump"
	    $DUT dhd -i $dev pciereg 0x1e10
	    $DUT dhd -i $dev pciereg 0x1e14
	    $DUT dhd -i $dev pciereg 0x1e18
	    $DUT dhd -i $dev pciereg 0x1e1c
	    UTF::Sleep 0.5
	}
    }

    proc sleep_wake_test {DUT} {
	set dev [$DUT cget -device]

	$DUT dhd -i $dev pcie_suspend 1
	set sstate [$DUT dhd -i $dev pciecfgreg 0x4c]

	UTF::Sleep 10
	if {$sstate == 0x400b} {
	    UTF::Sleep 5
	    UTF::Message INFO $DUT "Going into sleep"
	    $DUT -x rtcwake -m mem -s 20
	    UTF::Message INFO $DUT "Woke up. Wait 10s"
	    UTF::Sleep 10
	}
	$DUT dhd -i $dev pcie_suspend 0
	UTF::Message INFO $DUT "Bus is up.."
	$DUT wl ver


    }
}

UTF::Test cts_qt {REF DUT} {

    UTF::Record "$REF: reload" {
	$REF reload
    }

    UTF::Record "$DUT: L12_enable_Tpon_50us" {
	L12_enable_Tpon_50us $DUT
    }
    UTF::Record "$DUT: cfg_read" {
	cfg_read $DUT
    }


    UTF::Record "$DUT: reload" {
	UTF::Sleep 1
	$DUT reload

	$DUT wl mpc 0
	$DUT wl up
	$DUT wl PM 2
    }

    UTF::Record "$DUT: assoc" {

	ConnectAPSTA $REF $DUT -security open -chanspec 36
	set w [$DUT tcpautowindow]

	UTF::Multiperf [list $DUT $REF] -w $w -i 1 -t 2
    }

    UTF::Record "$DUT: sleep_wake_test_assoc" {
	sleep_wake_test $DUT

	set rbssid [$REF wl bssid]
	set dbssid [$DUT wl bssid]
	if {$dbssid != $rbssid} {
	    throw FAIL "BSSID mismatch: $dbssid != $rbssid"
	}
	UTF::Multiperf [list $DUT $REF] -w $w -i 1 -t 2

    }

    UTF::Record "$DUT: L1ss_clkreq_check_10cyc" {
	UTF::Sleep 1
	L1ss_clkreq_check_10cyc $DUT
    }

    UTF::Record "$DUT: reload" {
	UTF::Sleep 1
	$DUT reload

	$DUT wl mpc 0
	$DUT wl up
	$DUT wl PM 2
    }

    UTF::Record "$DUT: sleep_wake_test_unassoc" {
	sleep_wake_test $DUT
    }

    UTF::Record "$DUT: L1ss_clkreq_check_10cyc" {
	UTF::Sleep 1
	L1ss_clkreq_check_10cyc $DUT
    }

    UTF::Record "$DUT: unload" {
	$DUT unload
    }

}
