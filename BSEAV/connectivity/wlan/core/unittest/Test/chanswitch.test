#!/bin/env utf
# -*-tcl-*-

# UTF test script for tracking channel switch times
# $Id$
#
package require UTF
package require UTF::ControlChart
package provide UTF::Test::chanswitch 2.0

UTF::Test chanswitch {STA args} {

    UTF::Getopts {
	{loop.arg 1 "Loop count"}
	{msg.arg "" "Message"}
	{key.arg "" "key"}
	{perfcache.arg "" "Performance Cache"}
	{history.arg 30 "Performance History"}
	{nocache "Don't update performance cache"}
    }

    # skip on dhdpcie - WAR for SWWLAN-88212
    if {[regexp {dhdpcie} [$STA cget -brand]] ||
	![regexp {chanswitch} [$STA wl dump list]]} {
	# Not available
	return
    }

    if {$(msg) eq ""} {
	set (msg) $STA
    }
    if {$(nocache)} {
	set ::UTF::ControlChart::readonly 1
    }
    set branch [$STA branchname]

    set key [concat $branch chan $(key) $STA]
    UTF::ControlChart CC -s 5 -key $key -units ms \
	-title "Chanswitch" -perfcache $(perfcache) \
	-history $(history)

    set key [concat $branch band $(key) $STA]
    UTF::ControlChart BC -s 5 -key $key -units ms \
	-title "Bandswitch" -perfcache $(perfcache) \
	-history $(history)


    UTF::Try "$(msg): Channelswitch Time" {
	# Set a 20MHz home chanspec to avoid bw changes during scan
	if {[regexp {^(\d+)[/ul]} [$STA wl chanspec] - c]} {
	    $STA wl chanspec $c
	}
	$STA wl up
	for {set i 0} {$i < $(loop)} {incr i} {

	    if {[catch {$STA wl scan} ret] && [regexp {Not Ready} $ret]} {
		UTF::Sleep 4
		$STA wl scan
	    }
	    UTF::Sleep 4

	    set dump [$STA wl dump chanswitch]
	    if {![regexp {(Channelswitch: .*? Samples)} $dump - chan]} {
		return "No channelswitch information"
	    }

	    foreach {- dur} [regexp -inline -all \
				 {[\d/ul]+\s+=>\s+[\d/ul]+\s+(\d+\.\d+)} \
				 $chan] {
		lappend samples $dur
	    }

	    set samples [lreplace $samples 0 end-5]
	    UTF::Message LOG $STA "Samples: $samples"

	    set cret [CC addsample [UTF::MeanMinMax $samples]]

	    if {![regexp {(Bandswitch: .*? Samples)} $dump - chan]} {
		UTF::Message INFO $STA "No bandswitch information"
	    } else {
		foreach {- dur} [regexp -inline -all \
				     {[\d/ul]+\s+=>\s+[\d/ul]+\s+(\d+\.\d+)} \
				     $chan] {
		    lappend samples $dur
		}

		set samples [lreplace $samples 0 end-5]
		UTF::Message LOG $STA "Samples: $samples"

		set bret [BC addsample [UTF::MeanMinMax $samples]]
	    }

	    if {$(loop) > 1} {
		$STA wl scan
		UTF::Sleep 4
	    }
	}

	CC plotcontrolchart $cret
    }
    if {[info exists bret]} {
	UTF::Try "$(msg): Bandswitch Time" {
	    BC plotcontrolchart $bret
	}
    }
}
