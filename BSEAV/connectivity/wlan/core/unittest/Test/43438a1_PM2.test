#!/bin/env utf
# -*-tcl-*-
#
# Test for investigating 43438a1 crash under low RSSI (~-85dBm)
# in PM 2 mode

namespace eval UTF {}; # Used by pkg_mkindex
package require UTF
package require UTF::Test::ConnectAPSTA
package require UTF::Aeroflex

UTF::Test 43438a1_PM2 { args } {
	UTF::Getopts {
		{ap.arg "4717Akashi" "AP name"}
		{sta.arg "43438a1" "sta name"}
		{af.arg "af" "Name or IPADDR of Aeroflex attenuator in conf file"}
		{grp.arg "G1" "Attenuator port group used in test"}
		{count.arg 1 "Number of Loops to Try"}
		{atten.arg 45 "Starting Attenuator Value to Use"}
		{logdir.arg "" "Log directory override"}
		{runtime.arg 60 "Multiperf runtime"}
		{winSize.arg "512k" "TCP window size"}
		{pm.arg 2 "PM Mode setting value"}
		{chanspec.arg "" "Chanspec to use for all fixed-channel tests"}
		{noopt "Use defaults"}
	}
	
	set testName "43438_PM2"
	
	# Make sure we have AP and STA loaded
	set devs "$(ap) $(sta)"
	foreach dev $devs {
	# 	puts "Checking device: $dev"
		if {[catch {$dev wl ver}]} {
			$dev reload
		}
	}

	UTF::WrapSummary $UTF::SummaryDir "43438a1_PM2" "" "" {
	
		UTF::Try "Setting up test" {
			UTF::Try "Connecting AP STA" {
				# associate STA and AP
				if { $(chanspec) != "" } {
					catch {UTF::Test::ConnectAPSTA $(ap) $(sta) -chanspec $(chanspec)} connect
				} else {
					catch {UTF::Test::ConnectAPSTA $(ap) $(sta)} connect
				}
				UTF::Message DEBUG "" "connect is $connect"
# 				if { $connect != 0 } {
# 					error $connect
# 				}
			}
			UTF::Try "Set PM mode" {
				$(sta) wl PM $(pm)
				$(sta) wl PM
			}
			UTF::Try "Set wlan path attenuation" {
# 				catch {$(af) setGrpAttn $(grp) $(atten)} setAf
				catch {$(af) setGrpAttn $(grp) $(atten)}
				$(af) getGrpAttn $(grp)
	# 			UTF::Message DEBUG "" "setAf is $setAf"
			}
			UTF::Try "Get STA RSSI" {
				$(sta) wl rssi
			}
		}
		
		# keeping time info for test execution
		set stClk [ clock seconds ]
		set stDate [ clock format $stClk -format "%d/%b/%y" ]
		set stTime [ clock format $stClk -format "%T" ]
		
		for { set i 1 } { $i <= $(count) } { incr i } {
			UTF::Try "Running wlan traffic: $i of $(count)" {
					catch {UTF::Multiperf "$(sta) lan0 lan0 $(sta)" -i 1 -t $(runtime) -w $(winSize)} test
			# 		UTF::Message DEBUG "" "test is $test"
			}
		}
	
		# messages at end of test execution
		if { $(count) > 1 } {
			UTF::Message DEBUG "" "*************** End of Test $testName; Iterations $(count) ***************" 
		} else {
			UTF::Message DEBUG "" "*************** End of Test $testName; Iteration $(count) ***************" 
		}		
		UTF::Message DEBUG "" "********   Start Time: $stDate $stTime; End Time: [ exec date +%T ]   ********" 
		UTF::Message DEBUG "" "********                Elapsed Time (sec): [expr [clock seconds] - $stClk]                 ********"
	}
}