#!/bin/env utf
# -*-tcl-*-
#
package require UTF
package require UTF::Test::ConnectAPSTA

UTF::Test PR112448 {args} {
    UTF::Getopts {
	{AP.arg "4360-2AP" ""}
	{P2PAP.arg "4360-2APp2p" ""}
	{RTR.arg "4706/4360a" ""}
	{STA.arg "4360" ""}
	{STAsoft.arg "4360STA" ""}
	{STAp2p.arg "4360STAp2p" ""}
	{STA1.arg "4360-1" ""}
	{STA1soft.arg "4360-1STA" ""}
	{STA1p2p.arg "4360-1STAp2p" ""}
	{security.arg "aespsk2" ""}
	{loop.arg "2" ""}
	{apsta.arg "" ""}
	{p2p.arg "" ""}
    }

    set AP $(AP)
    set P2PAP $(P2PAP)
    set RTR $(RTR)
    set STA $(STA)
    set STAsoft $(STAsoft)
    set STAp2p $(STAp2p)
    set STA1 $(STA1)
    set STA1soft $(STA1soft)
    set STA1p2p $(STA1p2p)
    set p2p $(p2p)
    set apsta $(apsta)
	set security $(security)

    for {set i 0} {$i < $(loop)} {incr i} {
	
	UTF::Try "$RTR $AP Down" {
	    catch {$RTR wl down}
	    catch {$AP wl down}
	}

	UTF::Try "Load $STA" {
	    catch {$STA wl disassoc}
	    catch {$STA wl down}
	    if {$apsta eq ""} {
		set apsta [$STA findimages]
	    }
	    $STA load $apsta
	    set ret [$STA whatami]
	    append ret " [ $STA wl ver]"
	    return $ret
	}

	UTF::Try "Load $STA1" {
	    catch {$STA1 wl disassoc}
	    catch {$STA1 wl down}
	    $STA1 load $apsta
	    set ret [$STA1 whatami]
	    append ret " [ $STA1 wl ver]"
	    return $ret
	}

	UTF::Try "$RTR" {
	    set ret [$RTR whatami]
	    append ret " [ $RTR wl ver]"
	    return $ret
	}

	UTF::Try "$RTR Restore_defaults" {
		$RTR restore_defaults
	}
	UTF::Try "Connect $RTR $STA $security 36/80" {
	    $STA wl band a
	    $STA1 wl band a
	    UTF::Test::ConnectAPSTA $RTR $STA -security $security -chanspec 36/80
	}

	UTF::Try "Connect $RTR $STA1" {
	    $STA1 wl band
	    UTF::Test::ConnectAPSTA $RTR $STA1
	}

    UTF::Try "Disassoc $STA $STA1" {
		$STA wl disassoc
		$STA1 wl disassoc
	}

	UTF::Try "$RTR $AP Down" {
	    catch {$RTR wl down}
	    catch {$AP wl down}
	}

	UTF::Try "Load $STAsoft" {
	    catch {$STAsoft wl down}
		$STA deinit
	    $STAsoft load $apsta
	}

	UTF::Try "Load $STA1soft" {
	    catch {$STA1soft wl down}
		$STA1 deinit
	    $STA1soft load $apsta
	}

	UTF::Try "Load $AP SoftAP" {
	    $AP load $apsta
	    $AP whatami
	}

	UTF::Try "Connect $AP $STAsoft $security 36l" {
	    $STAsoft wl band
	    UTF::Test::ConnectAPSTA $AP $STAsoft -security $security -chanspec 36l
	}

	UTF::Try "Load $STA1soft" {
	    $STA1soft wl band
	    UTF::Test::ConnectAPSTA $AP $STA1soft 
	}
	
	UTF::Try "Disassoc $STAsoft $STA1soft" {
	    $STAsoft wl disassoc
	    $STA1soft wl disassoc
	}

	UTF::Try "Connect $AP $STAsoft $security 36" {
	    $STAsoft wl band
	    UTF::Test::ConnectAPSTA $AP $STAsoft -security $security -chanspec 36
	}
	
	UTF::Try "Connect $STA1soft" {
	    $STA1soft wl band
	    UTF::Test::ConnectAPSTA $AP $STA1soft
	}
	
	UTF::Try "Disassoc $STAsoft $STA1soft" {
	    $STAsoft wl disassoc
	    $STA1soft wl disassoc
	}

	UTF::Try "Connect $AP $STAsoft $security 36/80" {
	    $STAsoft wl band
	    UTF::Test::ConnectAPSTA $AP $STAsoft -security $security -chanspec 36/80
	}

	UTF::Try "Connect $STA1soft" {
	    $STA1soft wl band
	    UTF::Test::ConnectAPSTA $AP $STA1soft
	}

	UTF::Try "Disassoc $STAsoft $STA1soft" {
	    $STAsoft wl disassoc
	    $STA1soft wl disassoc
	}

	UTF::Try "Down $RTR $AP" {
	    catch {$RTR wl down}
	    catch {$AP wl down}
	}

	UTF::Try "Load $P2PAP" {
	    $AP unload
	    $AP deinit
	    if {$p2p eq ""} {
		set p2p [$P2PAP findimages]
	    }
	    $P2PAP load $p2p
	}

	UTF::Try "Load $STAp2p" {
		$STAsoft unload
	    $STAsoft deinit
	    $STAp2p load $p2p
	}

	UTF::Try "Load $STA1p2p" {
	    $STA1soft unload
	    $STA1soft deinit
	    $STA1p2p load $p2p
	}

	UTF::Try "Connect $P2PAP $STAp2p $security 36" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p -security $security -chanspec 36 
	}

	UTF::Try "Connect $P2PAP $STA1p2p" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}

	UTF::Try "Connect $P2PAP $STA1p2p $security 36/80" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p -security $security -chanspec 36/80
	}

	UTF::Try "Connect $P2PAP $STAp2p" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}

	UTF::Try "Connect $P2PAP $STA1p2p $security 36l" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p -security $security -chanspec 36l
	}

	UTF::Try "Connect $P2PAP $STAp2p" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}

	UTF::Try "Connect $P2PAP $STAp2p $security 36" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p -security $security -chanspec 36
	}
    
	UTF::Try "Connect $P2PAP $STA1p2p" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}

	UTF::Try "Connect $P2PAP $STA1p2p $security 36/80" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p -security $security -chanspec 36/80
	}

	UTF::Try "Connect $P2PAP $STAp2p" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}

	UTF::Try "Connect $P2PAP $STA1p2p $security 36l" {
	    $STA1p2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STA1p2p -security $security -chanspec 36l
	}

	UTF::Try "Connect $P2PAP $STAp2p" {
	    $STAp2p wl band
	    UTF::Test::ConnectAPSTA $P2PAP $STAp2p
	}

	UTF::Try "Disassoc $STAp2p $STA1p2p" {
	    $STAp2p wl disassoc
	    $STA1p2p wl disassoc
	}
    }

    UTF::Try "Unload" {
	$STAp2p unload
	$STA1p2p unload
	$P2PAP unload
    }

    UTF::Try "Power cycle" {
	$STAp2p power cycle
	$STA1p2p power cycle
	$P2PAP power cycle
	UTF::Sleep 60
    }
}
