#!/bin/env utf
# -*-tcl-*-
#

#
# UTF test script to sweep packet sizes
#
# Written by: Robert J. McMahon November 2011
#
# $Copyright Broadcom Corporation$
#
package require UTF
package require UTF::Streams

package provide UTF::Test::PktSizeSweep 2.0


#
#  Sweep packet sizes
#
UTF::Test PktSizeSweep {args} {
    UTF::Getopts {
	{ap.arg "" "AP under test"}
	{sta.arg "" "STA(s) under test"}
	{p.arg "10" "number of simultaneous streams"}
	{min.arg "4"}
	{max.arg "256"}
	{incrsize.arg "1"}
	{rate.arg "1M"}
	{tos.arg "0x0"}
	{bidir}

    }
    set pktsize $(min)
    while {$pktsize <= $(max)} {
	UTF::Try "Streams Setup" {
	    catch {unset streams}
	    for {set ix 0} {$ix < $(p)} {incr ix} {
		set streams([expr {2 * $ix}]) [UTF::stream %AUTO% -tx $(sta) -rx $(ap) -pktsize $pktsize -rate $(rate) -tos $(tos)]
		if {$(bidir)} {
		    set streams([expr {(2 * $ix) + 1}]) [UTF::stream %AUTO% -rx $(sta) -tx $(ap) -pktsize $pktsize -rate $(rate) -tos $(tos)]
		}
		incr pktsize +$(incrsize)
		if {$pktsize > $(max)} {
		    break
		}
	    }
	    UTF::stream allstreams start
	    UTF::stream allstreams stats -clear
	    UTF::Sleep 1.0
	}
	foreach index [lsort -integer [array names streams]] {
	    set msg "[$streams($index) cget -pktsize] linkcheck [namespace tail [$streams($index) cget -receivesta]]"
	    UTF::Try "Packet size $msg" {
		if {[catch {$streams($index) linkcheck} msg]} {
		    set msg "$msg [namespace tail $streams($index)]"
		    error $msg
		}
	    }
	}
	UTF::Try "Tear down" {
	    catch {UTF::stream allstreams destroy}
	    return
	}
    }
    UTF::stream exitstreams
}
