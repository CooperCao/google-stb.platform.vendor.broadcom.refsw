#!/bin/sh -e

# Kickoff CD generator for Fedora 15
# 	$Id: bef1217d9f4437af07091bd26ffad3acd16d2a69 $	

# Kickoff CDs can be used to reinstall the OS.  If upgrading from an
# earlier version of Linux kickoff will try to retain essential system
# configuation, but it's a good idea to run prekickoff first, to
# provide a backup of that information.

dist=/projects/hnd_cdroms/os/Linux/Fedora/Fedora15/i386.dist
tmp=/tmp/iso

# Convert path into NFS components
mountinfo=`df -Pk $dist|tail -1`
server=`expr "$mountinfo" : '\(.*\):'`
filesystem=`expr "$mountinfo" : '.*:\([^ ]*\)'`
mountpoint=`expr "$mountinfo" : '.* \([^ ]*\)$'`
dir=${dist/#$mountpoint/$filesystem}
ks=$dir/ks.cfg
ks=$(echo $ks | sed 's/\//\\\//g')

echo "Archive $server:$dir"

rm -rf $tmp
mkdir $tmp

cp -r $dist/isolinux/ $tmp
cd $tmp
chmod u+w isolinux/*
sed "
s/timeout 600/timeout 20/
s/append/append ks=nfs:$server:$ks/" \
    isolinux/isolinux.cfg > isolinux/isolinux.cfg.tmp
mv isolinux/isolinux.cfg.tmp isolinux/isolinux.cfg

cat >isolinux/ks.cfg <<'EOF'
# Kickstart file generated by $0

install
lang en_US
keyboard us
network --onboot yes --device em1 --bootproto dhcp --noipv6
timezone --utc America/Los_Angeles
rootpw  --iscrypted $6$V9UIUXvxqMx.WtMy$PPqoV8xkOhVA.7tPb/ihX7VQnepdHRNnpyh/tfu8vY3FyZgcVPnTZFs/6sBgiZSeS4c0YeVNblzfM5puXGj7y.
selinux --disabled
authconfig --enableshadow --passalgo=sha512 --enablenis --nisdomain=sanjose
# Firewall configuration
firewall --disabled

firstboot --disable
skipx
# Installation logging level
logging --level=info
# Use NFS installation media
EOF
cat >>isolinux/ks.cfg <<EOF
nfs --server=$server --dir=$dir
EOF
cat >>isolinux/ks.cfg <<'EOF'
#repo --name="fedora"
repo --name="ako" --baseurl=http://archive.kernel.org/fedora-archive/releases/15/Everything/i386/os/

clearpart --all --initlabel
part / --fstype=ext4 --grow --size=8000
part swap --fstype=swap --recommended
bootloader --location=mbr --driveorder=sda



%pre --log=/tmp/kickoff-pre.log
#!/bin/sh -x
exec >/tmp/kickoff-pre.log 2>&1
set -x

mkdir -p /mnt/a
mkdir /tmp/preserve

while read major minor blocks name rest; do
    case "$name" in
        '') ;;
        name) ;;
        loop*) ;;
        *) 
	mknod /tmp/dev_$name b $major $minor
	if mount /tmp/dev_$name /mnt/a 2>/dev/null && cd /mnt/a; then
            # Note - if multiple linux images exist we may get duplicates

            # Preserve file left by prekickoff
            if [ -f boot/preserve.tar ]; then
 		cp boot/preserve.tar /tmp/preserve.tar
	    elif [ -f preserve.tar ]; then
		cp preserve.tar /tmp/preserve.tar
	    elif [ -s /tmp/preserve.tar ]; then
		# Don't overwrite if we already found one
		:
	    else 
		# Try to preserve now
	    	cp -p etc/inittab etc/inittab.preupgrade
	    	tar -cf /tmp/preserve.tar \
       		   etc/ssh/*key* \
		   root/.ssh/* \
		   var/spool/cron/* \
		   etc/sysconfig/network-scripts/ifcfg-eth* \
		   etc/sysconfig/network etc/event.d/consolelogger* \
		   etc/dhcpd.conf \
		   etc/dhcp/dhcpd.conf \
		   etc/yp.conf \
		   etc/inittab.preupgrade 
	    fi
	    cd /
	    umount /mnt/a
	fi
	rm /tmp/dev_$name
        ;;
    esac
done < /proc/partitions
rmdir /mnt/a 2>/dev/null

exit 0

%end

%post --nochroot --log=/mnt/sysimage/root/kickoff-post1.log
#!/bin/sh -x
set -x
# Copy log files to disk
cp /tmp/*.log /mnt/sysimage/root

# Unpack preserved files
tar -xvf /tmp/preserve.tar -C /mnt/sysimage

%end

%post --log=root/kickoff-post2.log
set -x 

cat >> /etc/sysctl.conf <<EOF2
# Reboot on panic
kernel.panic = 1
kernel.panic_on_oops = 1

# Prevent TCP slow-start
net.ipv4.tcp_congestion_control = bic
EOF2

cat >> /etc/modprobe.d/blacklist.conf <<EOF3

# BCM
blacklist b43
blacklist b43legacy
blacklist b44
blacklist ssb
blacklist sdhci
blacklist sdhci_pci
blacklist mmc_core
blacklist bcm43xx_mac80211
EOF3

# Remove daily root messages
rm -f /etc/cron.daily/0logwatch

systemctl disable NetworkManager.service
chkconfig network on
chkconfig sendmail off
systemctl enable ntpd.service

# Configure NTP
echo "server 10.10.32.12" >> /etc/ntp.conf

# If we used a USB NIC for the install, remove the persistent reference
sed -i '/^# USB/{N;d}' /etc/udev/rules.d/70-persistent-net.rules

# Clear out the DHCP hostname
sed -i '/HOSTNAME=dhcp/d' /etc/sysconfig/network

# Disable GUI
ln -fs /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
sed -i 's/ rhgb / /' /boot/grub/grub.conf

# If there's no gateway, take the one from eth0
egrep GATEWAY /etc/sysconfig/network || \
   egrep GATEWAY /etc/sysconfig/network-scripts/ifcfg-em1 >> /etc/sysconfig/network || \
   egrep GATEWAY /etc/sysconfig/network-scripts/ifcfg-eth0 >> /etc/sysconfig/network

%end

%packages
@admin-tools
@base
@core
@development-libs
@development-tools
@dial-up
@editors
@gnome-desktop
@LXDE
@graphical-internet
@graphics
@hardware-support
@legacy-network-server
@online-docs
@system-tools
@text-internet
@base-x
xfsprogs
mtools
gpgme
gpm
lua
cmake
pptp
gvfs-obexftp
gypsy
hdparm
gssdp
geoclue
radeontool
enca
apg
festival
ntpdate
xsel
gupnp
fuse
ncftp
gdm
emacs
gdm
tcsh
autofs
crash
expect
tftp
tcl
hping3
gnuplot
dhcp
synergy-plus

%end

EOF

mkisofs -o file.iso -b isolinux.bin -c boot.cat -no-emul-boot \
    -boot-load-size 4 -boot-info-table -R -J -v -T isolinux/

echo 
echo "Please write /tmp/iso/file.iso to a CD"
if [ -x /usr/bin/nautilus-cd-burner ]; then
    /usr/bin/nautilus-cd-burner --source-iso=/tmp/iso/file.iso &
else
    brasero -i /tmp/iso/file.iso
fi
exit
