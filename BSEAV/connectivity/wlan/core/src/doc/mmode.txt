							8/19/02
MMODE (manufacturing test process mode) support on PMON:


Files needed over 3.09.01 release:

  include/mmode.h	# new file
  lib/c47xx.c
  lib/ether.c
  pmon/load.c
  pmon/loados.c


Build info:

- Edit GNUmakefile in the top pmon directory to add

    -DMMODE

  in CFLAGS string.

- Build like before:

    make


Verification procedure:

- Preparation:
  Need these images for this verification:
  - pmon_lg.bin       # bare-bone pmon
  - pmon.bin          # new pmon (with desired environment variables set)
  - linux.trx

- To set MMODE, install GPIO0 jumper.

- To erase OS (or Firmware):
    # Since we want to verify the loading of OS (or Firmware), you need to
    # erase the OS (or Firmware) by:

    PMON> nvErase bfc40000 4

- To load bare-bone pmon:
    PMON> load -B
    # PC side: tftp.exe -i 192.168.1.1 PUT pmon_lg.bin
    PMON> cp2fl a0001000 bfc00000 3bd70
				# where 3bd70 is the size displayed by "load -B"
    # reset router

- Bare-bone pmon runs:
    # When router boots up, the bare-bone pmon announces:
***** PMONs default nvram area is not programmed ******
*********** Waiting on a new pmon image ***************

    # Because MMODE is set, check GPIO7 led flashes with this 2-pulse pattern 
    # (waiting for new pmon): 
          250ms on, 250ms off, 250ms on, 2250ms off

- To load new pmon:
    # PC side: tftp.exe -i 192.168.1.1 PUT pmon.bin
	# where pmon.bin was created by nvserial with input file, pmon_lg.bin

    # Because MMODE is set, check router broadcasts a UDP packet with
    # 0x0081 (2-byte ushort) meaning MMODE_DOWNLOAD_PMON_SUCCESS
    # May want to use Ethereal or a winsock udp receive program.

    # Router will automatically reboot into new pmon.

- New pmon runs:

    # Because MMODE is set, check GPIO7 led flashes with this 1-pulse pattern
    # (waiting for Firmware or OS): 
          250ms on, 2750ms off

- To load Firmware or OS:
    # PC side: tftp.exe -i 192.168.1.1 PUT linux.trx

    # Because MMODE is set, check router broadcasts a UDP packet with
    # 0x0083 (2-byte ushort) meaning MMODE_DOWNLOAD_FW_SUCCESS


winsock udp receive program:

- To compile on Visual C++:

    Run vcvar32.bat to set up enviroment variables for console build.

    One possible build string:
cl /nologo /GM /W3 /Z7 /Ox /MT udprcv.c /link /nologo /INCREMENTAL:NO /PDB:NONE wsock32.lib ws2_32.lib -out:udprcv.exe

- To run it to receive udp broadcast packet sent by PMON set at MMODE:

    udprcv 1028                    # 1028 is the default listening udp port
                                   # used by PMON

END.
