This describes the BRCM WLAN component system from a user
perspective. In the descriptions below, the term "CBD" is an
acronym for "component base directory":

Our component model has three constraints on file layout,
one hard, one soft, and one meta. The hard rule is that the
component's public API *must* be described in header files within
the CBD/include directory. More precisely, public headers should
be placed such that they can be found via the compiler flag
"-ICBD/include". There's no rule against organizing them in
subdirectories as long as they're addressed via relative paths
e.g. '#include "subdir/api.h"'. Non-public header files may go
anywhere desired.

The soft rule is that source files (.c etc) are best placed
directly in CBD/src, though it may not always be possible to
organize the code this way, especially if from a third-party
source.  The reason for this preference is that many of our
makefiles use make's "vpath" feature to search for sources and if
we know where they are we can add that dir to vpath automatically,
thus reducing the number of special cases within makefiles. If
your sources are anywhere other than CBD/src you may need to
manually add those dirs to vpaths across many makefiles. Thus, if
your component is small and simple enough, consider using CBD/src
for all C code.  Even if the "src" rule cannot be followed, it's
good form to place the tree of sources _under_ CBD/src in order
to keep the CBD uncluttered.

The meta rule is something every progammer knows: look at what
people who came before you did and consider doing it the same way.
