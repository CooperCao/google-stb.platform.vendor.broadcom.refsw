# Note: if the use of $(M) for relative include directory looks funny, it's
# because the sub-make (build/scripts/Makefile.build) includes this Makefile.

obj-m	+= rsmod.o

# driver source base
SRCBASE := $(M)/../..
RSOCK := $(SRCBASE)/toe/rsock

# basic options
EXTRA_CFLAGS += -I$(M) -I$(SRCBASE)/toe/rsock/exe -I$(SRCBASE)/include
EXTRA_CFLAGS += -MD -Wall -Werror
EXTRA_CFLAGS += -fshort-wchar
EXTRA_CFLAGS += -DBCMDRIVER
#EXTRA_CFLAGS += -DDEBUG

vpath %.c $(RSOCK) $(RSOCK)/exe

LINK_SRC = rsock.c ifconfig.c ttcp.c util.c
LINK_OBJ = $(LINK_SRC:.c=.o)

rsmod-objs := rstest26.o rstest_cmd.o $(LINK_OBJ) os.o

LINUXDIR := /lib/modules/$(shell uname -r)/build

default: $(LINK_SRC)
	$(MAKE) -C $(LINUXDIR) M=$(PWD) V=1 modules

# Symlinks because vpath doesn't work with Linux makefiles

$(LINK_SRC):
	ln -sf $(RSOCK)/rsock/rsock.c .
	ln -sf $(RSOCK)/rsock/exe/ifconfig.c .
	ln -sf $(RSOCK)/rsock/exe/ttcp.c .
	ln -sf $(RSOCK)/rsock/exe/util.c .

clean:
	$(MAKE) -C $(LINUXDIR) M=$(PWD) clean
	$(RM) $(LINK_SRC)
