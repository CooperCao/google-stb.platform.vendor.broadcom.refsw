#
# ROM control file for 4324b0
#

# Files excluded when generating romtable

headarm.o				exclude_file
rtecdc.o				exclude_file
d11ucode_ge24.o			exclude_file
d11ucode_gt15.o			exclude_file
d11ucode_le15.o			exclude_file
wlc_phy_abg.o			exclude_file
wlc_phy_cmn.o			exclude_file
wlc_phy_ht.o			exclude_file
wlc_phy_lcn.o			exclude_file
wlc_phy_lp.o			exclude_file
wlc_phy_n.o				exclude_file
wlc_phy_noknvmem.o		exclude_file
wlc_phy_ssn.o			exclude_file
wlc_phy_lcn40.o			exclude_file
wlc_phytbl_ht.o			exclude_file
wlc_phytbl_lcn.o		exclude_file
wlc_phytbl_lp.o			exclude_file
wlc_phytbl_n.o			exclude_file
wlc_phytbl_ssn.o		exclude_file
wlc_phytbl_lcn40.o		exclude_file


#wlc_sup$wlc_sup_calc_fbt_ptk	exclude_sym

#The capability should be decided in the RAM 
wlc_amsdutx_cap                 exclude_sym
wlc$wlc_cap						exclude_sym

# Symbols excluded when generating romtable
hndrte_get_memsize				exclude_sym
hndrte_reclaim					exclude_sym
hndrte_print_memuse				exclude_sym
hndrte_trap_handler				exclude_sym
wlc_ioctl						exclude_sym	# ioctl override wrapper
wlc$wlc_iovar_filter						exclude_sym	# mfgtest iovar override wrapper
wlc$wlc_ioctl_filter						exclude_sym	# mfgtest ioctl override wrapper
wl_rte$_wl_rte_oid_check					exclude_sym
otp_init									exclude_sym	# XXX should have an otp_attach
wl_up										exclude_sym	# support reclaim at later stage
wl_down										exclude_sym	# support reclaim at later stage
wl_dump_ver									exclude_sym	# want EPI_VERSION_STR in RAM
wlc_plt$_wlc_plt_fwversion					exclude_sym	# want EPI_VERSION_STR in RAM
wlc_channel$wlc_country_aggregate_map_ovrd	exclude_sym	# regulatory override callouts
wlc_channel$wlc_country_lookup_direct_ovrd	exclude_sym
wlc_channel$wlc_country_list_patch_get		exclude_sym
wlc_channel$wlc_country_list_patch_found	exclude_sym
bcmotp$get_otpinfo							exclude_sym
hndchipc$get_cc_isr_desc					exclude_sym
wl_rte$get_wl_funcs							exclude_sym
usbdev_cdc$get_bcm_device					exclude_sym
usbdev_cdc$get_bcm_config					exclude_sym
usbdev_cdc$get_bcm_other_config				exclude_sym
bcmerrorstr									exclude_sym
si_arm_ovl_int								exclude_sym
wlc_bmac$wlc_get_n19bsinitvals34_addr		exclude_sym
wlc_bmac$wlc_get_n19initvals34_addr			exclude_sym
wlc_scb$wlc_scb_reset						exclude_sym	# uses sizeof(struct scb)
proto_attach								exclude_sym	# Has tunables settings
wlc_clm$get_data_sources					exclude_sym
wlc_clm$get_rate_type						exclude_sym
clm_init									exclude_sym	# uses sizeof

hndrte_image_info				exclude_sym	# Compiler generated variables used

wlc_bmac$wlc_corerev_fifofixup		exclude_sym
wlc_apps$wlc_apps_apsd_send			exclude_sym
wlc_apps$wlc_apps_apsd_delv_count	exclude_sym
wlc_apps$wlc_apps_apsd_ndelv_count	exclude_sym

# Exclude large functions that are almost certain to be abandoned
#wlc_channel_reg_limits					exclude_sym
#wlc$wlc_d11hdrs							exclude_sym
#wlc$wlc_watchdog						exclude_sym
#wlc$wlc_recv_process_beacon				exclude_sym
#wlc_recvdata_ordered					exclude_sym
#wlc_recvdata							exclude_sym


# Add preprocessor directives to ramfnstub.w.  This is used
# in romoffload builds to not assert in linker script for valid cases.
wlc_phy_boardflag_upd				ramfp_exclude_sym	if defined(WLTEST)
wlc_phy_resetcntrl_regwrite				ramfp_exclude_sym	if defined(WLTEST)


# Symbols unconditionally added to romtable
#si_pmu_spuravoid					include_sym
#hndpmu$si_pmu_spuravoid_pllupdate	include_sym

# Each no_esc function saves 8 bytes ROM and 4 bytes RAM.
# WARNING - Can be patched only using TCAM patching

# Safe library functions
strchr				no_esc
strcmp				no_esc
strcpy				no_esc
strlen				no_esc
strncmp				no_esc
strncpy				no_esc
strrchr				no_esc
memcpy				no_esc
memmove				no_esc
memset				no_esc
pktcopy				no_esc
pktlast				no_esc
pktsegcnt			no_esc
pkttotlen			no_esc
pktq_deq			no_esc
pktq_init			no_esc
pktq_mdeq			no_esc
pktq_mlen			no_esc
pktq_pdeq			no_esc
pktq_pdeq_tail		no_esc
pktq_peek			no_esc
pktq_peek_tail		no_esc
pktq_penq			no_esc
bcm_atoi			no_esc
bcm_ether_atoe		no_esc
hndcrc8				no_esc
hndcrc32			no_esc
bcm_bitcount		no_esc
bcm_cmp_bytes		no_esc
bcm_ether_ntoa		no_esc
bcm_inc_bytes		no_esc
wlc_uint64_add		no_esc
wlc_uint64_sub		no_esc
wlc_uint64_lt		no_esc


# Sanity checks for structures between romlib and romoffload using gdb
#   - arm-none-eabi-gdb --batch -nx -nw -x cmds.txt roml.exe
# Compare offset of last romlib element since struct size itself can change
# if new elements are added at the end.
#
# These are last elements at the time of romlib generation
# Maybe add macro at end of structs as anchor to automate this?
#
p/x &((struct wl_info *)0)->pkt_filter_info			check_value
p/x &((struct wlc_pub *)0)->_bcmauth_psk			check_value
p/x &((struct wlc_info *)0)->is_initvalsdloaded		check_value
p/x &((struct wlc_hw_info *)0)->btclock_tune_war	check_value
