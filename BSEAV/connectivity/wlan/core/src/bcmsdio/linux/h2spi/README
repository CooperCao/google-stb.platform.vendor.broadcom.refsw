------------------------------------------------------------------------------

		  h2spi Kernel Driver Module for Linux
		 by Curt McDowell, Broadcom 2007.05.01
			Last updated: 2010.12.02

------------------------------------------------------------------------------

This driver allows SPI operations to be performed from user mode using
Howard Harte's h2spi card which is an FPGA PCI SPI controller.  For
information on the h2spi card, see PciSpiHost on TWiki.  For applications to
the Nokia Bob project, see BobLinux on TWiki.

To build h2spi.o on a 2.4 machine (no longer maintained):

	make

To build h2spi.ko on a 2.6 machine:

	make

The h2spi device major number is 230.

It's necessary to create the h2spi device(s):

	mknod /dev/h2spi0 c 230 0

Note: in Fedora distributions your device may disappear each time the
machine is reset.  To have the device created automatically at boot
time, also create it in the udev directory:

	mknod /etc/udev/devices/h2spi0 c 230 0
	chmod a+rw /etc/udev/devices/h2spi0 

Then insert the module.  Note that this module should not be inserted at
the same time any other h2spi module (such as dhd-cdc-gspi-pci) is
inserted, as only one will be able to claim the h2spi PCI device:

	insmod h2spi-2.4.20-8.o    (Linux 2.4)
	insmod h2spi.ko            (Linux 2.6)

In order to complete a SPI combined write-read operation, the
application should write() the SPI message (up to 2048 bytes) and then
read() the result.  The entire SPI operation actually occurs during the
write() call.  The length of the read() must equal the length of the
write().  Currently, the SPI transfer uses polling and does not support
the SPI controller's 'transfer done' interrupt.

The external device interrupt line is supported.  The SDEVSIG ioctl
enables the interrupt and configures a Unix signal number to send to the
controlling process when the interrupt line is asserted.  The device
interrupt remains masked until the next SDEVSIG ioctl.
