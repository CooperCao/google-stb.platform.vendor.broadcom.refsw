#!/bin/bash
# svnwho -  print the last author for each specified linenumber of file
#
# $ Copyright Broadcom Corporation $
# $Id: svnwho,v 12.1 2010-10-19 07:10:01 prakashd Exp $

prog=${0##*/}

usage ()
{
	echo "usage: $prog [-s] [-v] [-a <annotate-cmd>] [-r <file-repo-version>] filename linenumber [ linenumber .. ]"
	echo "example: $prog -v -r 141786 wlc_scan.c 100 200 300 400"
	echo "example: $prog -v -r 141786 http://svn.sj.broadcom.com/svn/wlan/branches/KIRIN_BRANCH_5_100/src/wl/sys/wlc_scan.c 100 200 300 400"
	exit 1
}

summary=0
svncmd="svn --non-interactive"

while [ "$1" ]; do
	if [ "$1" == "-a" ]; then
		shift
		annotate="$1"
		shift
	elif [ "$1" == "-p" ]; then
		# Caller may optionally pass path
		shift
		export PATH="${1}:${PATH}"
		shift
	elif [ "$1" == "-r" ]; then
		shift
		filerev="${1}"
		shift
	elif [ "$1" == "-s" ]; then
		shift
		summary=1
    elif [ "$1" == "-v" ]; then
        shift
        verbose=1
    elif [ "$1" == "-c" ]; then
		shift
        caching=1
        # Use cache dir for svn annotations
        cachedir=$1
        shift
        mkdir -p $cachedir
	elif [ "$1" == "-h" ]; then
		usage
	elif [ "$file" == "" ]; then
		file=$1
		shift
	else
		lines="$lines $1"
		shift
	fi
done

if [ -z "$file" ]; then
	usage
fi

tmpfile=$(mktemp /tmp/svnwho.XXXXXX)

if [ "$summary" == "1" ]
then
	outcmd="sort | uniq | paste -s -d' '"
else
	outcmd=cat
fi

# explicit check for file since we redirect svn command stderr..
# (if not using rannotate to query)
if echo "$file" | egrep -vqi "http:|svn:"
then
   if [ ! -r "$file" ]
   then
	echo "$prog: $file not found"
	exit 1
   fi
fi

if [ "$filerev" == "" ]
then
   filerev=$($svncmd info $file | grep "^Revision: " | awk '{printf "%s", $NF}')
fi

[ "$verbose" ] && echo "$svncmd ${annotate:-annotate} ${filerev:+-r $filerev} $file"

# prepare a unique filename in case we are caching
no_http="${file##http://}"
translated_file=$(echo $no_http | tr '[.:/]' '[___]')
cachefile="$cachedir/${translated_file}_${filerev}"

# only run svn annotate if we are not caching or if the cache file doesn't exist.
if [[ $caching && -f $cachefile ]]; then
    rm -f $tmpfile
    tmpfile=$cachefile
else
    $svncmd ${annotate:-annotate} ${filerev:+-r $filerev} $file 2> $tmpfile.err | nl -nln > $tmpfile
fi

# save the annotate cache if necessary
[[ $caching && ! -f $cachefile ]] && cp $tmpfile $cachefile

# $tmpfile is now the file containing the annotation
for lineno in $lines
do
	#Example output produced
	#cvs: 1.209 (prakashd 08-Sep-05): DATE=$(shell date -I)
	#svn: 61465 prakashd #define DRV_NAME "wireless driver"
	grep "^$lineno " $tmpfile | awk '{print $3}'
done | eval $outcmd

# don't remove the annotated file if it's being cached
[[ "$cachefile" == "$tmpfile" ]] || rm -f $tmpfile
