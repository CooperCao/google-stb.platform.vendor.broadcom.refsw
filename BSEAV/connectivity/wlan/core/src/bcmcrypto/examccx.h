#ifdef BCMCCX
/*
 * Sample 802.11 packets, CKIP permuted and MIC encapsulated
 * In the following examples:
 * The client has a session key of 40:85:43:33:12.
 * The example packets show pings of various lengths
 *
 * Broadcom Proprietary and Confidential. Copyright (C) 2017,
 * All Rights Reserved.
 * 
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom;
 * the contents of this file may not be disclosed to third parties, copied
 * or duplicated in any form, in whole or in part, without the prior
 * written permission of Broadcom.
 *
 * $Id$
 */

/* sta->ap, KP only, no mic */
uint8 data_00[] = {
0x08, 0x41, 0x75, 0x00, 0x00, 0x0b, 0xbe, 0xcd,  0x6e, 0x5e, 0x00, 0x0a, 0xb7, 0xbb, 0x1a, 0xc3,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x60, 0x3d,  0x00, 0x01, 0xb4, 0x00, 0x6c, 0x80, 0x83, 0x5e,
0x56, 0xef, 0xa4, 0x66, 0x74, 0x50, 0x79, 0xd3,  0xff, 0x23, 0xa2, 0x17, 0xd7, 0xd1, 0xbb, 0xea,
0x34, 0x3d, 0xdf, 0x52, 0x11, 0xeb, 0xca, 0x1b,  0x61, 0x5e, 0x23, 0x14, 0x39, 0xac, 0x10, 0xc0,
0x1e, 0xfa, 0x2a, 0xb9, 0x5b, 0x31, 0xea, 0xc0,  0x1c, 0xfa, 0xfd, 0x35, 0x97, 0x6f, 0x23, 0x0f,
0x0d, 0x40, 0x23, 0xf3, 0x28, 0xd0, 0x50, 0xcf,  0xf0, 0xd8, 0xee, 0xa5, 0xf0, 0x66, 0x8b, 0x4c,
0x1a, 0xbb, 0x26, 0x1b /* crc32, 0x74, 0x4d, 0x6e, 0x75 */
};
uint8 key_00[] = {0x40, 0x85, 0x43, 0x33, 0x12};

uint8 data_01[] = {
0x08, 0x41, 0x75, 0x00, 0x00, 0x0b, 0xbe, 0xcd,  0x6e, 0x5e, 0x00, 0x0a, 0xb7, 0xbb, 0x1a, 0xc3,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x70, 0x3d,  0x00, 0x01, 0xb5, 0x00, 0x16, 0x67, 0xf2, 0x37,
0x6a, 0xaf, 0xb4, 0x39, 0xc6, 0x86, 0x2f, 0xad,  0x8d, 0xc9, 0x6d, 0x3e, 0x58, 0xe7, 0x11, 0x44,
0xe0, 0x56, 0x69, 0xfe, 0x8a, 0x63, 0x3c, 0xbd,  0x78, 0x90, 0x9a, 0x6a, 0x6f, 0x81, 0xcc, 0xe4,
0xf3, 0xd3, 0x32, 0xde, 0xfd, 0xf9, 0xed, 0x72,  0x71, 0x10, 0x9e, 0x8f, 0x4b, 0x6d, 0x88, 0x1e,
0x17, 0x10, 0xac, 0x83, 0x71, 0xdb, 0x51, 0x2b,  0x40, 0x10, 0xc6, 0x86, 0x3f, 0x0e, 0x85, 0xd2,
0xa3, 0xac, 0x3c, 0xc9 /* crc32, 0xc5, 0x65, 0x3f, 0x79 */
};

uint8 key_01[] = {0x40, 0x85, 0x43, 0x33, 0x12};

uint8 data_02[] = {
0x08, 0x41, 0x75, 0x00, 0x00, 0x0b, 0xbe, 0xcd,  0x6e, 0x5e, 0x00, 0x0a, 0xb7, 0xbb, 0x1a, 0xc3,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x80, 0x3d,  0x00, 0x01, 0xb6, 0x00, 0xeb, 0xdd, 0x26, 0x80,
0xfe, 0xf8, 0x26, 0x55, 0xb7, 0x87, 0x86, 0xd2,  0x92, 0xe8, 0xcd, 0xd0, 0x8b, 0x7a, 0xcc, 0xd5,
0x7c, 0xe1, 0xf4, 0x41, 0x95, 0x74, 0x07, 0x84,  0x67, 0xd9, 0x02, 0xc1, 0x56, 0x86, 0x7f, 0xb3,
0x41, 0xe3, 0x7f, 0x1d, 0xed, 0xbf, 0xce, 0x4c,  0x13, 0x5d, 0x7f, 0xa5, 0x30, 0x24, 0xb7, 0xa4,
0x57, 0xdd, 0x46, 0x12, 0x55, 0xba, 0x08, 0x4a,  0xfe, 0x9c, 0x64, 0xf4, 0xdb, 0x15, 0x6a, 0x90,
0x7b, 0x5a, 0x49, 0x47 /* crc32, 0xfb, 0x47, 0x7f, 0x63 */
};

uint8 key_02[] = {0x40, 0x85, 0x43, 0x33, 0x12};

/* ap->sta, KP only, no mic */
uint8 data_03[] = {
0x08, 0x42, 0xd5, 0x00, 0x00, 0x0a, 0xb7, 0xbb,  0x1a, 0xc3, 0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x60, 0x44,  0x00, 0x03, 0x08, 0x00, 0xec, 0x44, 0x4e, 0x43,
0x6f, 0x96, 0x96, 0x08, 0xae, 0xd8, 0xd5, 0x02,  0xee, 0x8f, 0xd5, 0xda, 0x78, 0x6d, 0x42, 0x1c,
0x44, 0xe8, 0x6f, 0xee, 0xee, 0x67, 0xa4, 0x0e,  0x8f, 0x70, 0xa7, 0x78, 0xef, 0x11, 0x57, 0xc0,
0x49, 0x57, 0xcf, 0xea, 0x49, 0x40, 0x85, 0x8a,  0xa2, 0xb5, 0x14, 0xcf, 0x87, 0x71, 0x40, 0xc7,
0xf4, 0x44, 0xb0, 0x34, 0x67, 0x1f, 0x45, 0xea,  0xbe, 0xff, 0x5c, 0x4a, 0xf6, 0x30, 0xbd, 0x34,
0x64, 0x7c, 0x20, 0xee /* crc32, 0xde, 0x2f, 0xed, 0x48 */
};

uint8 key_03[] = {0x40, 0x85, 0x43, 0x33, 0x12};

uint8 data_04[] = {
0x08, 0x42, 0xd5, 0x00, 0x00, 0x0a, 0xb7, 0xbb,  0x1a, 0xc3, 0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x10, 0x45,  0x00, 0x03, 0x09, 0x00, 0x78, 0x89, 0xfe, 0x5d,
0x57, 0x6b, 0x31, 0x1a, 0x7d, 0x27, 0xa8, 0x50,  0x8d, 0xa8, 0xdf, 0x8e, 0x14, 0x0d, 0x13, 0x57,
0x4b, 0x06, 0xc4, 0xd1, 0x16, 0x08, 0x24, 0xf4,  0xb2, 0x5b, 0x13, 0x8f, 0xba, 0x09, 0x0d, 0xd7,
0x82, 0x66, 0x0c, 0x85, 0x4d, 0x55, 0xcc, 0x21,  0x2b, 0x66, 0x1c, 0xa2, 0x47, 0xc2, 0xa1, 0xa0,
0xad, 0xb7, 0x0c, 0x74, 0x9b, 0x32, 0x60, 0xe9,  0x35, 0x1f, 0x53, 0xc1, 0xd5, 0x4f, 0x77, 0x00,
0xa7, 0x46, 0x87, 0xa3 /* crc32, 0x11, 0x83, 0xfd, 0x50 */
};

uint8 key_04[] = {0x40, 0x85, 0x43, 0x33, 0x12};

uint8 data_05[] = {
0x08, 0x42, 0xd5, 0x00, 0x00, 0x0a, 0xb7, 0xbb,  0x1a, 0xc3, 0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e,
0x00, 0x0b, 0xbe, 0xcd, 0x6e, 0x5e, 0x80, 0x4b,  0x00, 0x03, 0x17, 0x00, 0xa1, 0xcc, 0xa2, 0x69,
0x34, 0x4b, 0xff, 0xd5, 0xad, 0xe8, 0x3b, 0x43,  0xfa, 0x2a, 0xbf, 0x9e, 0xbb, 0xc4, 0xcd, 0xc6,
0xba, 0x42, 0x92, 0xe3, 0x7a, 0xf6, 0x9f, 0xe1,  0xd6, 0xf8, 0xbb, 0x56, 0xdb, 0x04, 0x9d, 0x54,
0x52, 0xb5, 0x3d, 0x41, 0x86, 0xa0, 0x98, 0xb0,  0x4f, 0x99, 0x53, 0x1c, 0x22, 0xc1, 0x50, 0xc3,
0x38, 0x5c, 0xb0, 0xf1, 0xbb, 0x76, 0xfc, 0x44,  0x53, 0x03, 0x6e, 0x9a, 0xf6, 0xe6, 0xcb, 0x01,
0x09, 0x8b, 0xd9, 0x99 /* crc32, 0xd3, 0xb6, 0x6c, 0x5a */
};
uint8 key_05[] = {0x40, 0x85, 0x43, 0x33, 0x12};

#define TEST_PKT_ENTRY(x)    \
	{ data_##x, sizeof(data_##x), key_##x, sizeof(key_##x) }

tdsSamplePacket bSamplePacket[] = {
    TEST_PKT_ENTRY(00),
    TEST_PKT_ENTRY(01),
    TEST_PKT_ENTRY(02),
    TEST_PKT_ENTRY(03),
    TEST_PKT_ENTRY(04),
    TEST_PKT_ENTRY(05),
    };

#endif	/* BCMCCX */
