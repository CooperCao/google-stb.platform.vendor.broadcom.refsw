#!/usr/bin/env python2.7

"""
Compare the misc/,env.log files from two builds.

Example:

  env-diff <foo>/misc/,env.log <bar>/misc/,env.log

"""

from __future__ import print_function
from __future__ import unicode_literals

# Imported first to fix up sys.path etc.
import preface

import argparse
import os
import re
import subprocess
import sys
import tempfile

import lib.util

UNINTERESTING = set([
    '_$',
    'CHECKOUT_RULES_DISABLED',
    'COMPUTERNAME',
    'CVS',
    'CYGWIN_DIRECTORY',
    'EDITOR',
    'GUB_',
    'HIST',
    'HOSTNAME',
    'LESS',
    'LS_',
    'LSB_',
    'LSF',
    'KDE',
    'MAILTO',
    'MANPATH',
    'MAX_JOBS',
    'OLDPWD',
    'PS1',
    'PWD',
    'QT',
    'SHLVL',
    'SUBVERSIONVER',
    'SVNCMD',
    'SVNCUTOFF',
    'TERM',
    'TERM',
    'UMASK',
    'VCTOOL',
])


def parse(path, opts):
    fw = tempfile.NamedTemporaryFile(mode='w', delete=False,
                                     prefix=preface.PROG + '.',
                                     suffix='.tmp')
    uninteresting = '^' + '|^'.join(UNINTERESTING)
    if os.path.isdir(path):
        path = os.path.join(path, 'misc', ',env.log')
    for line in open(path, 'r'):
        if line[0] == '-':
            break
        if '=' not in line:
            continue
        k, v = line.split('=', 1)
        k = k.strip()
        v = v.strip()
        if opts.ignore_case:
            k = k.upper()
            v = v.lower()
        if k.endswith('PATH'):
            env = {k: v}
            lib.util.path_clean(pathvar=k, env=env)
            v = env[k]
        if opts.all or not re.match(uninteresting, k):
            fw.write('%s=%s\n' % (k, v))
    fw.close()
    return fw.name


def main(argv):
    """Compare the misc/,env.log files from two builds."""

    parser = argparse.ArgumentParser(
        epilog=__doc__.strip(),
        formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument(
        '-a', '--all', action='store_true',
        help="do not filter out 'uninteresting' variables")
    parser.add_argument(
        '-i', '--ignore-case', action='store_true',
        help="ignore case differences")
    parser.add_argument('left')
    parser.add_argument('right')
    opts = parser.parse_args(argv[1:])

    tmpfiles = []
    tmpfiles.append(parse(opts.left, opts))
    tmpfiles.append(parse(opts.right, opts))

    cmd = ['diff']
    if opts.ignore_case:
        cmd.append('-i')
    cmd.extend(tmpfiles)
    subprocess.call(cmd)

    for tmpfile in tmpfiles:
        os.unlink(tmpfile)

if __name__ == '__main__':
    main(sys.argv)

# vim: ts=8:sw=4:tw=80:et:
